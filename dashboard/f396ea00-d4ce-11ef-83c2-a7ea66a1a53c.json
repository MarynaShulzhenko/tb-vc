{
  "entityType" : "DASHBOARD",
  "entity" : {
    "title" : "ASSAI TESTE | 03/23",
    "image" : null,
    "mobileHide" : false,
    "mobileOrder" : null,
    "configuration" : {
      "widgets" : {
        "08505b07-78af-56d3-79b7-c59a9facfd11" : {
          "type" : "latest",
          "sizeX" : 12,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "consumo_projetado_mwm",
                "type" : "attribute",
                "label" : "consumo_projetado_mwm",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.39384164369644314,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\nif (typeof value == \"string\") {\n    value = Number(value)\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    return value.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 3})+' MWm'; \n\n}\nreturn \" \";\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "consumo_projetado_kwh",
                "type" : "attribute",
                "label" : "consumo_projetado_kwh",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5187181319234233,
                "postFuncBody" : "function formattedNumber(x, y) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: y}); \n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\nif (typeof value == \"string\") {\n    value = Number(value)\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value > 99999) {\n        return formattedNumber(value/1000, 0)+' MWh';\n    }\n    \n    if (value > 9999) {\n        return formattedNumber(value/1000, 1)+' MWh';\n    }\n    \n    if (value > 999) {\n        return formattedNumber(value/1000, 2)+' MWh';\n    }\n    \n    return formattedNumber(value, 0)+' kWh';\n\n}\nreturn \" \";\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table align=\"center\" width=\"98%\">\n            <tr>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"88%\" class=\"value\">${consumo_projetado_mwm}</td>\n                <td width=\"5%\">&nbsp;</td>\n            </tr>\n            <tr>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"88%\" class=\"value\">${consumo_projetado_kwh}</td>\n                <td width=\"5%\">&nbsp;</td>\n            </tr>\n        </table>\n    </section>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Proj. Consumo Mensal",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Ajuda",
                "icon" : "info_outline",
                "type" : "customPretty",
                "customHtml" : "<form #f=\"ngForm\">\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\n        <h2>Ajuda</h2>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content>\n        <div style=\"min-width: 300px; max-width: 700px; padding-top: 20px; word-wrap: break-word\">\n            O <b>Consumo Projetado</b> é calculado da seguinte forma:\n            <ul>\n            <li>Calcula-se a média para cada dia da semana usando dados dos últimos 60 dias.\n            <li>Considera-se que tais valores serão registrados nos dias vindouros até o final do mês.\n            <li>O total do consumo em kWh é o <b>consumo projetado</b> para o mês.\n            </ul>\n        \n            O <b>Consumo Projetado</b> também pode ser expresso em <mark>MWm</mark>, ou <mark>MW médios</mark>.<br>&nbsp;<br>\n            \n            Para chegar no consumo em MWm, divide-se o consumo em MWh pelo número de horas do mês.<br>\n            O consumo em MWm tem valor equivalente à potência média, exceto que esta é representada em MW.<br>&nbsp;<br>\n            \n            O <b>Consumo Projetado</b> não cresce continuamente ao longo do mês pois seu valor já considera consumos para todos os dias do mês (passados e futuros). <br>&nbsp;<br>\n            Obs: O consumo acumulado cresceria continuamente ao longo do mês, pois ele levaria em conta apenas os dias já transcorridos do mês atual. Mas ele não é exibido neste <em>widget</em>.<br>&nbsp;\n        </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <button mat-button color=\"primary\"\n                type=\"button\"\n                [disabled]=\"(isLoading$ | async)\"\n                (click)=\"cancel()\" cdkFocusInitial>\n            Fechar\n        </button>\n    </div>\n</form>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenDialog();\n\nfunction openDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    let vm = instance;\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n}\n",
                "customResources" : [ ],
                "id" : "65983621-14be-bec2-120f-1efd226edf9e"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "08505b07-78af-56d3-79b7-c59a9facfd11",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "f5722de9-502e-3e20-e07b-e319b0a07159" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.8183732083388873
              }, {
                "name" : "logo",
                "type" : "attribute",
                "label" : "logo",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.3289760607157439
              }, {
                "name" : "cor_de_fundo",
                "type" : "attribute",
                "label" : "cor_de_fundo",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.9243089060003935
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgb(204, 204, 204)",
            "padding" : "0px",
            "settings" : {
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    display: block;\n    align-items: center;\n    justify-content: center;\n}\n\n.vertical-center {\n  margin: 0;\n  padding: 3px 3px 3px 3px;\n  position: absolute;\n  top: 50%;\n  /* -ms-transform: translateY(-50%); */\n  transform: translateY(-50%) translateX(-50%);\n  left: 50%;\n}\n\n.image {\n  max-height: 80%;\n  max-width: 80%;\n  margin:auto;\n  display:block;\n}\n",
              "cardHtml" : "<div style=\"background-color:${cor_de_fundo}\">\n    &nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>\n    &nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>\n    &nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>\n    &nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>\n    &nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>\n    &nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>\n</div>\n<img class=\"image vertical-center\" src=\"${logo}\" alt=\"${description}\">"
            },
            "title" : "Logotipo",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "f5722de9-502e-3e20-e07b-e319b0a07159",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "d141329e-d20e-249a-7097-fee8b22c91d1" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 23,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgb(255, 255, 255)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Consumidor",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Tabela de Pontos",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "537cefd0-9672-24ca-46cd-d952c3f0a036",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "Consumidor",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "70%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~~SEM NOME~~\"; \n}\nreturn nome;"
                },
                "_hash" : 0.5889221504240929,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~~SEM NOME~~\"; \n}\nreturn nome;",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "Remota",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "30%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.32020296738311727
              } ]
            } ],
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "id" : "c5d1b936-ce6b-5a8e-8834-b9faf6e78d71",
                "name" : "change entity",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : null,
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Site"
              } ],
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "d141329e-d20e-249a-7097-fee8b22c91d1",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "d437b949-13f6-ad75-426d-716d173a1014" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.08753771580722458,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"-- SEM NOME --\"    \n}\nreturn nome;"
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "serial",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5235226956368948,
                "postFuncBody" : "return \"SN: \" + value;"
              }, {
                "name" : "firmware_version",
                "type" : "attribute",
                "label" : "firmware_version",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.53024477538874,
                "postFuncBody" : "if (typeof(value) === undefined) {\n    return \"\";\n}\nreturn \"V.\" + value;"
              }, {
                "name" : "csq",
                "type" : "attribute",
                "label" : "csq",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.6850701168426965,
                "postFuncBody" : "if (typeof(value) === undefined) {\n    return \"\";\n}return \"- Sinal: \" + value;"
              }, {
                "name" : "apn",
                "type" : "attribute",
                "label" : "apn",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.914358945582215
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgb(255, 255, 255)",
            "padding" : "10px",
            "settings" : {
              "cardHtml" : "<div class='card'>\n    <div class='content'>\n        <div class='column'>\n            <div class='title'>\n                ${description}\n            </div>    \n            <div class='value'>\n                ${serial} ${firmware_version}<br />\n                ${apn} ${csq}\n            </div>    \n        </div>\n    </div>\n</div>\n",
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   padding-top: 20px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value {\n    font-size: 1.7vh;\n    font-weight: 300;\n}\n\n.card .title {\n    font-size: 2.0vh;\n    font-weight: bold;\n    color: #bdfbf8;\n}\n\n.card .description {\n    font-size: 14px;\n    color: #999;\n}\n"
            },
            "title" : "id_site_sem_config",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Exportação de Dados",
                "icon" : "file_download",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n\n\n    <mat-form-field fxFlex class=\"mat-block\">\n        <mat-label>Layout</mat-label>\n        <mat-select name=\"layout\" [(ngModel)]=\"layout\" (ngModelChange)=\"change()\">\n          <mat-option value=\"completo\">Completo</mat-option>\n          <mat-option [disabled]=\"integracao != 'all'\" value=\"simplificado\">Simplificado</mat-option>\n        </mat-select><br>\n    </mat-form-field>\n\n    <mat-form-field fxFlex class=\"mat-block\">\n        <mat-label>Integração</mat-label>\n        <mat-select name=\"integracao\" [(ngModel)]=\"integracao\" (ngModelChange)=\"change()\">\n          <mat-option value=\"all\">15 minutos</mat-option>\n          <mat-option [disabled]=\"layout == 'simplificado'\" value=\"hour\">1 hora</mat-option>\n          <mat-option [disabled]=\"layout == 'simplificado'\" value=\"day\">1 dia</mat-option>\n          <mat-option [disabled]=\"layout == 'simplificado'\" value=\"month\">1 mês</mat-option>\n        </mat-select><br>\n    </mat-form-field>\n    \n    <mat-form-field fxFlex class=\"mat-block\">\n        <mat-label>Formato</mat-label>\n        <mat-select name=\"format\" [(ngModel)]=\"format\">\n          <mat-option value=\"xls\">xls</mat-option>\n          <mat-option value=\"csv\">csv</mat-option>\n        </mat-select><br>\n    </mat-form-field>\n    \n     <div fxLayout=\"column\" fxLayout.gt-sm=\"row\" fxLayoutGap=\"5px\" ng-cloak>\n        \n                \n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"0\" fxFlexOrder.gt-sm=\"0\">\n          <mat-label>Data Inicial</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"sdStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n        \n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"1\" fxFlexOrder.gt-sm=\"1\">\n          <mat-label>Data Final</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"edStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n        \n\n    </div>\n\n    <mat-label>\n        Tamanho estimado: {{ linhas }} linhas<br><br>\n    </mat-label>\n    \n    <mat-label>\n        <input type=\"checkbox\" [(ngModel)]=\"async\"> Envio por email (recomendado)\n    </mat-label>\n\n    <div [fxShow]=\"!OK\" style=\"padding: 20px; color: red; font-weight: bold;\">ATENÇÃO: {{ errorMessage }}</div>\n\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"!OK || (isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>\n",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nvar user = widgetContext.currentUser;\n\n\nvar url = 'https://solarhub.engecomp.io/be/data_export/cdf9d21d-f312-4ea9-8de7-e54819278999/form/v3'\n\npayload = {\n    email: user.sub,\n    token: localStorage[\"jwt_token\"]\n}\n\npayload.search = {\n    entityFilter: widgetContext.defaultSubscription.configuredDatasources[0].entityFilter,\n    pageLink: {\n        page: 0,\n        pageSize: 1000,\n        textSearch: null,\n        dynamic: false,\n        sortOrder: {\n          key: {\n            key: \"name\",\n            type: \"ENTITY_FIELD\"\n          },\n          direction: \"ASC\"\n        }\n      },\n    entityFields: [\n        {\n          key: \"name\",\n          type: \"ENTITY_FIELD\"\n        }\n      ],\n    latestValues: [\n        {\n          key: \"description\",\n          type: \"ATTRIBUTE\"\n        }\n      ]\n}\n\n\nshowInfoDialog()\n\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n\n    let vm = instance;\n    \n    vm.importTitle = 'Exportação de dados - TELEMETRIA'\n\n    vm.layout= \"simplificado\"\n    // vm.sd= moment(vm.ed).subtract(1, 'month').toDate()\n    // vm.ed= moment.utc().startOf('day').toDate()\n    vm.integracao= \"all\"\n    vm.format= \"xls\"\n    vm.async= true\n    \n    vm.ed = moment.utc().startOf('day').toDate();\n    vm.sd = moment(vm.ed).subtract(1, 'month').toDate();\n\n    vm.sdStr = moment(vm.sd).format('DD/MM/YYYY');\n    vm.edStr = moment(vm.ed).format('DD/MM/YYYY');\n    \n    vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY')\n    vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY')    \n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.change = function() {\n        \n        vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY HH:mm')\n        vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY HH:mm')\n        \n        var days = moment(vm.ed).diff(moment(vm.sd),\n            'days');\n            \n        if (!vm.sd._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data inicial inválida\"\n            return\n        }\n        \n        if (!vm.ed._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data final inválida\"\n            return\n        }\n\n        //check start date greater than end date\n        if (days < 0) {\n            vm.OK = false;\n            vm.errorMessage =\n                \"Data inicial maior que data final\";\n            return;\n        }\n        \n        vm.OK = true;\n\n        var diffTime = Math.abs(vm.ed - vm.sd);\n        var diffMonths = diffTime / (1000 * 60 * 60 * 24 * 30)\n        var linhasPorMes = 0\n\n        switch(vm.integracao){\n            case \"all\": \n                linhasPorMes = 24*4*30\n                break;\n            case \"hour\":\n                linhasPorMes = 24*30\n                break;\n            case \"day\":\n                linhasPorMes = 30\n                break;\n            case \"month\":\n                linhasPorMes = 1\n                break;   \n        }\n        \n        vm.linhas = Math.ceil(linhasPorMes * diffMonths * widgetContext.defaultSubscription.dataPages[0].totalElements)\n        \n        if (vm.linhas < 5000) {\n            vm.async = false\n        } else {\n            vm.async = true\n        }\n        \n    }\n    \n    vm.change()\n\n\n    vm.send = function() {\n        \n        let formData = new FormData();\n        \n        sd = moment(vm.sd).format('YYYY-MM-DD');\n        ed = moment(vm.ed).format('YYYY-MM-DD');\n        \n        payload.start_date = sd\n        payload.end_date = ed\n        payload.interval = vm.integracao\n        payload.output_format = vm.format\n        payload.layout = vm.layout\n        payload.getnow = !vm.async\n        \n        formData.append(\"payload\", JSON.stringify( payload ))\n        console.log(JSON.stringify( payload ))\n\n        var fetchParams = { method: \"POST\", body: formData }\n        \n        fetch(url, fetchParams).then(function(r) {\n            if (r.status == 200) {\n\n                return r.json().then(\n                    function(data) {\n                        if (data.link && data.link.length > 0) {\n                            window.open(data.link,'_blank');\n                        }\n                        else {\n                            widgetContext.showSuccessToast('Sucesso. Um link será enviado para o seu e-mail', 3000)\n                        }\n                    })\n            }\n            else {\n                widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n            }\n            \n        })\n        .catch(function(error) {\n            widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n        });\n  \n        vm.cancel();  \n        \n    }\n}\n",
                "customResources" : [ ],
                "id" : "b256823f-0aa8-2792-bf4d-17664bb9994c"
              }, {
                "name" : "Alarmes",
                "icon" : "warning",
                "type" : "openDashboardState",
                "targetDashboardStateId" : "ssu_alarmes_dialog",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Site",
                "openInSeparateDialog" : true,
                "dialogTitle" : "Alarmes",
                "dialogHideDashboardToolbar" : true,
                "dialogWidth" : null,
                "dialogHeight" : null,
                "openRightLayout" : false,
                "id" : "f22a345d-98b4-eee7-7231-29cada8a9be7"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "d437b949-13f6-ad75-426d-716d173a1014",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "0d86078d-13f0-eb3e-6796-d3f6407d8f01" : {
          "type" : "latest",
          "sizeX" : 9,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Load Factor",
                "type" : "attribute",
                "label" : "Load Factor",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.34026845148635587,
                "decimals" : null,
                "postFuncBody" : "function formattedNumber(x) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 1, minimumFractionDigits: 1}); \n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\nif (typeof value == \"string\") {\n    value = Number(value)\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    return formattedNumber(value*100)+\" %\"; \n\n}\nreturn \" \";\n",
                "usePostProcessing" : true,
                "units" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "\n<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${Load Factor}</div><br>\n    </section>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Fator de Carga",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "0d86078d-13f0-eb3e-6796-d3f6407d8f01",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "daff6e32-aca8-dfc1-81ad-5d155693e353" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_total_delta",
                "type" : "attribute",
                "label" : "variacao",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.6641279352941865,
                "decimals" : 1,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nsinal=\"+\";\nif (value<0) {\n    sinal=\"-\";\n}\nreturn sinal+formattedNumber(Math.abs(value), 1, 1)+\"% versus mês anterior\";"
              }, {
                "name" : "fat_total",
                "type" : "attribute",
                "label" : "fatura",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.17243273355702926,
                "decimals" : 2,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nif (value>100000) {\n    return \"R$ \"+formattedNumber(value, 0, 0);\n}\nreturn \"R$ \"+formattedNumber(value, 2, 2);"
              } ],
              "entityAliasId" : "9372d9cb-e9ba-c2a0-1b4c-4316d7a28718"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${fatura}</div><br>\n        <footer>\n            <div class=\"additional-info\">${variacao}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Última Fatura",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "daff6e32-aca8-dfc1-81ad-5d155693e353",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "5e3eb1f1-04cf-31f2-3f21-058e6c513aa9" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "last_interval_pf",
                "type" : "attribute",
                "label" : "last_interval_pf",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5623388342921531,
                "postFuncBody" : "function formattedNumber(x) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 3, minimumFractionDigits: 3}); \n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\nif (typeof value == \"string\") {\n    value = Number(value);\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value > 0) {\n        post = \" Ind\";\n    } else {\n        post = \" Cap\";\n    }\n    \n    return formattedNumber(Math.abs(value))+post;\n\n}\nreturn \" \";\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "last_interval_tou",
                "type" : "attribute",
                "label" : "last_interval_tou",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5065208547347826,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\nif (typeof value == \"string\") {\n    value = Number(value);\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value == \"P\") {\n        post = \"Ponta\"\n    } else {\n        post = \"Fora Ponta\"\n    }\n    \n    return post;\n\n}\nreturn \" \";\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table align=\"center\" width=\"98%\">\n            <tr>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"88%\" class=\"value\">${last_interval_pf}</td>\n                <td width=\"5%\">&nbsp;</td>\n            </tr>\n            <tr>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"88%\" class=\"value\">${last_interval_tou}</td>\n                <td width=\"5%\">&nbsp;</td>\n            </tr>\n        </table>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Fator de Potência",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "5e3eb1f1-04cf-31f2-3f21-058e6c513aa9",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "288efc8d-c71a-8ec7-8b63-a81288763f15" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_total_delta",
                "type" : "attribute",
                "label" : "variacao",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.3505976153340258,
                "decimals" : null,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nsinal=\"+\";\nif (value<0) {\n    sinal=\"-\";\n}\nreturn sinal+formattedNumber(Math.abs(value), 1, 1)+\"% versus mês anterior\";"
              }, {
                "name" : "fat_total",
                "type" : "attribute",
                "label" : "fatura",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.6402997594559054,
                "decimals" : 2,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nif (value>100000) {\n    return \"R$ \"+formattedNumber(value, 0, 0);\n}\nreturn \"R$ \"+formattedNumber(value, 2, 2);"
              } ],
              "entityAliasId" : "9372d9cb-e9ba-c2a0-1b4c-4316d7a28718"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${fatura}</div><br>\n        <footer>\n            <div class=\"additional-info\">${variacao}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Última Fatura",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "288efc8d-c71a-8ec7-8b63-a81288763f15",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "0c3c4fc0-d08a-a32d-9217-b09b344ee641" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "9372d9cb-e9ba-c2a0-1b4c-4316d7a28718",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_total_reais_delta",
                "type" : "attribute",
                "label" : "variacao",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.01589567176505602,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nsinal=\"+\";\nif (value<0) {\n    sinal=\"-\";\n}\nreturn sinal+formattedNumber(Math.abs(value), 1, 1)+\"% versus mês anterior\";"
              }, {
                "name" : "fat_consumo_total_reais",
                "type" : "attribute",
                "label" : "consumo",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.1406557509836388,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nif (value>100000) {\n    return \"R$ \"+formattedNumber(value, 0, 0);\n}\nreturn \"R$ \"+formattedNumber(Number(value), 2, 2);",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${consumo}</div><br>\n        <footer>\n            <div class=\"additional-info\">${variacao}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Custo Energia",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "0c3c4fc0-d08a-a32d-9217-b09b344ee641",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "450e6423-bbdc-f36c-708f-32b35266f21a" : {
          "type" : "latest",
          "sizeX" : 13,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_fator_carga_delta",
                "type" : "attribute",
                "label" : "variacao",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.9794785017744654,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nsinal=\"+\";\nif (value<0) {\n    sinal=\"-\";\n}\nreturn sinal+formattedNumber(Math.abs(value), 1, 1)+\" pts versus mês anterior\";"
              }, {
                "name" : "fat_fator_carga",
                "type" : "attribute",
                "label" : "fator_carga",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.6279193034163248,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nreturn formattedNumber(value, 1, 1)+\"%\";"
              } ],
              "entityAliasId" : "9372d9cb-e9ba-c2a0-1b4c-4316d7a28718"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${fator_carga}</div><br>\n        <footer>\n            <div class=\"additional-info\">${variacao}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Fator de Carga",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "450e6423-bbdc-f36c-708f-32b35266f21a",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "5c76d177-ad3d-a4e3-7fd7-a043c45a3673" : {
          "type" : "latest",
          "sizeX" : 13,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_penalidades_delta",
                "type" : "attribute",
                "label" : "variacao",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.6726175173472904,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nsinal=\"+\";\nif (value<0) {\n    sinal=\"-\";\n}\nreturn sinal+formattedNumber(Math.abs(value), 1, 1)+\"% versus mês anterior\";"
              }, {
                "name" : "fat_penalidades",
                "type" : "attribute",
                "label" : "penalidades",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.39251574278785184,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nif (value>100000) {\n    return \"R$ \"+formattedNumber(value, 0, 0);\n}\nreturn \"R$ \"+formattedNumber(value, 2, 2);"
              } ],
              "entityAliasId" : "9372d9cb-e9ba-c2a0-1b4c-4316d7a28718"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${penalidades}</div><br>\n        <footer>\n            <div class=\"additional-info\">${variacao}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Penalidades",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "5c76d177-ad3d-a4e3-7fd7-a043c45a3673",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "ec38963b-1618-7ef8-594f-c1e29261cc28" : {
          "type" : "latest",
          "sizeX" : 19,
          "sizeY" : 10,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "9372d9cb-e9ba-c2a0-1b4c-4316d7a28718",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_total_reais",
                "type" : "attribute",
                "label" : "Consumo",
                "color" : "rgb(53, 184, 155)",
                "settings" : { },
                "_hash" : 0.648666580899071,
                "decimals" : 2
              }, {
                "name" : "fat_demanda_reais",
                "type" : "attribute",
                "label" : "Demanda",
                "color" : "rgb(58, 123, 182)",
                "settings" : { },
                "_hash" : 0.8873766781802654,
                "decimals" : 2
              }, {
                "name" : "fat_penalidades",
                "type" : "attribute",
                "label" : "Penalidades",
                "color" : "rgb(217, 78, 86)",
                "settings" : { },
                "_hash" : 0.6157843882687393,
                "decimals" : 2
              }, {
                "name" : "fat_disponibilidade_valor_liq",
                "type" : "attribute",
                "label" : "Disponibilidade",
                "color" : "#8bc34a",
                "settings" : {
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false
                },
                "_hash" : 0.7055187070988822,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_outros_reais",
                "type" : "attribute",
                "label" : "Outros",
                "color" : "rgb(103, 192, 224)",
                "settings" : { },
                "_hash" : 0.33968915440155945,
                "decimals" : 2,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return Math.max(value,0)"
              }, {
                "name" : "fat_impostos",
                "type" : "attribute",
                "label" : "Impostos",
                "color" : "rgb(235, 171, 84)",
                "settings" : { },
                "_hash" : 0.9536111649620986,
                "decimals" : 2
              }, {
                "name" : "fat_multa_atraso",
                "type" : "attribute",
                "label" : "Multa atraso",
                "color" : "#8bc34a",
                "settings" : {
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false
                },
                "_hash" : 0.585387073614708,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "radius" : 1,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "innerRadius" : 0,
              "showLabels" : true,
              "stroke" : {
                "width" : 5
              },
              "tilt" : 1,
              "animatedPie" : false
            },
            "title" : "Última Fatura",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "18px"
            },
            "enableDataExport" : false,
            "widgetStyle" : { },
            "useDashboardTimewindow" : true,
            "showLegend" : true,
            "legendConfig" : {
              "position" : "right",
              "showMin" : false,
              "showMax" : false,
              "showAvg" : false,
              "showTotal" : false
            },
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "ec38963b-1618-7ef8-594f-c1e29261cc28",
          "typeFullFqn" : "system.charts.pie"
        },
        "ff733672-386d-8950-d8db-6991e51bfc19" : {
          "type" : "latest",
          "sizeX" : 19,
          "sizeY" : 5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_custo_medio_delta",
                "type" : "attribute",
                "label" : "variacao",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.9070100321581211,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nsinal=\"+\";\nif (value<0) {\n    sinal=\"-\";\n}\nreturn sinal+formattedNumber(Math.abs(value), 1, 1)+\"% versus mês anterior\";"
              }, {
                "name" : "fat_custo_medio",
                "type" : "attribute",
                "label" : "custo_medio",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.131705415354747,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nreturn \"R$ \"+formattedNumber(value, 2, 2);"
              } ],
              "entityAliasId" : "9372d9cb-e9ba-c2a0-1b4c-4316d7a28718"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${custo_medio}</div><br>\n        <footer>\n            <div class=\"additional-info\">${variacao}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Custo Médio (por MWh)",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "ff733672-386d-8950-d8db-6991e51bfc19",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "12ba9e87-51c8-2e76-94bb-c3115236ae24" : {
          "type" : "timeseries",
          "sizeX" : 41,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "9372d9cb-e9ba-c2a0-1b4c-4316d7a28718",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "uc_url_conta",
                "type" : "timeseries",
                "label" : "Referência",
                "color" : "#3f51b5",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return moment(value).format('DD-MMM-YY')",
                  "cellStyleFunction" : "return {align: \"center\", width: \"13%\"};"
                },
                "_hash" : 0.3391836177326326,
                "postFuncBody" : "return time;"
              }, {
                "name" : "fat_consumo_total_reais",
                "type" : "timeseries",
                "label" : "Consumo",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});",
                  "cellStyleFunction" : "return {align: \"center\", width: \"13%\"};"
                },
                "_hash" : 0.5349386412549832,
                "decimals" : 2,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_demanda_reais",
                "type" : "timeseries",
                "label" : "Demanda",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});",
                  "cellStyleFunction" : "return {align: \"center\", width: \"13%\"};"
                },
                "_hash" : 0.399049714281585,
                "decimals" : 2,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_penalidades",
                "type" : "timeseries",
                "label" : "Penalidades",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});",
                  "cellStyleFunction" : "return {align: \"center\", width: \"13%\"};"
                },
                "_hash" : 0.8483381531939747,
                "decimals" : 2
              }, {
                "name" : "fat_disponibilidade_valor_liq",
                "type" : "timeseries",
                "label" : "Disponibilidade",
                "color" : "#03a9f4",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (typeof(value) === \"undefined\") {value =0}\nreturn value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.9597327168588503,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : null
              }, {
                "name" : "fat_outros_reais",
                "type" : "timeseries",
                "label" : "Outros",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});",
                  "cellStyleFunction" : "return {align: \"center\", width: \"13%\"};"
                },
                "_hash" : 0.9990272823573612,
                "decimals" : 2,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_impostos",
                "type" : "timeseries",
                "label" : "Impostos",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});",
                  "cellStyleFunction" : "return {align: \"center\", width: \"13%\"};"
                },
                "_hash" : 0.6948599326691787,
                "decimals" : 2
              }, {
                "name" : "fat_multa_atraso",
                "type" : "timeseries",
                "label" : "Multa atraso",
                "color" : "#ff9800",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "useCellContentFunction" : true,
                  "cellStyleFunction" : "return {align: \"center\", width: \"13%\"};",
                  "cellContentFunction" : "if (typeof(value) === \"undefined\") {value =0}\nreturn value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.19153969059637754,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_total",
                "type" : "timeseries",
                "label" : "Total",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});",
                  "cellStyleFunction" : "return {align: \"right\", width: \"13%\"};"
                },
                "_hash" : 0.38617481896365846,
                "decimals" : 2,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_custo_medio",
                "type" : "timeseries",
                "label" : "C. Médio",
                "color" : "#e91e63",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.21647096691418466
              }, {
                "name" : "fat_fator_carga",
                "type" : "timeseries",
                "label" : "F. Carga",
                "color" : "#ffeb3b",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1})+\"%\";"
                },
                "_hash" : 0.8779136609484988
              }, {
                "name" : "uc_url_conta",
                "type" : "timeseries",
                "label" : "PDF",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "html = ''+\n'<html>'+\n'<a href=\"'+value+'\" style=\"text-decoration: none;\" target=\"_blank\"><img src=\"https://solarhub.engecomp.io/res/pdf-icon.png\" width=\"auto\" height=\"22em\"></a>'+\n'</html>'\n\n\n\nreturn html;",
                  "cellStyleFunction" : "return {align: \"center\", width: \"9%\"};"
                },
                "_hash" : 0.7821151291852728,
                "postFuncBody" : "return value;"
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "timewindowMs" : 164073600000,
                "quickInterval" : "CURRENT_DAY",
                "interval" : 1000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 20000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "enableSearch" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "true",
              "showMilliseconds" : false,
              "useEntityLabel" : false,
              "hideEmptyLines" : false,
              "useRowStyleFunction" : false
            },
            "title" : "Faturas de Energia",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "18px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : {
              "text-align" : "center"
            },
            "actions" : {
              "headerButton" : [ {
                "name" : "Download das faturas",
                "icon" : "file_download",
                "type" : "custom",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\n\nvar user = widgetContext.currentUser;\nvar userMail = user.sub\n\n//var url = 'https://solarhub.engecomp.io/be/pdf_export/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\nvar url = 'https://solarhub.engecomp.io/be/pdf_export_v2/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\n\npayload = createJSON();\n\nsend();\n\nfunction createJSON(UC) {\n    var payload = {};\n    //payload.devices = [];\n    payload.files = [];\n    payload.email = userMail\n    payload.UC = entityName.substring(3,entityName.length)\n    payload.utility = entityName.substring(0,2)\n\n    for (var i = 0; i < widgetContext.data.length; i++) {\n        if (widgetContext.data[i].dataKey.label == 'PDF') {\n            for (j=0; j < widgetContext.data[i].data.length ; j++){\n                file = {}\n                file.link = widgetContext.data[i].data[j][1]\n                file.month = moment(widgetContext.data[i].data[j][0],'x').format('MM/YYYY')\n                //payload.devices.push(widgetContext.data[i].data[j][1])\n                payload.files.push(file)\n            }\n        }\n    }\n    return payload\n}\n\n\nfunction send() {\n\n    let formData = new FormData();    \n    formData.append(\"payload\", JSON.stringify( payload ))\n\n    var fetchParams = { method: \"POST\", body: formData }\n    \n    fetch(url, fetchParams).then(function(r) {\n        if (r.status == 200) {\n\n            return r.json().then(\n                function(data) {\n                    if (data.link && data.link.length > 0) {\n                        window.open(data.link,'_blank');\n                    }\n                    else {\n                        widgetContext.showSuccessToast('Sucesso. Um link será enviado para o seu e-mail', 3000)\n                    }\n                })\n        }\n        else {\n            widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n        }\n        \n    }); \n\n    vm.cancel();  \n        \n}\n",
                "id" : "2d452e15-9540-ff3d-657b-bd0499f6c2e0"
              }, {
                "name" : "Geração Distribuída",
                "icon" : "wb_sunny",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "ssu_gd",
                "setEntityId" : false,
                "stateEntityParamName" : null,
                "openRightLayout" : false,
                "id" : "de602cdd-8eb9-917b-e550-92ef7a212899"
              }, {
                "name" : "Exportação de dados",
                "icon" : "arrow_downward",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n     <div fxLayout=\"column\" fxLayout.gt-sm=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"20px\">\n         \n\n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"0\" fxFlexOrder.gt-sm=\"0\">\n          <mat-label>Data Inicial</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"sdStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n        \n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"1\" fxFlexOrder.gt-sm=\"1\">\n          <mat-label>Data Final</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"edStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n\n    </div>\n    \n    <div [fxShow]=\"!OK\" fxLayoutGap=\"20px\" style=\"color: red; font-weight: bold;\">ATENÇÃO: {{ errorMessage }}</div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nvar user = widgetContext.currentUser;\n\n\nvar url = 'https://solarhub.engecomp.io/be/uc_data_export/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\n\npayload = {\n    email: user.sub,\n    token: localStorage[\"jwt_token\"]\n}\n\npayload.search = {\n    entityFilter: widgetContext.defaultSubscription.configuredDatasources[0].entityFilter,\n    pageLink: {\n        page: 0,\n        pageSize: 1000,\n        textSearch: null,\n        dynamic: false,\n        sortOrder: {\n          key: {\n            key: \"name\",\n            type: \"ENTITY_FIELD\"\n          },\n          direction: \"ASC\"\n        }\n      },\n    entityFields: [\n        {\n          key: \"name\",\n          type: \"ENTITY_FIELD\"\n        }\n      ],\n    latestValues: [\n        {\n          key: \"description\",\n          type: \"ATTRIBUTE\"\n        }\n      ]\n}\n\n\nshowInfoDialog()\n\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    \n    let vm = instance;   \n    vm.OK = true\n\n    vm.importTitle = 'Exportação de dados - FATURAS'\n    \n    vm.ed = moment.utc().startOf('day').toDate();\n    vm.sd = moment(vm.ed).subtract(1, 'month').toDate();\n\n    vm.sdStr = moment(vm.sd).format('DD/MM/YYYY');\n    vm.edStr = moment(vm.ed).format('DD/MM/YYYY');\n    \n    vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY')\n    vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY')\n    \n    \n    vm.change = function() {\n\n        vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY HH:mm')\n        vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY HH:mm')\n        \n        var days = moment(vm.ed).diff(moment(vm.sd),\n            'days');\n            \n        if (!vm.sd._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data inicial inválida\"\n            return\n        }\n        \n        if (!vm.ed._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data final inválida\"\n            return\n        }\n\n        //check start date greater than end date\n        if (days < 0) {\n            vm.OK = false;\n            vm.errorMessage =\n                \"Data inicial maior que data final\";\n            return;\n        }\n\n        vm.OK = true;\n    }\n\n    \n    vm.change()\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n\n        let formData = new FormData();\n        \n        sd = moment(vm.sd).format('YYYY-MM-DD');\n        ed = moment(vm.ed).format('YYYY-MM-DD');\n        \n        payload.start_date = sd\n        payload.end_date = ed\n        payload.getnow = true\n        payload.use_case = \"ssu\"\n        \n        formData.append(\"payload\", JSON.stringify( payload ))\n        console.log(JSON.stringify( payload ))\n\n        var fetchParams = { method: \"POST\", body: formData }\n        \n        fetch(url, fetchParams).then(function(r) {\n            if (r.status == 200) {\n\n                return r.json().then(\n                    function(data) {\n                        if (data.link && data.link.length > 0) {\n                            window.open(data.link,'_blank');\n                        }\n                        else {\n                            widgetContext.showSuccessToast('Sucesso. Um link será enviado para o seu e-mail', 3000)\n                        }\n                    })\n            }\n            else {\n                widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n            }\n            \n        })\n        .catch(function(error) {\n            widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n        });\n  \n        vm.cancel();  \n        \n    }\n}\n",
                "customResources" : [ ],
                "id" : "c1f47c02-a132-86f6-b546-0105cd6b28f3"
              } ]
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : false
          },
          "id" : "12ba9e87-51c8-2e76-94bb-c3115236ae24",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "5f6a992a-0f81-78a3-4b0c-b6cb4753a0b3" : {
          "type" : "timeseries",
          "sizeX" : 21,
          "sizeY" : 19,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Active Energy",
                "type" : "timeseries",
                "label" : "Data/Hora",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return moment(value).format('DD/MMM HH:mm')"
                },
                "_hash" : 0.5956126369348295,
                "units" : "",
                "decimals" : null,
                "postFuncBody" : "return time;"
              }, {
                "name" : "Active Energy",
                "type" : "timeseries",
                "label" : "Dem.Ativa (kW)",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n}\nreturn \"\";"
                },
                "_hash" : 0.2590445257268206,
                "postFuncBody" : "return value*4;"
              }, {
                "name" : "Reactive Energy",
                "type" : "timeseries",
                "label" : "Dem.Reat.(kVAr)",
                "color" : "#9c27b0",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n}\nreturn \"\";"
                },
                "_hash" : 0.7020061780252567,
                "postFuncBody" : "return value*4; "
              }, {
                "name" : "Power Factor (FPI)",
                "type" : "timeseries",
                "label" : "F.Potência (FP-I)",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.09730615827427602,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 3, maximumFractionDigits: 3}); ",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "Power Factor (FPC)",
                "type" : "timeseries",
                "label" : "F.Potência (FP-C)",
                "color" : "#3f51b5",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.969680467334997,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 3, maximumFractionDigits: 3}); ",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "Power Factor (P)",
                "type" : "timeseries",
                "label" : "F.Potência (P)",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.7274148109255669,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 3, maximumFractionDigits: 3}); ",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : true,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "timewindowMs" : 604800000,
                "quickInterval" : "CURRENT_DAY",
                "interval" : 1000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 20000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : true,
              "defaultPageSize" : 24,
              "enableSearch" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Dados (kW/kVAr) a cada 15 minutos",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "5f6a992a-0f81-78a3-4b0c-b6cb4753a0b3",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "c50ace9e-6c03-0b43-2634-97526cf7fc29" : {
          "type" : "timeseries",
          "sizeX" : 21,
          "sizeY" : 16,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Active Energy_hour_sum",
                "type" : "timeseries",
                "label" : "Data/Hora",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return moment(value).format('DD/MMM HH:mm')"
                },
                "_hash" : 0.002070881233394717,
                "postFuncBody" : "return time;"
              }, {
                "name" : "Active Energy (FP)_hour_sum",
                "type" : "timeseries",
                "label" : "Cons.FP (kWh)",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return (value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n}\nreturn \"\";"
                },
                "_hash" : 0.07172962272634953
              }, {
                "name" : "Active Energy (P)_hour_sum",
                "type" : "timeseries",
                "label" : "Cons.Ponta (kWh)",
                "color" : "#f44336",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return (value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n}\nreturn \"\";"
                },
                "_hash" : 0.703437116116088
              }, {
                "name" : "Active Energy (HR)_hour_sum",
                "type" : "timeseries",
                "label" : "Cons.Reservado (kWh)",
                "color" : "#ffc107",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return (value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n}\nreturn \"\";"
                },
                "_hash" : 0.12379161053671983
              }, {
                "name" : "Power Factor Hour (FPI)",
                "type" : "timeseries",
                "label" : "F.Potência (FP-I)",
                "color" : "#9c27b0",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.5847393712712843,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "Power Factor Hour (FPC)",
                "type" : "timeseries",
                "label" : "F.Potência (FP-C)",
                "color" : "#607d8b",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.1604983876148498,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "Power Factor Hour (P)",
                "type" : "timeseries",
                "label" : "F.Potência (P)",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.3839856232146517,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : true,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "timewindowMs" : 604800000,
                "quickInterval" : "CURRENT_DAY",
                "interval" : 1000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 20000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : true,
              "defaultPageSize" : 24,
              "enableSearch" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Consumos (kWh) a cada hora",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "c50ace9e-6c03-0b43-2634-97526cf7fc29",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "e664d486-3579-a2b9-3922-3e385b182ead" : {
          "type" : "timeseries",
          "sizeX" : 33,
          "sizeY" : 19,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Active Energy (FP)_day_sum",
                "type" : "timeseries",
                "label" : "Data",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return moment(value).format('DD/MMM')"
                },
                "_hash" : 0.21222168270197084,
                "postFuncBody" : "return time;"
              }, {
                "name" : "Active Energy (FP)_day_sum",
                "type" : "timeseries",
                "label" : "Cons.FP (kWh)",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n}\nreturn \"\";\n"
                },
                "_hash" : 0.09027179700379806
              }, {
                "name" : "Active Energy (P)_day_sum",
                "type" : "timeseries",
                "label" : "Cons.Ponta (kWh)",
                "color" : "#f44336",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n}\nreturn \"\";\n"
                },
                "_hash" : 0.7096092383770061,
                "units" : "",
                "decimals" : null
              }, {
                "name" : "Active Energy (FP)_day_max",
                "type" : "timeseries",
                "label" : "Dem.FP (kW)",
                "color" : "#ffc107",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n}\nreturn \"\";\n"
                },
                "_hash" : 0.6141981785892108,
                "units" : "",
                "decimals" : null,
                "postFuncBody" : "return value*4;"
              }, {
                "name" : "Active Energy (P)_day_max",
                "type" : "timeseries",
                "label" : "Dem.Ponta (kW)",
                "color" : "#607d8b",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n}\nreturn \"\";\n"
                },
                "_hash" : 0.796554701817674,
                "postFuncBody" : "return value*4;"
              }, {
                "name" : "Active Energy (HR)_day_sum",
                "type" : "timeseries",
                "label" : "Cons.Reservado (kWh)",
                "color" : "#9c27b0",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n}\nreturn \"\";\n"
                },
                "_hash" : 0.635582232720892
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : true,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "timewindowMs" : 7776000000,
                "quickInterval" : "CURRENT_DAY",
                "interval" : 1000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 20000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : true,
              "defaultPageSize" : 24,
              "enableSearch" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Dados (kW/kWh) a cada dia",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "e664d486-3579-a2b9-3922-3e385b182ead",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "5b006a6e-6235-5eb1-9a82-11170fb7620f" : {
          "type" : "timeseries",
          "sizeX" : 33,
          "sizeY" : 16,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Active Energy (FP)_month_sum",
                "type" : "timeseries",
                "label" : "Mês",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return moment(value).format('MMM/YY')"
                },
                "_hash" : 0.9106578091742827,
                "postFuncBody" : "return time;"
              }, {
                "name" : "Active Energy (FP)_month_sum",
                "type" : "timeseries",
                "label" : "Cons.FP (kWh)",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n}\nreturn \"\";"
                },
                "_hash" : 0.4539793826271601
              }, {
                "name" : "Active Energy (P)_month_sum",
                "type" : "timeseries",
                "label" : "Cons.Ponta (kWh)",
                "color" : "#f44336",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n}\nreturn \"\";"
                },
                "_hash" : 0.40458076889789574
              }, {
                "name" : "Active Energy (FP)_month_max",
                "type" : "timeseries",
                "label" : "Dem.FP (kW)",
                "color" : "#ffc107",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n}\nreturn \"\";"
                },
                "_hash" : 0.24000142012982884,
                "postFuncBody" : "return value*4;"
              }, {
                "name" : "Active Energy (P)_month_max",
                "type" : "timeseries",
                "label" : "Dem.Ponta (kW)",
                "color" : "#607d8b",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n}\nreturn \"\";"
                },
                "_hash" : 0.19307372741121376,
                "postFuncBody" : "return value*4;"
              }, {
                "name" : "Active Energy (HR)_month_sum",
                "type" : "timeseries",
                "label" : "Cons.Reservado (kWh)",
                "color" : "#9c27b0",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n}\nreturn \"\";"
                },
                "_hash" : 0.3509669991639781
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : true,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "timewindowMs" : 311040000000,
                "quickInterval" : "CURRENT_DAY",
                "interval" : 1000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 20000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : true,
              "defaultPageSize" : 24,
              "enableSearch" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Dados (kW/kWh) a cada mês",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "5b006a6e-6235-5eb1-9a82-11170fb7620f",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "f4ee3aff-dbf9-59bd-9ee9-a3936b870574" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "ufer_fp",
                "type" : "timeseries",
                "label" : "ufer_fp",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.8480124974938985,
                "postFuncBody" : "function formattedNumber(x, y) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: y}); \n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value > 100000) {\n        return formattedNumber(value/1000, 1)+\" MVArh\";\n    }\n    \n    return formattedNumber(Math.round(value), 0)+\" kVArh\";\n\n}\nreturn \" \";\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "ufer_p",
                "type" : "timeseries",
                "label" : "ufer_p",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.8095005871854049,
                "postFuncBody" : "function formattedNumber(x, y) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: y}); \n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value > 100000) {\n        return formattedNumber(value/1000, 1)+\" MVArh\";\n    }\n    \n    return formattedNumber(Math.round(value), 0)+\" kVArh\";\n\n}\nreturn \" \";\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "ufer_fp",
                "type" : "timeseries",
                "label" : "tituloFP",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.3827209638490774,
                "postFuncBody" : "if (value > 1000000) {\n    return 'FP:';\n}\nreturn 'F.Ponta:';\n"
              }, {
                "name" : "ufer_fp",
                "type" : "timeseries",
                "label" : "tituloP",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.6826918185291457,
                "postFuncBody" : "if (value > 1000000) {\n    return 'P:';\n}\nreturn 'Ponta:';"
              }, {
                "name" : "ufer_fp",
                "type" : "timeseries",
                "label" : "largura",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.6802370270512839,
                "postFuncBody" : "if (value > 1000000) {\n    return '15%';\n}\nreturn '32%';"
              }, {
                "name" : "ufer_fp",
                "type" : "timeseries",
                "label" : "largura2",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.6402461095854941,
                "postFuncBody" : "if (value > 1000000) {\n    return '70%';\n}\nreturn '53%';\n"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table align=\"center\" width=\"100%\">\n            <tr>\n                <td widht=\"5%\">&nbsp;</td>\n                <td width=\"${largura}\" class=\"value_left\">${tituloFP}</td>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura2}\" class=\"value_right\">${ufer_fp}</td>\n                <td widht=\"5%\">&nbsp;</td>\n            </tr>\n            <tr>\n                <td widht=\"5%\">&nbsp;</td>\n                <td width=\"${largura}\" class=\"value_left\">${tituloP}</td>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura2}\" class=\"value_right\">${ufer_p}</td>\n                <td widht=\"5%\">&nbsp;</td>\n            </tr>\n        </table>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "UFER Mês",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "id" : "9f4a2380-a4ca-7770-7103-4015f8339c3d",
                "name" : "Gráfico UFER",
                "icon" : "insert_chart",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "ssu_ufer",
                "setEntityId" : false,
                "stateEntityParamName" : "Curr_Site"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "f4ee3aff-dbf9-59bd-9ee9-a3936b870574",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "a52cc1cc-72f4-6d4d-e603-0760ca317b82" : {
          "type" : "latest",
          "sizeX" : 13,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Caps In",
                "type" : "attribute",
                "label" : "Caps In",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.06547025116405014,
                "postFuncBody" : "function formattedNumber(x) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0});\n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    return formattedNumber(value)+\" kVAr\";\n\n}\nreturn \" \";\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "Caps Out",
                "type" : "attribute",
                "label" : "Caps Out",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.34082466528376654,
                "postFuncBody" : "function formattedNumber(x) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0});\n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    return formattedNumber(value)+\" kVAr\";\n\n}\nreturn \" \";\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "Caps In",
                "type" : "attribute",
                "label" : "titulo1",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.8958806266966115,
                "postFuncBody" : "if (value > 99) {\n    return 'In:'\n}\nreturn 'Incluir:'"
              }, {
                "name" : "Caps In",
                "type" : "attribute",
                "label" : "titulo2",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.5356926196493481,
                "postFuncBody" : "if (value > 99) {\n    return 'Out:'\n}\nreturn 'Retirar:'"
              }, {
                "name" : "Caps In",
                "type" : "attribute",
                "label" : "largura",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.14449814359007385,
                "postFuncBody" : "if (value > 99) {\n    return '15%';\n}\nreturn '32%';"
              }, {
                "name" : "Caps In",
                "type" : "attribute",
                "label" : "largura2",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.9542963921892353,
                "postFuncBody" : "if (value > 99) {\n    return '70%';\n}\nreturn '53%';"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table align=\"center\" width=\"98%\">\n            <tr>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura}\" class=\"value_left\">${titulo1}</td>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura2}\" class=\"value_right\">${Caps In}</td>\n                <td width=\"5%\">&nbsp;</td>\n            </tr>\n            <tr>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura}\" class=\"value_left\">${titulo2}</td>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura2}\" class=\"value_right\">${Caps Out}</td>\n                <td width=\"5%\">&nbsp;</td>\n            </tr>\n        </table>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Capacitores Sugeridos",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Ajuda",
                "icon" : "info_outline",
                "type" : "customPretty",
                "customHtml" : "<form #f=\"ngForm\">\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\n        <h2>Ajuda</h2>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\"\n        *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\">\n    </div>\n    <div mat-dialog-content\n        style=\"padding: 20px 20px 20px 20px;\" ng-cloak=\"\">\n\n        <div layout-align=\"space-around left\"\n            style=\"min-width: 300px; max-width: 600px; padding-top: 20px\">\n\n            ATENÇÃO!!!<br>&nbsp;<br>\nA quantidade de capacitares estimados pelo sistema é apenas uma estimativa destinada a alertar sobre a existência de oportunidades de melhoria.<br>&nbsp;<br>\n            Antes de efetuar qualquer investimento, contrate um profissional qualificado para elaborar um projeto detalhado para a instalação sua específica.<br>&nbsp;\n\n        </div>\n    </div>\n\n    <div mat-dialog-actions fxLayout=\"row\"\n        fxLayoutAlign=\"end center\">\n        <button mat-button color=\"primary\" type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n            Fechar\n        </button>\n    </div>\n</form>\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenDialog();\n\nfunction openDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    let vm = instance;\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n}",
                "customResources" : [ ],
                "id" : "7dad00d7-ad32-4674-071e-41b2b3ef51fe"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "a52cc1cc-72f4-6d4d-e603-0760ca317b82",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "7c4f4eef-6c80-4d8b-87b8-bec411dad45f" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Active Energy (FP)_month_sum",
                "type" : "timeseries",
                "label" : "Active Energy (FP)_month_sum",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.026411987772145373,
                "decimals" : 0,
                "postFuncBody" : "function formattedNumber(x, y) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: y}); \n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value > 99999) {\n        return formattedNumber(value/1000, 0)+' MWh';\n    }\n    \n    if (value > 9999) {\n        return formattedNumber(value/1000, 1)+' MWh';\n    }\n    \n    if (value > 999) {\n        return formattedNumber(value/1000, 2)+' MWh';\n    }\n    \n    return formattedNumber(value, 0)+' kWh';\n\n}\nreturn \" \";\n",
                "usePostProcessing" : true,
                "units" : null,
                "funcBody" : null
              }, {
                "name" : "Active Energy (P)_month_sum",
                "type" : "timeseries",
                "label" : "Active Energy (P)_month_sum",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.26151188925277036,
                "postFuncBody" : "function formattedNumber(x, y) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: y}); \n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value > 99999) {\n        return formattedNumber(value/1000, 0)+' MWh';\n    }\n    \n    if (value > 9999) {\n        return formattedNumber(value/1000, 1)+' MWh';\n    }\n    \n    if (value > 999) {\n        return formattedNumber(value/1000, 2)+' MWh';\n    }\n    \n    return formattedNumber(value, 0)+' kWh';\n\n}\nreturn \" \";\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "Active Energy (FP)_month_sum",
                "type" : "timeseries",
                "label" : "tituloFP",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.964921414882711,
                "postFuncBody" : "if (value > 999999) {\n    return 'FP:';\n}\n\nreturn 'F.Ponta:';"
              }, {
                "name" : "Active Energy (FP)_month_sum",
                "type" : "timeseries",
                "label" : "tituloP",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.01028743515610131,
                "postFuncBody" : "if (value > 999999) {\n    return 'P:';\n}\n\nreturn 'Ponta:';"
              }, {
                "name" : "Active Energy (FP)_month_sum",
                "type" : "timeseries",
                "label" : "largura",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.7048236437986888,
                "postFuncBody" : "if (value > 999) {\n    return '15%';\n}\n\nreturn '32%';"
              }, {
                "name" : "Active Energy (FP)_month_sum",
                "type" : "timeseries",
                "label" : "largura2",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.38239477163305136,
                "postFuncBody" : "if (value > 999) {\n    return '70%';\n}\n\nreturn '53%';"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table align=\"center\" width=\"98%\">\n            <tr>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura}\" class=\"value_left\">${tituloFP}</td>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura2}\" class=\"value_right\">${Active Energy (FP)_month_sum}</td>\n                <td width=\"5%\">&nbsp;</td>\n            </tr>\n            <tr>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura}\" class=\"value_left\">${tituloP}</td>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura2}\" class=\"value_right\">${Active Energy (P)_month_sum}</td>\n                <td width=\"5%\">&nbsp;</td>\n            </tr>\n        </table>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Consumos Acumulados",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "7c4f4eef-6c80-4d8b-87b8-bec411dad45f",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "706d2f66-f0f0-4a47-97f5-25d6a137f300" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "last_interval_wh",
                "type" : "attribute",
                "label" : "last_interval_wh",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.3149444193856531,
                "postFuncBody" : "function formattedNumber(x, y) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: y});\n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    return formattedNumber(value*4, 0)+' kW';\n\n}\nreturn \" \";\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "last_interval_tou",
                "type" : "attribute",
                "label" : "last_interval_tou",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.1446508259518281,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    return value;\n\n}\nreturn \" \";\n"
              }, {
                "name" : "last_interval_ts",
                "type" : "attribute",
                "label" : "last_interval_ts",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.036149217944347445,
                "postFuncBody" : "return moment.unix(value/1000).format('DD-MMM HH:mm');\n"
              }, {
                "name" : "last_interval_ts",
                "type" : "attribute",
                "label" : "last_interval_fromnow",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.20618239436840158,
                "postFuncBody" : "return moment(value).fromNow();"
              }, {
                "name" : "last_interval_ts",
                "type" : "attribute",
                "label" : "last_interval_old",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.38828228678053756,
                "postFuncBody" : "return moment().diff(value,'hours') > 4 ? true : false;"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${last_interval_wh} ${last_interval_tou}</div><br>\n        <footer>\n            <div class=\"additional-info\">${last_interval_ts}</div><br>\n            <div data-status=\"${last_interval_old}\" class=\"status additional-info\">${last_interval_fromnow}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Potência",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "706d2f66-f0f0-4a47-97f5-25d6a137f300",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "bd8d54b4-a15c-4136-b9d8-bbf7ab2b2312" : {
          "type" : "timeseries",
          "sizeX" : 16,
          "sizeY" : 35,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Power Factor Hour (FPI)",
                "type" : "timeseries",
                "label" : "FP-I",
                "color" : "#ffc107",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.5660966604303757,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 3, maximumFractionDigits: 3}); "
              }, {
                "name" : "Power Factor Hour (FPC)",
                "type" : "timeseries",
                "label" : "FP-C",
                "color" : "#607d8b",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.3380137531591829,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 3, maximumFractionDigits: 3}); "
              }, {
                "name" : "Power Factor Hour (P)",
                "type" : "timeseries",
                "label" : "Ponta",
                "color" : "#9c27b0",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.7775218493341882,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 3, maximumFractionDigits: 3}); "
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : true,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "timewindowMs" : 604800000,
                "quickInterval" : "CURRENT_DAY",
                "interval" : 1000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 30000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : true,
              "displayPagination" : true,
              "defaultPageSize" : 24,
              "enableSearch" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "F.Potência por Intervalo",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "18px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "bd8d54b4-a15c-4136-b9d8-bbf7ab2b2312",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "bdb23800-e566-43ba-a5d3-dc68d4361f82" : {
          "type" : "latest",
          "sizeX" : 12,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Active Energy (FP)_month_max",
                "type" : "timeseries",
                "label" : "Active Energy (FP)_month_max",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.29256525020096946,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value > 25) {\n        return formattedNumber(value*4, 0, 0)+' kW';\n    }\n    return formattedNumber(value*4, 1, 1)+' kW';\n\n}\nreturn \" \";\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "Active Energy (P)_month_max",
                "type" : "timeseries",
                "label" : "Active Energy (P)_month_max",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.3047623047233261,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value > 25) {\n        return formattedNumber(value*4, 0, 0)+' kW';\n    }\n    return formattedNumber(value*4, 1, 1)+' kW';\n\n}\nreturn \" \";\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "Active Energy (FP)_month_max",
                "type" : "timeseries",
                "label" : "tituloFP",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.21686059551088133,
                "postFuncBody" : "if (value > 2500) {\n    return 'FP:';\n}\nreturn 'F.Ponta:';\n"
              }, {
                "name" : "Active Energy (FP)_month_max",
                "type" : "timeseries",
                "label" : "tituloP",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.856108308715902,
                "postFuncBody" : "if (value > 2500) {\n    return 'P:';\n}\nreturn 'Ponta:';"
              }, {
                "name" : "Active Energy (FP)_month_max",
                "type" : "timeseries",
                "label" : "largura",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.3815889285541303,
                "postFuncBody" : "if (value > 250) {\n    return '15%';\n}\nreturn '32%';"
              }, {
                "name" : "Active Energy (FP)_month_max",
                "type" : "timeseries",
                "label" : "largura2",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.6563366598780407,
                "postFuncBody" : "if (value > 250) {\n    return '70%';\n}\nreturn '53%';"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table align=\"center\" width=\"98%\">\n            <tr>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura}\" class=\"value_left\">${tituloFP}</td>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura2}\" class=\"value_right\">${Active Energy (FP)_month_max}</td>\n                <td width=\"5%\">&nbsp;</td>\n            </tr>\n            <tr>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura}\" class=\"value_left\">${tituloP}</td>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura2}\" class=\"value_right\">${Active Energy (P)_month_max}</td>\n                <td width=\"5%\">&nbsp;</td>\n            </tr>\n        </table>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Demandas",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "bdb23800-e566-43ba-a5d3-dc68d4361f82",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "96f15c3e-5a9e-4673-9c05-43913e8216cd" : {
          "type" : "timeseries",
          "sizeX" : 32,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "temperature_hour_avg",
                "type" : "timeseries",
                "label" : "Temperatura",
                "color" : "rgb(132, 60, 12)",
                "settings" : {
                  "datasetHidden" : true,
                  "dummyDataSet" : false,
                  "yAxisID" : "right",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack9",
                  "aggUnit" : [ "minute" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 2,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : true,
                  "axisPosition" : "right",
                  "axisMin" : 0,
                  "axisMax" : 50,
                  "steppedLine" : "none",
                  "spanGaps" : true
                },
                "_hash" : 0.3252046458227724
              }, {
                "name" : "temperature_day_avg",
                "type" : "timeseries",
                "label" : "Temperatura",
                "color" : "rgb(132, 60, 12)",
                "settings" : {
                  "datasetHidden" : true,
                  "dummyDataSet" : false,
                  "yAxisID" : "right",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : true,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack9",
                  "aggUnit" : [ "day" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 2,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : true,
                  "axisPosition" : "right",
                  "axisMin" : 0,
                  "axisMax" : 50
                },
                "_hash" : 0.9539669235539996
              }, {
                "name" : "temperature_month_avg",
                "type" : "timeseries",
                "label" : "Temperatura",
                "color" : "rgb(132, 60, 12)",
                "settings" : {
                  "datasetHidden" : true,
                  "dummyDataSet" : false,
                  "yAxisID" : "right",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : true,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack9",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 2,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : true,
                  "axisPosition" : "right",
                  "axisMin" : 0,
                  "axisMax" : 50
                },
                "_hash" : 0.1759581523617466
              }, {
                "name" : "Active Energy (FP)",
                "type" : "timeseries",
                "label" : "Fora Ponta",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "aggUnit" : [ "minute" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "Stack0"
                },
                "_hash" : 0.040219466505192925,
                "postFuncBody" : "return value*4;"
              }, {
                "name" : "Active Energy (P)",
                "type" : "timeseries",
                "label" : "Ponta",
                "color" : "#ffab00",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "aggUnit" : [ "minute" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "Stack0"
                },
                "_hash" : 0.992718145730128,
                "postFuncBody" : "return value*4;"
              }, {
                "name" : "Active Energy (HR)",
                "type" : "timeseries",
                "label" : "Reservado",
                "color" : "#35b89b",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "steppedLine" : "false",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "minute" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.04674339896315738,
                "postFuncBody" : "return value*4;"
              }, {
                "name" : "Active Energy (FP)_day_max",
                "type" : "timeseries",
                "label" : "Fora Ponta",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "aggUnit" : [ "day" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "StackFP"
                },
                "_hash" : 0.8740100839991156,
                "postFuncBody" : "return value*4;"
              }, {
                "name" : "Active Energy (P)_day_max",
                "type" : "timeseries",
                "label" : "Ponta",
                "color" : "#ffab00",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "aggUnit" : [ "day" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "StackP"
                },
                "_hash" : 0.7462366332310844,
                "postFuncBody" : "return value*4;"
              }, {
                "name" : "Active Energy (FP)_month_max",
                "type" : "timeseries",
                "label" : "Fora Ponta",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "StackFP",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.09957695826280699,
                "postFuncBody" : "return value*4;"
              }, {
                "name" : "Active Energy (P)_month_max",
                "type" : "timeseries",
                "label" : "Ponta",
                "color" : "#ffab00",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "StackP",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.08277904512862033,
                "postFuncBody" : "return value*4;"
              } ]
            }, {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "9372d9cb-e9ba-c2a0-1b4c-4316d7a28718",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_demanda_fp_registrado",
                "type" : "timeseries",
                "label" : "Fora Ponta (fat)",
                "color" : "#3c9ad8",
                "settings" : {
                  "datasetHidden" : true,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : true,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.299445428311907,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_demanda_p_registrado",
                "type" : "timeseries",
                "label" : "Ponta (fat)",
                "color" : "#ffab00",
                "settings" : {
                  "datasetHidden" : true,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : true,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.8253995159396716,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1671506099000,
                  "endTimeMs" : 1671592499000
                },
                "interval" : 12342000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : true,
              "timeWindows" : [ "Hoje", "24H", "7D", "30D", "Mes", "12M", "Ano" ],
              "timeWindowsUnits" : "minute,minute,minute,day,day,month,month,month",
              "initialTimeWindow" : "Hoje",
              "showContractedDemandCurves" : true,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: false,\n    callback: callback\n}\n\nreturn ticks",
              "stacked" : true,
              "showRightScale" : true,
              "rightScaleTicks" : "ticks = {\n    beginAtZero: true\n}\n\nreturn ticks",
              "roundToUnit" : true,
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            decimal_places = label.includes('Temperatura') ? 1 : 0\n            suffix = label.includes('Temperatura') ? ' °C' : ' kW'\n            label += tooltipItem.yLabel.toLocaleString(\n                'pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: decimal_places,\n                    minimumFractionDigits: decimal_places\n                })+ suffix;\n            return label;\n        }\n        \nfilter = function (tooltipItem, data) {return tooltipItem.value != \"NaN\"}\n\nafterBody = function(tooltipItem, data) {\n    \n    try { \n        var PontaIndex = 0\n        var ForaPontaIndex = 0\n        var ContractIndex = 0\n        var ContractPontaIndex = 0\n        var ContractForaPontaIndex = 0\n    \n        for (var i=0;i<tooltipItem.length;i++) {\n            switch (tooltipItem[i].datasetIndex) {\n                case ctx.PontaIndex: PontaIndex = i; break;\n                case ctx.ForaPontaIndex: ForaPontaIndex = i; break;\n                case ctx.ContractIndex: ContractIndex = i; break;\n                case ctx.ContractPontaIndex: ContractPontaIndex = i; break;\n                case ctx.ContractForaPontaIndex: ContractForaPontaIndex = i; break;\n            }\n        }\n        var index = PontaIndex+ForaPontaIndex\n        \n        if (ctx.settings.showContractedDemandCurves && ctx.aggregationUnit == 'minute') {\n            let ultr = tooltipItem[index].yLabel - tooltipItem[ContractIndex].yLabel\n            if (ultr > tooltipItem[ContractIndex].yLabel*0.05) {\n                return 'Ultrapassagem: '+ultr.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0, minimumFractionDigits: 0})+' kW'\n            }\n        } else {\n            let ultrP = tooltipItem[PontaIndex].yLabel - tooltipItem[ContractPontaIndex].yLabel\n            let ultrFP = tooltipItem[ForaPontaIndex].yLabel - tooltipItem[ContractForaPontaIndex].yLabel\n            let s = []\n            if (ultrP > tooltipItem[ContractPontaIndex].yLabel*0.05) {\n                s.push('Ultrapassagem Ponta: '+ultrP.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0, minimumFractionDigits: 0})+' kW')\n            }\n            if (ultrFP > tooltipItem[ContractForaPontaIndex].yLabel*0.05) {\n                s.push('Ultrapassagem Fora Ponta: '+ultrFP.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0, minimumFractionDigits: 0})+' kW')\n            }\n            return s\n        }\n    }\n    catch {\n        return ''\n    }\n\n}\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n        footer: afterBody\n    }\n}\n\nreturn tooltip",
              "showOverFlowInRed" : true,
              "sortLegendByLabel" : false,
              "roundingMethod" : "nearest",
              "showRightScale2" : false
            },
            "title" : "Demanda (kW)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false,
            "widgetStyle" : {
              "padding" : "0px"
            },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "id" : "be21d64b-8dc3-3b57-4df8-27bf95f2fe20",
                "name" : "Comparações",
                "icon" : "compare",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "ssu_comp_demanda",
                "setEntityId" : true
              }, {
                "name" : "Relatório diário",
                "icon" : "description",
                "type" : "custom",
                "customFunction" : "// let $injector = widgetContext.$scope.$injector;\n// let customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nlet user = widgetContext.currentUser;\nlet userMail = user.sub\nlet url = 'https://solarhub.engecomp.io/openapi/report'\n\nif (widgetContext.currentTitle != \"Hoje\") {\n    window.alert('Selectione \"Hoje\" e navegue até a data desejada.')\n    return\n}\n\nvar stateParams = widgetContext.stateController.getStateParams();\n\nparams = {\n    use_case: \"ssu\",\n    start_date: widgetContext.timeWindow.minTime,\n    end_date: widgetContext.timeWindow.maxTime,\n    entity_name: entityName,\n    customer_name: stateParams.Curr_customer.entityName,\n    input_localtime: false,\n    output_localtime: true,\n    output_iso_8601: false,\n    template_url: \"https://solarhub.engecomp.io/res/relatorio_diario_v5.ods\",\n    email_to: userMail \n}\n\nsend(url+buildParams(params))\n\nfunction buildParams(params) {\n    var url = \"\"\n    for (var key in params) {\n        url = url+'&'+key+'='+params[key]\n    }\n    return url.replace(\"\\&\", \"?\")\n}\n\nfunction send(url) {\n    \n    debugger\n\n    var settings = {\n      \"url\": url,\n      \"method\": \"GET\",\n      \"timeout\": 0,\n      \"processData\": false,\n      //\"mimeType\": \"multipart/form-data\",\n      \"contentType\": false,\n      //\"data\": form,\n      \"headers\": {\n        \"token\": localStorage[\"jwt_token\"]\n      },\n      \"success\": function(data) {\n        if (data.link && data.link.length > 0) {\n            window.open(data.link,'_blank');\n        } \n        console.log(JSON.stringify(data))\n      },\n      \"error\": function(data) {\n        var message = 'Erro. Por favor contacte a Engecomp.'\n        widgetContext.showErrorToast(message, 3000)\n      }\n    };\n    \n    $.ajax(settings)\n\n}\n",
                "id" : "b5a38005-784c-aedf-96f6-2aa189bf76b9"
              } ]
            }
          },
          "id" : "96f15c3e-5a9e-4673-9c05-43913e8216cd",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "ad7ad91c-0457-40d9-ae48-ae0e627f32e5" : {
          "type" : "timeseries",
          "sizeX" : 38,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Active Energy",
                "type" : "timeseries",
                "label" : "Demanda Ativa",
                "color" : "#3c9ad8",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "minute" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 0,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "lineTension" : 0
                },
                "_hash" : 0.8267823156024017,
                "postFuncBody" : "return Math.round(value*4);"
              }, {
                "name" : "Reactive Energy",
                "type" : "timeseries",
                "label" : "Demanda Reativa",
                "color" : "#35b89b",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "dashedLine" : false,
                  "stackId" : "Stack1",
                  "aggUnit" : [ "minute" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 0,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "lineTension" : 0
                },
                "_hash" : 0.9018240557657211,
                "postFuncBody" : "return Math.round(value*4);"
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : true,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1662005699000,
                  "endTimeMs" : 1662092099000
                },
                "interval" : 5356800
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 50000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : false,
              "timeWindows" : [ "Hoje", "24H", "7D", "Mes", "30D" ],
              "showLeftScale" : true,
              "leftScaleTicks" : "callback = function(value, index, values) {\nreturn value.toLocaleString('pt-BR', {\nstyle: 'decimal',\nmaximumFractionDigits: 1,\nminimumSignificantDigits: 2\n});\n}\nticks = {\nbeginAtZero: true,\ncallback: callback\n}\nreturn ticks",
              "initialTimeWindow" : "Hoje",
              "timeWindowsUnits" : "minute,minute,minute,minute,minute",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            label += tooltipItem.yLabel.toLocaleString(\n                'pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 1,\n                    //minimumSignificantDigits: 3\n                });\n            return label;\n        }\n        \nfilter = function (tooltipItem, data) {return tooltipItem.value != \"NaN\"}\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n    }\n}\n\nreturn tooltip",
              "stacked" : true,
              "roundToUnit" : true,
              "showContractedDemandCurves" : false,
              "showOverFlowInRed" : false,
              "sortLegendByLabel" : false,
              "roundingMethod" : "nearest",
              "showRightScale" : false,
              "showRightScale2" : false
            },
            "title" : "Demanda Ativa (kW) x Reativa (kVAr)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "ad7ad91c-0457-40d9-ae48-ae0e627f32e5",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "418373ab-02b8-42fb-9c57-3cace62c3ea6" : {
          "type" : "timeseries",
          "sizeX" : 32,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Power Factor (P)",
                "type" : "timeseries",
                "label" : "Ponta",
                "color" : "#ffab00",
                "settings" : {
                  "contractedDemandCurves" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : "minute"
                },
                "_hash" : 0.6894148849634667,
                "postFuncBody" : "if (value > 0) {\n    value = 1 - value\n} else {\n    value = -(1-Math.abs(value))\n}\n\nreturn value;"
              }, {
                "name" : "Power Factor (FPC)",
                "type" : "timeseries",
                "label" : "FP Capacitivo",
                "color" : "#65baa7",
                "settings" : {
                  "contractedDemandCurves" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : "minute"
                },
                "_hash" : 0.7913818431000674,
                "postFuncBody" : "if (value > 0) {\n    value = 1 - value\n} else {\n    value = -(1-Math.abs(value))\n}\n\nreturn value;"
              }, {
                "name" : "Power Factor (FPI)",
                "type" : "timeseries",
                "label" : "FP Indutivo",
                "color" : "#3c9ad8",
                "settings" : {
                  "contractedDemandCurves" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : "minute"
                },
                "_hash" : 0.1446612084613561,
                "postFuncBody" : "if (value > 0) {\n    value = 1 - value\n} else {\n    value = -(1-Math.abs(value))\n}\n\nreturn value;"
              }, {
                "name" : "Power Factor Hour (FPC)",
                "type" : "timeseries",
                "label" : "FP Capacitivo",
                "color" : "#65baa7",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ "hour" ]
                },
                "_hash" : 0.2332962362985911,
                "postFuncBody" : "if (value > 0) {\n    value = 1 - value\n} else {\n    value = -(1-Math.abs(value))\n}\n\nreturn value;"
              }, {
                "name" : "Power Factor Hour (FPI)",
                "type" : "timeseries",
                "label" : "FP Indutivo",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ "hour" ]
                },
                "_hash" : 0.8561273964634124,
                "postFuncBody" : "if (value > 0) {\n    value = 1 - value\n} else {\n    value = -(1-Math.abs(value))\n}\n\nreturn value;"
              }, {
                "name" : "Power Factor Hour (P)",
                "type" : "timeseries",
                "label" : "Ponta",
                "color" : "#ffab00",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ "hour" ]
                },
                "_hash" : 0.017039524767175296,
                "postFuncBody" : "if (value > 0) {\n    value = 1 - value\n} else {\n    value = -(1-Math.abs(value))\n}\n\nreturn value;"
              }, {
                "name" : "dmmy1",
                "type" : "timeseries",
                "label" : "Limite Ind",
                "color" : "#e34844",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "stackId" : "Stack99",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "line",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ "minute", "hour" ],
                  "dummyDataSet" : true,
                  "dashedLine" : true
                },
                "_hash" : 0.6642636311785157,
                "postFuncBody" : "return 0.08;"
              }, {
                "name" : "dummy2",
                "type" : "timeseries",
                "label" : "Limite Cap",
                "color" : "#e34844",
                "settings" : {
                  "dummyDataSet" : true,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "stackId" : "Stack98",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "line",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ "minute", "hour" ],
                  "dashedLine" : true,
                  "datasetHidden" : true
                },
                "_hash" : 0.13881656343441828,
                "postFuncBody" : "return -0.08;"
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1671506099000,
                  "endTimeMs" : 1671592499000
                },
                "interval" : 1209000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : false,
              "timeWindows" : [ "Hoje", "24H", "7D" ],
              "timeWindowsUnits" : "minute,hour,hour",
              "initialTimeWindow" : "Hoje",
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "showRightScale" : false,
              "leftScaleTicks" : "x = function(value, index, values) {\n        if (value > 0) {\n            value = 1 - value\n            value = value.toLocaleString('pt-BR', {\n                style: 'decimal',\n                maximumFractionDigits: 2,\n                minimumFractionDigits: 2\n            }) + ' Ind'\n        } else if (value != 0) {\n            value = value + 1\n            value = value.toLocaleString('pt-BR', {\n                style: 'decimal',\n                maximumFractionDigits: 2,\n                minimumFractionDigits: 2\n            }) + ' Cap'\n        } else {\n            value = 1\n            value = value.toLocaleString('pt-BR', {\n                style: 'decimal',\n                maximumFractionDigits: 2,\n                minimumFractionDigits: 2\n            })\n        }\n        return value\n    }\n\nz = {\n    stepsize: 0.01,\n    suggestedMin: -0.02,\n    suggestedMax: 0.02,\n    callback: x\n}\n\nreturn z\n",
              "rightScaleTicks" : "callback = function(value, index, values) {\n    //if (value <= 1) {\n    //    return \"\"\n    //}\n    return value.toLocaleString('pt-BR', {\n        style: 'decimal',\n        maximumFractionDigits: 0,\n        //minimumSignificantDigits: 2\n    });\n}\n\nticks = {\n    beginAtZero: true,\n    callback: callback\n}\n\nreturn ticks",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n    var label = data.datasets[tooltipItem.datasetIndex].label || '';\n    if (label) {\n        label += ': ';\n    }\n\n    value = tooltipItem.yLabel\n\n    if (label.search('UFER') == -1) {\n        if (value > 0) {\n            value = 1 - value\n            value = value.toLocaleString('pt-BR', {\n                style: 'decimal',\n                maximumFractionDigits: 3,\n                minimumFractionDigits: 3\n            }) + ' Ind'\n        } else if (value != 0) {\n            value = value + 1\n            value = value.toLocaleString('pt-BR', {\n                style: 'decimal',\n                maximumFractionDigits: 3,\n                minimumFractionDigits: 3\n            }) + ' Cap'\n        } else {\n            value = 1\n            value = value.toLocaleString('pt-BR', {\n                style: 'decimal',\n                maximumFractionDigits: 3,\n                minimumFractionDigits: 3\n            })\n        }\n    } else {\n        value = value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumFractionDigits: 1\n        })\n    }\n\n    label += value\n    return label;\n}\n\nfilter = function (tooltipItem, data) {\n    return tooltipItem.value != \"NaN\" &&  data.datasets[tooltipItem.datasetIndex].label.search('Limite') == -1\n}\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback\n    }\n}\n\n\nreturn tooltip",
              "stacked" : true,
              "roundToUnit" : true,
              "showContractedDemandCurves" : false,
              "showOverFlowInRed" : false,
              "sortLegendByLabel" : false,
              "roundingMethod" : "nearest",
              "showRightScale2" : false
            },
            "title" : "Fator de Potência",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "418373ab-02b8-42fb-9c57-3cace62c3ea6",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "ed5ea746-e49e-c22c-16e8-fabb52293153" : {
          "type" : "latest",
          "sizeX" : 13,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "c887f65b-386b-db62-7d93-8ff5fe5ecdcd",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh_average_year",
                "type" : "timeseries",
                "label" : "fat_projetado",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5690961344221306
              }, {
                "name" : "consumo_projetado_mwm_mes",
                "type" : "attribute",
                "label" : "rtu_projetado",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.7942172295451368
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<script>\n    \n    var fat = \"${fat_projetado}\";\n    var rtu = \"${rtu_projetado}\"; \n\n    fat = parseFloat(fat) || 0\n    rtu = parseFloat(rtu) || 0\n\n    var fat = fat/(365*24)/1000\n    var x = fat+rtu;\n    //document.getElementById(\"demo\").innerHTML = fim\n    document.getElementById(\"proj\").innerHTML = x.toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: 3, maximumFractionDigits: 3})+' MWm';\n</script>\n<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\" id=\"proj\"></div><br>\n    </section>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Volume de Energia",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "id" : "9590d1d2-6cb0-9ecc-cadb-10ced812040f",
                "name" : "Benchmarking",
                "icon" : "iso",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "ssu_benchmarking",
                "setEntityId" : false
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "ed5ea746-e49e-c22c-16e8-fabb52293153",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "00cc6079-f149-3032-1bdf-e0ebbb932221" : {
          "type" : "latest",
          "sizeX" : 15,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "c887f65b-386b-db62-7d93-8ff5fe5ecdcd",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pe_custo_anual",
                "type" : "attribute",
                "label" : "pe_custo_anual",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.29810837747938357,
                "postFuncBody" : "value = Number(value)\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if ( value > 0 ) {\n        return \"R$ \"+ value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n    }\n    return \"-x-\";\n}\nreturn \" \";\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${pe_custo_anual}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Gasto Anual",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "00cc6079-f149-3032-1bdf-e0ebbb932221",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "e36e7c1a-ae47-f7ca-f102-e2bef2a2276a" : {
          "type" : "latest",
          "sizeX" : 21,
          "sizeY" : 29,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "serial",
                "type" : "attribute",
                "label" : "serial",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.2480594686375368,
                "decimals" : 0,
                "postFuncBody" : "return \"Remota: \"+value;"
              }, {
                "name" : "latitude",
                "type" : "attribute",
                "label" : "latitude",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.4835535055608968
              }, {
                "name" : "longitude",
                "type" : "attribute",
                "label" : "longitude",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.5324887104274882
              }, {
                "name" : "last_interval_wh",
                "type" : "attribute",
                "label" : "last_interval_wh",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.2071656997465714,
                "units" : "",
                "decimals" : null,
                "postFuncBody" : "function formattedNumber1(x) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 1}); \n}\nfunction formattedNumber0(x) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0});\n}\n\nif (value > 250) {\n    return formattedNumber0(value*4)+' kW';\n}\n\nreturn formattedNumber1(value*4)+' kW';"
              }, {
                "name" : "last_interval_pf",
                "type" : "attribute",
                "label" : "last_interval_pf",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.736267887298353,
                "units" : "",
                "decimals" : null,
                "postFuncBody" : "function formattedNumber(x) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 2, minimumFractionDigits: 2}); \n}\n\nif (value > 0) {\n    post = \" (Ind)\"\n} else {\n    post = \" (Cap)\"\n}\n\nreturn formattedNumber(value)+post;"
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.16456604186865653,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"-- SEM NOME --\"    \n}\nreturn nome;"
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "classe_tensao",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.41833777839022757,
                "postFuncBody" : "var dict = {\n    0:\"?Classe?\",\n    1:\"A1\",\n    2:\"A2\",\n    3:\"A3\",\n    4:\"A3a\",\n    5:\"A4\",\n    6:\"AS\",\n    7:\"B1\",\n    8:\"B2\",\n    9:\"B3\"\n};\nreturn dict[value];"
              }, {
                "name" : "enq_tarifario",
                "type" : "attribute",
                "label" : "tarifa",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.08184931893109293,
                "postFuncBody" : "var dict = {\n    0:\"?Tarifa?\",\n    1:\"Azul\",\n    2:\"Verde\",\n    3:\"Convencional\",\n    4:\"Branca\"\n};\nreturn dict[value];\n"
              }, {
                "name" : "status_cliente",
                "type" : "attribute",
                "label" : "status_cliente",
                "color" : "#03a9f4",
                "settings" : { },
                "_hash" : 0.6243039221706308,
                "postFuncBody" : "var dict = {\n    0: \"?Status? \",\n    1:\"Cativo\",\n    2:\"Livre\"\n};\nreturn dict[value];"
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "utility",
                "color" : "#ff9800",
                "settings" : { },
                "_hash" : 0.09683687422599174,
                "postFuncBody" : "var dict = {\n    0: \"?Distribuidora?\",\n    1: \"CPFL PIRATININGA\",\n    2: \"ENEL SP\",\n    3: \"LIGHT\",\n    4: \"COPEL\",\n    5: \"CEMIG\",\n    6: \"ELEKTRO\",\n    7: \"CELPE\",\n    8: \"CEA AMAPA\",\n    9: \"COELBA\",\n    10: \"CEB\",\n    11: \"COSERN\",\n    12: \"CPFL PAULISTA\",\n    13: \"CEEE\",\n    14: \"EDP ES\",\n    15: \"EDP SP\",\n    16: \"CELESC\",\n    17: \"ELETROBRAS AL\",\n    18: \"ELETROBRAS AM\",\n    19: \"ENEL CE COELCE\",\n    20: \"ENEL RJ AMPLA\",\n    21: \"CELG\",\n    22: \"ENERGISA ACE\",\n    23: \"ENERGISA MG\",\n    24: \"ENERGISA MSL\",\n    25: \"ENERGISA MT\",\n    26: \"ENERGISA PB\",\n    27: \"ENERGISA BORBOREMA\",\n    28: \"ENERGISA RJ\",\n    29: \"ENERGISA RO\",\n    30: \"ENERGISA SE\",\n    31: \"ENERGISA SUL-SE\",\n    32: \"ENERGISA TO\",\n    33: \"EQUATORIAL MA\",\n    34: \"EQUATORIAL PI\",\n    35: \"CELPA\",\n    36: \"RGE SUL\",\n    37: \"CPFL JAGUARI\",\n    38: \"CPFL LESTE PAULISTA\",\n    39: \"CPFL MOCOCA\",\n    40: \"CPFL SANTA CRUZ\",\n    41: \"CPFL SUL PAULISTA\",\n    42: \"RGE\" \n};\nreturn dict[value];"
              }, {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#03a9f4",
                "settings" : { },
                "_hash" : 0.525791852260862,
                "postFuncBody" : "return \"UC: \" + value;"
              } ],
              "entityAliasId" : "ea337dd3-3e20-573c-3268-117e79aee26d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "fitMapBounds" : true,
              "latKeyName" : "latitude",
              "lngKeyName" : "longitude",
              "showLabel" : false,
              "label" : "${description}",
              "tooltipPattern" : "<b>${description}</b><br/>\n${UC}<br/>\n<br/>\n<b>Distribuidora:</b> ${utility}<br/>\n<b>Enq.Tarifário:</b> ${classe_tensao} ${tarifa}<br/>",
              "markerImageSize" : 34,
              "useColorFunction" : false,
              "markerImages" : [ "tb-image;/api/images/system/map_marker_image_0.png", "tb-image;/api/images/system/map_marker_image_1.png", "tb-image;/api/images/system/map_marker_image_2.png", "tb-image;/api/images/system/map_marker_image_3.png" ],
              "useMarkerImageFunction" : true,
              "colorFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'colorpin') {\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120 * 100;\n\t    return tinycolor.mix('blue', 'red', amount = percent).toHexString();\n\t}\n\treturn 'blue';\n}\n",
              "markerImageFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'thermomether') {\n\tvar res = {\n\t    url: images[0],\n\t    size: 40\n\t}\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120;\n\t    var index = Math.min(3, Math.floor(4 * percent));\n\t    res.url = images[index];\n\t}\n\treturn res;\n}",
              "color" : "#fe7569",
              "mapProvider" : "OpenStreetMap.Mapnik",
              "showTooltip" : true,
              "autocloseTooltip" : true,
              "tooltipFunction" : "var deviceType = dsData[dsIndex]['deviceType'];\r\nif (typeof deviceType !== undefined) {\r\n    if (deviceType == \"energy meter\") {\r\n        return '<b>${alias}</b><br/><b>Energy:</b> ${energy:2} kWt<br/>';\r\n    } else if (deviceType == \"thermometer\") {\r\n        return '<b>${alias}</b><br/><b>Temperature:</b> ${temperature:2} °C<br/>';\r\n    }\r\n}",
              "labelFunction" : "var deviceType = dsData[dsIndex]['deviceType'];\r\nif (typeof deviceType !== undefined) {\r\n    if (deviceType == \"energy meter\") {\r\n        return '<span style=\"color:orange;\">${alias}, ${energy:2} kWt</span>';\r\n    } else if (deviceType == \"thermometer\") {\r\n        return '<span style=\"color:blue;\">${alias}, ${temperature:2} °C</span>';\r\n    }\r\n}",
              "polygonKeyName" : "coordinates",
              "polygonOpacity" : 0.5,
              "polygonStrokeOpacity" : 1,
              "polygonStrokeWeight" : 1,
              "customProviderTileUrl" : "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
              "showTooltipAction" : "hover",
              "useLabelFunction" : false,
              "defaultCenterPosition" : "0,0",
              "zoomOnClick" : true,
              "showCoverageOnHover" : true,
              "animate" : true,
              "maxClusterRadius" : 80,
              "removeOutsideVisibleBounds" : true,
              "useClusterMarkers" : true,
              "chunkedLoading" : true,
              "provider" : "openstreet-map",
              "mapPageSize" : 16384
            },
            "title" : "Unidades Monitoradas",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : {
              "markerClick" : [ {
                "name" : "Detalhes do ponto",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "faturas_site",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Fat_BT",
                "openRightLayout" : false,
                "id" : "d3e01a61-d917-ce67-7582-c2db686ca4ce"
              } ],
              "tooltipAction" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "e36e7c1a-ae47-f7ca-f102-e2bef2a2276a",
          "typeFullFqn" : "system.maps_v2.openstreetmap"
        },
        "13478828-ffbe-11e9-8d71-362b9e155667" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "last_interval_wh",
                "type" : "attribute",
                "label" : "last_interval_wh",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.3149444193856531,
                "postFuncBody" : "function formattedNumber1(x) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 1}); \n}\nfunction formattedNumber0(x) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0});\n}\n\nif (value > 250) {\n    return formattedNumber0(value*4)+' kW';\n}\n\nreturn formattedNumber1(value*4)+' kW';"
              }, {
                "name" : "last_interval_tou",
                "type" : "attribute",
                "label" : "last_interval_tou",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.1446508259518281
              }, {
                "name" : "last_interval_ts",
                "type" : "attribute",
                "label" : "last_interval_ts",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.036149217944347445,
                "postFuncBody" : "return moment.unix(value/1000).format('DD-MMM HH:mm');\n"
              } ],
              "entityAliasId" : "0b4da799-9c06-9418-2fa4-bf9afe91cc2e"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${last_interval_wh}</div><br>\n        <footer>\n            <div class=\"additional-info\">${last_interval_ts}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Potência",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "13478828-ffbe-11e9-8d71-362b9e155667",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "7ee00413-e562-796e-7f35-2d014ff8706a" : {
          "type" : "latest",
          "sizeX" : 43,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "weatherURL",
                "type" : "attribute",
                "label" : "weatherURL",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.013806468079423428
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.4519842899633788
              } ],
              "entityAliasId" : "0b4da799-9c06-9418-2fa4-bf9afe91cc2e"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgb(0, 0, 0)",
            "padding" : "0",
            "settings" : {
              "theme" : "pure"
            },
            "title" : "Weather Widget",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "margin" : "",
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "7ee00413-e562-796e-7f35-2d014ff8706a",
          "typeFullFqn" : "tenant.teste.weather_widget_rodolfo_azevedo"
        },
        "e5be5b81-a710-f764-8199-e633f56a36eb" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy_day_sum",
                "type" : "timeseries",
                "label" : "valor",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.9443010217618903,
                "postFuncBody" : "function numberWithCommas(x, y, z) {\n    return x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z});\n}\n\nvar d = new Date();\nvar h = d.getHours() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (h*3600)) { \n\n    // formata o valor a ser apresentado\n    if (value > 100000) {\n        return numberWithCommas(value/1000, 1, 2) + \" MWh\";\n    }\n    return numberWithCommas(value, 0, 0) + \" kWh\";\n\n}\nreturn \" \";"
              } ],
              "entityAliasId" : "0b4da799-9c06-9418-2fa4-bf9afe91cc2e"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Energia Acum. Hoje",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "e5be5b81-a710-f764-8199-e633f56a36eb",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "2cad580f-3833-502f-1541-706829c9e0b4" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy_month_sum",
                "type" : "timeseries",
                "label" : "valor",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.12369353360811997,
                "postFuncBody" : "function numberWithCommas(x, y, z) {\n    return x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z});\n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value > 100000) {\n        return numberWithCommas(value/1000, 1, 2) + \" MWh\";\n    }\n    return numberWithCommas(value, 0, 0) + \" kWh\";\n\n}\nreturn \" \";\n"
              } ],
              "entityAliasId" : "0b4da799-9c06-9418-2fa4-bf9afe91cc2e"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Energia Acum. Mês",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "2cad580f-3833-502f-1541-706829c9e0b4",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "4c0f4d1e-152c-4655-9443-c7f46a59223a" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "0b4da799-9c06-9418-2fa4-bf9afe91cc2e",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "consumo_projetado_kwh",
                "type" : "attribute",
                "label" : "valor_mwh",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.6347023344548481,
                "postFuncBody" : "function numberWithCommas(x, y, z) {\n    return x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z});\n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value > 100000) {\n        return numberWithCommas(value/1000, 1, 2) + \" MWh\";\n    }\n    return numberWithCommas(value, 0, 0) + \" kWh\";\n\n}\nreturn \" \";",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "consumo_projetado_mwm",
                "type" : "attribute",
                "label" : "valor_mwm",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.19835687776652144,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function numberWithCommas(x, y, z) {\n    return x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z});\n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    return numberWithCommas(Number(value), 2, 3) + \" MWm\";\n    \n}\nreturn \" \";"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor_mwh}<br>${valor_mwm}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Proj. Geração no Mês",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "4c0f4d1e-152c-4655-9443-c7f46a59223a",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "23c678a7-bdb9-70b3-56d1-b6adab0f2768" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "0b4da799-9c06-9418-2fa4-bf9afe91cc2e",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "energy_average_year_rtu",
                "type" : "timeseries",
                "label" : "valor_mwh",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.6383952871895362,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function numberWithCommas(x, y, z) {\n    return x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z});\n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value > 100000) {\n        return numberWithCommas(value/1000, 1, 2) + \" MWh\";\n    }\n    return numberWithCommas(value, 0, 0) + \" kWh\";\n\n}\nreturn \" \";"
              }, {
                "name" : "energy_average_year_rtu",
                "type" : "timeseries",
                "label" : "valor_mwm",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.829965828852544,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function numberWithCommas(x, y, z) {\n    return x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z});\n}\n\nvar d = new Date();\nvar n = d.getDate() + 30;\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    return numberWithCommas(value/(365*24*1000), 2, 3) + \" MWm\";\n    \n}\nreturn \" \";"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor_mwh}<br>${valor_mwm}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Proj. Geração Anual",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "23c678a7-bdb9-70b3-56d1-b6adab0f2768",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "d09aee81-2deb-397c-0398-312279e0dfb4" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "0b4da799-9c06-9418-2fa4-bf9afe91cc2e",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "consumo_projetado_kwh",
                "type" : "attribute",
                "label" : "energia_old",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.6519622921390695,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "potencia_nominal",
                "type" : "attribute",
                "label" : "potencia",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.4999578091320378
              }, {
                "name" : "last_interval_ts",
                "type" : "attribute",
                "label" : "last_interval_ts",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.16907522713323253
              }, {
                "name" : "consumo_projetado_kwh",
                "type" : "attribute",
                "label" : "consumo_ts",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.8776116783294026,
                "postFuncBody" : "return time;"
              }, {
                "name" : "energy_average_year_rtu",
                "type" : "timeseries",
                "label" : "energia",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.9664340619243921,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n",
              "cardHtml" : "<script>\n    //var ini = moment().startOf('month')\n    //var fim = moment(${last_interval_ts},'x')\n    \n    var d = new Date();\n    //var d = moment(${consumo_ts},'x')\n    var month = new Array();    //0 a 11\n    month[0] = 31;\n    month[1] = 28;\n    month[2] = 31;\n    month[3] = 30;\n    month[4] = 31;\n    month[5] = 30;\n    month[6] = 31;\n    month[7] = 31;\n    month[8] = 30;\n    month[9] = 31;\n    month[10] = 30;\n    month[11] = 31;\n    var dias = month[d.getMonth()];\n//    var x = ${energia}/(${potencia}*24*dias);\n    var x = ${energia}/(${potencia}*24*365);\n\n    //var horas = fim.diff(ini, 'hours', true)\n    //var x = ${energia}/(${potencia}*horas);\n    //document.getElementById(\"demo\").innerHTML = fim\n    document.getElementById(\"demo\").innerHTML = x.toLocaleString('pt-Br',{style: \"percent\", minimumFractionDigits: 1, maximumFractionDigits: 1});\n</script>\n<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div id=\"demo\" class=\"value\"></div><br>\n    </section>\n</div>"
            },
            "title" : "Fator de Capacidade",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "d09aee81-2deb-397c-0398-312279e0dfb4",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "558b9c59-3692-cfa0-daf0-8e7856361031" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 23,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgba(255, 255, 255, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Unidade",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Usinas do Cliente",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "entityAliasId" : "61e5f272-1359-514c-138e-298bc6b8439e",
              "dataKeys" : [ {
                "name" : "name",
                "type" : "entityField",
                "label" : "Name",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.6495249840744706
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "Remota",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "30%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.8138994964358175
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            } ],
            "enableDataExport" : false,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "name" : "update state",
                "icon" : "more_horiz",
                "type" : "custom",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\nlet entityRelationService = $injector.get(widgetContext.servicesMap.get('entityRelationService'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar params = widgetContext.stateController.getStateParams();\nparams.Curr_Ger = {\n    entityId: entityId,\n    entityName: entityName\n};\n\nentityRelationService.findInfoByTo(entityId).subscribe(\n    (relations) => {\n        if (relations.length > 0 && relations[0].from.entityType == 'ASSET') {\n            params.Curr_Usina= {\n                entityId: relations[0].from,\n                entityName: relations[0].fromName\n            };\n        }\n        widgetContext.stateController.updateState('geracao_site', params, false);\n    }\n);\n",
                "id" : "925fe2e5-2106-e7bc-d7f5-45dae8605eac"
              } ],
              "rowDoubleClick" : [ ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "558b9c59-3692-cfa0-daf0-8e7856361031",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "3e53af92-8421-4c1b-bf09-87a42fc6955e" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.08753771580722458,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"-- SEM NOME --\"    \n}\nreturn nome;"
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.6470100718673657
              }, {
                "name" : "estado",
                "type" : "attribute",
                "label" : "estado",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.9814548061951833
              }, {
                "name" : "potencia_nominal",
                "type" : "attribute",
                "label" : "potencia",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.8735317887944611,
                "postFuncBody" : "valor = value\nif (valor > 0) {\n    return \"Potência: \" + valor + \" kW\";\n} else {\n    return \"\";\n}"
              } ],
              "entityAliasId" : "0b4da799-9c06-9418-2fa4-bf9afe91cc2e"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgb(255, 255, 255)",
            "padding" : "10px",
            "settings" : {
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value {\n    font-size: 1.7vh;\n    font-weight: 300;\n}\n\n.card .title {\n    font-size: 2.0vh;\n    font-weight: bold;\n    color: #bdfbf8;\n}\n\n.card .description {\n    font-size: 14px;\n    color: #999;\n}\n",
              "cardHtml" : "<div class='card'>\n    <div class='content'>\n        <div class='column'>\n            <div class='title'>\n                ${description}\n            </div>    \n            <div class='value'>\n                ${entityName}<br />\n                ${cidade} ${estado}<br />\n                ${potencia}\n            </div>    \n        </div>\n    </div>\n</div>\n"
            },
            "title" : "id_site_ger_sem_config",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "id" : "caf42e56-b124-5229-4803-071f6dca4456",
                "name" : "Exportação de Dados",
                "icon" : "file_download",
                "type" : "customPretty",
                "customHtml" : "<!DOCTYPE html>\n<head>\n    <style>\n    </style>\n</head>\n<html ng-strict-di>\n    <body>\n        <md-dialog aria-label=\"{{ vm.importTitle | translate }}\">\n            <form name=\"dialog.theForm\">\n                <md-toolbar>\n                    <div class=\"md-toolbar-tools\">\n                        <h2 translate>{{ vm.importTitle }}</h2>\n                        <span flex></span>\n                        <md-button class=\"md-icon-button\" ng-click=\"vm.cancel()\">\n                            <ng-md-icon icon=\"close\" aria-label=\"{{ \\'dialog.close\\' | translate }}\"></ng-md-icon>\n                        </md-button>\n                    </div>\n                </md-toolbar>\n                <md-progress-linear class=\"md-warn\" md-mode=\"indeterminate\" ng-disabled=\"!$root.loading\" ng-show=\"$root.loading\\\"></md-progress-linear>\n                <span style=\"min-height: 5px;\" flex=\"\" ng-show=\"!$root.loading\"></span>\n                <md-dialog-content style=\"padding: 20px 20px 20px 20px;\" ng-cloak=\"\">\n\n                            <md-input-container layout-fill>\n                                <label>Integração</label>\n                                <md-select name=\"integracao\" ng-model=\"vm.integracao\" ng-change=\"vm.change()\">\n                                  <md-option value=\"all\">15 minutos</md-option>\n                                  <md-option ng-disabled=\"vm.layout == 'simplificado'\" value=\"hour\">1 hora</md-option>\n                                  <md-option ng-disabled=\"vm.layout == 'simplificado'\" value=\"day\">1 dia</md-option>\n                                  <md-option ng-disabled=\"vm.layout == 'simplificado'\" value=\"month\">1 mês</md-option>\n                                </md-select><br>\n                            </md-input-container>\n\n                            <md-input-container layout-fill>\n                                <label>Layout</label>\n                                <md-select name=\"layout\" ng-model=\"vm.layout\">\n                                  <md-option value=\"completo\">Completo</md-option>\n                                  <md-option ng-disabled=\"vm.integracao != 'all'\" value=\"simplificado\">Simplificado</md-option>\n                                </md-select><br>\n                            </md-input-container>\n\n                             <div layout=\"column\" layout-gt-sm=\"row\" layout-padding ng-cloak>\n                                <div layout=\"column\" flex-order=\"1\" flex-order-gt-sm=\"0\">\n                                    <md-subheader>Start Date</md-subheader>\n                                    <input type=\"date\" ng-model=\"vm.sd\" ng-change=\"vm.change()\">\n                                </div>\n                                \n                                <div layout=\"column\" flex-order=\"1\" flex-order-gt-sm=\"1\">\n                                    <md-subheader>End Date</md-subheader>\n                                    <input type=\"date\" ng-model=\"vm.ed\" ng-change=\"vm.change()\">\n                                </div>\n                                <div layout=\"column\" flex-order=\"0\" flex-order-gt-sm=\"2\">\n                                    <md-subheader>Dates</md-subheader>\n                                    <div>\n                                        <label style=\"font-size: x-small;\">Start</label>\n                                        <div>{{vm.sd | date:shortDate}}</div>\n                                    </div>\n                                    <div>\n                                        <label style=\"font-size: x-small;\">End</label>\n                                        <div>{{vm.ed | date:shortDate}}</div>\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            \n                            <label>\n                                Tamanho estimado: {{ vm.linhas }} linhas<br><br>\n                            </label>\n                            \n                            <label>\n                                <input type=\"checkbox\" ng-model=\"vm.async\"> Envio por email (recomendado)\n                            </label>\n                            \n                            <div id=\"form\"></div>\n\n                </md-dialog-content>\n                <md-dialog-actions layout=\"row\">\n                    <span flex></span>\n                    <md-button ng-click= \"vm.send()\" type=\"submit\" class=\"md-raised md-primary\">ENVIAR</md-button>\n                    <md-button ng-disabled=\"$root.loading\" ng-click=\"vm.cancel()\" style=\"margin-right:20px;\">CANCELAR</md-button>\n                </md-dialog-actions>\n            </form>\n        </md-dialog>\n    </body>\n</html>",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form md-input-container {\n    padding-right: 10px;\n}\n\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body md-autocomplete-wrap md-input-container {\n    height: 30px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n\n.relations-list.old-relations tb-entity-select tb-entity-autocomplete button {\n    display: none;\n} \n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form md-input-container {\n    padding-right: 10px;\n}\n\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body md-autocomplete-wrap md-input-container {\n    height: 30px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\nvar\n    $mdDialog = $injector.get('$mdDialog'),\n    $mdToast = $injector.get('$mdToast'),\n    $document = $injector.get('$document');\n    userService = $injector.get('userService');\n\nvar user = userService.getCurrentUser();\nvar userMail = user.sub\n\n//var url = 'https://solarhub.engecomp.io/data_export_form'\nvar url = 'https://solarhub.engecomp.io/be/data_export/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\n\npayload = createJSON();\n\nshowInfoDialog()\n\nfunction createJSON() {\n    var payload = {};\n    payload.devices = [];\n    payload.email = userMail\n\n    \n    for (var i = 0; i < widgetContext.data.length; i++) {\n        var item = {};\n        if (widgetContext.data[i].dataKey.name == 'description') {\n            item.id = widgetContext.data[i].datasource.name\n            \n            if (typeof widgetContext.data[i].data[0] === 'undefined') {\n                item.name = \"\"\n            } else {\n                item.name = widgetContext.data[i].data[0][1]\n            }\n            \n            payload.devices.push(item)\n        }\n    }\n    return payload\n}\n\n\nfunction showInfoDialog() {\n    \n\n    $mdDialog.show({\n        controller: ['$mdDialog',\n            InfoDialogController\n        ],\n        controllerAs: 'vm',\n        scope: widgetContext.$scope,\n        preserveScope: true,\n        template: htmlTemplate,\n        parent: angular.element($document[0].body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        fullscreen: true\n    })\n}\n\n\n\nfunction InfoDialogController($mdDialog) {\n    let vm = this;\n    vm.importTitle = 'Exportação de dados'\n\n    debugger;\n    vm.ed = moment.utc().startOf('day').toDate();\n    vm.sd = moment(vm.ed).subtract(1, 'month').toDate();\n    vm.integracao = \"all\"\n    vm.layout = \"simplificado\"\n    vm.async = true \n\n    vm.cancel = () => {\n        $mdDialog.cancel();\n    }\n\n    vm.change = () => {\n        \n        var diffTime = Math.abs(vm.ed - vm.sd);\n        var diffMonths = diffTime / (1000 * 60 * 60 * 24 * 30)\n        var linhasPorMes = 0\n        \n        /*\n        if (vm.layout == \"simplificado\") {\n            vm.integracao = \"all\"\n        }\n        \n        if (vm.integracao != \"all\") {\n            vm.layout = \"completo\"\n        }*/\n        \n        switch(vm.integracao){\n            case \"all\": \n                linhasPorMes = 24*4*30\n                break;\n            case \"hour\":\n                linhasPorMes = 24*30\n                break;\n            case \"day\":\n                linhasPorMes = 30\n                break;\n            case \"month\":\n                linhasPorMes = 1\n                break;   \n        }\n        \n        vm.linhas = Math.ceil(linhasPorMes * diffMonths * payload.devices.length)\n        \n        if (vm.linhas < 5000) {\n            vm.async = false\n        } else {\n            vm.async = true\n        }\n        \n    }\n    \n    vm.change()\n\n\n    vm.send = () => {\n\n        let formData = new FormData();\n        \n        sd = moment(vm.sd).format('YYYY-MM-DD');\n        ed = moment(vm.ed).format('YYYY-MM-DD');\n        \n        payload.start_date = sd\n        payload.end_date = ed\n        payload.interval = vm.integracao\n        payload.output_format = \"csv\"\n        payload.layout = vm.layout\n        payload.getnow = !vm.async\n        \n        formData.append(\"payload\", JSON.stringify( payload ))\n\n        var fetchParams = { method: \"POST\", body: formData }\n        \n        debugger;\n        fetch(url, fetchParams).then(function(r) {\n            if (r.status == 200) {\n\n                return r.json().then(\n                    function(data) {\n                        if (data.link && data.link.length > 0) {\n                            window.open(data.link,'_blank');\n                        }\n                        else {\n                            $mdToast.show(\n                                $mdToast.simple()\n                                .textContent('Sucesso. Um link será enviado para o seu e-mail')\n                                .position(\"top left\")\n                                .hideDelay(3000)\n                            )\n                        }\n                    })\n            }\n            else {\n                $mdToast.show(\n                    $mdToast.simple()\n                    .textContent('Erro. Por favor contacte a Engecomp.')\n                    .position(\"top left\")\n                    .hideDelay(3000)\n                )\n            }\n            \n        }); \n        \n\n        \n        vm.cancel();  \n        \n    }\n\n\n}\n\n\ntoastHTML = `\n<md-toast>\n  <span class=\"md-toast-text\" flex>Sucesso. Um link será enviado para o seu e-mail.</span>\n  <md-button class=\"md-highlight\" ng-click=\"openMoreInfo($event)\">\n    More info\n  </md-button>\n  <md-button ng-click=\"closeToast()\">\n    Close\n  </md-button>\n</md-toast>\n`\n\n"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "3e53af92-8421-4c1b-bf09-87a42fc6955e",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "71c29f1d-41cc-1c9f-6a44-216a34da6c77" : {
          "type" : "timeseries",
          "sizeX" : 18,
          "sizeY" : 35,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy_hour_sum",
                "type" : "timeseries",
                "label" : "Data/Hora",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return moment(value).format('DD/MM/YYYY hh:mm')"
                },
                "_hash" : 0.09356051866408621,
                "postFuncBody" : "return time;"
              }, {
                "name" : "Active Energy_hour_sum",
                "type" : "timeseries",
                "label" : "Geração (kWh)",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return (value).toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0});\n}\nreturn \"\";"
                },
                "_hash" : 0.6083084923741058
              } ],
              "entityAliasId" : "0b4da799-9c06-9418-2fa4-bf9afe91cc2e"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 604800000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 20000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : false,
              "defaultPageSize" : 170
            },
            "title" : "Geração (kWh) a cada hora",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "71c29f1d-41cc-1c9f-6a44-216a34da6c77",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "79fd6aaa-0e7a-369a-db68-676907d21bb7" : {
          "type" : "timeseries",
          "sizeX" : 18,
          "sizeY" : 35,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy_day_sum",
                "type" : "timeseries",
                "label" : "Data",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return moment(value).format('DD/MM/YYYY')"
                },
                "_hash" : 0.5864488054988719,
                "postFuncBody" : "return time;"
              }, {
                "name" : "Active Energy_day_sum",
                "type" : "timeseries",
                "label" : "Geração (kWh)",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return (value).toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0});\n}\nreturn \"\";"
                },
                "_hash" : 0.07991026517159394
              } ],
              "entityAliasId" : "0b4da799-9c06-9418-2fa4-bf9afe91cc2e"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 2678400000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 20000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : false,
              "defaultPageSize" : 31
            },
            "title" : "Geração (kWh) a cada dia",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "enableDataExport" : true,
            "mobileOrder" : 12,
            "mobileHeight" : 4,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "79fd6aaa-0e7a-369a-db68-676907d21bb7",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "1c69cc87-b98c-465c-e7fb-5358cca6b65f" : {
          "type" : "timeseries",
          "sizeX" : 18,
          "sizeY" : 35,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy_month_sum",
                "type" : "timeseries",
                "label" : "Mês",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return moment(value).format('MMM/YY')"
                },
                "_hash" : 0.8242428611683277,
                "postFuncBody" : "return time;"
              }, {
                "name" : "Active Energy_month_sum",
                "type" : "timeseries",
                "label" : "Geração (kWh)",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return (value).toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0});\n}\nreturn \"\";"
                },
                "_hash" : 0.09262932493282139
              } ],
              "entityAliasId" : "0b4da799-9c06-9418-2fa4-bf9afe91cc2e"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 31536000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 20000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : false,
              "defaultPageSize" : 20
            },
            "title" : "Geração (kWh) a cada mês",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "1c69cc87-b98c-465c-e7fb-5358cca6b65f",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "1b8377f4-57b0-9df0-5e22-862e697f043b" : {
          "type" : "static",
          "sizeX" : 54,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Dados da Unidade</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 24px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "Info da Unidade",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "1b8377f4-57b0-9df0-5e22-862e697f043b",
          "typeFullFqn" : "system.cards.html_card"
        },
        "bd2eb728-d5ac-0738-d512-cfa92bc965ad" : {
          "type" : "static",
          "sizeX" : 20,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Coordenadas do Site</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 24px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "Label Coordenadas",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "bd2eb728-d5ac-0738-d512-cfa92bc965ad",
          "typeFullFqn" : "system.cards.html_card"
        },
        "27d19f5a-c3dc-af7e-ee47-7d21bd7e8ae1" : {
          "type" : "latest",
          "sizeX" : 20,
          "sizeY" : 13,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "latitude",
                "type" : "attribute",
                "label" : "latitude",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.7978682596412687
              }, {
                "name" : "longitude",
                "type" : "attribute",
                "label" : "longitude",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.3895649100631746
              } ],
              "entityAliasId" : "0b4da799-9c06-9418-2fa4-bf9afe91cc2e"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "fitMapBounds" : true,
              "latKeyName" : "latitude",
              "lngKeyName" : "longitude",
              "showLabel" : false,
              "label" : "${entityName}",
              "tooltipPattern" : "<b>${entityName}</b><br/><br/><b>Latitude:</b> ${latitude:7}<br/><b>Longitude:</b> ${longitude:7}<br/><b>Temperature:</b> ${temperature} °C<br/><small>See advanced settings for details</small>",
              "markerImageSize" : 34,
              "useColorFunction" : true,
              "markerImages" : [ "tb-image;/api/images/system/map_marker_image_0.png", "tb-image;/api/images/system/map_marker_image_1.png", "tb-image;/api/images/system/map_marker_image_2.png", "tb-image;/api/images/system/map_marker_image_3.png" ],
              "useMarkerImageFunction" : true,
              "colorFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'colorpin') {\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120 * 100;\n\t    return tinycolor.mix('blue', 'red', amount = percent).toHexString();\n\t}\n\treturn 'blue';\n}\n",
              "markerImageFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'thermomether') {\n\tvar res = {\n\t    url: images[0],\n\t    size: 40\n\t}\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120;\n\t    var index = Math.min(3, Math.floor(4 * percent));\n\t    res.url = images[index];\n\t}\n\treturn res;\n}",
              "color" : "#fe7569",
              "mapProvider" : "OpenStreetMap.Mapnik",
              "showTooltip" : true,
              "autocloseTooltip" : true,
              "tooltipFunction" : "var deviceType = dsData[dsIndex]['deviceType'];\r\nif (typeof deviceType !== undefined) {\r\n    if (deviceType == \"energy meter\") {\r\n        return '<b>${entityName}</b><br/><b>Energy:</b> ${energy:2} kWt<br/>';\r\n    } else if (deviceType == \"thermometer\") {\r\n        return '<b>${entityName}</b><br/><b>Temperature:</b> ${temperature:2} °C<br/>';\r\n    }\r\n}",
              "labelFunction" : "var deviceType = dsData[dsIndex]['deviceType'];\r\nif (typeof deviceType !== undefined) {\r\n    if (deviceType == \"energy meter\") {\r\n        return '<span style=\"color:orange;\">${entityName}, ${energy:2} kWt</span>';\r\n    } else if (deviceType == \"thermometer\") {\r\n        return '<span style=\"color:blue;\">${entityName}, ${temperature:2} °C</span>';\r\n    }\r\n}",
              "polygonKeyName" : "coordinates",
              "polygonOpacity" : 0.5,
              "polygonStrokeOpacity" : 1,
              "polygonStrokeWeight" : 1,
              "customProviderTileUrl" : "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
              "showTooltipAction" : "click",
              "defaultCenterPosition" : [ 0, 0 ],
              "zoomOnClick" : true,
              "showCoverageOnHover" : true,
              "animate" : true,
              "maxClusterRadius" : 80,
              "removeOutsideVisibleBounds" : true
            },
            "title" : "Localização Usina",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "27d19f5a-c3dc-af7e-ee47-7d21bd7e8ae1",
          "typeFullFqn" : "system.maps_v2.openstreetmap"
        },
        "ff2f6231-e0e9-49a7-80a4-a5374d381a0e" : {
          "type" : "static",
          "sizeX" : 34,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Dados da Conexão</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 24px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "Label Dados Conexao",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "ff2f6231-e0e9-49a7-80a4-a5374d381a0e",
          "typeFullFqn" : "system.cards.html_card"
        },
        "7308aac3-6d67-44a2-98b9-3a489b9c243d" : {
          "type" : "latest",
          "sizeX" : 54,
          "sizeY" : 10,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "ref_cliente",
                "type" : "attribute",
                "label" : "ref_cliente",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.314082626274236
              }, {
                "name" : "endereco",
                "type" : "attribute",
                "label" : "endereco",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.29428729276659693
              }, {
                "name" : "cep",
                "type" : "attribute",
                "label" : "cep",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.5714814111075266
              }, {
                "name" : "bairro",
                "type" : "attribute",
                "label" : "bairro",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.1792060085480156
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.6039520675261614
              }, {
                "name" : "estado",
                "type" : "attribute",
                "label" : "estado",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.255617971554996
              }, {
                "name" : "segmento",
                "type" : "attribute",
                "label" : "segmento",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.4438436825064902,
                "postFuncBody" : "string = moment().format('YYYYMMDD')\nurl = 'https://solarhub.engecomp.io/res/ramo_atividade.json'+'?'+string;\nvar ramo_atividade = JSON.parse(Get(url));\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nreturn ramo_atividade[value];\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "contato",
                "type" : "attribute",
                "label" : "contato",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.9172346110507434
              }, {
                "name" : "depto",
                "type" : "attribute",
                "label" : "depto",
                "color" : "#03a9f4",
                "settings" : { },
                "_hash" : 0.8789454918582487
              }, {
                "name" : "telefone",
                "type" : "attribute",
                "label" : "telefone",
                "color" : "#ff9800",
                "settings" : { },
                "_hash" : 0.5118181150391452
              }, {
                "name" : "email",
                "type" : "attribute",
                "label" : "email",
                "color" : "#673ab7",
                "settings" : { },
                "_hash" : 0.23050908419558058
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#cddc39",
                "settings" : { },
                "_hash" : 0.1704841555313179
              }, {
                "name" : "obs_cliente",
                "type" : "attribute",
                "label" : "obs_cliente",
                "color" : "#cddc39",
                "settings" : { },
                "_hash" : 0.3936841816165175
              }, {
                "name" : "icms",
                "type" : "attribute",
                "label" : "icms",
                "color" : "#009688",
                "settings" : { },
                "_hash" : 0.7603581145702347,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : 0,
                "funcBody" : null
              }, {
                "name" : "id_ref_cliente",
                "type" : "attribute",
                "label" : "id_ref_cliente",
                "color" : "#009688",
                "settings" : { },
                "_hash" : 0.20042231848340308,
                "units" : null,
                "decimals" : 0,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : null
              }, {
                "name" : "cnpj",
                "type" : "attribute",
                "label" : "cnpj",
                "color" : "#795548",
                "settings" : { },
                "_hash" : 0.35563061680816066
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"25%\" align=\"left\"><style class=\"title\">ID:</style><br><style class=\"text\">${entityName}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Nome da Unidade:</style><br><style class=\"text\">${description}</style></td>\n                <td width=\"23%\" align=\"left\"><style class=\"title\">Referência Cliente:</style><br><style class=\"text\">${id_ref_cliente}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Razão Social:</style><br><style class=\"text\">${ref_cliente}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"73%\" align=\"left\"><style class=\"title\">Endereço:</style><br><style class=\"text\">${endereco}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Bairro:</style><br><style class=\"text\">${bairro}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Cidade:</style><br><style class=\"text\">${cidade}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Estado:</style><br><style class=\"text\">${estado}</style></td>\n                <td width=\"23%\" align=\"left\"><style class=\"title\">CEP:</style><br><style class=\"text\">${cep}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Ramo de Atividade:</style><br><style class=\"text\">${segmento}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Responsável:</style><br><style class=\"text\">${contato}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Departamento:</style><br><style class=\"text\">${depto}</style></td>\n                <td width=\"23%\" align=\"left\"><style class=\"title\">Telefone:</style><br><style class=\"text\">${telefone}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">E-mail:</style><br><style class=\"text\">${email}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"50%\" align=\"left\"><style class=\"title\">Observações:</style><br><style class=\"text\">${obs_cliente}</style></td>\n                <td width=\"23%\" align=\"left\"><style class=\"title\">CNPJ:</style><br><style class=\"text\">${cnpj}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">ICMS Diferenciado:</style><br><style class=\"text\">${icms}%</style></td>\n            </tr>\n        </table>\n</div>\n\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}"
            },
            "title" : "Dados do Consumidor",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n        style=\"min-width: 800px; padding: 20px\">\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=\"49\" class=\"mat-block\">\n                <mat-label>Nome da Unidade\n                </mat-label>\n                <input matInput type=\"text\"\n                    [(ngModel)]=\"attributes.description\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"17\"  class=\"mat-block\">\n                <mat-label>Referência Cliente\n                </mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.id_ref_cliente\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Razão Social\n                </mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.ref_cliente\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=\"66\" class=\"mat-block\">\n                <mat-label>Endereço</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.endereco\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Bairro</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.bairro\">\n            </mat-form-field>\n\n        </div>\n\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=\"33\" class=\"mat-block\">\n                <mat-label>Cidade</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.cidade\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"33\" class=\"mat-block\">\n                <mat-label>Estado</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.estado\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"33\" class=\"mat-block\">\n                <mat-label>CEP</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.cep\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Contato</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.contato\">\n            </mat-form-field>\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Depto</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.depto\">\n            </mat-form-field>\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Telefone</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.telefone\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex=\"66\" class=\"mat-block\">\n                <mat-label>Email</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.email\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Ramo de Atividade</mat-label>\n                <mat-select name=\"segmento\"\n                    [(ngModel)]=\"attributes.segmento\">\n                    <mat-option\n                        *ngFor=\"let item of ramo_atividade\"\n                        [value]=\"item[1]\">\n                        {{item[0]}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=\"66\" class=\"mat-block\">\n                <mat-label>Observações</mat-label>\n                <input matInput type=\"text\"\n                    [(ngModel)]=\"attributes.obs_cliente\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>ICMS Diferenciado\n                </mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.icms\">\n            </mat-form-field>\n        </div>\n\n\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nstring = moment().format('YYYYMMDD')\nurl = 'https://solarhub.engecomp.io/res/ramo_atividade.json'+'?'+string;\nwidgetContext.ramo_atividade = sortByValue(JSON.parse(Get(url)))\n\n\nfunction sortByValue(jsObj){\n    var sortedArray = [];\n    for(var i in jsObj)\n    {\n        sortedArray.push([jsObj[i], i]);\n    }\n    return sortedArray.sort();\n}\n\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Editar dados do consumidor'\n    vm.ramo_atividade = widgetContext.ramo_atividade\n\n    vm.diffAttrs=['segmento']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n         })\n    }\n\n    for (var i=0; i<widgetContext.data.length; i++){\n        if (!vm.diffAttrs.includes(widgetContext.data[i].dataKey.name)) {\n            var x = widgetContext.data[i].data[0][1]\n            vm.attributes[widgetContext.data[i].dataKey.name] = x\n        }\n    }\n    delete vm.attributes.UC\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        debugger;\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            // if (key == \"id_ref_cliente\") {\n            //     vm.attributes[key] = vm.attributes[key].toString()\n            // }\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()  \n    }\n}\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "714386db-bd14-7aee-c92e-707569ee4835"
              }, {
                "name" : "Atividade de usuários",
                "icon" : "arrow_downward",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n     <div fxLayout=\"column\" fxLayout.gt-sm=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"20px\">\n         \n\n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"0\" fxFlexOrder.gt-sm=\"0\">\n          <mat-label>Data Inicial</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"sdStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n        \n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"1\" fxFlexOrder.gt-sm=\"1\">\n          <mat-label>Data Final</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"edStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n\n    </div>\n    \n    <div [fxShow]=\"!OK\" fxLayoutGap=\"20px\" style=\"color: red; font-weight: bold;\">ATENÇÃO: {{ errorMessage }}</div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap\n    .get('customDialog'));\n\nvar user = widgetContext.currentUser;\nlet myHeaders = new Headers();\nmyHeaders.append(\"accept\", \"application/json\");\nmyHeaders.append(\"api-token\",\n    \"4e1c9db8-cc6d-47c3-a10f-aaaa65925c7f\");\n\nvar url =\n    `https://solarhub.engecomp.io/apim/reports/user/0051_Assa%C3%AD%20Atacadista/activity?mail_to=${user.sub}`\n\n\nshowInfoDialog()\n\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate,\n        dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    let vm = instance;\n    vm.OK = true;\n    vm.importTitle = 'Exportação ATIVIDADE DE RELATORIOS';\n    vm.ed = moment.utc().startOf('day').toDate();\n    vm.sd = moment(vm.ed).subtract(1, 'month').toDate();\n    vm.sdStr = moment(vm.sd).format('DD/MM/YYYY');\n    vm.edStr = moment(vm.ed).format('DD/MM/YYYY');\n    vm.sd = moment.utc(vm.sdStr, 'DD/MM/YYYY');\n    vm.ed = moment.utc(vm.edStr, 'DD/MM/YYYY');\n\n    vm.change = function() {\n        vm.sd = moment.utc(vm.sdStr,\n            'DD/MM/YYYY HH:mm');\n        vm.ed = moment.utc(vm.edStr,\n            'DD/MM/YYYY HH:mm');\n        var days = moment(vm.ed).diff(moment(vm.sd),\n            'days');\n        if (!vm.sd._isValid) {\n            vm.OK = false;\n            vm.errorMessage = \"Data inicial inválida\";\n            return;\n        }\n        if (!vm.ed._isValid) {\n            vm.OK = false;\n            vm.errorMessage = \"Data final inválida\";\n            return;\n        }\n        //check start date greater than end date\n        if (days < 0) {\n            vm.OK = false;\n            vm.errorMessage =\n                \"Data inicial maior que data final\";\n            return;\n        }\n        vm.OK = true;\n    };\n    vm.change();\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n    vm.send = function() {\n\n\n        var fetchParams = {\n            method: \"GET\",\n            headers: myHeaders,\n\n        };\n\n        fetch(url, fetchParams).then(function(r) {\n                if (r.status == 200) {\n\n                    return r.json().then(\n                        function(data) {\n                            if (data.link &&\n                                data.link\n                                .length > 0) {\n                                window.open(data\n                                    .link,\n                                    '_blank'\n                                    );\n                            } else {\n                                widgetContext\n                                    .showSuccessToast(\n                                        'Sucesso. Um link será enviado para o seu e-mail',\n                                        3000)\n                            }\n                        })\n                } else {\n                    //widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n                    widgetContext.showErrorToast(\n                        data.description, 3000)\n                }\n\n            })\n            .catch(function(error) {\n                widgetContext.showErrorToast(\n                    'Erro. Por favor contacte a Engecomp.',\n                    3000)\n            });\n\n        vm.cancel();\n\n    }\n}",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "d40f9c68-5c56-734c-c24f-58609a680f4f"
              } ]
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "id" : "7308aac3-6d67-44a2-98b9-3a489b9c243d",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "7cf0e42c-fb64-437e-916d-8cc104a53069" : {
          "type" : "latest",
          "sizeX" : 20,
          "sizeY" : 5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "latitude",
                "type" : "attribute",
                "label" : "latitude",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.12053059779723752,
                "decimals" : null,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 6, minimumFractionDigits: 6}); "
              }, {
                "name" : "longitude",
                "type" : "attribute",
                "label" : "longitude",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.7678419940529702,
                "decimals" : null,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 6, minimumFractionDigits: 6}); "
              }, {
                "name" : "weatherURL",
                "type" : "attribute",
                "label" : "weather",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.2189923541610701
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"90%\">\n            <tr height=\"38\">\n                <td width=\"45%\" align=\"left\"><style class=\"title\">Latitude:</style><br><style class=\"text\">${latitude}</style></td>\n                <td width=\"45%\" align=\"left\"><style class=\"title\">Longitude:</style><br><style class=\"text\">${longitude}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"90%\">\n            <tr height=\"38\">\n                <td width=\"90%\" align=\"left\"><style class=\"title\">Weather URL:</style><br><style class=\"text\">${weather}</style></td>\n            </tr>\n        </table>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}"
            },
            "title" : "Dados Coordenadas",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\">\n        <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Latitude</mat-label>\n                <input matInput type=\"number\" [(ngModel)]=\"attributes.latitude\" step=\"0.000001\">\n            </mat-form-field>\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Longitude</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.longitude\" step=\"0.000001\">\n            </mat-form-field>\n        </div>\n        <mat-form-field fxFlex class=\"mat-block\">\n            <mat-label>WeatherURL</mat-label>\n            <input matInput type=\"text\"\n                [(ngModel)]=\"attributes.weatherURL\">\n        </mat-form-field>\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\nattributes = {}\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.OK = true\n    vm.importTitle = 'Editar Coordenadas'\n\n    vm.attributes = {}\n    for (var i=0; i<widgetContext.data.length; i++){\n        var x = widgetContext.data[i].data[0][1]\n        vm.attributes[widgetContext.data[i].dataKey.name] = x\n    }\n    vm.attributes.latitude = parseFloat(vm.attributes.latitude.replace(',','.'))\n    vm.attributes.longitude = parseFloat(vm.attributes.longitude.replace(',','.'))\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()\n    }\n\n}",
                "customResources" : [ ],
                "id" : "a25e279b-4ed1-6374-614e-35d9e4e1ab6e"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "7cf0e42c-fb64-437e-916d-8cc104a53069",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "34d0bfdc-ef5e-4f25-9829-d28fa05ce5c7" : {
          "type" : "latest",
          "sizeX" : 20,
          "sizeY" : 11,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "latitude",
                "type" : "attribute",
                "label" : "latitude",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.7978682596412687
              }, {
                "name" : "longitude",
                "type" : "attribute",
                "label" : "longitude",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.3895649100631746
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "fitMapBounds" : true,
              "latKeyName" : "latitude",
              "lngKeyName" : "longitude",
              "showLabel" : false,
              "label" : "${entityName}",
              "tooltipPattern" : "<b>${entityName}</b><br/><br/><b>Latitude:</b> ${latitude:7}<br/><b>Longitude:</b> ${longitude:7}<br/><b>Temperature:</b> ${temperature} °C<br/><small>See advanced settings for details</small>",
              "markerImageSize" : 34,
              "useColorFunction" : true,
              "markerImages" : [ "tb-image;/api/images/system/map_marker_image_0.png", "tb-image;/api/images/system/map_marker_image_1.png", "tb-image;/api/images/system/map_marker_image_2.png", "tb-image;/api/images/system/map_marker_image_3.png" ],
              "useMarkerImageFunction" : true,
              "colorFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'colorpin') {\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120 * 100;\n\t    return tinycolor.mix('blue', 'red', amount = percent).toHexString();\n\t}\n\treturn 'blue';\n}\n",
              "markerImageFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'thermomether') {\n\tvar res = {\n\t    url: images[0],\n\t    size: 40\n\t}\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120;\n\t    var index = Math.min(3, Math.floor(4 * percent));\n\t    res.url = images[index];\n\t}\n\treturn res;\n}",
              "color" : "#fe7569",
              "mapProvider" : "OpenStreetMap.Mapnik",
              "showTooltip" : true,
              "autocloseTooltip" : true,
              "tooltipFunction" : "var deviceType = dsData[dsIndex]['deviceType'];\r\nif (typeof deviceType !== undefined) {\r\n    if (deviceType == \"energy meter\") {\r\n        return '<b>${entityName}</b><br/><b>Energy:</b> ${energy:2} kWt<br/>';\r\n    } else if (deviceType == \"thermometer\") {\r\n        return '<b>${entityName}</b><br/><b>Temperature:</b> ${temperature:2} °C<br/>';\r\n    }\r\n}",
              "labelFunction" : "var deviceType = dsData[dsIndex]['deviceType'];\r\nif (typeof deviceType !== undefined) {\r\n    if (deviceType == \"energy meter\") {\r\n        return '<span style=\"color:orange;\">${entityName}, ${energy:2} kWt</span>';\r\n    } else if (deviceType == \"thermometer\") {\r\n        return '<span style=\"color:blue;\">${entityName}, ${temperature:2} °C</span>';\r\n    }\r\n}",
              "polygonKeyName" : "coordinates",
              "polygonOpacity" : 0.5,
              "polygonStrokeOpacity" : 1,
              "polygonStrokeWeight" : 1,
              "customProviderTileUrl" : "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
              "showTooltipAction" : "click",
              "defaultCenterPosition" : "0,0",
              "zoomOnClick" : true,
              "showCoverageOnHover" : true,
              "animate" : true,
              "maxClusterRadius" : 80,
              "removeOutsideVisibleBounds" : true,
              "provider" : "openstreet-map",
              "mapPageSize" : 16384
            },
            "title" : "Localização Usina",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "34d0bfdc-ef5e-4f25-9829-d28fa05ce5c7",
          "typeFullFqn" : "system.maps_v2.openstreetmap"
        },
        "42bcd558-07ef-a6cb-663c-33d0f21a951a" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.2371823133874449
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 24px;\n    color: rgba(0, 0, 0, 0.87);\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}\n",
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Benchmarking</div>"
            },
            "title" : "label config benchmarking",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<head>\n    <style type=\"text/css\">\n        body {\n            color: purple;\n            background-color: #d8da3d\n        }\n    </style>\n</head>\n<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\" fxLayoutGap=\"10px\"\n        style=\"min-width: 600px\">\n\n        <div fxLayout=\"row\" fxLayoutAlign=\" center\" fxLayoutGap=\"0px\">\n           <div fxLayoutAlign=\"space-around left\">\n            Horas de Operação</div>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=25 fxFill>\n                <mat-label>Dias úteis</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.bench_hor_dow\">\n            </mat-form-field>\n            \n            <mat-form-field fxFlex=25 fxFill>\n                <mat-label>Sábados</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.bench_hor_sat\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex=25 fxFill>\n                <mat-label>Domingos</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.bench_hor_sun\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex=25 fxFill>\n                <mat-label>Feriados</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.bench_hor_hol\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=50 fxFill>\n                <mat-label>Área / Volume (m2 ou\n                    m3)</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.bench_area\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex=50 fxFill>\n                <mat-label>Indicador de\n                    Produção</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.bench_producao\">\n            </mat-form-field>\n\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"10px\">\n            <mat-form-field fxFill>\n                <mat-label>Considera\n                    temperatura externa\n                    na\n                    normalização?</mat-label>\n                <mat-select name=\"bench_temperatura\"\n                    [(ngModel)]=\"attributes.bench_temperatura\"\n                    ng-change=\"change()\">\n                    <mat-option value=\"0\">Não\n                    </mat-option>\n                    <mat-option value=\"1\">Sim\n                    </mat-option>\n                </mat-select><br>\n            </mat-form-field>\n        </div>\n        \n        <div fxShow=false fxLayout=\"row\" fxLayoutAlign=\" center\" fxLayoutGap=\"0px\">\n           <div fxLayoutAlign=\"space-around left\">\n            Parâmetros para Equalização</div>\n        </div>        \n\n        <div fxShow=false fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex fxFill>\n                <mat-label>Temp. Referência\n                    (°C)</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.lb_temp_ref\">\n            </mat-form-field>\n            <mat-form-field fxFlex fxFill>\n                <mat-label>Temp. Mensal\n                    (°C)</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.equal_temp_med\">\n            </mat-form-field>\n            <mat-form-field fxFlex fxFill>\n                <mat-label>Horas Mensais\n                    Operação</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.equal_horas_op\">\n            </mat-form-field>\n        </div>\n\n        \n    </div>\n</div>\n\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Configurar Coeficientes de Normalização'\n    \n    vm.diffAttrs=['bench_area', 'bench_hor_dow', 'bench_hor_sat', 'bench_hor_sun', 'bench_hor_hol', 'bench_producao', 'bench_temperatura', 'equal_temp_med', 'equal_horas_op', 'lb_temp_ref']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n         })\n    }\n\n    for (var i=0; i<widgetContext.data.length; i++){\n        if (!vm.diffAttrs.includes(widgetContext.data[i].dataKey.name)) {\n            var x = widgetContext.data[i].data[0][1]\n            vm.attributes[widgetContext.data[i].dataKey.name] = x\n        }\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        debugger\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()\n    }\n\n}\n\n\n// var $injector = widgetContext.$scope.$injector;\n// var\n//     $mdDialog = $injector.get('$mdDialog'),\n//     $document = $injector.get('$document');\n// deviceService = $injector.get('deviceService');\n\n// attributeService = $injector.get('attributeService');\n// attributeList = ['bench_area', 'bench_hor_dow', 'bench_hor_sat', 'bench_hor_sun', 'bench_hor_hol', 'bench_producao', 'bench_temperatura', 'equal_temp_med', 'equal_horas_op', 'lb_temp_ref'];\n// attributes = {};\n\n// var infoDialogTemplate =''\n\n// showInfoDialog();\n\n\n// function showInfoDialog() {\n//     $mdDialog.show({\n//         controller: ['$mdDialog', InfoDialogController],\n//         controllerAs: 'vm',\n//         template: infoDialogTemplate,\n//         parent: angular.element($document[0].body),\n//         targetEvent: $event,\n//         clickOutsideToClose: true,\n//         fullscreen: true\n//     });\n// }\n\n\n// function InfoDialogController($mdDialog) {\n\n//     let vm = this;    \n//     vm.OK = true;\n//     var locale = window.navigator.userLanguage || window.navigator.language;\n//     moment.locale(locale);    \n//     deviceService.getDevice(entityId.id).then(function(device) {\n//         deviceName = device.name;\n//         deviceId = device.id.id;\n//         attributeService.getEntityAttributesValues('DEVICE', deviceId, 'SERVER_SCOPE', attributeList, null).then(function(response) {\n//             for (var i=0; i < response.length; i++) {\n//                 attributes[response[i].key] = response[i].value;\n//             }\n//             vm.producao = attributes[\"bench_producao\"];\n//             if (vm.producao === null) {vm.producao = 0}\n//             vm.hor_dow = attributes[\"bench_hor_dow\"];\n//             if (vm.hor_dow === null) {vm.hor_dow = 10}\n//             vm.hor_sat = attributes[\"bench_hor_sat\"];\n//             if (vm.hor_sat === null) {vm.hor_sat = 8}\n//             vm.hor_sun = attributes[\"bench_hor_sun\"];\n//             if (vm.hor_sun === null) {vm.hor_sun = 6}\n//             vm.hor_hol = attributes[\"bench_hor_hol\"];\n//             if (vm.hor_hol === null) {vm.hor_hol = 6}\n//             vm.area = attributes[\"bench_area\"];\n//             if (vm.area === null) {vm.area = 0}\n//             vm.temperatura = attributes[\"bench_temperatura\"];\n//             if (vm.temperatura === null) {vm.temperatura = 0}\n//             vm.temp_med_eq = attributes[\"equal_temp_med\"];\n//             if (vm.temp_med_eq === null) {vm.temp_med_eq = 22}\n//             vm.horas_op_eq = attributes[\"equal_horas_op\"];\n//             if (vm.horas_op_eq === null) {vm.horas_op_eq = 300}\n//             vm.lb_temp_ref = attributes[\"lb_temp_ref\"];\n//             if (vm.lb_temp_ref === null) {vm.lb_temp_ref = 17}\n//         });\n//     });\n\n//     vm.importTitle = 'Configurar Coeficientes de Normalização';\n//     vm.cancel = () => {\n//         $mdDialog.cancel();\n//     };\n    \n//     vm.send = () => {\n//         var attributesToSave = [];\n//         attributesToSave.push({key: \"bench_producao\", value: vm.producao});\n//         attributesToSave.push({key: \"bench_hor_dow\", value: vm.hor_dow});\n//         attributesToSave.push({key: \"bench_hor_sat\", value: vm.hor_sat});\n//         attributesToSave.push({key: \"bench_hor_sun\", value: vm.hor_sun});\n//         attributesToSave.push({key: \"bench_hor_hol\", value: vm.hor_hol});\n//         attributesToSave.push({key: \"bench_area\", value: vm.area});\n//         attributesToSave.push({key: \"bench_temperatura\", value: vm.temperatura});\n//         attributesToSave.push({key: \"lb_temp_ref\", value: vm.lb_temp_ref});\n//         attributesToSave.push({key: \"equal_temp_med\", value: vm.temp_med_eq});\n//         attributesToSave.push({key: \"equal_horas_op\", value: vm.horas_op_eq});\n//         attributeService.saveEntityAttributes('DEVICE', deviceId, 'SERVER_SCOPE', attributesToSave);\n//         vm.cancel();\n//     };\n\n// }",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "f58dccac-b906-31bd-b8bd-f46024ee38bb"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "42bcd558-07ef-a6cb-663c-33d0f21a951a",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "b1aed89f-4952-76e2-70d7-06acfba9977f" : {
          "type" : "latest",
          "sizeX" : 13,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5365818648573573
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 24px;\n    color: rgba(0, 0, 0, 0.87);\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}\n",
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Economia</div>"
            },
            "title" : "label parametros economia",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar configurações",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content fxLayout=\"column\"\n    fxLayoutAlign=\"space-around left\" fxLayoutGap=\"20px\">\n\n    <mat-label>Consumidor:\n        {{attributes.description}}\n    </mat-label>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n        fxLayoutGap=\"10px\" style=\"min-width: 600px;\">\n\n\n        <div fxLayout=\"row\" fxLayoutGap=\"15px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Considera\n                    demandas\n                    sazonais?</mat-label>\n                <mat-select name=\"pe_par_demanda_sazonal\"\n                    [(ngModel)]=\"attributes.pe_par_demanda_sazonal\"\n                    (ngModelChange)=\"change()\">\n                    <mat-option [value]=\"0\">Não\n                    </mat-option>\n                    <mat-option [value]=\"1\">Sim\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div fxFlex=\"40\"></div>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutGap=\"15px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Considera\n                    Correção de\n                    F.Potência?</mat-label>\n                <mat-select name=\"pe_par_corrfp\"\n                    [(ngModel)]=\"attributes.pe_par_corrfp\"\n                    (ngModelChange)=\"change()\">\n                    <mat-option [value]=\"0\">Não\n                    </mat-option>\n                    <mat-option [value]=\"1\">Sim\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div fxFlex=\"40\"></div>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutGap=\"15px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Considera\n                    Migração para o Mercado\n                    Livre?</mat-label>\n                <mat-select name=\"pe_par_mlivre\"\n                    [(ngModel)]=\"attributes.pe_par_mlivre\"\n                    (ngModelChange)=\"change()\">\n                    <mat-option [value]=\"0\">Não\n                    </mat-option>\n                    <mat-option [value]=\"1\">Sim\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field fxFlex=\"40\" class=\"mat-block\">\n                <mat-label>Demanda Mínima\n                    M.Livre (kW)</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.pe_demanda_min_ml\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutGap=\"15px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Considera Volta\n                    pro Cativo?</mat-label>\n                <mat-select name=\"pe_par_cativo\"\n                    [(ngModel)]=\"attributes.pe_par_cativo\"\n                    (ngModelChange)=\"change()\">\n                    <mat-option [value]=\"0\">Não\n                    </mat-option>\n                    <mat-option [value]=\"1\">Sim\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div fxFlex=\"40\"></div>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutGap=\"15px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Considera Geração\n                    na Ponta?</mat-label>\n                <mat-select name=\"pe_par_gerponta\"\n                    [(ngModel)]=\"attributes.pe_par_gerponta\"\n                    (ngModelChange)=\"change()\">\n                    <mat-option [value]=\"0\">Não\n                    </mat-option>\n                    <mat-option [value]=\"1\">Sim\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"40\" class=\"mat-block\">\n                <mat-label>Gerador Existente\n                    (kVA)</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.pe_par_gerkva\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutGap=\"15px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Considera Geração\n                    Solar?</mat-label>\n                <mat-select name=\"pe_par_gersolar\"\n                    [(ngModel)]=\"attributes.pe_par_gersolar\"\n                    (ngModelChange)=\"change()\">\n                    <mat-option [value]=\"0\">Não\n                    </mat-option>\n                    <mat-option [value]=\"1\">Sim\n                    </mat-option>\n                </mat-select><br>\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"40\" class=\"mat-block\">\n                <mat-label>Area m2\n                    disponível (0=sem\n                    limite)</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.pe_par_area_solar\">\n            </mat-form-field>\n        </div>\n\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\ndefaultValues = {\n    pe_par_area_solar: 0,\n    pe_par_cativo: 1,\n    pe_par_mlivre: 1,\n    pe_par_gerponta: 1,\n    pe_par_gerkva: 0,\n    pe_par_gersolar: 1,\n    pe_par_corrfp: 1,\n    pe_par_demanda_sazonal: 1,\n    pe_demanda_min_ml: 500\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Configurar Cálculo de Potenciais de Economia'\n    \n    vm.diffAttrs=['description', 'pe_par_cativo', 'pe_par_mlivre', 'pe_par_gerponta', 'pe_par_gerkva', 'pe_par_gersolar', 'pe_par_corrfp', 'pe_par_demanda_sazonal', 'pe_par_area_solar', 'pe_demanda_min_ml']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                if (defaultValues.hasOwnProperty(r[i].key)) {\n                    x = Number(x)\n                }\n                vm.attributes[r[i].key] = x\n            }\n            for (var key in vm.diffAttrs) {\n                vm.attributes[vm.diffAttrs[key]] = (typeof vm.attributes[vm.diffAttrs[key]] !== 'undefined') ? vm.attributes[vm.diffAttrs[key]] : defaultValues[vm.diffAttrs[key]]\n            }\n         })\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe((r) => {\n             url = 'https://solarhub.engecomp.io/potencial_economia/ca92ecde-2ffb-4ffa-8285-6f0ca2831e42/?device='+entityName;\n            var fetchParams = { method: \"GET\" }\n            fetch(url, fetchParams)\n        })\n        vm.cancel()\n    }\n\n}\n",
                "customResources" : [ ],
                "id" : "6f351464-f3e7-9350-ab93-892ed5c4b812"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "b1aed89f-4952-76e2-70d7-06acfba9977f",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "7e8f4e62-8d3d-459f-828e-0498834a78f9" : {
          "type" : "static",
          "sizeX" : 34,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Dados do Contrato de Energia</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 24px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "Label Dados Contrato Energia",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "7e8f4e62-8d3d-459f-828e-0498834a78f9",
          "typeFullFqn" : "system.cards.html_card"
        },
        "a554fbc8-9a19-ac55-71cc-f7fc59bb3724" : {
          "type" : "static",
          "sizeX" : 34,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Dados da Medição</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 24px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "Label Pto Medicao",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "a554fbc8-9a19-ac55-71cc-f7fc59bb3724",
          "typeFullFqn" : "system.cards.html_card"
        },
        "e29df4d3-939b-f864-3f16-7e53f61a0284" : {
          "type" : "static",
          "sizeX" : 54,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Benchmarking</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 30px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "label Benchmarking GD",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "e29df4d3-939b-f864-3f16-7e53f61a0284",
          "typeFullFqn" : "system.cards.html_card"
        },
        "cce0e848-540c-48bb-84ca-e71aecfc9527" : {
          "type" : "static",
          "sizeX" : 41,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Potenciais de Economia</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 30px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "label Pot Economia",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "cce0e848-540c-48bb-84ca-e71aecfc9527",
          "typeFullFqn" : "system.cards.html_card"
        },
        "2535e978-4173-9196-c440-0fa112bfc110" : {
          "type" : "latest",
          "sizeX" : 13,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "c887f65b-386b-db62-7d93-8ff5fe5ecdcd",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pe_total",
                "type" : "attribute",
                "label" : "valor",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.25443673563147184,
                "postFuncBody" : "if ( value > 0 ) {\n    return \"R$ \"+ Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}); \n}\nreturn \"-x-\";",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Potencial de Economia",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "2535e978-4173-9196-c440-0fa112bfc110",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "db5d55e2-1866-f83a-7a96-9cb3ba37f6a4" : {
          "type" : "latest",
          "sizeX" : 21,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "status_cliente",
                "type" : "attribute",
                "label" : "status_cliente",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.48059786080047795,
                "postFuncBody" : "var dict = {\n    0: \"Não definido\",\n    1:\"Cativo\",\n    2:\"Livre\"\n};\n\nreturn dict[value];"
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "utility",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.6322172555736605,
                "postFuncBody" : "url = 'https://solarhub.engecomp.io/res/utility_list.json?'+moment().format('MMDD')\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nvar obj = JSON.parse(Get(url));\nreturn obj[value]\n\n"
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "classe_tensao",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.02536503327502726,
                "postFuncBody" : "var dict = {\n    0:\"\",\n    1:\"A1\",\n    2:\"A2\",\n    3:\"A3\",\n    4:\"A3a\",\n    5:\"A4\",\n    6:\"AS\",\n    7:\"B1\",\n    8:\"B2\",\n    9:\"B3\"\n};\n\nreturn dict[value];"
              }, {
                "name" : "enq_tarifario",
                "type" : "attribute",
                "label" : "enq_tarifario",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.12856585127756426,
                "postFuncBody" : "var dict = {\n    0:\"\",\n    1:\"Azul\",\n    2:\"Verde\",\n    3:\"Convencional\",\n    4:\"Branca\"\n};\n\nreturn dict[value];"
              }, {
                "name" : "demanda_fp",
                "type" : "attribute",
                "label" : "demanda_fp",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.4074902527761748,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 1}) + \" kW\"; "
              }, {
                "name" : "demanda_p",
                "type" : "attribute",
                "label" : "demanda_p",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.2557397629713647,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 1}) + \" kW\"; "
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"100%\">\n            <tr height=\"44\">\n                <td width=\"3%\" align=\"left\">&nbsp;</td>\n                <td width=\"46%\" align=\"left\"><style class=\"title\">Status / Tarifa:</style><br><style class=\"text\">${status_cliente} ${classe_tensao} ${enq_tarifario}</style></td>\n                <td width=\"2%\" align=\"left\">&nbsp;</td>\n                <td width=\"46%\" align=\"left\"><style class=\"title\">Concessionária:</style><br><style class=\"text\">${utility}</style></td>\n                <td width=\"3%\" align=\"left\">&nbsp;</td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"100%\">\n            <tr height=\"44\">\n                <td width=\"3%\" align=\"left\">&nbsp;</td>\n                <td width=\"46%\" align=\"left\"><style class=\"title\">Demanda Fora Ponta:</style><br><style class=\"text\">${demanda_fp}</style></td>\n                <td width=\"2%\" align=\"left\">&nbsp;</td>\n                <td width=\"46%\" align=\"left\"><style class=\"title\">Demanda Ponta:</style><br><style class=\"text\">${demanda_p}</style></td>\n                <td width=\"3%\" align=\"left\">&nbsp;</td>\n            </tr>\n        </table>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}"
            },
            "title" : "Dados do Contrato de Energia",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "db5d55e2-1866-f83a-7a96-9cb3ba37f6a4",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "a072471f-8365-fa3e-061a-86d9fe549dbe" : {
          "type" : "latest",
          "sizeX" : 15,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pe_custo_anual",
                "type" : "attribute",
                "label" : "custo_anual",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.7161236496349337,
                "postFuncBody" : "value = Number(value)\nif ( value > 0 ) {\n    return \"R$ \"+ value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}); \n}\nreturn \"Não disponível\";",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table align=\"center\" width=\"98%\">\n            <tr>\n                <td width=\"98%\" class=\"value\" align=\"center\">${custo_anual}</td>\n            </tr>\n        </table>\n    </section>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 15px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}\n"
            },
            "title" : "Custo Total Anual",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "a072471f-8365-fa3e-061a-86d9fe549dbe",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "e6d12a92-c335-5ba2-e986-59c22c964b8e" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pe_total",
                "type" : "attribute",
                "label" : "pot_economia",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5436777582373669,
                "postFuncBody" : "value = Number(value)\nif ( value >= 0 ) {\n    return \"R$ \"+ value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}); \n}\nreturn \"Não disponível\";",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "pe_total_percentual",
                "type" : "attribute",
                "label" : "pot_econ_perc",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.8366046872992918,
                "postFuncBody" : "if ( value >= 0 ) {\n    return \"(\" + value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1}) + \"%)\"; \n}\nreturn \"\";",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "pe_error",
                "type" : "attribute",
                "label" : "txt_erro",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.43238036067092533,
                "postFuncBody" : "if (value.length > 0) {\n    return \"&nbsp; <br>\" + value;    \n}\nreturn \"\";"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table align=\"center\" width=\"98%\">\n            <tr>\n                <td width=\"98%\" class=\"value\" align=\"center\">${pot_economia} ${pot_econ_perc}</td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"90%\">\n            <tr>\n                <td width=\"90%\" class=\"comment\" align=\"left\">${txt_erro}</td>\n            </tr>\n        </table>\n    </section>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 15px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}\n"
            },
            "title" : "Potencial de Economia",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Configuração",
                "icon" : "settings",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content fxLayout=\"column\"\n    fxLayoutAlign=\"space-around left\" fxLayoutGap=\"20px\">\n\n    <mat-label>Consumidor:\n        {{attributes.description}}\n    </mat-label>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n        fxLayoutGap=\"10px\" style=\"min-width: 600px;\">\n\n\n        <div fxLayout=\"row\" fxLayoutGap=\"15px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Considera\n                    demandas\n                    sazonais?</mat-label>\n                <mat-select name=\"pe_par_demanda_sazonal\"\n                    [(ngModel)]=\"attributes.pe_par_demanda_sazonal\"\n                    (ngModelChange)=\"change()\">\n                    <mat-option [value]=\"0\">Não\n                    </mat-option>\n                    <mat-option [value]=\"1\">Sim\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field fxFlex=\"40\" class=\"mat-block\">\n                <mat-label>Menor demanda contratável (kW)</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.pe_demanda_min_cativo\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutGap=\"15px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Considera\n                    Correção de\n                    F.Potência?</mat-label>\n                <mat-select name=\"pe_par_corrfp\"\n                    [(ngModel)]=\"attributes.pe_par_corrfp\"\n                    (ngModelChange)=\"change()\">\n                    <mat-option [value]=\"0\">Não\n                    </mat-option>\n                    <mat-option [value]=\"1\">Sim\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div fxFlex=\"40\"></div>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutGap=\"15px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Considera\n                    Migração para o Mercado\n                    Livre?</mat-label>\n                <mat-select name=\"pe_par_mlivre\"\n                    [(ngModel)]=\"attributes.pe_par_mlivre\"\n                    (ngModelChange)=\"change()\">\n                    <mat-option [value]=\"0\">Não\n                    </mat-option>\n                    <mat-option [value]=\"1\">Sim\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field fxFlex=\"40\" class=\"mat-block\">\n                <mat-label>Demanda Mínima\n                    M.Livre (kW)</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.pe_demanda_min_ml\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutGap=\"15px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Considera Volta\n                    pro Cativo?</mat-label>\n                <mat-select name=\"pe_par_cativo\"\n                    [(ngModel)]=\"attributes.pe_par_cativo\"\n                    (ngModelChange)=\"change()\">\n                    <mat-option [value]=\"0\">Não\n                    </mat-option>\n                    <mat-option [value]=\"1\">Sim\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div fxFlex=\"40\"></div>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutGap=\"15px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Considera Geração\n                    na Ponta?</mat-label>\n                <mat-select name=\"pe_par_gerponta\"\n                    [(ngModel)]=\"attributes.pe_par_gerponta\"\n                    (ngModelChange)=\"change()\">\n                    <mat-option [value]=\"0\">Não\n                    </mat-option>\n                    <mat-option [value]=\"1\">Sim\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"40\" class=\"mat-block\">\n                <mat-label>Gerador Existente\n                    (kVA)</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.pe_par_gerkva\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutGap=\"15px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Considera Geração\n                    Solar?</mat-label>\n                <mat-select name=\"pe_par_gersolar\"\n                    [(ngModel)]=\"attributes.pe_par_gersolar\"\n                    (ngModelChange)=\"change()\">\n                    <mat-option [value]=\"0\">Não\n                    </mat-option>\n                    <mat-option [value]=\"1\">Sim\n                    </mat-option>\n                </mat-select><br>\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"40\" class=\"mat-block\">\n                <mat-label>Area m2\n                    disponível (0=sem\n                    limite)</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.pe_par_area_solar\">\n            </mat-form-field>\n        </div>\n        \n        <div fxLayout=\"row\" fxLayoutGap=\"15px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Fixa enquadramento tarifário?</mat-label>\n                <mat-select name=\"pe_enquadramento_fixo\"\n                    [(ngModel)]=\"attributes.pe_enquadramento_fixo\"\n                    (ngModelChange)=\"change()\">\n                    <mat-option [value]=\"9\">Não\n                    </mat-option>\n                    <mat-option [value]=\"0\">Azul\n                    </mat-option>\n                    <mat-option [value]=\"1\">Verde\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div fxFlex=\"40\"></div>\n        </div>        \n\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\ndefaultValues = {\n    pe_par_area_solar: 0,\n    pe_par_cativo: 1,\n    pe_par_mlivre: 1,\n    pe_par_gerponta: 1,\n    pe_par_gerkva: 0,\n    pe_par_gersolar: 1,\n    pe_par_corrfp: 1,\n    pe_par_demanda_sazonal: 1,\n    pe_demanda_min_ml: 500,\n    pe_demanda_min_cativo: 0,\n    pe_enquadramento_fixo: 9\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Configurar Cálculo de Potenciais de Economia'\n    \n    vm.diffAttrs=['description', 'pe_par_cativo', 'pe_par_mlivre', 'pe_par_gerponta', 'pe_par_gerkva', 'pe_par_gersolar', 'pe_par_corrfp', 'pe_par_demanda_sazonal', 'pe_par_area_solar', 'pe_demanda_min_ml', 'pe_demanda_min_cativo', 'pe_enquadramento_fixo']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                if (defaultValues.hasOwnProperty(r[i].key)) {\n                    x = Number(x)\n                }\n                vm.attributes[r[i].key] = x\n            }\n            for (var key in vm.diffAttrs) {\n                vm.attributes[vm.diffAttrs[key]] = (typeof vm.attributes[vm.diffAttrs[key]] !== 'undefined') ? vm.attributes[vm.diffAttrs[key]] : defaultValues[vm.diffAttrs[key]]\n            }\n         })\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe((r) => {\n             url = 'https://solarhub.engecomp.io/potencial_economia/ca92ecde-2ffb-4ffa-8285-6f0ca2831e42/?device='+entityName;\n            var fetchParams = { method: \"GET\" }\n            fetch(url, fetchParams)\n        })\n        vm.cancel()\n    }\n\n}\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "5870c54f-aa47-b05d-f465-1ceb4dad9912"
              }, {
                "name" : "Ajuda",
                "icon" : "info_outline",
                "type" : "customPretty",
                "customHtml" : "<form #f=\"ngForm\">\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\n        <h2>Ajuda</h2>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\"\n        *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\">\n    </div>\n\n    <div mat-dialog-content style=\"padding: 20px 20px 20px 20px;\"\n        ng-cloak=\"\">\n\n        <div layout-align=\"space-around left\"\n            style=\"min-width: 300px; max-width: 700px; padding-top: 20px\">\n\n            O <b>Potencial de Economia</b> considera a\n            melhor combinação de economias possível\n            considerando a configuração atual dos parâmetros\n            deste ponto.<br>&nbsp;<br>\n            Para que o cálculo possa ser feito, são\n            necessários:\n            <ul>\n                <li>Mínimo de 6 meses de dados (telemetria\n                    ou faturas).\n                <li>Cadastro completo de status, tarifa,\n                    concessionária e demandas contratadas.\n            </ul>\n\n            As informações consideradas no cálculo são:\n            <ul>\n                <li>Histórico de dados dos últimos 12 meses\n                    (telemetria ou faturas).\n                <li>Tarifas vigentes acrescidas dos impostos\n                    correspondentes (ICMS, PIS e\n                    COFINS)<mark>*</mark>.\n                <li>Tarifas médias e custos de gestão\n                    praticados no Mercado\n                    Livre<mark>*</mark>.\n                <li>Atendimento a requisitos regulatórios\n                    para migração ao Mercado Livre.\n                <li>Custos de mercado para implantação de\n                    sistemas fotovoltaicos<mark>*</mark>.\n                <li>Custos de mercado para geração de\n                    energia, incluindo suprimento de\n                    combustível e aluguel de equipamentos\n                    (se necessário)<mark>*</mark>.\n            </ul>\n\n            <mark>*</mark>: Nossa equipe de operações coleta\n            estas informações e alimenta o sistema\n            periodicamente, conforme necessidade para cada\n            caso.<br>&nbsp;<br>\n\n            <u>Importante</u>: Quando algum dos quadros\n            mostra valor negativo, significa que aquela ação\n            daria prejuízo individualmente, mas traz\n            benefício quando combinado com as demais\n            sugestões.<br>&nbsp;<br>\n\n            Obs: Se você deseja ver ou alterar a\n            configuração dos parâmetros deste ponto para o\n            cálculo dos Potenciais de Economia, clique no\n            ícone <img\n                src=\"https://solarhub.engecomp.io/res/symb_engrenagem.jpeg\"\n                alt=\"engrenagem\" width=\"12\" height=\"12\"> no\n            alto e à direita desta página.<br>&nbsp;\n\n        </div>\n    </div>\n\n    <div mat-dialog-actions fxLayout=\"row\"\n        fxLayoutAlign=\"end center\">\n        <button mat-button color=\"primary\" type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n            Fechar\n        </button>\n    </div>\n</form>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenDialog();\n\nfunction openDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    let vm = instance;\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n}\n",
                "customResources" : [ ],
                "id" : "31d9c254-d94a-db2d-66a9-15d799a58826"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "e6d12a92-c335-5ba2-e986-59c22c964b8e",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "9d57d15b-4a9c-e951-de33-5adc90d4f60f" : {
          "type" : "latest",
          "sizeX" : 36,
          "sizeY" : 22,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "potencial_economia",
                "type" : "attribute",
                "label" : "potencial_economia",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.7950026043821177
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : { },
            "title" : "Potenciais de Economia",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "9d57d15b-4a9c-e951-de33-5adc90d4f60f",
          "typeFullFqn" : "tenant.teste.teste_waterfall"
        },
        "dd167096-8ee8-4d0c-66e5-03fce645fe73" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 7,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pe_tarifacao",
                "type" : "attribute",
                "label" : "pot_economia",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.594421192174537,
                "postFuncBody" : "value = Number(value)\nif (value === 0) {\n    return \"-x-\";\n}\nreturn \"R$ \"+ value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}); \n\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "potencial_economia",
                "type" : "attribute",
                "label" : "valores",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.6235668779976484,
                "postFuncBody" : "function RetornaString(prefixo, valor, mindig, maxdig, sufixo) {\n\tif (valor > 0) {\n\t\treturn prefixo + valor.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: mindig, maximumFractionDigits: maxdig}) + sufixo;\n\t}\n\treturn prefixo + \"***\" + sufixo;\n}\n\nfunction RetornaShort(prefixo, valor, sufixo) {\n\tif (valor.length > 0) {\n\t\treturn prefixo + valor + sufixo;\n\t}\n\treturn prefixo + \"***\" + sufixo;\n}\n\nvar result = JSON.parse(value);\nvar enq_tarif = \"\";\n\ntry {\n    enq_tarif = (result.pe.tarifacao.details.nome_enq_ideal || 0);    \n}\ncatch(err) {}\nreturn \"Tarifa ideal: \" + RetornaShort(\"\", enq_tarif, \"\")"
              }, {
                "name" : "pe_tarifacao_percentual",
                "type" : "attribute",
                "label" : "pot_econ_perc",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.5210847310889815,
                "postFuncBody" : "if (value > 0) {\n    return \"(\" + value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1}) +\"%)\";\n}\nreturn \"\";\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table align=\"center\" width=\"98%\">\n            <tr>\n                <td width=\"98%\" class=\"value\" align=\"center\">${pot_economia} ${pot_econ_perc}</td>\n            </tr>\n        </table>\n        <table height=\"5\" width=\"98%\">\n            <tr>\n                <td>&nbsp;</td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"90%\">\n            <tr>\n                <td width=\"90%\" class=\"comment\" align=\"left\">${valores}</td>\n            </tr>\n        </table>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 15px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}\n"
            },
            "title" : "Enquadramento Tarifário",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Ajuda",
                "icon" : "info_outline",
                "type" : "customPretty",
                "customHtml" : "<form #f=\"ngForm\">\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\n        <h2>Ajuda</h2>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\"\n        *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\">\n    </div>\n    <div mat-dialog-content\n        style=\"padding: 20px 20px 20px 20px;\" ng-cloak=\"\">\n\n        <div layout-align=\"space-around left\"\n            style=\"min-width: 300px; max-width: 600px; padding-top: 20px\">\n\n            O potencial de economia por <b>Enquadramento\n                Tarifário</b> existe quando a tarifa Azul é\n            mais vantajosa que a tarifa Verde ou\n            vice-versa.<br>&nbsp;<br>\n            Atente para o seguinte:\n            <ul>\n                <li>Se o site já está usando a tarifa mais\n                    econômica, então o sistema mostra \"-x-\"\n                    pra expressar que não há potencial de\n                    economia.\n                <li>Quando este quadro mostra valor\n                    negativo, significa que a troca de\n                    tarifa daria prejuízo individualmente,\n                    mas traz benefício quando combinada com\n                    as demais sugestões.\n            </ul>\n\n            <u>Importante</u>: O máximo potencial de\n            economia é obtido quando todas as sugestões são\n            adotadas conjuntamente.<br>&nbsp;\n\n        </div>\n    </div>\n\n    <div mat-dialog-actions fxLayout=\"row\"\n        fxLayoutAlign=\"end center\">\n        <button mat-button color=\"primary\" type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n            Fechar\n        </button>\n    </div>\n</form>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenDialog();\n\nfunction openDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    let vm = instance;\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n}\n",
                "customResources" : [ ],
                "id" : "ee890284-1273-dd40-1fa6-af7ca09376e8"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "dd167096-8ee8-4d0c-66e5-03fce645fe73",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "412ec7bf-5ef6-f549-8a63-0f310e50dc6e" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 7,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pe_mercado_livre",
                "type" : "attribute",
                "label" : "pot_economia",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.2965255573256722,
                "postFuncBody" : "value = Number(value)\nif ( value === 0 ) {\n    return \"-x-\"\n}\nreturn \"R$ \"+ value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}); ",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "potencial_economia",
                "type" : "attribute",
                "label" : "valores",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5454112273460223,
                "postFuncBody" : "function RetornaString(prefixo, valor, mindig, maxdig, sufixo) {\n\tif (valor > 0) {\n\t\treturn prefixo + valor.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: mindig, maximumFractionDigits: maxdig}) + sufixo;\n\t}\n\treturn prefixo + \"***\" + sufixo;\n}\n\nfunction RetornaShort(prefixo, valor, sufixo) {\n\tif (valor.length > 0) {\n\t\treturn prefixo + valor + sufixo;\n\t}\n\treturn prefixo + \"***\" + sufixo;\n}\n\nvar result = JSON.parse(value);\nvar tar_ml = 0;\nvar dem_min_ml = 0;\nvar tipo_acl = \"\";\nvar enq_tarif = 0;\n\ntry {\n    tar_ml = (result.pe.mercado_livre.details.tarifa_estimada || 0);    \n    dem_min_ml = (result.pe.mercado_livre.details.demanda_min_ml || 0);    \n    tipo_acl = (result.pe.mercado_livre.details.tipo_energia || 0);    \n    enq_tarif = (result.pe.tarifacao.details.enq_tar_ideal || 0);\n}\ncatch(err) {}\ntxt_return = \"Melhor Opção: Cativo<br>\" \nif (enq_tarif > 1) {\n\ttxt_return = \"\" \n}\ntxt_return = txt_return + \"Tarifa usada: \" + RetornaString(\"R$ \", tar_ml, 0, 0, \" /MWh\")\nif (tipo_acl == \"Incentivada\") {\n\ttxt_return = txt_return + \" (Inc.50%)\"\n}\nif (dem_min_ml > 0) {\n    txt_return = txt_return + \"<br>Demanda Mínima: \" + RetornaString(\"\", dem_min_ml, 0, 0, \" kW\")\n}\nreturn txt_return;\n"
              }, {
                "name" : "pe_mercado_livre_percentual",
                "type" : "attribute",
                "label" : "pot_econ_perc",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.5082554045326317,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value > 0) {\n        return \"(\" + value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1}) +\"%)\";\n    }\n\n}\nreturn \" \";",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table align=\"center\" width=\"98%\">\n            <tr>\n                <td width=\"98%\" class=\"value\" align=\"center\">${pot_economia} ${pot_econ_perc}</td>\n            </tr>\n        </table>\n        <table height=\"5\" width=\"98%\">\n            <tr>\n                <td>&nbsp;</td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"90%\">\n            <tr>\n                <td width=\"90%\" class=\"comment\" align=\"left\">${valores}</td>\n            </tr>\n        </table>\n    </section>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 15px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}\n"
            },
            "title" : "Migração para Mercado Livre",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Ajuda",
                "icon" : "info_outline",
                "type" : "customPretty",
                "customHtml" : "<form #f=\"ngForm\">\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\n        <h2>Ajuda</h2>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\"\n        *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\">\n    </div>\n    <div mat-dialog-content\n        style=\"padding: 20px 20px 20px 20px;\" ng-cloak=\"\">\n\n        <div layout-align=\"space-around left\"\n            style=\"min-width: 300px; max-width: 700px; padding-top: 20px\">\n\n            O potencial de economia por <b>Migração para\n                Mercado Livre</b> existe quando é mais\n            vantajoso para o cliente migrar para o mercado\n            livre ou mesmo voltar para o ambiente\n            cativo.<br>&nbsp;<br>\n            Atente para o seguinte:\n            <ul>\n                <li>Se o site já está no ambiente mais\n                    econômico, então o sistema mostra \"-x-\"\n                    pra expressar que não há potencial de\n                    economia.\n                <li>Dependendo da demanda contratada do\n                    site, o sistema considera o uso de\n                    energia incentivada ou não, inclusive\n                    computando o desconto de 50% sobre a\n                    TUSD frequentemente disponível para\n                    energias renováveis.\n                <li>O mercado livre exige que o site tenha\n                    demanda contratada mínima de 500 kW.\n                <li>No caso de grupos com vários sites, esse\n                    valor de demanda pode ser dividido entre\n                    várias unidades. Por isso o valor da\n                    demanda mínima é parametrizável pelo\n                    usuário (via ícone <img\n                        src=\"https://solarhub.engecomp.io/res/symb_engrenagem.jpeg\"\n                        alt=\"engrenagem\" width=\"12\"\n                        height=\"12\"> no alto e à direita\n                    desta página).\n                <li>O valor de economia apresentado já\n                    considera a alteração para a demanda\n                    mínima parametrizada (se a demanda\n                    contratada atual for inferior). Ou seja,\n                    no caso de aumento de demanda contratada\n                    para atender à exigência do mercado\n                    livre, isso já é considerado neste item,\n                    e não na otimização do <b>Contrato de\n                        Demanda</b> abaixo.\n                <li>As tarifas usadas nos cálculos são\n                    coletadas pela nossa equipe de operações\n                    junto ao mercado e introduzidas no\n                    sistema periodicamente.\n            </ul>\n            <u>Importante</u>: O máximo potencial de\n            economia é obtido quando todas as sugestões são\n            adotadas conjuntamente.<br>&nbsp;\n\n        </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\"\n        fxLayoutAlign=\"end center\">\n        <button mat-button color=\"primary\" type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n            Fechar\n        </button>\n    </div>\n</form>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenDialog();\n\nfunction openDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    let vm = instance;\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n}\n",
                "customResources" : [ ],
                "id" : "325efe55-942b-2248-2925-1da041979876"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "412ec7bf-5ef6-f549-8a63-0f310e50dc6e",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "a45c52f4-45fd-5f10-6eee-348720f538d3" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 8,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pe_contrato_demanda",
                "type" : "attribute",
                "label" : "pot_economia",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.16415263806315394,
                "postFuncBody" : "value = Number(value)\nif ( value <= 0 ) {\n    return \"-x-\"\n}\nreturn \"R$ \"+ value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}); ",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "pe_contrato_demanda_percentual",
                "type" : "attribute",
                "label" : "pot_econ_perc",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.09869608611866854,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value > 0) {\n        return \"(\" + value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1}) +\"%)\";\n    }\n\n}\nreturn \" \";",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "potencial_economia",
                "type" : "attribute",
                "label" : "valores",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.04596221295945213,
                "postFuncBody" : "function RetornaString(prefixo, valor, mindig, maxdig, sufixo) {\n\tif (valor > 0) {\n\t\treturn prefixo + valor.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: mindig, maximumFractionDigits: maxdig}) + sufixo;\n\t}\n\treturn prefixo + \"***\" + sufixo;\n}\n\nfunction RetornaShort(prefixo, valor, sufixo) {\n\tif (valor > 0) {\n\t\treturn prefixo + valor + sufixo;\n\t}\n\treturn prefixo + \"***\" + sufixo;\n}\n\ndebugger;\nvar result = JSON.parse(value);\nvar x = \"\";\nvar dem_fp = 0;\nvar dem_p = 0;\nvar dem_fp_bx = 0;\nvar dem_p_bx = 0;\nvar dem_min_ml = 0;\nvar pe_ml = 0;\nvar enq_tarif = 0;\nvar verde = false;\nvar txt_verde = \"\";\nvar txt_return = \"\";\nvar dem_atual_fp = 0;\nvar dem_atual_p = 0;\nvar status_atual = \"\"\ntry {\n    x = (result.pe.contrato_demanda.details.season || 0);\n    dem_fp = (result.pe.contrato_demanda.details.dem_ideal_fp || 0);    \n    dem_p = (result.pe.contrato_demanda.details.dem_ideal_p || 0);    \n    dem_fp_bx = (result.pe.contrato_demanda.details.dem_ideal_fp_baixa || 0);    \n    dem_p_bx = (result.pe.contrato_demanda.details.dem_ideal_p_baixa || 0);\n    dem_min_ml = (result.pe.mercado_livre.details.demanda_min_ml || 0);    \n    pe_ml = (result.pe.mercado_livre.savings || 0);    \n    enq_tarif = (result.pe.tarifacao.details.enq_tar_ideal || 0);   \n    dem_atual_fp = (result.pe.contrato_demanda.details.contrato_demanda_fp || 0);\n    dem_atual_p = (result.pe.contrato_demanda.details.contrato_demanda_fp || 0);\n    status_atual = (result.status) || \"\";\n}\n\ncatch(err) {}\nif ( enq_tarif === 1) {\n\tverde = true;\n}\n\nif (status_atual == \"Livre\") {\n    dem_min_ml = Math.min(dem_atual_fp, dem_atual_p, dem_min_ml)\n}\n\nif ( enq_tarif === 3) {\n\tverde = true;\n}\n\nif (pe_ml > 0 && enq_tarif >= 2) {\n    if ( x === \"dupla\" ) {\n        if (dem_fp_bx < dem_min_ml) {\n            dem_fp_bx = dem_min_ml;\n            x = \"xxx\"\n        }\n        if (dem_p_bx < dem_min_ml) {\n            dem_p_bx = dem_min_ml;\n            x = \"xxx\"\n        }\n    }\n}\n\ntxt_return = \"Demandas Ideais:<br>\";\nif (dem_fp < dem_min_ml) {\n    if (pe_ml >= 0 && enq_tarif >= 2) {\n        dem_fp = dem_min_ml;\n        txt_return = \"Demandas Consideradas:<br>\";\n    }\n}\ntxt_return = txt_return + RetornaString(\"F.Ponta: \", dem_fp, 0, 0, \" kW\") + \"&nbsp; &nbsp; &nbsp;\";\nif (dem_p < dem_min_ml) {\n    if (pe_ml >= 0 && enq_tarif >= 2) {\n        dem_p = dem_min_ml;\n    }\n}\ntxt_verde = RetornaString(\"Ponta: \", dem_p, 0, 0, \" kW\");\nif ( verde ) {\n\ttxt_verde = \"Ponta: ***\";\n}\n\nif ( x === \"dupla\" ) {\n\ttxt_return = \"Demandas Ideais (com sazonalidade):<br>\" + RetornaShort(\"F.Ponta: \", dem_fp, \"\") + RetornaShort(\"/\", dem_fp_bx, \"\") + \"&nbsp; &nbsp; &nbsp;\";\n\ttxt_verde = RetornaShort(\"Ponta: \", dem_p,\"\") + RetornaShort(\"/\", dem_p_bx, \" kW\");\n\tif ( verde ) {\n\t\ttxt_verde = \"Ponta: ***\";\n\t}\n}\nreturn txt_return + txt_verde;",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table align=\"center\" width=\"98%\">\n            <tr>\n                <td width=\"98%\" class=\"value\" align=\"center\">${pot_economia} ${pot_econ_perc}</td>\n            </tr>\n        </table>\n        <table height=\"5\" width=\"98%\">\n            <tr>\n                <td>&nbsp;</td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"90%\">\n            <tr>\n                <td width=\"90%\" class=\"comment\" align=\"left\">${valores}</td>\n            </tr>\n        </table>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 15px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}\n"
            },
            "title" : "Contrato de Demanda",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Ajuda",
                "icon" : "info_outline",
                "type" : "customPretty",
                "customHtml" : "<form #f=\"ngForm\">\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\n        <h2>Ajuda</h2>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\"\n        *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\">\n    </div>\n    <div mat-dialog-content\n        style=\"padding: 20px 20px 20px 20px;\" ng-cloak=\"\">\n\n        <div layout-align=\"space-around left\"\n            style=\"min-width: 300px; max-width: 700px; padding-top: 20px\">\n\n            O potencial de economia por <b>Contrato de\n                Demanda</b> é decorrente da otimização das\n            demandas contratadas. Para estimar os valores\n            ideais, o sistema analisa o histórico dos\n            últimos 12 meses de demandas registradas\n            (telemetria ou faturas) e simula o custo anual\n            para demandas de todos os valores possíveis,\n            tanto para F.Ponta como para Ponta (no caso de\n            tarifa Azul) de forma\n            independente.<br>&nbsp;<br>\n\n            Atente para o seguinte:\n            <ul>\n                <li>A demanda ideal é sempre um valor entre\n                    a máxima e a mínima demanda registrada\n                    nos últimos 12 meses, e nem sempre é um\n                    valor que evita multas de ultrapassagem.\n                    Pode ser que compense pagar multa uma\n                    vez por ano e economizar nos demais 11\n                    meses.\n\n                <li>A regulação vigente permite a alteração\n                    das demandas contratadas a cada 6 meses.\n                    Por isso, se o sistema detectar uma\n                    sazonalidade nos valores analisados,\n                    poderá sugerir 2 valores de demanda\n                    contratada distintos, um para a \"alta\" e\n                    outro para a \"baixa\" estação, tanto para\n                    F.Ponta como para Ponta (no caso de\n                    tarifa Azul).\n\n                <li>Caso o usuário não deseje considerar a\n                    sazonalidade, pode pode desligar esta\n                    função via ícone <img\n                        src=\"https://solarhub.engecomp.io/res/symb_engrenagem.jpeg\"\n                        alt=\"engrenagem\" width=\"12\"\n                        height=\"12\"> no alto e à direita\n                    desta página, e depois selecionando\n                    \"Não\" para o parâmetro \"Considera\n                    demandas sazonais?\".\n            </ul>\n\n            <u>Importante</u>: A otimização do contrato de\n            demanda não considera a atuação nas cargas via\n            controle de demanda. No caso de instalação de\n            sistema inteligente de controle, é possível\n            economizar ainda mais que o indicado\n            aqui.<br>&nbsp;\n\n        </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\"\n        fxLayoutAlign=\"end center\">\n        <button mat-button color=\"primary\" type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n            Fechar\n        </button>\n    </div>\n</form>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenDialog();\n\nfunction openDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    let vm = instance;\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n}\n",
                "customResources" : [ ],
                "id" : "aa913050-7468-e0c0-b14f-e4eb12a73539"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "a45c52f4-45fd-5f10-6eee-348720f538d3",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "67ff928a-b2f4-c4c6-b3a5-f3048996f168" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 7,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pe_fator_potencia",
                "type" : "attribute",
                "label" : "pot_economia",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.9441934348814869,
                "postFuncBody" : "value = Number(value)\nif ( value === 0 ) {\n    return \"-x-\"\n}\nreturn \"R$ \"+ value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}); ",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "potencial_economia",
                "type" : "attribute",
                "label" : "valores",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5650251848632832,
                "postFuncBody" : "function RetornaString(prefixo, valor, mindig, maxdig, sufixo) {\n\tif (valor > 0) {\n\t\treturn prefixo + valor.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: mindig, maximumFractionDigits: maxdig}) + sufixo;\n\t}\n\treturn prefixo + \"***\" + sufixo;\n}\n\nfunction RetornaShort(prefixo, valor, sufixo) {\n\tif (valor > 0) {\n\t\treturn prefixo + valor + sufixo;\n\t}\n\treturn prefixo + \"***\";\n}\n\nvar result = JSON.parse(value);\nvar caps_in = 0;\nvar caps_out = 0;\n\ntry {\n    caps_in = (result.pe.fator_potencia.details.Caps_In || 0);    \n    caps_out = (result.pe.fator_potencia.details.Caps_Out || 0);    \n}\ncatch(err) {}\nreturn \"Correção Necessária: <br>\" + RetornaShort(\"Incluir: \", caps_in, \" kVAr\") + \"&nbsp; &nbsp; &nbsp;\" + RetornaShort(\"Excluir: \", caps_out, \" kVAr\")"
              }, {
                "name" : "pe_fator_potencia_percentual",
                "type" : "attribute",
                "label" : "pot_econ_perc",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.058646012420297655,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value > 0) {\n        return \"(\" + value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1}) +\"%)\";\n    }\n\n}\nreturn \" \";",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table align=\"center\" width=\"98%\">\n            <tr>\n                <td width=\"98%\" class=\"value\" align=\"center\">${pot_economia} ${pot_econ_perc}</td>\n            </tr>\n        </table>\n        <table height=\"5\" width=\"98%\">\n            <tr>\n                <td>&nbsp;</td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"90%\">\n            <tr>\n                <td width=\"90%\" class=\"comment\" align=\"left\">${valores}</td>\n            </tr>\n        </table>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 15px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}\n"
            },
            "title" : "Correção do Fator de Potência",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Ajuda",
                "icon" : "info_outline",
                "type" : "customPretty",
                "customHtml" : "<form #f=\"ngForm\">\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\n        <h2>Ajuda</h2>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\"\n        *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\">\n    </div>\n    <div mat-dialog-content\n        style=\"padding: 20px 20px 20px 20px;\" ng-cloak=\"\">\n\n        <div layout-align=\"space-around left\"\n            style=\"min-width: 300px; max-width: 600px; padding-top: 20px\">\n\n            O potencial de economia por\n            <b>Correção do Fator de Potência</b>\n            é decorrente da eliminação das\n            multas devidas a excedente reativo\n            no histórico de cada\n            <em>site</em>.<br>&nbsp;<br>\n\n            A forma mais comum de correção deste\n            problema é incluindo ou excluindo\n            bancos de capacitores nos horários\n            onde o excedente reativo é\n            verificado. Para tanto, é necessário\n            automatizar adequadamente a entrada\n            e saída de capacitares na sua\n            instalação.<br>&nbsp;<br>\n\n            Em função da regulação vigente, o\n            sistema mostra o valor de\n            capacitores adicionais necessários\n            para o período das 6 às 24 horas, e\n            a quantidade de capacitores a ser\n            desligada durante a madrugada (das 0\n            às 6 horas).<br>&nbsp;<br>\n\n            <u>Observação</u>: Dadas as\n            particularidades de cada instalação,\n            não são considerados os custos de\n            implantação de tais\n            correções.<br>&nbsp;<br>\n\n            Caso a correção já tenha sido feita,\n            o usuário pode pode desativar esse\n            cálculo por meio do ícone <img\n                src=\"https://solarhub.engecomp.io/res/symb_engrenagem.jpeg\"\n                alt=\"engrenagem\" width=\"12\" height=\"12\"> no\n            alto e à direita\n            desta página, e depois selecionando\n            \"Não\" para o parâmetro \"Considera\n            Correção de F.Potência?\".<br>&nbsp;\n\n        </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\"\n        fxLayoutAlign=\"end center\">\n        <button mat-button color=\"primary\" type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n            Fechar\n        </button>\n    </div>\n</form>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenDialog();\n\nfunction openDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    let vm = instance;\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n}\n",
                "customResources" : [ ],
                "id" : "4137ddeb-e276-a696-a63e-c14f486a43f8"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "67ff928a-b2f4-c4c6-b3a5-f3048996f168",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "a7db8ef3-f271-6b8e-e25c-8be3c63748e6" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 7,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pe_geracao_solar",
                "type" : "attribute",
                "label" : "pot_economia",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.44043491086513686,
                "postFuncBody" : "value = Number(value)\nif ( value === 0 ) {\n    return \"-x-\"\n}\nreturn \"R$ \"+ value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}); ",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "pe_geracao_solar_percentual",
                "type" : "attribute",
                "label" : "pot_econ_perc",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.8727630809752305,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value > 0) {\n        return \"(\" + value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1}) +\"%)\";\n    }\n\n}\nreturn \" \";",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "potencial_economia",
                "type" : "attribute",
                "label" : "valores",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.06563582480402785,
                "postFuncBody" : "function RetornaString(prefixo, valor, mindig, maxdig, sufixo) {\n\tif (valor > 0) {\n\t\treturn prefixo + valor.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: mindig, maximumFractionDigits: maxdig}) + sufixo;\n\t}\n\treturn prefixo + \"***\" + sufixo;\n}\n\nfunction RetornaShort(prefixo, valor, sufixo) {\n\tif (valor.length > 0) {\n\t\treturn prefixo + valor + sufixo;\n\t}\n\treturn prefixo + \"***\" + sufixo;\n}\n\nvar result = JSON.parse(value);\nvar tipo_sist = 0;\nvar pot_ger = 0;\nvar custo_ger = 0;\n\ntry {\n    tipo_sist = (result.pe.geracao_solar.details.TipoSistema || 0);    \n    pot_ger = (result.pe.geracao_solar.details.PotSistema || 0);    \n    custo_ger = (result.pe.geracao_solar.details.PrecoKWHSolar || 0);    \n}\ncatch(err) {}\nreturn \"Sistema: \" + RetornaShort(\"\", tipo_sist, \" \") + RetornaString(\"\", pot_ger, 0, 0, \" kWp\") + \"<br>\" + RetornaString(\"Custo estimado: R$ \", custo_ger, 2, 2, \" /MWh\")"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table align=\"center\" width=\"98%\">\n            <tr>\n                <td width=\"98%\" class=\"value\" align=\"center\">${pot_economia} ${pot_econ_perc}</td>\n            </tr>\n        </table>\n        <table height=\"5\" width=\"98%\">\n            <tr>\n                <td>&nbsp;</td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"90%\">\n            <tr>\n                <td width=\"90%\" class=\"comment\" align=\"left\">${valores}</td>\n            </tr>\n        </table>\n    </section>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 15px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}\n"
            },
            "title" : "Geração Solar",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Ajuda",
                "icon" : "info_outline",
                "type" : "customPretty",
                "customHtml" : "<form #f=\"ngForm\">\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\n        <h2>Ajuda</h2>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\"\n        *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\">\n    </div>\n    <div mat-dialog-content\n        style=\"padding: 20px 20px 20px 20px;\" ng-cloak=\"\">\n\n        <div layout-align=\"space-around left\"\n            style=\"min-width: 300px; max-width: 700px; padding-top: 20px\">\n\n            O potencial de economia por <b>Geração Solar</b>\n            considera a possibilidade de economia por meio\n            de uma mini-usina solar no telhado da sua\n            instalação. <br>&nbsp;<br>\n            O sistema utiliza o conceito de <a\n                href=\"https://en.wikipedia.org/wiki/Levelized_cost_of_energy\"\n                target=\"_blank\">LCOE (Levelized Cost Of\n                Energy)</a> para sistemas de 100 a 1000 kW\n            nas seguintes condições:\n            <ul>\n                <li>Carência de 24 meses.\n                <li>Amortização em 48 meses.\n                <li>Juros efetivos de 1,6% ao mês.\n            </ul>\n\n            Atente para o seguinte:\n            <ul>\n                <li>Mesmo que sua empresa não queira fazer\n                    investimentos, há empresas que oferecem\n                    <b>Solar-as-a-Service</b> e que se\n                    dispõem a fazer o investimento.\n                <li>O potencial calculado é para uso do\n                    telhado da sua instalação. Caso queira\n                    definir a área real disponível (m2) no\n                    seu <i>site</i>, clique no ícone <img\n                        src=\"https://solarhub.engecomp.io/res/symb_engrenagem.jpeg\"\n                        alt=\"engrenagem\" width=\"12\"\n                        height=\"12\"> no alto e à direita\n                    desta página e cadastre o valor.\n                <li>Caso sua empresa não queira considerar\n                    esse potencial de economia, use o ícone\n                    acima e altere a parametrização.\n                <li>O sistema possui custos de implantação\n                    para as áreas de 18 distribuidoras, e\n                    portanto pode ser que o sistema não\n                    tenha informações para a sua região.\n            </ul>\n\n            <u>Observação</u>: Nossa equipe de operações\n            coleta estas informações e alimenta o sistema\n            periodicamente. No entanto, há que se fazer\n            consultas específicas para cada caso para maior\n            precisão nos valores.<br>&nbsp;\n\n        </div>\n        </div>\n        <div mat-dialog-actions fxLayout=\"row\"\n            fxLayoutAlign=\"end center\">\n            <button mat-button color=\"primary\" type=\"button\"\n                [disabled]=\"(isLoading$ | async)\"\n                (click)=\"cancel()\" cdkFocusInitial>\n                Fechar\n            </button>\n        </div>\n</form>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenDialog();\n\nfunction openDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    let vm = instance;\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n}\n",
                "customResources" : [ ],
                "id" : "4afb2e8e-35ee-5003-f38d-1af48ed1a41e"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "a7db8ef3-f271-6b8e-e25c-8be3c63748e6",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "19fdaeba-9fd1-f032-f5be-dfad560b46ca" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 7,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pe_geracao_ponta",
                "type" : "attribute",
                "label" : "pot_economia",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.16772192047687517,
                "postFuncBody" : "value = Number(value)\nif ( value === 0 ) {\n    return \"-x-\"\n}\nreturn \"R$ \"+ value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}); ",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "potencial_economia",
                "type" : "attribute",
                "label" : "valores",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.1345495651053048,
                "postFuncBody" : "function RetornaString(prefixo, valor, mindig, maxdig, sufixo) {\n\tif (valor > 0) {\n\t\treturn prefixo + valor.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: mindig, maximumFractionDigits: maxdig}) + sufixo;\n\t}\n\treturn prefixo + \"***\" + sufixo;\n}\n\nfunction RetornaShort(prefixo, valor, sufixo) {\n\tif (valor.length > 0) {\n\t\treturn prefixo + valor + sufixo;\n\t}\n\treturn prefixo + \"***\" + sufixo;\n}\n\nvar result = JSON.parse(value);\nvar pot_ger = 0;\nvar custo_loc = 0;\nvar custo_ger = 0;\n\ntry {\n    pot_ger = (result.pe.geracao_ponta.details.potencia || 0);    \n    custo_loc = (result.pe.geracao_ponta.details.custo_locacao || 0);    \n    custo_ger = (result.pe.geracao_ponta.details.custo_geracao || 0);    \n}\ncatch(err) {}\nreturn \"Gerador: \" + RetornaString(\"\", pot_ger, 0, 0, \" kVA Diesel\") + \"<br>\" + RetornaString(\"Custos: R$ \", custo_loc, 0, 0, \" /mês\") + RetornaString(\" + R$ \", custo_ger, 0, 0, \" /MWh\");"
              }, {
                "name" : "pe_geracao_ponta_percentual",
                "type" : "attribute",
                "label" : "pot_econ_perc",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.6919486513653996,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value > 0) {\n        return \"(\" + value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1}) +\"%)\";\n    }\n\n}\nreturn \" \";",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table align=\"center\" width=\"98%\">\n            <tr>\n                <td width=\"98%\" class=\"value\" align=\"center\">${pot_economia} ${pot_econ_perc}</td>\n            </tr>\n        </table>\n        <table height=\"5\" width=\"98%\">\n            <tr>\n                <td>&nbsp;</td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"90%\">\n            <tr>\n                <td width=\"90%\" class=\"comment\" align=\"left\">${valores}</td>\n            </tr>\n        </table>\n    </section>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 15px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}\n"
            },
            "title" : "Geração na Ponta",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Ajuda",
                "icon" : "info_outline",
                "type" : "customPretty",
                "customHtml" : "<form #f=\"ngForm\">\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\n        <h2>Ajuda</h2>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\"\n        *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\">\n    </div>\n    <div mat-dialog-content\n        style=\"padding: 20px 20px 20px 20px;\" ng-cloak=\"\">\n\n        <div layout-align=\"space-around left\"\n            style=\"min-width: 300px; max-width: 700px; padding-top: 20px\">\n\n            O potencial de economia por <b>Geração na\n                Ponta</b> considera a possibilidade de\n            economia por meio de uma outra fonte de energia\n            no horário de Ponta, quando a energia elétrica é\n            mais cara. <br>&nbsp;<br>\n            O sistema considera o uso de geradores de 10 a\n            800 kVA (e combinações destes até 5000 kVA) e\n            seus custos correspondentes abaixo:\n            <ul>\n                <li>Custo de combustível (óleo diesel)\n                <li>Custo de locação mensal do equipamento,\n                    que inclui manutenção.\n            </ul>\n            <u>Observações</u>:\n            <ul>\n                <li>Caso exista gerador que possa ser usado\n                    para esta finalidade, clique no ícone\n                    <img src=\"https://solarhub.engecomp.io/res/symb_engrenagem.jpeg\"\n                        alt=\"engrenagem\" width=\"12\"\n                        height=\"12\"> no alto e à direita\n                    desta página e cadastre a potência\n                    nominal do equipamento.\n                <li>Caso sua empresa não queira considerar\n                    esse potencial de economia, use o ícone\n                    acima e altere a parametrização.\n                <li>Nossa equipe de operações coleta estas\n                    informações e alimenta o sistema\n                    periodicamente. No entanto, há que se\n                    fazer consultas específicas para cada\n                    caso para maior precisão nos valores.\n            </ul>\n\n        </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\"\n        fxLayoutAlign=\"end center\">\n        <button mat-button color=\"primary\" type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n            Fechar\n        </button>\n    </div>\n</form>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenDialog();\n\nfunction openDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    let vm = instance;\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n}\n",
                "customResources" : [ ],
                "id" : "727ba7bd-259f-0a2f-5ab1-cc26c521e889"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "19fdaeba-9fd1-f032-f5be-dfad560b46ca",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "3c811f98-ad2d-8053-5f1f-e16390576d4c" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "pm_wh_produced_delta_day_sum",
                "type" : "timeseries",
                "label" : "producao",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.5136528912518399,
                "postFuncBody" : "unit = \"kWh\";\n//value /= 1000;\t\t// to kWh\nif (value >= 1000) {\n\tvalue /= 1000;\t// to MWh\n\tunit = \"MWh\";\n}\n\ns = value.toLocaleString('pt-BR', { style: 'decimal', minimumSignificantDigits: 3, maximumSignificantDigits: 3});\nreturn s + \" \" + unit;\n"
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardCss" : ".card,\n.card * {\n    box-sizing: border-box;\n}    \n.card {\n    position: relative;\n    width: 100%;\n    height: 100%;\n}\n.card .content {\n    height: 100%;\n}\n.card .upper-bar {\n    position: relative;\n    z-index: 0;\n    overflow: hidden;\n    height: 100%;\n    box-shadow: 0 1px 3px 0 rgba(0,0,0,.26);\n    color: #fff;\n}\n.card .lower-bar {\n    height: 0%;\n    padding-left: 16px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n.card .image-shade {\n    width: 100%;\n    height: 100%;\n    padding-left: 16px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background-color: rgba(255, 157, 12, .5);\n    z-index: 0;\n}\n.card h1 {\n    margin: 0;\n    /* font-size: 120%; */\n    font-size: 2.0vh;\n    font-weight: bold;\n    line-height: 20px;\n}\n.card .icon-container {\n    height: 40px;\n    width: 40px;\n    border-radius: 50%;\n    border: 3px solid rgb(255, 157, 12);\n    text-align: center;\n}\n.card .description {\n    margin-left: 16px;\n    font-size: 16px;\n    font-weight: 500;\n    color: rgb(255, 157, 12);\n}\n.card .value {\n    font-size: 200%;\n    font-weight: 300;\n    letter-spacing: -2px;\n}\n.card .icon {\n    line-height: 36px;\n    color: rgb(255, 157, 12);\n}\n.card video {\n    position: absolute;\n    top: 50%;\n    left: 0;\n    width: 100%;\n    z-index: -1;\n    transform: translateY(-50%);\n}",
              "cardHtml" : "<div class='card'>\n    <div class='content'>\n       <div class='upper-bar'>\n           <video loop muted autoplay>\n               <source src=\"https://solarhub.engecomp.io/res/sunset.mp4\" type=\"video/mp4\">\n           </video>\n            <div class='image-shade'>\n                <h1>Geração Hoje</h1>\n                <div class='value'>${producao}</div> \n            </div>\n       </div>\n    </div>\n</div>"
            },
            "title" : "Geração Hoje (MWh)",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "units" : "W",
            "decimals" : 0,
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "3c811f98-ad2d-8053-5f1f-e16390576d4c",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "1ddc975c-0501-4d0c-b0e9-64a3491ebeba" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "pm_wh_produced_delta_month_sum",
                "type" : "timeseries",
                "label" : "valor",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.9809296296038252,
                "postFuncBody" : "function numberWithCommas(x, y, z) {\n    return x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z});\n}\n\nunit = 'kWh';\ns = \"0\";\nif (value > 10000000) {\n\tunit = \"GWh\";\n\tvalue /= 1000000;\n\ts = numberWithCommas(value, 1, 1);\n} else if (value > 10000) {\n\tunit = \"MWh\";\n\tvalue /= 1000;\n\ts = numberWithCommas(value, 1, 1);\n} else if (value < 10000) {\n\ts = numberWithCommas(value, 0, 0);\n}\nreturn s + \" \" + unit;\n"
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Geração Mês",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "1ddc975c-0501-4d0c-b0e9-64a3491ebeba",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "947f3bab-45eb-4a11-8178-eabfc47d96ea" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "energy_average_year",
                "type" : "timeseries",
                "label" : "valor",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.6569636861435231,
                "postFuncBody" : "function numberWithCommas(x, y, z) {\n    return x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z});\n}\n\nunit = 'kWh';\ns = \"0\";\nif (value > 10000000) {\n\tunit = \"MWh\";\n\tvalue /= 1000;\n\ts = numberWithCommas(value, 0, 0);\n} else if (value > 10000) {\n\tunit = \"MWh\";\n\tvalue /= 1000;\n\ts = numberWithCommas(value, 1, 1);\n} else if (value < 10000) {\n\ts = numberWithCommas(value, 0, 0);\n}\nreturn s + \" \" + unit;\n"
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Geração Anual",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "947f3bab-45eb-4a11-8178-eabfc47d96ea",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "5ef986d0-937a-4e4a-b777-c7898e59596e" : {
          "type" : "latest",
          "sizeX" : 30,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "serial",
                "type" : "attribute",
                "label" : "serial",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.2480594686375368,
                "decimals" : 0,
                "postFuncBody" : "return \"Remota: \"+value;"
              }, {
                "name" : "latitude",
                "type" : "attribute",
                "label" : "latitude",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.4835535055608968
              }, {
                "name" : "longitude",
                "type" : "attribute",
                "label" : "longitude",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.5324887104274882
              }, {
                "name" : "last_interval_wh",
                "type" : "attribute",
                "label" : "last_interval_wh",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.2071656997465714,
                "units" : "",
                "decimals" : null,
                "postFuncBody" : "function formattedNumber1(x) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 1}); \n}\nfunction formattedNumber0(x) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0});\n}\n\nif (value > 250) {\n    return formattedNumber0(value*4)+' kW';\n}\n\nreturn formattedNumber1(value*4)+' kW';"
              }, {
                "name" : "last_interval_pf",
                "type" : "attribute",
                "label" : "last_interval_pf",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.736267887298353,
                "units" : "",
                "decimals" : null,
                "postFuncBody" : "function formattedNumber(x) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 2, minimumFractionDigits: 2}); \n}\n\nif (value > 0) {\n    post = \" (Ind)\"\n} else {\n    post = \" (Cap)\"\n}\n\nreturn formattedNumber(value)+post;"
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.16456604186865653,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"-- SEM NOME --\"    \n}\nreturn nome;"
              }, {
                "name" : "last_interval_ts",
                "type" : "attribute",
                "label" : "last_interval_ts",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.4575188999208146,
                "postFuncBody" : "return moment.unix(value/1000).format('DD-MMM HH:mm');\n"
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "classe_tensao",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.41833777839022757,
                "postFuncBody" : "var dict = {\n    0:\"?Classe?\",\n    1:\"A1\",\n    2:\"A2\",\n    3:\"A3\",\n    4:\"A3a\",\n    5:\"A4\",\n    6:\"AS\",\n    7:\"B1\",\n    8:\"B2\",\n    9:\"B3\"\n};\nreturn dict[value];"
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "utility",
                "color" : "#ff9800",
                "settings" : { },
                "_hash" : 0.09683687422599174,
                "postFuncBody" : "var dict = {\n    0: \"?Distribuidora?\",\n    1: \"CPFL PIRATININGA\",\n    2: \"ENEL SP\",\n    3: \"LIGHT\",\n    4: \"COPEL\",\n    5: \"CEMIG\",\n    6: \"ELEKTRO\",\n    7: \"CELPE\",\n    8: \"CEA AMAPA\",\n    9: \"COELBA\",\n    10: \"CEB\",\n    11: \"COSERN\",\n    12: \"CPFL PAULISTA\",\n    13: \"CEEE\",\n    14: \"EDP ES\",\n    15: \"EDP SP\",\n    16: \"CELESC\",\n    17: \"ELETROBRAS AL\",\n    18: \"ELETROBRAS AM\",\n    19: \"ENEL CE COELCE\",\n    20: \"ENEL RJ AMPLA\",\n    21: \"CELG\",\n    22: \"ENERGISA ACE\",\n    23: \"ENERGISA MG\",\n    24: \"ENERGISA MSL\",\n    25: \"ENERGISA MT\",\n    26: \"ENERGISA PB\",\n    27: \"ENERGISA BORBOREMA\",\n    28: \"ENERGISA RJ\",\n    29: \"ENERGISA RO\",\n    30: \"ENERGISA SE\",\n    31: \"ENERGISA SUL-SE\",\n    32: \"ENERGISA TO\",\n    33: \"EQUATORIAL MA\",\n    34: \"EQUATORIAL PI\",\n    35: \"CELPA\",\n    36: \"RGE SUL\",\n    37: \"CPFL JAGUARI\",\n    38: \"CPFL LESTE PAULISTA\",\n    39: \"CPFL MOCOCA\",\n    40: \"CPFL SANTA CRUZ\",\n    41: \"CPFL SUL PAULISTA\",\n    42: \"RGE\" \n};\nreturn dict[value];"
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#673ab7",
                "settings" : { },
                "_hash" : 0.6583591669145992
              }, {
                "name" : "potencia_nominal",
                "type" : "attribute",
                "label" : "potencia",
                "color" : "#03a9f4",
                "settings" : { },
                "_hash" : 0.06933147736120282,
                "postFuncBody" : "return value + \" kW\";"
              } ],
              "entityAliasId" : "48230aec-e803-e27d-3129-e2e9f331d1b2"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "fitMapBounds" : true,
              "latKeyName" : "latitude",
              "lngKeyName" : "longitude",
              "showLabel" : false,
              "label" : "${description}",
              "tooltipPattern" : "<b>${description}</b><br/>\n${entityName}<br/>\n<br/>\n<b>Cidade:</b> ${cidade}<br/>\n<b>Potência:</b> ${potencia}<br/>\n<b>Distribuidora:</b> ${utility}<br/>",
              "markerImageSize" : 34,
              "useColorFunction" : false,
              "markerImages" : [ "tb-image;/api/images/system/map_marker_image_0.png", "tb-image;/api/images/system/map_marker_image_1.png", "tb-image;/api/images/system/map_marker_image_2.png", "tb-image;/api/images/system/map_marker_image_3.png" ],
              "useMarkerImageFunction" : true,
              "colorFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'colorpin') {\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120 * 100;\n\t    return tinycolor.mix('blue', 'red', amount = percent).toHexString();\n\t}\n\treturn 'blue';\n}\n",
              "markerImageFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'thermomether') {\n\tvar res = {\n\t    url: images[0],\n\t    size: 40\n\t}\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120;\n\t    var index = Math.min(3, Math.floor(4 * percent));\n\t    res.url = images[index];\n\t}\n\treturn res;\n}",
              "color" : "#fe7569",
              "mapProvider" : "OpenStreetMap.Mapnik",
              "showTooltip" : true,
              "autocloseTooltip" : true,
              "tooltipFunction" : "var deviceType = dsData[dsIndex]['deviceType'];\r\nif (typeof deviceType !== undefined) {\r\n    if (deviceType == \"energy meter\") {\r\n        return '<b>${alias}</b><br/><b>Energy:</b> ${energy:2} kWt<br/>';\r\n    } else if (deviceType == \"thermometer\") {\r\n        return '<b>${alias}</b><br/><b>Temperature:</b> ${temperature:2} °C<br/>';\r\n    }\r\n}",
              "labelFunction" : "var deviceType = dsData[dsIndex]['deviceType'];\r\nif (typeof deviceType !== undefined) {\r\n    if (deviceType == \"energy meter\") {\r\n        return '<span style=\"color:orange;\">${alias}, ${energy:2} kWt</span>';\r\n    } else if (deviceType == \"thermometer\") {\r\n        return '<span style=\"color:blue;\">${alias}, ${temperature:2} °C</span>';\r\n    }\r\n}",
              "polygonKeyName" : "coordinates",
              "polygonOpacity" : 0.5,
              "polygonStrokeOpacity" : 1,
              "polygonStrokeWeight" : 1,
              "customProviderTileUrl" : "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
              "showTooltipAction" : "hover",
              "useLabelFunction" : false,
              "defaultCenterPosition" : "0,0",
              "zoomOnClick" : true,
              "showCoverageOnHover" : true,
              "animate" : true,
              "maxClusterRadius" : 80,
              "removeOutsideVisibleBounds" : true,
              "useClusterMarkers" : true,
              "provider" : "openstreet-map",
              "mapPageSize" : 16384
            },
            "title" : "Unidades Monitoradas",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : {
              "markerClick" : [ {
                "name" : "Detalhes do ponto",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "solar_usina",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Usina",
                "openRightLayout" : false,
                "id" : "d3e01a61-d917-ce67-7582-c2db686ca4ce"
              } ],
              "tooltipAction" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "5ef986d0-937a-4e4a-b777-c7898e59596e",
          "typeFullFqn" : "system.maps_v2.openstreetmap"
        },
        "5b1f3358-e8b7-498c-be90-a0d48dd00b43" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "co2",
                "type" : "timeseries",
                "label" : "valor",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.6102289419818885,
                "postFuncBody" : "if (value > 100000) {\n    return (value/1000).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}) + \" ton\";\n}\nif (value > 1000) {\n    return (value/1000).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 1}) + \" ton\";\n}\nif (value > 0) {\n    return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}) + \" kg\";\n}\nreturn \"-x-\";\n"
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807301,
                  "endTimeMs" : 1678878207301
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor} ${co2}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "CO2 Ano",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "5b1f3358-e8b7-498c-be90-a0d48dd00b43",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "354369f9-559b-415e-a152-8672b5501f3f" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "trees",
                "type" : "timeseries",
                "label" : "valor",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.030208258174472702,
                "decimals" : null,
                "postFuncBody" : "s = Math.round(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\nreturn s + \" árvores\";"
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Árvores",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "354369f9-559b-415e-a152-8672b5501f3f",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "8fb600f2-c4f8-4bb3-b68f-cee29c110a63" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 23,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgba(255, 255, 255, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Usina",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Usinas do Cliente",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "48230aec-e803-e27d-3129-e2e9f331d1b2",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "Usina",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.5520453912007539,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~SEM NOME\"    \n}\nreturn nome;"
              } ]
            } ],
            "enableDataExport" : false,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "name" : "Detalhes da unidade",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : null,
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Usina",
                "openRightLayout" : false,
                "id" : "1bcd40cc-9729-3bee-bef3-88b9eb0ea280"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "8fb600f2-c4f8-4bb3-b68f-cee29c110a63",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "41ca2940-cac9-4d21-b023-ffe5d6984002" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "alias",
                "type" : "attribute",
                "label" : "alias",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5671112303010537
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "serial",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5235226956368948,
                "postFuncBody" : "return \"SN: \" + value;"
              }, {
                "name" : "firmware_version",
                "type" : "attribute",
                "label" : "firmware_version",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.53024477538874
              }, {
                "name" : "last_telemetry",
                "type" : "attribute",
                "label" : "last_telemetry",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.5057664517123861
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.08753771580722458,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"-- SEM NOME --\"    \n}\nreturn nome;"
              }, {
                "name" : "potencia_nominal",
                "type" : "attribute",
                "label" : "potencia",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.35598535893113703,
                "postFuncBody" : "if (value > 0) {\n    return \"Potência: \" + value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}) + \" kWp\";\n}\nreturn \"\";",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.4759066416403721
              }, {
                "name" : "demanda_contratada",
                "type" : "attribute",
                "label" : "demanda_contratada",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.31982662730128975,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "if (value > 0) {\n    return \"Demanda: \" + value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}) + \" kW\";    \n}\nreturn \"\";"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgb(255, 255, 255)",
            "padding" : "10px",
            "settings" : {
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value {\n    font-size: 1.7vh;\n    font-weight: 300;\n}\n\n.card .title {\n    font-size: 2.0vh;\n    font-weight: bold;\n    color: #bdfbf8;\n}\n\n.card .description {\n    font-size: 14px;\n    color: #999;\n}\n",
              "cardHtml" : "<div class='card'>\n    <div class='content'>\n        <div class='column'>\n            <div class='title'>\n                ${description}\n            </div>    \n            <div class='value'>\n                ${cidade}<br />\n                ${potencia}<br>\n                ${demanda_contratada}\n            </div>    \n        </div>\n    </div>\n</div>\n"
            },
            "title" : "id_site_usina_gd",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "41ca2940-cac9-4d21-b023-ffe5d6984002",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "68f65761-78a6-4420-a24f-6bed457c66c3" : {
          "type" : "timeseries",
          "sizeX" : 54,
          "sizeY" : 23,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "pm_wh_produced_delta_hour_sum",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ ],
                  "stackId" : "Stack0"
                },
                "_hash" : 0.7576602415989884
              }, {
                "name" : "pm_wh_produced_delta_day_sum",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ ],
                  "stackId" : "Stack0"
                },
                "_hash" : 0.3141303968602689
              }, {
                "name" : "pm_wh_produced_delta_month_sum",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ ],
                  "stackId" : "Stack0"
                },
                "_hash" : 0.8266447558145811
              }, {
                "name" : "pm_wh_produced_delta_year_sum",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ ],
                  "stackId" : "Stack0"
                },
                "_hash" : 0.6561579872170398
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            }, {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy_day_sum",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#35b89b",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.775970060092328
              }, {
                "name" : "Active Energy_hour_sum",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#35b89b",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.1765717297321745
              }, {
                "name" : "Active Energy_month_sum",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#35b89b",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.8525770833834116
              }, {
                "name" : "Active Energy_year_sum",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#35b89b",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.22479519946118365
              } ],
              "entityAliasId" : "13a3d106-d96a-c88d-0ba4-36ceaaa1cb66"
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : true,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1659322799000,
                  "endTimeMs" : 1662001199999
                },
                "interval" : 63072000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : true,
              "timeWindows" : [ "Hoje", "24H", "7D", "30D", "12M" ],
              "initialTimeWindow" : "30D",
              "timeWindowsUnits" : "hour,hour,day,day,month",
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "leftScaleTicks" : "callback = function(value, index, values) {\nreturn value.toLocaleString('pt-BR', {\nstyle: 'decimal',\nmaximumFractionDigits: 1,\nminimumSignificantDigits: 2\n});\n}\nticks = {\nbeginAtZero: true,\ncallback: callback\n}\nreturn ticks",
              "stacked" : false,
              "tooltipSettings" : "var tooltip = {\n    intersect: false,\n    mode: 'index',\n    position: 'nearest',\n    itemSort: function(a, b, data) {\n        //data.datasets[a.datasetIndex].label\n    },\n    callbacks: {\n\n        label: function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            label += tooltipItem.yLabel\n                .toLocaleString('pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n    }\n}\n\nreturn tooltip",
              "roundToUnit" : true,
              "showContractedDemandCurves" : false,
              "showOverFlowInRed" : false,
              "sortLegendByLabel" : false,
              "roundingMethod" : "same",
              "showRightScale" : false,
              "showRightScale2" : false
            },
            "title" : "Geração (kWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "68f65761-78a6-4420-a24f-6bed457c66c3",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "3a606d5c-bf8d-4c1f-8db3-35ff236d741f" : {
          "type" : "latest",
          "sizeX" : 54,
          "sizeY" : 11,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.6581887544732115,
                "postFuncBody" : "return \"UC: \"+ value;"
              }, {
                "name" : "endereco",
                "type" : "attribute",
                "label" : "endereco",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.29428729276659693
              }, {
                "name" : "cep",
                "type" : "attribute",
                "label" : "cep",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.5714814111075266
              }, {
                "name" : "bairro",
                "type" : "attribute",
                "label" : "bairro",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.1792060085480156
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.6039520675261614
              }, {
                "name" : "estado",
                "type" : "attribute",
                "label" : "estado",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.255617971554996
              }, {
                "name" : "segmento",
                "type" : "attribute",
                "label" : "segmento",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.4438436825064902,
                "postFuncBody" : "var dict = {\n    0:\" \",\n    1:\"Agronegócio\",\n    2:\"Água e Saneamento\",\n    3:\"Alimentos\",\n    4:\"Alumínio/Ferroligas\",\n    5:\"Automobilística e Autopeças\",\n    6:\"Bebidas\",\n    7:\"Calçados\",\n    8:\"Cimento\",\n    9:\"Cerâmica\",\n    10:\"Datacenter\",\n    11:\"Edifício Comercial\",\n    12:\"Entretenimento\",\n    13:\"Farmacêutica\",\n    14:\"Gráfica\",\n    15:\"Hotel\",\n    16:\"Indústria Transformação\",\n    17:\"Logística\",\n    18:\"Metalúrgica\",\n    19:\"Mineração\",\n    20:\"Móveis\",\n    21:\"Papel e Celulose\",\n    22:\"Plásticos\",\n    23:\"Portos e Aeroportos\",\n    24:\"Química e Petroquímica\",\n    25:\"Ração\",\n    26:\"Residência\",\n    27:\"Restaurante\",\n    28:\"Shopping Center\",\n    29:\"Siderúrgica\",\n    30:\"Supermercado\",\n    31:\"Têxtil\",\n    32:\"Transporte Público\",\n    33:\"Usina de Geração\",\n    34:\"Varejo Pequeno Porte\",\n    35:\"Vidros\",\n    36:\"Embalagens\",\n    37:\"Academia/Clube\",\n    38:\"Serviços\",\n    39:\"Bens de Capital\",\n    40:\"Educação\",\n    41:\"Bancos\",\n    42:\"Gestão Pública\",\n    43:\"Hospitais\",\n    44:\"Telecomunicações\",\n    45:\"---Demonstração---\"\n};\n\nreturn dict[value];\n"
              }, {
                "name" : "contato",
                "type" : "attribute",
                "label" : "contato",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.9172346110507434
              }, {
                "name" : "depto",
                "type" : "attribute",
                "label" : "depto",
                "color" : "#03a9f4",
                "settings" : { },
                "_hash" : 0.8789454918582487
              }, {
                "name" : "telefone",
                "type" : "attribute",
                "label" : "telefone",
                "color" : "#ff9800",
                "settings" : { },
                "_hash" : 0.5118181150391452
              }, {
                "name" : "email",
                "type" : "attribute",
                "label" : "email",
                "color" : "#673ab7",
                "settings" : { },
                "_hash" : 0.23050908419558058
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#cddc39",
                "settings" : { },
                "_hash" : 0.1704841555313179
              }, {
                "name" : "tarifaRef",
                "type" : "attribute",
                "label" : "tarifaRef",
                "color" : "#cddc39",
                "settings" : { },
                "_hash" : 0.31448633256503733,
                "decimals" : 2,
                "postFuncBody" : "function numberWithCommas(x, y, z) {\n    return x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z});\n}\n\nif (value > 0) {\n    return \"R$ \" + numberWithCommas(value, 2, 2) +\" / kWh\";\n}\nreturn \" \";\n"
              }, {
                "name" : "date_comissioned",
                "type" : "attribute",
                "label" : "date_comissioned",
                "color" : "#cddc39",
                "settings" : { },
                "_hash" : 0.6854976447341627
              }, {
                "name" : "potencia_nominal",
                "type" : "attribute",
                "label" : "potencia",
                "color" : "#009688",
                "settings" : { },
                "_hash" : 0.6872742510433445,
                "decimals" : 0,
                "postFuncBody" : "if (value > 0) {\n    return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}) + \" kWp\";\n}\nreturn \"\";",
                "usePostProcessing" : true,
                "units" : null,
                "funcBody" : null
              }, {
                "name" : "email_faturas",
                "type" : "attribute",
                "label" : "email_faturas",
                "color" : "#795548",
                "settings" : { },
                "_hash" : 0.06401601351798014
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 11px;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 16px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n",
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"25%\" align=\"left\"><style class=\"title\">ID:</style><br><style class=\"value\">${entityName}</style></td>\n                <td width=\"24%\" align=\"left\"><style class=\"title\">Identificação da Unidade:</style><br><style class=\"value\">${description}</style></td>\n                <td width=\"23%\" align=\"left\"><style class=\"title\">Entrada Operação:</style><br><style class=\"value\">${date_comissioned}</style></td>\n                <td width=\"26%\" align=\"left\"><style class=\"title\">Tarifa Referência (R$/kWh):</style><br><style class=\"value\">${tarifaRef}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"49%\" align=\"left\"><style class=\"title\">Endereço:</style><br><style class=\"value\">${endereco}</style></td>\n                <td width=\"23%\" align=\"left\"><style class=\"title\">Bairro:</style><br><style class=\"value\">${bairro}</style></td>\n                <td width=\"26%\" align=\"left\"><style class=\"title\">Potência Nominal:</style><br><style class=\"value\">${potencia}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"37%\" align=\"left\"><style class=\"title\">Cidade:</style><br><style class=\"value\">${cidade}</style></td>\n                <td width=\"12%\" align=\"left\"><style class=\"title\">Estado:</style><br><style class=\"value\">${estado}</style></td>\n                <td width=\"23%\" align=\"left\"><style class=\"title\">CEP:</style><br><style class=\"value\">${cep}</style></td>\n                <td width=\"26%\" align=\"left\"><style class=\"title\">Ramo de Atividade:</style><br><style class=\"value\">${segmento}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Contato:</style><br><style class=\"value\">${contato}</style></td>\n                <td width=\"24%\" align=\"left\"><style class=\"title\">Departamento:</style><br><style class=\"value\">${depto}</style></td>\n                <td width=\"23%\" align=\"left\"><style class=\"title\">Telefone:</style><br><style class=\"value\">${telefone}</style></td>\n                <td width=\"26%\" align=\"left\"><style class=\"title\">E-mail Faturas:</style><br><style class=\"value\">${email_faturas}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"98%\" align=\"left\"><style class=\"title\">E-mail Contato:</style><br><style class=\"value\">${email}</style></td>\n            </tr>\n        </table>\n</div>\n"
            },
            "title" : "Dados da Usina GD",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n        style=\"min-width: 800px; padding: 20px\">\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=\"66\" class=\"mat-block\">\n                <mat-label>Identificação da Unidade\n                </mat-label>\n                <input matInput type=\"text\"\n                    [(ngModel)]=\"attributes.description\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Entrada em operação\n                </mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.date_comissioned\">\n            </mat-form-field>\n            \n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Tarifa Referência (R$/kWh)\n                </mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.tarifaRef\">\n            </mat-form-field>                \n            \n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=\"66\" class=\"mat-block\">\n                <mat-label>Endereço</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.endereco\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Bairro</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.bairro\">\n            </mat-form-field>\n            \n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Potência (kWp)</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.potencia_nominal\">\n            </mat-form-field>            \n\n        </div>\n\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=\"33\" class=\"mat-block\">\n                <mat-label>Cidade</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.cidade\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"33\" class=\"mat-block\">\n                <mat-label>Estado</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.estado\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"33\" class=\"mat-block\">\n                <mat-label>CEP</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.cep\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Contato</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.contato\">\n            </mat-form-field>\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Depto</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.depto\">\n            </mat-form-field>\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Telefone</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.telefone\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex=\"66\" class=\"mat-block\">\n                <mat-label>Email faturas</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.email_faturas\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Ramo de Atividade</mat-label>\n                <mat-select name=\"segmento\"\n                    [(ngModel)]=\"attributes.segmento\">\n                    <mat-option\n                        *ngFor=\"let item of ramo_atividade\"\n                        [value]=\"item[1]\">\n                        {{item[0]}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n        </div>\n        \n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Email</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.email\">\n            </mat-form-field>\n        </div>        \n\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>\n",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nstring = moment().format('YYYYMMDD')\nurl = 'https://solarhub.engecomp.io/res/ramo_atividade.json'+'?'+string;\nwidgetContext.ramo_atividade = sortByValue(JSON.parse(Get(url)))\n\n\nfunction sortByValue(jsObj){\n    var sortedArray = [];\n    for(var i in jsObj)\n    {\n        sortedArray.push([jsObj[i], i]);\n    }\n    return sortedArray.sort();\n}\n\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Editar dados do consumidor'\n    vm.ramo_atividade = widgetContext.ramo_atividade\n    \n    widgetContext.assetService.getAsset(entityId.id).subscribe((asset) => {\n        vm.asset = asset;\n    })\n\n    vm.diffAttrs=['segmento','tarifaRef','potencia_nominal']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n         })\n    }\n\n    for (var i=0; i<widgetContext.data.length; i++){\n        if (!vm.diffAttrs.includes(widgetContext.data[i].dataKey.name)) {\n            var x = widgetContext.data[i].data[0][1]\n            vm.attributes[widgetContext.data[i].dataKey.name] = x\n        }\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        debugger;\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.asset.label = vm.attributes.description;\n        widgetContext.assetService.saveAsset(vm.asset).subscribe(() =>{\n            widgetContext.dashboard.reload();\n        })        \n        vm.cancel()  \n    }\n}\n\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "714386db-bd14-7aee-c92e-707569ee4835"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "3a606d5c-bf8d-4c1f-8db3-35ff236d741f",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "bf6d6af8-3a28-4ddd-b011-1ea6062f4f09" : {
          "type" : "latest",
          "sizeX" : 34,
          "sizeY" : 5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "utility",
                "type" : "attribute",
                "label" : "utility",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5761914043089083,
                "postFuncBody" : "var dict = {\n    0: \"Não definida\",\n    1: \"CPFL-PIRATININGA\",\n    2: \"ENEL SP ELETROPAULO\",\n    3: \"LIGHT\",\n    4: \"COPEL\",\n    5: \"CEMIG\",\n    6: \"ELEKTRO\",\n    7: \"CELPE\",\n    8: \"CEA AMAPA\",\n    9: \"COELBA\",\n    10: \"CEB\",\n    11: \"COSERN\",\n    12: \"CPFL-PAULISTA\",\n    13: \"CEEE\",\n    14: \"EDP ES ESCELSA\",\n    15: \"EDP SP BANDEIRANTE\",\n    16: \"CELESC\",\n    17: \"ELETROBRAS AL CEAL\",\n    18: \"AMAZONAS ENERGIA\",\n    19: \"ENEL CE COELCE\",\n    20: \"ENEL RJ AMPLA\",\n    21: \"CELG\",\n    22: \"ENERGISA AC ELETROACRE\",\n    23: \"ENERGISA MG CAT-LEO\",\n    24: \"ENERGISA MS ENERSUL\",\n    25: \"ENERGISA MT CEMAT\",\n    26: \"ENERGISA PB SAELPA\",\n    27: \"ENERGISA BORBOREMA\",\n    28: \"ENERGISA RJ NOVA FRIBURGO\",\n    29: \"ENERGISA RO CERON\",\n    30: \"ENERGISA SE ENERGIPE\",\n    31: \"ENERGISA SUL-SUDESTE\",\n    32: \"ENERGISA TO CELTINS\",\n    33: \"EQUATORIAL MA CEMAR\",\n    34: \"EQUATORIAL PI CEPISA\",\n    35: \"CELPA\",\n    36: \"RGE SUL\",\n    37: \"CPFL JAGUARI\",\n    38: \"CPFL LESTE PAULISTA\",\n    39: \"CPFL MOCOCA\",\n    40: \"CPFL SANTA CRUZ\",\n    41: \"CPFL SUL PAULISTA\",\n    42: \"RGE\"\n};\nreturn dict[value];"
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "classe_tensao",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.9058048624834416,
                "postFuncBody" : "var dict = {\n    0:\"Não definida\",\n    1:\"A1 (>=230 kV)\",\n    2:\"A2 (88-138 kV)\",\n    3:\"A3 (69 kV)\",\n    4:\"A3a (30-44 kV)\",\n    5:\"A4 (2,3-25 kV)\",\n    6:\"AS (<2,3 kV)\",\n    7:\"B1 (Residencial)\",\n    8:\"B2 (Rural)\",\n    9:\"B3 (Demais classes)\"\n};\nreturn dict[value];"
              }, {
                "name" : "demanda_contratada",
                "type" : "attribute",
                "label" : "demanda_contratada",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.47857681458112333,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "if (value > 0) {\n    return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}) + \" kW\"\n}\nreturn \"\";\n"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 11px;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 16px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}",
              "cardHtml" : "<script>\n\n    fetch('https://solarhub.engecomp.io/res/utility_list.json').then((response) => response.text().then(function yourCallback( retrievedText ) {\n        utiliyList = JSON.parse(retrievedText);\n        utility = utiliyList[${utility}]\n        if (typeof utility === 'undefined') {\n            utility = 'Não definida'\n        }\n        document.getElementById(\"concessionaria\").innerHTML = utility\n    } ));\n    //document.getElementById(\"concessionaria\").innerHTML = \"teste\"\n\n</script>\n<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Classe Tensão:</style><br><style class=\"value\">${classe_tensao}</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"title\">Concessionária:</style><br><style id=\"concessionaria\" class=\"value\">${utility}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Demanda Contratada:</style><br><style class=\"value\">${demanda_contratada}</style></td>\n                <td width=\"55%\" align=\"left\">&nbsp;</td>\n            </tr>\n        </table>\n</div>"
            },
            "title" : "display_dados_contrato_energia",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.3rem",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div fxLayout=\"column\"\n        fxLayoutAlign=\"space-around left\">\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"20px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Classe Tensão</mat-label>\n                <mat-select name=\"classe_tensao\"\n                    [(ngModel)]=\"attributes.classe_tensao\">\n                    <mat-option [value]=\"0\">Não definida\n                    </mat-option>\n                    <mat-option [value]=\"1\">A1 (>=230 kV)\n                    </mat-option>\n                    <mat-option [value]=\"2\">A2 (88-138 kV)\n                    </mat-option>\n                    <mat-option [value]=\"3\">A3 (69 kV)\n                    </mat-option>\n                    <mat-option [value]=\"4\">A3a (30-44 kV)\n                    </mat-option>\n                    <mat-option [value]=\"5\">A4 (2,3-25 kV)\n                    </mat-option>\n                    <mat-option [value]=\"6\">AS (&lt;2,3 kV)\n                    </mat-option>\n                </mat-select><br>\n            </mat-form-field>\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Concessionária</mat-label>\n                <mat-select name=\"utility\"\n                    [(ngModel)]=\"attributes.utility\">\n                    <mat-option\n                        *ngFor=\"let item of utility_list\"\n                        [value]=\"item[1]\">\n                        {{item[0]}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"20px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Demanda Contratada (kW)</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.demanda_contratada\">\n            </mat-form-field>            \n        </div>\n\n    </div>\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nstring = moment().format('YYYYMMDD')\nurl = 'https://solarhub.engecomp.io/res/utility_list.json'+'?'+string;\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nfunction sortByValue(jsObj){\n    var sortedArray = [];\n    for(var i in jsObj)\n    {\n        sortedArray.push([jsObj[i], i]);\n    }\n    return sortedArray.sort();\n}\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Editar configuração'\n    vm.utility_list = sortByValue(JSON.parse(Get(url)))\n    \n    debugger\n    vm.diffAttrs=['utility','classe_tensao', 'demanda_contratada']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n            //vm.attributes.utility = parseInt(vm.attributes.utility);\n            vm.attributes.classe_tensao = parseInt(vm.attributes.classe_tensao);\n            vm.attributes.demanda_contratada = parseInt(vm.attributes.demanda_contratada);\n         })\n    }\n\n    // for (var i=0; i<widgetContext.data.length; i++){\n    //     if (!vm.diffAttrs.includes(widgetContext.data[i].dataKey.name)) {\n    //         var x = widgetContext.data[i].data[0][1]\n    //         vm.attributes[widgetContext.data[i].dataKey.name] = x\n    //     }\n    // }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()\n    }\n\n}\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "cd89a04e-7499-77a2-5d44-83d8242e2a4d"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "bf6d6af8-3a28-4ddd-b011-1ea6062f4f09",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "f744684f-11e4-4e70-a0bb-69dd2798a8e3" : {
          "type" : "latest",
          "sizeX" : 20,
          "sizeY" : 5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "latitude",
                "type" : "attribute",
                "label" : "latitude",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.12053059779723752,
                "decimals" : null,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 6, minimumFractionDigits: 6}); "
              }, {
                "name" : "longitude",
                "type" : "attribute",
                "label" : "longitude",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.7678419940529702,
                "decimals" : null,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 6, minimumFractionDigits: 6}); "
              }, {
                "name" : "weatherURL",
                "type" : "attribute",
                "label" : "weather",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.2189923541610701
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 11px;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 16px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n",
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"45%\" align=\"left\"><style class=\"title\">Latitude:</style><br><style class=\"value\">${latitude}</style></td>\n                <td width=\"45%\" align=\"left\"><style class=\"title\">Longitude:</style><br><style class=\"value\">${longitude}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"90%\" align=\"left\"><style class=\"title\">Weather URL:</style><br><style class=\"value\">${weather}</style></td>\n            </tr>\n        </table>\n</div>\n"
            },
            "title" : "Dados Coordenadas",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\">\n        <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Latitude</mat-label>\n                <input matInput type=\"number\" [(ngModel)]=\"attributes.latitude\" step=\"0.000001\">\n            </mat-form-field>\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Longitude</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.longitude\" step=\"0.000001\">\n            </mat-form-field>\n        </div>\n        <mat-form-field fxFlex class=\"mat-block\">\n            <mat-label>WeatherURL</mat-label>\n            <input matInput type=\"text\"\n                [(ngModel)]=\"attributes.weatherURL\">\n        </mat-form-field>\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>\n",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\nattributes = {}\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.OK = true\n    vm.importTitle = 'Editar Coordenadas'\n\n    vm.attributes = {}\n    for (var i=0; i<widgetContext.data.length; i++){\n        var x = widgetContext.data[i].data[0][1]\n        vm.attributes[widgetContext.data[i].dataKey.name] = x\n    }\n    vm.attributes.latitude = parseFloat(vm.attributes.latitude.replace(',','.'))\n    vm.attributes.longitude = parseFloat(vm.attributes.longitude.replace(',','.'))\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()\n    }\n\n}",
                "customResources" : [ ],
                "id" : "a25e279b-4ed1-6374-614e-35d9e4e1ab6e"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "f744684f-11e4-4e70-a0bb-69dd2798a8e3",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "6b65f7d3-3eb3-483f-9415-fa60d592440e" : {
          "type" : "latest",
          "sizeX" : 20,
          "sizeY" : 13,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "latitude",
                "type" : "attribute",
                "label" : "latitude",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.7978682596412687
              }, {
                "name" : "longitude",
                "type" : "attribute",
                "label" : "longitude",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.3895649100631746
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "fitMapBounds" : true,
              "latKeyName" : "latitude",
              "lngKeyName" : "longitude",
              "showLabel" : false,
              "label" : "${entityName}",
              "tooltipPattern" : "<b>${entityName}</b><br/><br/><b>Latitude:</b> ${latitude:7}<br/><b>Longitude:</b> ${longitude:7}<br/><b>Temperature:</b> ${temperature} °C<br/><small>See advanced settings for details</small>",
              "markerImageSize" : 34,
              "useColorFunction" : true,
              "markerImages" : [ "tb-image;/api/images/system/map_marker_image_0.png", "tb-image;/api/images/system/map_marker_image_1.png", "tb-image;/api/images/system/map_marker_image_2.png", "tb-image;/api/images/system/map_marker_image_3.png" ],
              "useMarkerImageFunction" : true,
              "colorFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'colorpin') {\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120 * 100;\n\t    return tinycolor.mix('blue', 'red', amount = percent).toHexString();\n\t}\n\treturn 'blue';\n}\n",
              "markerImageFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'thermomether') {\n\tvar res = {\n\t    url: images[0],\n\t    size: 40\n\t}\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120;\n\t    var index = Math.min(3, Math.floor(4 * percent));\n\t    res.url = images[index];\n\t}\n\treturn res;\n}",
              "color" : "#fe7569",
              "mapProvider" : "OpenStreetMap.Mapnik",
              "showTooltip" : true,
              "autocloseTooltip" : true,
              "tooltipFunction" : "var deviceType = dsData[dsIndex]['deviceType'];\r\nif (typeof deviceType !== undefined) {\r\n    if (deviceType == \"energy meter\") {\r\n        return '<b>${entityName}</b><br/><b>Energy:</b> ${energy:2} kWt<br/>';\r\n    } else if (deviceType == \"thermometer\") {\r\n        return '<b>${entityName}</b><br/><b>Temperature:</b> ${temperature:2} °C<br/>';\r\n    }\r\n}",
              "labelFunction" : "var deviceType = dsData[dsIndex]['deviceType'];\r\nif (typeof deviceType !== undefined) {\r\n    if (deviceType == \"energy meter\") {\r\n        return '<span style=\"color:orange;\">${entityName}, ${energy:2} kWt</span>';\r\n    } else if (deviceType == \"thermometer\") {\r\n        return '<span style=\"color:blue;\">${entityName}, ${temperature:2} °C</span>';\r\n    }\r\n}",
              "polygonKeyName" : "coordinates",
              "polygonOpacity" : 0.5,
              "polygonStrokeOpacity" : 1,
              "polygonStrokeWeight" : 1,
              "customProviderTileUrl" : "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
              "showTooltipAction" : "click",
              "defaultCenterPosition" : [ 0, 0 ],
              "zoomOnClick" : true,
              "showCoverageOnHover" : true,
              "animate" : true,
              "maxClusterRadius" : 80,
              "removeOutsideVisibleBounds" : true
            },
            "title" : "Localização Usina",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "6b65f7d3-3eb3-483f-9415-fa60d592440e",
          "typeFullFqn" : "system.maps_v2.openstreetmap"
        },
        "0df38364-b039-b8d6-e6d7-51b294d2c8f9" : {
          "type" : "static",
          "sizeX" : 34,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Parâmetros para Faturas</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 24px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "label Parâmetros Faturas",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "0df38364-b039-b8d6-e6d7-51b294d2c8f9",
          "typeFullFqn" : "system.cards.html_card"
        },
        "b7bf19b2-8720-ef95-b76e-9d3b48cb4c8f" : {
          "type" : "latest",
          "sizeX" : 34,
          "sizeY" : 4,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "date_criteria",
                "type" : "attribute",
                "label" : "date_criteria",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.8720898712726095,
                "postFuncBody" : "var dict = {\n    0:\"Data de Leitura\",\n    1:\"Data de Vencimento\",\n    2:\"Mês Referência (concessionária)\"\n};\n\nreturn dict[value];"
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=“95%” align=\"left\"><style class=\"title\">Critério:</style><br><style class=\"value\">${date_criteria}</style></td>\n            </tr>\n        </table>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 11px;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 16px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Display Criterio Data Fatura",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\">\n\n        <mat-form-field fxLayoutFill>\n            <mat-label>Critério para Data de\n                Referência</mat-label>\n            <mat-select name=\"segmento\"\n                [(ngModel)]=\"attributes.date_criteria\">\n                <mat-option [value]=\"0\">Data de\n                    Leitura</mat-option>\n                <mat-option [value]=\"1\">Data de\n                    Vencimento</mat-option>\n                <mat-option [value]=\"2\">Mês\n                    Referência (concessionária)\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Editar configuração'\n    \n    vm.diffAttrs=['date_criteria']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n            vm.attributes.date_criteria = parseInt(vm.attributes.date_criteria)\n         })\n    }\n\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()\n    }\n\n}\n",
                "customResources" : [ ],
                "id" : "231a1980-a139-4687-cc7e-581fb5b70401"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "b7bf19b2-8720-ef95-b76e-9d3b48cb4c8f",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "e78a7704-6bb0-47cc-9049-01cd61e26c59" : {
          "type" : "latest",
          "sizeX" : 24,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Nome",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "entitiesTitle" : "Equipamentos monitorados",
              "entityNameColumnTitle" : "Inversor",
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "true",
              "displayEntityLabel" : false,
              "useRowStyleFunction" : false
            },
            "title" : "Equipamentos Monitorados",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "c859c0ee-357c-41a3-6a6f-044ed377e485",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "status",
                "type" : "attribute",
                "label" : "Status",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "8%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var html = {\n    0: '<html>&nbsp;</html>',\n    1: '<html><img title=\"Online\" src=\"https://solarhub.engecomp.io/res/ok.png\" width=\"20\" height=\"20\"></html>',\n    2: '<html><img title=\"Offline\" src=\"https://solarhub.engecomp.io/res/nok.png\" width=\"20\" height=\"20\"></html>',\n    3: '<html><img title=\"Alarme\" src=\"https://solarhub.engecomp.io/res/attention6.png\" width=\"20\" height=\"20\"></html>'\n};\n\nreturn html[value];\n",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.2817048097059007,
                "postFuncBody" : "if (value.length == 0) {\n    return 1\n}\n\nvar result = JSON.parse(value);\nvar ac = 0;\nvar lt = 0;\nvar tolerancia = 1.5;\nvar d = new Date();\nvar h = d.getHours() + 1;\n\nac = (result.alarm_count || 0);\nlt = (result.last_telemetry || 0);    \nvar tipo = result.type || null;\n\nvar x = parseInt(moment.utc().format('x'))\nvar horas = ((x - lt) / 3600000);\n\nif (h < 8 && tipo == \"inverter\") { \n    tolerancia = tolerancia + h + 7;\n}\nif (h > 17 && tipo == \"inverter\") { \n    tolerancia = tolerancia + h - 17;\n}\n\n// calcula se tá online ou offline\nif (horas > tolerancia) { \n    return 2;     // vermelho NotOk \n}\n\nif (ac >= 1) {\n    return 3;     // triangulo ALARME\n}\nreturn 1;         // verde OK",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "Nome",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.01710545976400435,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "modelo",
                "type" : "attribute",
                "label" : "Modelo",
                "color" : "#ffc107",
                "settings" : {
                  "columnWidth" : "25%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.3728620459160621
              }, {
                "name" : "pm_wh_produced_delta_day_sum",
                "type" : "timeseries",
                "label" : "kWh Hoje",
                "color" : "#ffc107",
                "settings" : {
                  "columnWidth" : "15%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value === null) {\n    return \"\"\n} else {\n    return value.toLocaleString('pt-br',{minimumSignificanDigits: 3, minimumFractionDigits:0, maximumFractionDigits:0})\n}"
                },
                "_hash" : 0.5649711946675338,
                "postFuncBody" : "var d = new Date();\nvar h = d.getHours() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (h*3600)) { \n\n    // formata o valor a ser apresentado\n    return value;\n\n}\nreturn \" \";"
              }, {
                "name" : "pm_wh_produced",
                "type" : "attribute",
                "label" : "MWh Total",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "15%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value === null) {\n    return \"\"\n} else {\n    return value.toLocaleString('pt-br',{minimumSignificanDigits: 3, minimumFractionDigits:1, maximumFractionDigits:1})\n}"
                },
                "_hash" : 0.5343735497013151,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    return value/1000;\n\n}\nreturn \" \";"
              }, {
                "name" : "pm_h_running_time",
                "type" : "attribute",
                "label" : "Horas",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "15%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value === null) {\n    return \"\"\n} else {\n    return value.toLocaleString('pt-br',{minimumSignificanDigits: 3, minimumFractionDigits:0, maximumFractionDigits:0})\n}"
                },
                "_hash" : 0.11207799672771901,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    return value;\n\n}\nreturn \" \";"
              } ]
            } ],
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "name" : "rowClick",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "custom",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\nvar attribute = {}\nvar dashName\n\nvar dict = {\n    es: \"solar_est_solar\",\n    tracker: \"solar_trackers\",\n    meter: \"solar_medidor_detalhe\",\n    sub: \"solar_medidor_detalhe\",\n    inverter: \"solar_inversor_detalhe\",\n    relay: \"solar_relay\",\n    other: \"solar_rele_temp\"\n};\n\nvar convert = {\n    inverter_std: \"solar_inversor_detalhe\",\n    es: \"solar_est_solar\"\n}\n\n$injector.get(widgetContext.servicesMap.get('attributeService')).getEntityAttributes(entityId, 'CLIENT_SCOPE', ['category','stateName']).subscribe(\n    (r) => {\n        \n        for (var i=0; i<r.length; i++){\n            attribute[r[i].key] = r[i].value\n        }\n\n        if (!attribute.hasOwnProperty('category')) {\n            attribute.category = 'meter'\n        }\n\n        if (attribute.hasOwnProperty('stateName')) {\n            dashName = attribute.stateName\n            if (convert.hasOwnProperty(dashName)) {\n                dashName = convert[dashName]\n            }\n        } else {\n            dashName = dict[attribute.category];    \n        }\n        \n        \n        // if (r.length == 0) {\n        //     category = \"meter\";\n        // } else {\n        //     category = attribute[0].value.toLowerCase();\n        // }\n\n        openDashboardState(dashName);\n    }\n);\n\n\nfunction openDashboardState(dashName){\n\n    var params = widgetContext.stateController.getStateParams();\n    params.Curr_Equip = {\n        entityId: entityId,\n        entityName: entityName\n    };\n\n    widgetContext.stateController.updateState(dashName, params, false);\n}",
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "323741ae-0d32-3025-a685-d711000044cf"
              } ],
              "actionCellButton" : [ {
                "name" : "Editar dados",
                "icon" : "settings",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n    \n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\" fxLayoutGap=\"20px\" style=\"min-width: 350px\">\n        <div>ID: {{ namedev }}<br></div>\n    \n        <mat-form-field>\n            <mat-label>Nome</mat-label>\n            <input matInput [(ngModel)]=\"attributes.description\">\n        </mat-form-field>\n    </div>\n\n\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>\n\n\n",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\nlet deviceService = $injector.get(widgetContext.servicesMap.get('deviceService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Identificação do Equipamento'\n    vm.namedev = entityName\n    \n    deviceService.getDevice(entityId.id).subscribe((device) => {\n        vm.device = device;\n    })\n    \n    vm.diffAttrs=['description']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n         })\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.device.label = vm.attributes.description;\n        deviceService.saveDevice(vm.device).subscribe(() =>{\n            widgetContext.dashboard.reload();\n        })\n        vm.cancel()\n    }\n\n}\n",
                "customResources" : [ ],
                "id" : "1c305108-15a1-cd0b-138b-d37a531e9408"
              } ],
              "headerButton" : [ {
                "id" : "4ff205b3-2991-cea3-35a7-93847336d9ca",
                "name" : "Alarmes Usina",
                "icon" : "warning",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "solar_alarmes_usina",
                "setEntityId" : false
              } ],
              "rowDoubleClick" : [ ]
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "e78a7704-6bb0-47cc-9049-01cd61e26c59",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "84a5d463-542a-4590-9a8d-11cec0f05b40" : {
          "type" : "timeseries",
          "sizeX" : 30,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "535d38b6-bac2-47c1-29d3-0326839d41f9",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pm_grid_w",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#2196f3",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.8867154465955589,
                "decimals" : 1,
                "postFuncBody" : "return value/1000;"
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "timewindowMs" : 43200000,
                "quickInterval" : "CURRENT_DAY",
                "interval" : 1000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454",
                "tickDecimals" : 0
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "smoothLines" : true,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "tooltipCumulative" : false,
              "hideZeros" : false,
              "showTooltip" : true,
              "comparisonEnabled" : false,
              "customLegendEnabled" : false,
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "column",
                "position" : "right",
                "showMin" : false,
                "showMax" : false,
                "showAvg" : false,
                "showTotal" : false
              }
            },
            "title" : "Potência por Inversor (kW)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "84a5d463-542a-4590-9a8d-11cec0f05b40",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "7c19b94c-5d67-4a61-b5c7-bc6aa23269c0" : {
          "type" : "timeseries",
          "sizeX" : 30,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "pm_wh_produced_delta_hour_sum",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#2196f3",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "Stack0"
                },
                "_hash" : 0.49058281730389197
              }, {
                "name" : "pm_wh_produced_delta_day_sum",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#2196f3",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "Stack0"
                },
                "_hash" : 0.09436209522687777
              }, {
                "name" : "pm_wh_produced_delta_month_sum",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#2196f3",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "Stack0"
                },
                "_hash" : 0.9859887919640591
              }, {
                "name" : "pm_wh_produced_delta_year_sum",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#2196f3",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "Stack0"
                },
                "_hash" : 0.3205374136142669
              } ],
              "entityAliasId" : "535d38b6-bac2-47c1-29d3-0326839d41f9"
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1666580399000,
                  "endTimeMs" : 1666666799000
                },
                "interval" : 12342000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 50000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : true,
              "timeWindows" : [ "Hoje", "24H", "7D", "30D", "Mes", "12M" ],
              "timeWindowsUnits" : "hour,hour,day,day,day,month",
              "showLeftScale" : true,
              "leftScaleTicks" : "callback = function(value, index, values) {\nreturn value.toLocaleString('pt-BR', {\nstyle: 'decimal',\nmaximumFractionDigits: 1,\nminimumSignificantDigits: 2\n});\n}\nticks = {\nbeginAtZero: true,\ncallback: callback\n}\nreturn ticks",
              "initialTimeWindow" : "Hoje",
              "stacked" : false,
              "tooltipSettings" : "var tooltip = {\n    //intersect: false,\n    //mode: 'index',\n    position: 'nearest',\n    itemSort: function(a, b, data) {\n        //data.datasets[a.datasetIndex].label\n    },\n    callbacks: {\n\n        label: function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            label += tooltipItem.yLabel\n                .toLocaleString('pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n    }\n}\n\nreturn tooltip",
              "sortLegendByLabel" : true,
              "roundToUnit" : true,
              "showContractedDemandCurves" : false,
              "showOverFlowInRed" : false,
              "roundingMethod" : "nearest",
              "showRightScale" : false,
              "showRightScale2" : false
            },
            "title" : "Geração por inversor (kWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "7c19b94c-5d67-4a61-b5c7-bc6aa23269c0",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "1afb556f-776d-db0f-4d3c-6ba814d0fd15" : {
          "type" : "latest",
          "sizeX" : 27,
          "sizeY" : 13,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.6161711642464689
              }, {
                "name" : "latitude",
                "type" : "attribute",
                "label" : "latitude",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.08308084040489416
              }, {
                "name" : "longitude",
                "type" : "attribute",
                "label" : "longitude",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.49429207630692495
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "nome",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.48174635570234536
              }, {
                "name" : "endereco",
                "type" : "attribute",
                "label" : "endereco",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.35837773529682626
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.41014038529010044
              }, {
                "name" : "estado",
                "type" : "attribute",
                "label" : "estado",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.10114765844929896
              }, {
                "name" : "fat_saldo_creditos",
                "type" : "attribute",
                "label" : "uc_saldo_creditos",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.01516083784483735,
                "postFuncBody" : "return Math.round(value).toLocaleString('pt-BR', {style: 'decimal', maximumFractionDigits: 0})+' kWh';"
              }, {
                "name" : "fat_consumo_kwh",
                "type" : "attribute",
                "label" : "uc_energia_consumida",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.8001060589256241,
                "postFuncBody" : "return Math.round(value).toLocaleString('pt-BR', {style: 'decimal', maximumFractionDigits: 0})+' kWh';"
              } ],
              "entityAliasId" : "9394fcb0-5690-2125-55f9-6406f27c509d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "fitMapBounds" : true,
              "latKeyName" : "latitude",
              "lngKeyName" : "longitude",
              "showLabel" : false,
              "label" : "${nome}",
              "tooltipPattern" : "<b>${nome}</b><br/><br/><b>Endereço:</b> ${endereco}<br/><b>Cidade:</b> ${cidade} - ${estado} <br/><br/><b>Ultimo Consumo:</b> ${uc_energia_consumida}<br/><b>Saldo de Créditos:</b> ${uc_saldo_creditos}",
              "markerImageSize" : 34,
              "useColorFunction" : false,
              "markerImages" : [ "tb-image;/api/images/system/map_marker_image_0.png", "tb-image;/api/images/system/map_marker_image_1.png", "tb-image;/api/images/system/map_marker_image_2.png", "tb-image;/api/images/system/map_marker_image_3.png" ],
              "useMarkerImageFunction" : false,
              "colorFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'colorpin') {\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120 * 100;\n\t    return tinycolor.mix('blue', 'red', amount = percent).toHexString();\n\t}\n\treturn 'blue';\n}\n",
              "markerImageFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'thermomether') {\n\tvar res = {\n\t    url: images[0],\n\t    size: 40\n\t}\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120;\n\t    var index = Math.min(3, Math.floor(4 * percent));\n\t    res.url = images[index];\n\t}\n\treturn res;\n}",
              "color" : "#fe7569",
              "mapProvider" : "OpenStreetMap.Mapnik",
              "showTooltip" : true,
              "autocloseTooltip" : true,
              "polygonKeyName" : "coordinates",
              "polygonOpacity" : 0.5,
              "polygonStrokeOpacity" : 1,
              "polygonStrokeWeight" : 1,
              "customProviderTileUrl" : "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
              "showTooltipAction" : "hover",
              "defaultCenterPosition" : "0,0",
              "zoomOnClick" : true,
              "showCoverageOnHover" : true,
              "animate" : true,
              "maxClusterRadius" : 80,
              "removeOutsideVisibleBounds" : true,
              "provider" : "openstreet-map",
              "mapPageSize" : 16384,
              "useClusterMarkers" : true
            },
            "title" : "Mapa Unidades Consumidoras",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : {
              "markerClick" : [ {
                "name" : "Detalhes da unidade",
                "icon" : "more_horiz",
                "type" : "openDashboardState",
                "targetDashboardStateId" : "solar_uc_popup",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_UC",
                "openInSeparateDialog" : true,
                "dialogTitle" : null,
                "dialogHideDashboardToolbar" : false,
                "dialogWidth" : null,
                "dialogHeight" : null,
                "openRightLayout" : null,
                "id" : "d012b33b-2f87-a516-7cae-a1f753138a4d"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "1afb556f-776d-db0f-4d3c-6ba814d0fd15",
          "typeFullFqn" : "system.maps_v2.openstreetmap"
        },
        "d3049db2-745c-5050-b59a-af1c4d91cde1" : {
          "type" : "static",
          "sizeX" : 54,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Dados do Contrato do Cliente</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 24px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "label_contrato",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "d3049db2-745c-5050-b59a-af1c4d91cde1",
          "typeFullFqn" : "system.cards.html_card"
        },
        "4d021773-e562-f4da-0260-1a9d18c45ad9" : {
          "type" : "latest",
          "sizeX" : 54,
          "sizeY" : 9,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "contrato_modelo",
                "type" : "attribute",
                "label" : "contrato_modelo",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.2175625802473531
              }, {
                "name" : "contrato_vigencia",
                "type" : "attribute",
                "label" : "contrato_vigencia",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.6577266444311776
              }, {
                "name" : "contrato_distribuidora",
                "type" : "attribute",
                "label" : "contrato_distribuidora",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.7346464562059374
              }, {
                "name" : "contrato_ult_compensacao",
                "type" : "attribute",
                "label" : "contrato_ult_compensacao",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.9507626179041067
              }, {
                "name" : "date_comissioned",
                "type" : "attribute",
                "label" : "date_comissioned",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.28479957934973754
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 11px;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 16px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n",
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"58\">\n                <td width=\"33%\" align=\"left\"><style class=\"title\">Modelo Negócio:</style><br><style class=\"value\">${contrato_modelo}</style></td>\n                <td width=\"33%\" align=\"left\"><style class=\"title\">Duração:</style><br><style class=\"value\">${contrato_vigencia}</style></td>\n                <td width=\"32%\" align=\"left\"><style class=\"title\">Distribuidora:</style><br><style class=\"value\">${contrato_distribuidora}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"58\">\n                <td width=\"33%\" align=\"left\"><style class=\"title\">Última Compensação:</style><br><style class=\"value\">${contrato_ult_compensacao}</style></td>\n                <td width=\"33%\" align=\"left\"><style class=\"title\">Entrada em operação:</style><br><style class=\"value\">${date_comissioned}</style></td>\n                <td width=\"32%\" align=\"left\"><style class=\"title\"> </style><br><style class=\"value\"> </style></td>\n            </tr>\n        </table>\n</div>\n"
            },
            "title" : "dados_contrato_cliente",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "id" : "3f837557-fdeb-b825-8c44-4b83b67d49e1",
                "name" : "Editar contratos",
                "icon" : "edit",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "solar_config_contratos",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Usina"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "4d021773-e562-f4da-0260-1a9d18c45ad9",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "5b3b16aa-a7e1-ad1f-30db-391f1e118e67" : {
          "type" : "static",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Contrato Bens Móveis</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 24px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "label Contrato 1",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "5b3b16aa-a7e1-ad1f-30db-391f1e118e67",
          "typeFullFqn" : "system.cards.html_card"
        },
        "7b776bc5-fac2-5c8d-9f61-1e84379916f7" : {
          "type" : "static",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Contrato Serviços O&M</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 24px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "label Contrato 2",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "7b776bc5-fac2-5c8d-9f61-1e84379916f7",
          "typeFullFqn" : "system.cards.html_card"
        },
        "69eb6472-e616-1c1a-fc15-2131fc356dc1" : {
          "type" : "static",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Contrato Terreno</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 24px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "label Contrato 3",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "69eb6472-e616-1c1a-fc15-2131fc356dc1",
          "typeFullFqn" : "system.cards.html_card"
        },
        "2c8fcb5e-4db6-143b-7ec7-4da846588781" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 20,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "data_assinatura1",
                "type" : "attribute",
                "label" : "data_assinatura1",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.6327215430368227
              }, {
                "name" : "valor_inicial1",
                "type" : "attribute",
                "label" : "valor_inicial1",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.9673876676716882
              }, {
                "name" : "data_base1",
                "type" : "attribute",
                "label" : "data_base1",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.41097930046343323
              }, {
                "name" : "ind_reajuste1",
                "type" : "attribute",
                "label" : "ind_reajuste1",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.5761755765765237
              }, {
                "name" : "reaj_prod1",
                "type" : "attribute",
                "label" : "reaj_prod1",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.11565219200351473
              }, {
                "name" : "data_ultreaj1",
                "type" : "attribute",
                "label" : "data_ultreaj1",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.20247122543196117
              }, {
                "name" : "data_proxreaj1",
                "type" : "attribute",
                "label" : "data_proxreaj1",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.11101730056479475
              }, {
                "name" : "valor_atual1",
                "type" : "attribute",
                "label" : "valor_atual1",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.6679579647192071
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 14px;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 14px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n",
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"4\">\n                <td width=\"90%\" height=\"10\" align=\"left\">&nbsp;</td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Assinatura:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_assinatura1}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Valor Inicial:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${valor_inicial1}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Base:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_base1}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Indice de Reajuste:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${ind_reajuste1}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Reajuste Produtividade:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${reaj_prod1}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Último Reajuste:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_ultreaj1}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Próximo Reajuste:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_proxreaj1}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Valor Atual:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${valor_atual1}</style></td>\n            </tr>\n        </table>\n</div>"
            },
            "title" : "Dados Contrato 1 - Locação de Bens Móveis",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.3rem",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "id" : "0eca3f9c-598b-cd3f-fb2e-0a65b89d8b81",
                "name" : "Editar contratos",
                "icon" : "edit",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "solar_config_contratos",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Usina"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "2c8fcb5e-4db6-143b-7ec7-4da846588781",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "399cf39a-dde5-c689-afe9-4eec8867916b" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 20,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "data_assinatura2",
                "type" : "attribute",
                "label" : "data_assinatura2",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5794683126559845
              }, {
                "name" : "valor_inicial2",
                "type" : "attribute",
                "label" : "valor_inicial2",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.25190433506638055
              }, {
                "name" : "data_base2",
                "type" : "attribute",
                "label" : "data_base2",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.22614692791908642
              }, {
                "name" : "ind_reajuste2",
                "type" : "attribute",
                "label" : "ind_reajuste2",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.4355717066275624
              }, {
                "name" : "reaj_prod2",
                "type" : "attribute",
                "label" : "reaj_prod2",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.19891413902280397
              }, {
                "name" : "data_ultreaj2",
                "type" : "attribute",
                "label" : "data_ultreaj2",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.9779892746301333
              }, {
                "name" : "data_proxreaj2",
                "type" : "attribute",
                "label" : "data_proxreaj2",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.8363418268972458
              }, {
                "name" : "valor_atual2",
                "type" : "attribute",
                "label" : "valor_atual2",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.22416860666774818
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 14px;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 14px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n",
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"4\">\n                <td width=\"90%\" height=\"10\" align=\"left\">&nbsp;</td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Assinatura:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_assinatura2}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Valor Inicial:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${valor_inicial2}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Base:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_base2}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Indice de Reajuste:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${ind_reajuste2}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Reajuste Produtividade:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${reaj_prod2}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Último Reajuste:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_ultreaj2}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Próximo Reajuste:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_proxreaj2}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Valor Atual:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${valor_atual2}</style></td>\n            </tr>\n        </table>\n</div>"
            },
            "title" : "Dados Contrato 2 - Serviços O&M",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "id" : "243ca448-2330-b456-218b-3c1da11f23cf",
                "name" : "Editar contratos",
                "icon" : "edit",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "solar_config_contratos",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Usina"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "399cf39a-dde5-c689-afe9-4eec8867916b",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "14e7d97b-f607-4ce8-ce7d-59a33190e112" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 20,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "data_assinatura3",
                "type" : "attribute",
                "label" : "data_assinatura3",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.49177163413990277
              }, {
                "name" : "valor_inicial3",
                "type" : "attribute",
                "label" : "valor_inicial3",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.08345446443267024
              }, {
                "name" : "data_base3",
                "type" : "attribute",
                "label" : "data_base3",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.3685945528085972
              }, {
                "name" : "ind_reajuste3",
                "type" : "attribute",
                "label" : "ind_reajuste3",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.02264729831472989
              }, {
                "name" : "reaj_prod3",
                "type" : "attribute",
                "label" : "reaj_prod3",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.3401067315154558
              }, {
                "name" : "data_ultreaj3",
                "type" : "attribute",
                "label" : "data_ultreaj3",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.49641098724152943
              }, {
                "name" : "data_proxreaj3",
                "type" : "attribute",
                "label" : "data_proxreaj3",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.9781572628075514
              }, {
                "name" : "valor_atual3",
                "type" : "attribute",
                "label" : "valor_atual3",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.10262625530375313
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 14px;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 14px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n",
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"4\">\n                <td width=\"90%\" height=\"10\" align=\"left\">&nbsp;</td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Assinatura:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_assinatura3}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Valor Inicial:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${valor_inicial3}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Base:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_base3}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Indice de Reajuste:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${ind_reajuste3}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Reajuste Produtividade:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${reaj_prod3}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Último Reajuste:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_ultreaj3}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Próximo Reajuste:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_proxreaj3}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Valor Atual:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${valor_atual3}</style></td>\n            </tr>\n        </table>\n</div>"
            },
            "title" : "Dados Contrato 3 - Terreno",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "id" : "e3f854bf-2750-5a62-0795-53fa2af2aff6",
                "name" : "Editar contratos",
                "icon" : "edit",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "solar_config_contratos",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Usina"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "14e7d97b-f607-4ce8-ce7d-59a33190e112",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "098a614c-b610-4d17-7bd6-81906f6dc5e0" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "contrato_modelo",
                "type" : "attribute",
                "label" : "contrato_modelo",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.26946005297208964
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Modelo de Negócio",
              "minLength" : 0
            },
            "title" : "edit_modelo_contrato",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "mobileOrder" : 6,
            "mobileHeight" : 1,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "098a614c-b610-4d17-7bd6-81906f6dc5e0",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "8a51db1a-144d-305a-8ddc-e3c25de380d8" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "contrato_ult_compensacao",
                "type" : "attribute",
                "label" : "contrato_ult_compensacao",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.6169495596825663
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Última Análise de Compensação",
              "minLength" : 0
            },
            "title" : "edit_ult_compensacao",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "mobileOrder" : 8,
            "mobileHeight" : 1,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "8a51db1a-144d-305a-8ddc-e3c25de380d8",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "0fd1eefd-c233-6cef-c51c-f82af8d4d870" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "contrato_vigencia",
                "type" : "attribute",
                "label" : "contrato_vigencia",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.2652840741466873
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Vigência Contratual",
              "minLength" : 0
            },
            "title" : "edit_vigencia_contrato",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "mobileOrder" : 6,
            "mobileHeight" : 1,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "0fd1eefd-c233-6cef-c51c-f82af8d4d870",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "a2e931d7-97f6-e762-f2e8-cf3b509d6466" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "date_comissioned",
                "type" : "attribute",
                "label" : "date_comissioned",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.32317154530465486
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Entrada em Operação",
              "minLength" : 0
            },
            "title" : "edit_entrada_operacao",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "mobileOrder" : 9,
            "mobileHeight" : 1,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "a2e931d7-97f6-e762-f2e8-cf3b509d6466",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "95effe9f-11e7-da77-8f8d-c99f1ec5a223" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "contrato_distribuidora",
                "type" : "attribute",
                "label" : "contrato_distribuidora",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.6214933734978614
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Distribuidora",
              "minLength" : 0
            },
            "title" : "edit_contrato_distribuidora",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "mobileOrder" : 7,
            "mobileHeight" : 1,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "95effe9f-11e7-da77-8f8d-c99f1ec5a223",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "b39a629f-c686-401e-d887-d634205c9622" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "data_assinatura1",
                "type" : "attribute",
                "label" : "data_assinatura1",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.4104295812453751
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Data Assinatura",
              "minLength" : 0
            },
            "title" : "edit_data_assinatura_1",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "b39a629f-c686-401e-d887-d634205c9622",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "f9f03ffa-3a67-421f-2be0-930bb0c39327" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "valor_inicial1",
                "type" : "attribute",
                "label" : "valor_inicial1",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.08488782630166347
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Valor Inicial",
              "minLength" : 0
            },
            "title" : "edit_valor_inicial1",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "f9f03ffa-3a67-421f-2be0-930bb0c39327",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "f8fb0f1e-10b9-75bf-9a88-0126e1261284" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "data_base1",
                "type" : "attribute",
                "label" : "data_base1",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.9759813694044361
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Data Base",
              "minLength" : 0
            },
            "title" : "edit_data_base1",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "f8fb0f1e-10b9-75bf-9a88-0126e1261284",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "9ebe42f7-6ff5-77b3-2d8e-9a9bbc88c6cf" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "ind_reajuste1",
                "type" : "attribute",
                "label" : "ind_reajuste1",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.4784566080339401
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Indice de Reajuste",
              "minLength" : 0
            },
            "title" : "edit_ind_reajuste1",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "9ebe42f7-6ff5-77b3-2d8e-9a9bbc88c6cf",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "6a1dc859-869d-6a3a-b033-4858f6e41122" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "reaj_prod1",
                "type" : "attribute",
                "label" : "reaj_prod1",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.29813809047883244
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Reajuste de Produtividade",
              "minLength" : 0
            },
            "title" : "edit_reaj_prod1",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "6a1dc859-869d-6a3a-b033-4858f6e41122",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "8ba84b02-ccdb-753e-a895-4b6afbb9f6df" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "data_ultreaj1",
                "type" : "attribute",
                "label" : "data_ultreaj1",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.9601743907846871
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Data do Último Reajuste",
              "minLength" : 0
            },
            "title" : "edit_data_ultreaj1",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "8ba84b02-ccdb-753e-a895-4b6afbb9f6df",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "0dfa5d2c-9bd7-c667-a84a-d01b3370018a" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "data_proxreaj1",
                "type" : "attribute",
                "label" : "data_proxreaj1",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.331696322734667
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Data Próximo Reajuste",
              "minLength" : 0
            },
            "title" : "edit_prox_reaj1",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "0dfa5d2c-9bd7-c667-a84a-d01b3370018a",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "e6389ea5-3e09-ffeb-1e38-608469c5c223" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "valor_atual1",
                "type" : "attribute",
                "label" : "valor_atual1",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.8004833247145717
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Valor Atual",
              "minLength" : 0
            },
            "title" : "edit_valor_atual1",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "mobileOrder" : 18,
            "mobileHeight" : 1,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "e6389ea5-3e09-ffeb-1e38-608469c5c223",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "7b5fb390-c2b3-edd4-e77c-4569ff698671" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "data_assinatura2",
                "type" : "attribute",
                "label" : "data_assinatura2",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.045940795504987086
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Data Assinatura",
              "minLength" : 0
            },
            "title" : "edit_data_assinatura2",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "7b5fb390-c2b3-edd4-e77c-4569ff698671",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "1fba3116-86e1-9066-bb02-f6818e6c85d4" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "valor_inicial2",
                "type" : "attribute",
                "label" : "valor_inicial2",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.2529652893555876
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Valor Inicial",
              "minLength" : 0
            },
            "title" : "edit_valor_inicial2",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "1fba3116-86e1-9066-bb02-f6818e6c85d4",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "cf57b79f-310f-2004-210d-973d518ce3f0" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "data_base2",
                "type" : "attribute",
                "label" : "data_base2",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.8271472189313409
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Data Base",
              "minLength" : 0
            },
            "title" : "edit_data_base2",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "cf57b79f-310f-2004-210d-973d518ce3f0",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "5e3baa98-e1c2-2a6d-9f60-a2c64e58ed77" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "ind_reajuste2",
                "type" : "attribute",
                "label" : "ind_reajuste2",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.40050229349273203
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Indice de Reajuste",
              "minLength" : 0
            },
            "title" : "edit_ind_reajuste2",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "5e3baa98-e1c2-2a6d-9f60-a2c64e58ed77",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "6decbe0e-757b-fac5-8b7f-942a883f63c6" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "reaj_prod2",
                "type" : "attribute",
                "label" : "reaj_prod2",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.7289229363882672
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Reajuste de Produtividade",
              "minLength" : 0
            },
            "title" : "edit_reaj_prod2",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "6decbe0e-757b-fac5-8b7f-942a883f63c6",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "a92e8a7d-01c1-7d9b-e22a-693f87eb7111" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "data_ultreaj2",
                "type" : "attribute",
                "label" : "data_ultreaj2",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.18721816706160288
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Data do Último Reajuste",
              "minLength" : 0
            },
            "title" : "edit_data_ultreaj2",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "a92e8a7d-01c1-7d9b-e22a-693f87eb7111",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "4434bdc1-6516-8e6b-6ab9-1e66a3ce482d" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "data_proxreaj2",
                "type" : "attribute",
                "label" : "data_proxreaj2",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.25220523545422857
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Data Próximo Reajuste",
              "minLength" : 0
            },
            "title" : "edit_prox_reaj2",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "mobileOrder" : 27,
            "mobileHeight" : 1,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "4434bdc1-6516-8e6b-6ab9-1e66a3ce482d",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "a3d8f13b-a331-6902-448a-99e8c31aa543" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "valor_atual2",
                "type" : "attribute",
                "label" : "valor_atual2",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.3570492456234644
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Valor Atual",
              "minLength" : 0
            },
            "title" : "edit_valor_atual2",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "mobileOrder" : 28,
            "mobileHeight" : 1,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "a3d8f13b-a331-6902-448a-99e8c31aa543",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "10a92fc1-eb59-bef4-7528-3cc61395a3e2" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "data_assinatura3",
                "type" : "attribute",
                "label" : "data_assinatura3",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.8269916481872464
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Data Assinatura",
              "minLength" : 0
            },
            "title" : "edit_data_assinatura3",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "10a92fc1-eb59-bef4-7528-3cc61395a3e2",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "a6d99ae5-32e1-fa92-1c8c-18ef4fdc80d3" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "valor_inicial3",
                "type" : "attribute",
                "label" : "valor_inicial3",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.3748954739562369
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Valor Inicial",
              "minLength" : 0
            },
            "title" : "edit_valor_inicial3",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "a6d99ae5-32e1-fa92-1c8c-18ef4fdc80d3",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "196c0276-f1ac-0a18-5519-12a08e4f0131" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "data_base3",
                "type" : "attribute",
                "label" : "data_base3",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.3409557585329579
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Data Base",
              "minLength" : 0
            },
            "title" : "edit_data_base3",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "196c0276-f1ac-0a18-5519-12a08e4f0131",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "29e46b42-df3f-6612-d24c-b116538eaba7" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "ind_reajuste3",
                "type" : "attribute",
                "label" : "ind_reajuste3",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5083328133581173
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Indice de Reajuste",
              "minLength" : 0
            },
            "title" : "edit_ind_reajuste3",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "29e46b42-df3f-6612-d24c-b116538eaba7",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "2b6dace4-90c0-df29-1f66-c3704ee07a0c" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "reaj_prod3",
                "type" : "attribute",
                "label" : "reaj_prod3",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5014928450248421
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Reajuste de Produtividade",
              "minLength" : 0
            },
            "title" : "edit_reaj_prod3",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "2b6dace4-90c0-df29-1f66-c3704ee07a0c",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "7e279eb4-e9c2-6450-ae6e-a10c885b072c" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "data_ultreaj3",
                "type" : "attribute",
                "label" : "data_ultreaj3",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.017518825980278097
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Data do Último Reajuste",
              "minLength" : 0
            },
            "title" : "edit_data_ultreaj3",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "7e279eb4-e9c2-6450-ae6e-a10c885b072c",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "12fc9668-cf42-9ae0-4895-ad6c04409890" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "data_proxreaj3",
                "type" : "attribute",
                "label" : "data_proxreaj3",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.43696139532185385
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Data Próximo Reajuste",
              "minLength" : 0
            },
            "title" : "edit_prox_reaj3",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "mobileOrder" : 37,
            "mobileHeight" : 1,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "12fc9668-cf42-9ae0-4895-ad6c04409890",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "37b677b8-1f60-71b8-2446-8908ba1208bd" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "valor_atual3",
                "type" : "attribute",
                "label" : "valor_atual3",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.4185110513018906
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Valor Atual",
              "minLength" : 0
            },
            "title" : "edit_valor_atual3",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "mobileOrder" : 38,
            "mobileHeight" : 1,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "37b677b8-1f60-71b8-2446-8908ba1208bd",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "5a3921ea-63bc-8cff-bd4a-c419bd715339" : {
          "type" : "latest",
          "sizeX" : 16,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.35097507959215524,
                "decimals" : 0,
                "postFuncBody" : "return \"UC: \" + value;"
              }, {
                "name" : "endereco",
                "type" : "attribute",
                "label" : "endereco",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.027497244392471698
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.0756246866808663
              }, {
                "name" : "estado",
                "type" : "attribute",
                "label" : "estado",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.311329170129642
              }, {
                "name" : "nome",
                "type" : "attribute",
                "label" : "nome",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.2161624189888035
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.43909064258277897
              }, {
                "name" : "tipo_ligacao",
                "type" : "attribute",
                "label" : "ligacao",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.2024186032212114,
                "postFuncBody" : "var dict = {\n    0: \"\",\n    1: \"Monofásica\",\n    2: \"Bifásica\",\n    3: \"Trifásica\"\n};\n\nreturn dict[value];"
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "classe_tensao",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.6157543827323422
              } ],
              "entityAliasId" : "84ebed45-55d1-5dae-aa6d-a9286128fbaa"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.8)",
            "padding" : "0px",
            "settings" : {
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   //justify-content: space-around;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value {\n    font-size: 1.7vh;\n    font-weight: 300;\n}\n",
              "cardHtml" : "<div class='card'>\n    <div class='content'>\n        <div class='column'>\n            <div class='value'>\n                ${UC} - ${ligacao}<br>\n                <b>${description}</b><br>\n                ${endereco}<br>\n                ${cidade}/${estado}\n            </div>    \n        </div>\n    </div>\n</div>"
            },
            "title" : "Unidade Consumidora",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "settings",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <mat-label>&nbsp;<br>Unidade Consumidora: {{attributes.UC}}<br>&nbsp;\n    </mat-label>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n        style=\"min-width: 800px; padding-top: 20px\">\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Nome</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.description\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Rateio (%)</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.perc_rateio\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Tipo de Ligação</mat-label>\n                <mat-select name=\"tipo_lig\"\n                    [(ngModel)]=\"attributes.tipo_ligacao\"\n                    ng-change=\"attributes.change()\">\n                    <mat-option [value]=\"0\">Não\n                        definida</mat-option>\n                    <mat-option [value]=\"1\">Monofásica\n                    </mat-option>\n                    <mat-option [value]=\"2\">Bifásica\n                    </mat-option>\n                    <mat-option [value]=\"3\">Trifásica\n                    </mat-option>\n                </mat-select><br>\n            </mat-form-field>\n\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex=\"66%\" fxLayoutFill>\n                <mat-label>Endereço</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.endereco\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Bairro</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.bairro\">\n            </mat-form-field>\n\n        </div>\n\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Cidade</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.cidade\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Estado</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.estado\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>CEP</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.cep\">\n            </mat-form-field>\n\n        </div>\n\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Latitude</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.latitude\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Longitude</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.longitude\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Classe de Tensão</mat-label>\n                <mat-select name=\"cl_tensao\"\n                    [(ngModel)]=\"attributes.classe_tensao\"\n                    ng-change=\"attributes.change()\">\n                    <mat-option [value]=\"0\">Não\n                        definida</mat-option>\n                    <mat-option [value]=\"1\">A1\n                    </mat-option>\n                    <mat-option [value]=\"2\">A2\n                    </mat-option>\n                    <mat-option [value]=\"3\">A3\n                    </mat-option>\n                    <mat-option [value]=\"4\">A3a\n                    </mat-option>\n                    <mat-option [value]=\"5\">A4\n                    </mat-option>\n                    <mat-option [value]=\"6\">AS\n                    </mat-option>\n                    <mat-option [value]=\"7\">B1\n                    </mat-option>\n                    <mat-option [value]=\"8\">B2\n                    </mat-option>\n                    <mat-option [value]=\"9\">B3\n                    </mat-option>\n                </mat-select><br>\n            </mat-form-field>\n\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex=\"33%\" fxLayoutFill>\n                <mat-label>CNPJ</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.cnpj\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>E-mail</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.email\">\n            </mat-form-field>\n\n        </div>\n\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\nlet deviceService = $injector.get(widgetContext.servicesMap.get('deviceService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Configuração da Unidade Consumidora'\n    vm.namedev = entityName\n    \n    deviceService.getDevice(entityId.id).subscribe((device) => {\n        vm.device = device;\n    })\n    \n    vm.diffAttrs=['description','perc_rateio','tipo_ligacao','endereco','bairro','cidade','estado','cep', 'latitude', 'longitude', 'email', 'classe_tensao', 'UC', 'cnpj']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n         })\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        debugger\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.device.label = vm.attributes.description;\n        deviceService.saveDevice(vm.device).subscribe(() =>{\n            widgetContext.dashboard.reload();\n        })\n        vm.cancel()\n    }\n\n}",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "be104132-01e5-803a-e570-bbd1abcc6fcf"
              } ]
            },
            "decimals" : 0,
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "5a3921ea-63bc-8cff-bd4a-c419bd715339",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "e3f728be-9650-bef8-732b-b0923a16e4e0" : {
          "type" : "latest",
          "sizeX" : 16,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "UC",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Tabela de UCs",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.5351102295887045
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "Nome",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.37200184643476697
              } ],
              "entityAliasId" : "9394fcb0-5690-2125-55f9-6406f27c509d"
            } ],
            "enableDataExport" : false,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "id" : "5b759f27-8129-0c1b-2ed6-153b41e063db",
                "name" : "Detalhes do ponto",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : null,
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_UC"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "e3f728be-9650-bef8-732b-b0923a16e4e0",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "c51d971e-1165-622d-4e3e-6f5c9e853f93" : {
          "type" : "timeseries",
          "sizeX" : 38,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "Consumo",
                "color" : "#f44336",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : true,
                  "showPoints" : true,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.5676293663270451,
                "decimals" : 0,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "fat_energia_creditada",
                "type" : "timeseries",
                "label" : "Créditos",
                "color" : "#04bd53",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : true,
                  "showPoints" : true,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.15621929652787725,
                "decimals" : 0,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "fat_saldo_creditos",
                "type" : "timeseries",
                "label" : "Saldo de Créditos",
                "color" : "rgb(242, 176, 32)",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : true,
                  "showPoints" : true,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.49937620476316225,
                "postFuncBody" : "return Math.round(value);"
              } ],
              "entityAliasId" : "84ebed45-55d1-5dae-aa6d-a9286128fbaa"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 86400000,
                "timewindowMs" : 35424000000
              },
              "aggregation" : {
                "type" : "MAX",
                "limit" : 400
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "smoothLines" : true,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "column",
                "position" : "right",
                "showMin" : false,
                "showMax" : false,
                "showAvg" : false,
                "showTotal" : false
              }
            },
            "title" : "Balanço Consumo x Créditos (kWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : false
          },
          "id" : "c51d971e-1165-622d-4e3e-6f5c9e853f93",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "9df12a44-4fd6-0c5b-7313-4711f5ee2fd3" : {
          "type" : "timeseries",
          "sizeX" : 38,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "84ebed45-55d1-5dae-aa6d-a9286128fbaa",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "uc_url_conta",
                "type" : "timeseries",
                "label" : "Mês",
                "color" : "#9c27b0",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "function timeConverter(UNIX_timestamp){\n  var a = new Date(UNIX_timestamp);\n  var months = ['Jan','Fev','Mar','Abr','Mai','Jun','Jul','Ago','Set','Out','Nov','Dez'];\n  var year = a.getFullYear();\n  var month = months[a.getMonth()];\n  var time = month + '-' + year;\n  return time;\n}\n\nvar html = timeConverter(rowData['Timestamp'])\nif (value !== undefined) {\n  html = ''+\n    '<html>'+\n    '<a href=\"'+value+'\" target=\"_blank\">'+timeConverter(rowData['Timestamp'])+'</a>'+\n    '</html>'\n}\nreturn html;"
                },
                "_hash" : 0.5019676276311937
              }, {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "Consumo (kWh)",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellStyleFunction" : "\n",
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.6627250355168759,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "fat_energia_creditada",
                "type" : "timeseries",
                "label" : "Crédito (kWh)",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.24408499204136458,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "fat_saldo_creditos",
                "type" : "timeseries",
                "label" : "Saldo Créditos (kWh)",
                "color" : "#ffc107",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.8938151577816245,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "fat_total",
                "type" : "timeseries",
                "label" : "Fatura (R$)",
                "color" : "#607d8b",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.9155472012116606,
                "postFuncBody" : "return Math.round(value*100)/100;"
              }, {
                "name" : "fat_valor_creditado_energia",
                "type" : "timeseries",
                "label" : "Créditos (R$)",
                "color" : "#9c27b0",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.27822176066150295,
                "postFuncBody" : "return Math.round(value*100)/100;"
              }, {
                "name" : "fat_valor_creditado_bandeiras",
                "type" : "timeseries",
                "label" : "Bandeiras (R$)",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.7268531430956751,
                "postFuncBody" : "return Math.round(value*100)/100;"
              }, {
                "name" : "fat_invoice_exception",
                "type" : "timeseries",
                "label" : ".",
                "color" : "#3f51b5",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var status = 0;         // nada\n\nif (value > 0) { \n    status = value;     // incluir icone da lista abaixo \n}\n\nvar html = {\n    0: '<html>&nbsp;</html>',\n    1: '<html><img title=\"Soma das linhas não coincide com total\" src=\"https://solarhub.engecomp.io/res/attention6.png\" width=\"20\" height=\"20\"></html>',\n    2: '<html><img title=\"Checar enquadramento tarifário\" src=\"https://solarhub.engecomp.io/res/attention6.png\" width=\"20\" height=\"20\"></html>',\n    3: '<html><img title=\"Checar status Livre/Cativo\" src=\"https://solarhub.engecomp.io/res/attention6.png\" width=\"20\" height=\"20\"></html>',\n    4: '<html><img title=\"Mais créditos que consumo\" src=\"https://solarhub.engecomp.io/res/attention6.png\" width=\"20\" height=\"20\"></html>',\n    5: '<html><img title=\"Consumo cobrado diferente do medido\" src=\"https://solarhub.engecomp.io/res/attention6.png\" width=\"20\" height=\"20\"></html>'\n};\n\nreturn html[status];"
                },
                "_hash" : 0.6765795549338347,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 0,
                "timewindowMs" : 630720000000,
                "interval" : 1000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1660446096505,
                  "endTimeMs" : 1660532496505
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 2000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : false,
              "defaultPageSize" : 12,
              "enableSearch" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "true",
              "showMilliseconds" : false,
              "useEntityLabel" : false,
              "hideEmptyLines" : false,
              "useRowStyleFunction" : false
            },
            "title" : "Faturas Mensais de Energia",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : {
              "headerButton" : [ {
                "name" : "Download das faturas",
                "icon" : "file_download",
                "type" : "custom",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\n\nvar user = widgetContext.currentUser;\nvar userMail = user.sub\n\n//var url = 'https://solarhub.engecomp.io/be/pdf_export/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\nvar url = 'https://solarhub.engecomp.io/be/pdf_export_v2/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\n\npayload = createJSON();\n\nsend();\n\nfunction createJSON(UC) {\n    var payload = {};\n    //payload.devices = [];\n    payload.files = [];\n    payload.email = userMail\n    payload.UC = entityName.substring(3,entityName.length)\n    payload.utility = entityName.substring(0,2)\n\n    for (var i = 0; i < widgetContext.data.length; i++) {\n        if (widgetContext.data[i].dataKey.name == 'uc_url_conta') {\n            for (j=0; j < widgetContext.data[i].data.length ; j++){\n                file = {}\n                file.link = widgetContext.data[i].data[j][1]\n                file.month = moment(widgetContext.data[i].data[j][0],'x').format('MM/YYYY')\n                //payload.devices.push(widgetContext.data[i].data[j][1])\n                payload.files.push(file)\n            }\n        }\n    }\n    return payload\n}\n\n\nfunction send() {\n\n    let formData = new FormData();    \n    formData.append(\"payload\", JSON.stringify( payload ))\n\n    var fetchParams = { method: \"POST\", body: formData }\n    \n    fetch(url, fetchParams).then(function(r) {\n        if (r.status == 200) {\n\n            return r.json().then(\n                function(data) {\n                    if (data.link && data.link.length > 0) {\n                        window.open(data.link,'_blank');\n                    }\n                    else {\n                        widgetContext.showSuccessToast('Sucesso. Um link será enviado para o seu e-mail', 3000)\n                    }\n                })\n        }\n        else {\n            widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n        }\n        \n    }); \n\n    vm.cancel();  \n        \n}\n",
                "id" : "692e2b70-44c3-e4e4-e1b3-43915f601733"
              } ]
            },
            "legendConfig" : {
              "position" : "bottom",
              "showMin" : false,
              "showMax" : false,
              "showAvg" : true,
              "showTotal" : true
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : false
          },
          "id" : "9df12a44-4fd6-0c5b-7313-4711f5ee2fd3",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "4adb6e4b-4e86-4ef1-9c26-d4a42fd39046" : {
          "type" : "latest",
          "sizeX" : 12,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "perc_rateio",
                "type" : "attribute",
                "label" : "valor",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.7344011850935117,
                "postFuncBody" : "function numberWithCommas(x, y, z) {\n    return x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z});\n}\n\nreturn numberWithCommas(value,2,4) + \" %\";\n"
              } ],
              "entityAliasId" : "84ebed45-55d1-5dae-aa6d-a9286128fbaa"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Percentual de Rateio",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "4adb6e4b-4e86-4ef1-9c26-d4a42fd39046",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "d6c700eb-768b-44d9-acab-ad43f123ef7f" : {
          "type" : "latest",
          "sizeX" : 13,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_saldo_creditos",
                "type" : "attribute",
                "label" : "valor",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.007261900855941805,
                "postFuncBody" : "function numberWithCommas(x) {\n    return x.toLocaleString('pt-BR', { style: 'decimal', minimumSignificantDigits: 3, maximumSignificantDigits: 3});\n}\n\nunit = 'kWh';\ns = \"0\";\nif (value > 1000000) {\n\tunit = \"GWh\";\n\tvalue /= 1000000;\n\ts = numberWithCommas(value);\n} else if (value > 1000) {\n\tunit = \"MWh\";\n\tvalue /= 1000;\n\ts = numberWithCommas(value);\n}\nreturn s + \" \" + unit;\n"
              }, {
                "name" : "fat_consumo_kwh_average_year",
                "type" : "timeseries",
                "label" : "consumo_ano",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.2809073431628286
              }, {
                "name" : "fat_saldo_creditos",
                "type" : "attribute",
                "label" : "fat_saldo_creditos",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.9081146862318357
              } ],
              "entityAliasId" : "84ebed45-55d1-5dae-aa6d-a9286128fbaa"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<script>\n    var x = ${fat_saldo_creditos} * 12  || \"\"\n    if (x < 1) {\n        document.getElementById(\"meses_cred_usina\").innerHTML = \"\"\n    } else {\n        var y = ${consumo_ano};\n        if (y > 0) {\n            x = x / y;\n            document.getElementById(\"meses_cred_usina\").innerHTML = \"~\" + x.toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: 1, maximumFractionDigits: 1}) + \" meses\";\n        }\n    }\n</script>\n\n<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n        <footer>\n            <div id=\"meses_cred_usina\" class=\"additional-info\"></div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Saldo de Créditos",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "d6c700eb-768b-44d9-acab-ad43f123ef7f",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "2f9e3fe8-ac3b-4900-af6a-d18458baba84" : {
          "type" : "latest",
          "sizeX" : 13,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh_average_year",
                "type" : "timeseries",
                "label" : "valor",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.7489480982293009,
                "postFuncBody" : "function numberWithCommas(x) {\n    return x.toLocaleString('pt-BR', { style: 'decimal', minimumSignificantDigits: 3, maximumSignificantDigits: 3});\n}\n\nunit = 'kWh';\ns = \"0\";\nif (value > 1000000) {\n\tunit = \"GWh\";\n\tvalue /= 1000000;\n\ts = numberWithCommas(value);\n} else if (value > 1000) {\n\tunit = \"MWh\";\n\tvalue /= 1000;\n\ts = numberWithCommas(value);\n}\nreturn s + \" \" + unit;\n"
              } ],
              "entityAliasId" : "84ebed45-55d1-5dae-aa6d-a9286128fbaa"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Consumo Anual",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "2f9e3fe8-ac3b-4900-af6a-d18458baba84",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "1837a3cb-b199-459c-e7b8-06fd1a36ab23" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "4658668c-deb7-d1e4-3bb5-86ced47d6e05",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Modem Signal Strength",
                "type" : "timeseries",
                "label" : "csq",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.06319375034242136,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1})+' ';"
              }, {
                "name" : "Modem Temperature",
                "type" : "timeseries",
                "label" : "temperat",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.771935316935062,
                "decimals" : null,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1})+' .C';"
              }, {
                "name" : "alias",
                "type" : "attribute",
                "label" : "alias",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.9864475808601709
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "serial",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.4681950704043898,
                "postFuncBody" : "var n = value.length;\n\nreturn \"UC: \"+ value.substring(5, n);\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "firmware_version",
                "type" : "attribute",
                "label" : "firmware_version",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.6033847371911925
              }, {
                "name" : "last_interval_ts",
                "type" : "attribute",
                "label" : "last_interval_ts",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.07761371063457134
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.6302042551788014,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"-- SEM NOME --\"    \n}\nreturn nome;"
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.06838679483256449
              }, {
                "name" : "estado",
                "type" : "attribute",
                "label" : "estado",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.7301261688588971
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "utility",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.009304427675160154,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "var url = 'https://solarhub.engecomp.io/res/wutility_list.json?'+moment().format('MMDD');\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nvar obj = JSON.parse(Get(url));\nif (value == \"\"|| obj.hasOwnProperty(value) == false) {\n    return \"Não definida\";\n}\nreturn obj[value];"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgba(255, 255, 255, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class='card'>\n    <div class='content'>\n        <div class='column'>\n            <div class='title'>\n                ${description}\n            </div>    \n            <div class='value'>\n                ${serial} <br>\n                ${cidade}/${estado}<br>\n                ${utility}\n            </div>    \n        </div>\n    </div>\n</div>",
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value {\n    font-size: 1.7vh;\n    font-weight: 300;\n}\n\n.card .title {\n    font-size: 2.0vh;\n    font-weight: bold;\n    color: #bdfbf8;\n}\n\n.card .description {\n    font-size: 14px;\n    color: #999;\n}\n"
            },
            "title" : "id_agua_com_config",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "1837a3cb-b199-459c-e7b8-06fd1a36ab23",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "93dd47e3-064a-3c15-0001-3d10a312d55c" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 23,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgba(255, 255, 255, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "serial",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "true",
              "displayEntityLabel" : false,
              "useRowStyleFunction" : false
            },
            "title" : "Pontos de agua",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "6d82de94-904d-9c2b-a951-e4f4db6227c8",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "Consumidor",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "70%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.15832003157771513
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "30%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "var n = value.length;\n\nreturn value.substring(5, n);"
                },
                "_hash" : 0.40916239718316305,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "enableDataExport" : false,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "id" : "2c41b339-f708-d616-4d93-e69884fec618",
                "name" : "Detalhes do ponto",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : null,
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Water"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "93dd47e3-064a-3c15-0001-3d10a312d55c",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "f372539c-7155-5e84-dcdc-908a2c610627" : {
          "type" : "latest",
          "sizeX" : 13,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "4658668c-deb7-d1e4-3bb5-86ced47d6e05",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fatw_consumption_m3",
                "type" : "timeseries",
                "label" : "consumo_mes",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.6695540314098862,
                "postFuncBody" : "var valor= Math.floor(value);\nif (valor > 0) {\n    return valor.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}) + ' m<sup>3</sup>';\n}\nreturn '-x-'; ",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fatw_consumption_m3",
                "type" : "timeseries",
                "label" : "variacao",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.19470464004638166,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "// function formattedNumber(x, y, z) {\n// \treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n// }\n\n// if (prevValue < 999999999) {\n//     if (prevValue > 0) {\n//         return formattedNumber((value/prevValue - 1) * 100, 1, 1) + \"%\";\n//     }\n// }\nreturn \"\";"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value3\">${consumo_mes}</div><br>\n        <footer>\n            <div class=\"additional-info\">${variacao}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Consumo (㎥)",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "mobileOrder" : 6,
            "mobileHeight" : 1,
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "f372539c-7155-5e84-dcdc-908a2c610627",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "bd51aa4e-6552-3bc3-c5ad-2ad173ef4648" : {
          "type" : "latest",
          "sizeX" : 15,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "4658668c-deb7-d1e4-3bb5-86ced47d6e05",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fatw_consumption_brl",
                "type" : "timeseries",
                "label" : "consumo_brl",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.0691248300412366,
                "postFuncBody" : "return \"R$ \"+ value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2}); ",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fatw_consumption_brl",
                "type" : "timeseries",
                "label" : "variacao",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.8117854438775867,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nif (prevValue < 999999999) {\n    if (prevValue > 0) {\n        return formattedNumber((value/prevValue - 1) * 100, 1, 1) + \"%\";\n    }\n}\nreturn \"\";"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value3\">${consumo_brl}</div><br>\n        <footer>\n            <div class=\"additional-info\">${variacao}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Valor Consumo (R$)",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "mobileOrder" : 7,
            "mobileHeight" : 2,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "bd51aa4e-6552-3bc3-c5ad-2ad173ef4648",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "8c8840e6-6f88-4ffb-bc94-3a2862be7ffc" : {
          "type" : "latest",
          "sizeX" : 20,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "latitude",
                "type" : "attribute",
                "label" : "latitude",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.7978682596412687
              }, {
                "name" : "longitude",
                "type" : "attribute",
                "label" : "longitude",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.3895649100631746
              } ],
              "entityAliasId" : "4658668c-deb7-d1e4-3bb5-86ced47d6e05"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "fitMapBounds" : true,
              "latKeyName" : "latitude",
              "lngKeyName" : "longitude",
              "showLabel" : false,
              "label" : "${entityName}",
              "tooltipPattern" : "<b>${entityName}</b><br/><br/><b>Latitude:</b> ${latitude:7}<br/><b>Longitude:</b> ${longitude:7}<br/><b>Temperature:</b> ${temperature} °C<br/><small>See advanced settings for details</small>",
              "markerImageSize" : 34,
              "useColorFunction" : true,
              "markerImages" : [ "tb-image;/api/images/system/map_marker_image_0.png", "tb-image;/api/images/system/map_marker_image_1.png", "tb-image;/api/images/system/map_marker_image_2.png", "tb-image;/api/images/system/map_marker_image_3.png" ],
              "useMarkerImageFunction" : true,
              "colorFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'colorpin') {\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120 * 100;\n\t    return tinycolor.mix('blue', 'red', amount = percent).toHexString();\n\t}\n\treturn 'blue';\n}\n",
              "markerImageFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'thermomether') {\n\tvar res = {\n\t    url: images[0],\n\t    size: 40\n\t}\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120;\n\t    var index = Math.min(3, Math.floor(4 * percent));\n\t    res.url = images[index];\n\t}\n\treturn res;\n}",
              "color" : "#fe7569",
              "mapProvider" : "OpenStreetMap.Mapnik",
              "showTooltip" : true,
              "autocloseTooltip" : true,
              "tooltipFunction" : "var deviceType = dsData[dsIndex]['deviceType'];\r\nif (typeof deviceType !== undefined) {\r\n    if (deviceType == \"energy meter\") {\r\n        return '<b>${entityName}</b><br/><b>Energy:</b> ${energy:2} kWt<br/>';\r\n    } else if (deviceType == \"thermometer\") {\r\n        return '<b>${entityName}</b><br/><b>Temperature:</b> ${temperature:2} °C<br/>';\r\n    }\r\n}",
              "labelFunction" : "var deviceType = dsData[dsIndex]['deviceType'];\r\nif (typeof deviceType !== undefined) {\r\n    if (deviceType == \"energy meter\") {\r\n        return '<span style=\"color:orange;\">${entityName}, ${energy:2} kWt</span>';\r\n    } else if (deviceType == \"thermometer\") {\r\n        return '<span style=\"color:blue;\">${entityName}, ${temperature:2} °C</span>';\r\n    }\r\n}",
              "polygonKeyName" : "coordinates",
              "polygonOpacity" : 0.5,
              "polygonStrokeOpacity" : 1,
              "polygonStrokeWeight" : 1,
              "customProviderTileUrl" : "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
              "showTooltipAction" : "click",
              "defaultCenterPosition" : [ 0, 0 ],
              "zoomOnClick" : true,
              "showCoverageOnHover" : true,
              "animate" : true,
              "maxClusterRadius" : 80,
              "removeOutsideVisibleBounds" : true
            },
            "title" : "Localização Usina",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "8c8840e6-6f88-4ffb-bc94-3a2862be7ffc",
          "typeFullFqn" : "system.maps_v2.openstreetmap"
        },
        "31e4b455-8711-73f7-2798-7c0fbbff1f24" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Consumidor",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "entitiesTitle" : "Site 1",
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Site 1",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "Consumidor",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.7626665376485484,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~~ SEM NOME ~~\"    \n}\nreturn nome;"
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "Remota",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.5556550431266114
              } ],
              "entityAliasId" : "537cefd0-9672-24ca-46cd-d952c3f0a036"
            } ],
            "enableDataExport" : false,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "id" : "210730dc-1dca-0e5c-4b8c-4877665a296b",
                "name" : "change entity",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : null,
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Site"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "31e4b455-8711-73f7-2798-7c0fbbff1f24",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "aab136d7-268a-684f-d47f-fd4d677e274d" : {
          "type" : "latest",
          "sizeX" : 20,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5155785689407371
              }, {
                "name" : "status_cliente",
                "type" : "attribute",
                "label" : "status_cliente",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.46152030876799155,
                "postFuncBody" : "var dict = {\n    0: \"?Status? \",\n    1:\"Cativo\",\n    2:\"Livre\"\n};\nreturn dict[value];\n"
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "classe_tensao",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.7789197618211576,
                "postFuncBody" : "var dict = {\n    0:\"\",\n    1:\"A1\",\n    2:\"A2\",\n    3:\"A3\",\n    4:\"A3a\",\n    5:\"A4\",\n    6:\"AS\",\n    7:\"B1\",\n    8:\"B2\",\n    9:\"B3\"\n};\nreturn dict[value];"
              }, {
                "name" : "enq_tarifario",
                "type" : "attribute",
                "label" : "enq_tarifario",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.5065987338045093,
                "postFuncBody" : "var dict = {\n    0:\"?Tarifa?\",\n    1:\"Azul\",\n    2:\"Verde\",\n    3:\"Convencional\",\n    4:\"Branca\"\n};\nreturn dict[value];"
              }, {
                "name" : "demanda_fp",
                "type" : "attribute",
                "label" : "demanda_fp",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.7312962999006185,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 1}) + \" kW\";"
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "utility",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.8852897696852668,
                "postFuncBody" : "var url = 'https://solarhub.engecomp.io/res/utility_list.json?'+moment().format('MMDD');\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nvar obj = JSON.parse(Get(url));\nif (value == \"\") {\n    return \"Não definida\";\n}\nreturn obj[Math.floor(value)];",
                "usePostProcessing" : true,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<table width=\"100%\" class='card'>\n    <tr width=\"100%\">\n        <td width=\"95%\">\n            <div class='content'>\n                <div class='column'>\n                    <div class='value_blue' align=\"right\">\n                        ${description}\n                    </div>\n                    <div class='description' align=\"right\">\n                        ${status_cliente} ${classe_tensao} ${enq_tarifario} ${demanda_fp}<br>\n                        ${utility}\n                    </div>    \n                </div>\n            </div>\n        </td>\n        <td width=\"5%\">&nbsp;</td>\n    </tr>\n</table>",
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   width: 100%;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   width: 100%;\n   height: 100%;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}"
            },
            "title" : "ID Site 1",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "aab136d7-268a-684f-d47f-fd4d677e274d",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "a24c1abe-5d0d-66b8-ff2a-07271703146c" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 35,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Consumidor",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "entitiesTitle" : "Site 2",
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Site 2",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "Consumidor",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.9958691716519923,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~~ SEM NOME ~~\"    \n}\nreturn nome;"
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "Remota",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.728839973881811
              } ],
              "entityAliasId" : "537cefd0-9672-24ca-46cd-d952c3f0a036"
            } ],
            "enableDataExport" : false,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "id" : "749f930c-b8ec-e81c-9eae-ce058a052f81",
                "name" : "change entity",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : null,
                "setEntityId" : true,
                "stateEntityParamName" : "Site_Comparison"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "a24c1abe-5d0d-66b8-ff2a-07271703146c",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "978e061b-fbdc-fb98-4f25-5e492a11c56b" : {
          "type" : "latest",
          "sizeX" : 20,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.4791707582333746
              }, {
                "name" : "status_cliente",
                "type" : "attribute",
                "label" : "status_cliente",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.9103397791075183,
                "postFuncBody" : "var dict = {\n    0: \"?Status? \",\n    1:\"Cativo\",\n    2:\"Livre\"\n};\nreturn dict[value];\n"
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "classe_tensao",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.2693891785658551,
                "postFuncBody" : "var dict = {\n    0:\"\",\n    1:\"A1\",\n    2:\"A2\",\n    3:\"A3\",\n    4:\"A3a\",\n    5:\"A4\",\n    6:\"AS\",\n    7:\"B1\",\n    8:\"B2\",\n    9:\"B3\"\n};\nreturn dict[value];"
              }, {
                "name" : "enq_tarifario",
                "type" : "attribute",
                "label" : "enq_tarifario",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.7979988314678461,
                "postFuncBody" : "var dict = {\n    0:\"?Tarifa?\",\n    1:\"Azul\",\n    2:\"Verde\",\n    3:\"Convencional\",\n    4:\"Branca\"\n};\nreturn dict[value];"
              }, {
                "name" : "demanda_fp",
                "type" : "attribute",
                "label" : "demanda_fp",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.6170238355590876,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 1}) + \" kW\";"
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "utility",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.9958414655770815,
                "postFuncBody" : "var dict = {\n    0: \"?Distribuidora?\",\n    1: \"CPFL PIRATININGA\",\n    2: \"ENEL SP\",\n    3: \"LIGHT\",\n    4: \"COPEL\",\n    5: \"CEMIG\",\n    6: \"ELEKTRO\",\n    7: \"CELPE\",\n    8: \"CEA AMAPA\",\n    9: \"COELBA\",\n    10: \"CEB\",\n    11: \"COSERN\",\n    12: \"CPFL PAULISTA\",\n    13: \"CEEE\",\n    14: \"EDP ES\",\n    15: \"EDP SP\",\n    16: \"CELESC\",\n    17: \"ELETROBRAS AL\",\n    18: \"ELETROBRAS AM\",\n    19: \"ENEL CE COELCE\",\n    20: \"ENEL RJ AMPLA\",\n    21: \"CELG\",\n    22: \"ENERGISA ACE\",\n    23: \"ENERGISA MG\",\n    24: \"ENERGISA MSL\",\n    25: \"ENERGISA MT\",\n    26: \"ENERGISA PB\",\n    27: \"ENERGISA BORBOREMA\",\n    28: \"ENERGISA RJ\",\n    29: \"ENERGISA RO\",\n    30: \"ENERGISA SE\",\n    31: \"ENERGISA SUL-SE\",\n    32: \"ENERGISA TO\",\n    33: \"EQUATORIAL MA\",\n    34: \"EQUATORIAL PI\",\n    35: \"CELPA\",\n    36: \"RGE SUL\",\n    37: \"CPFL JAGUARI\",\n    38: \"CPFL LESTE PAULISTA\",\n    39: \"CPFL MOCOCA\",\n    40: \"CPFL SANTA CRUZ\",\n    41: \"CPFL SUL PAULISTA\",\n    42: \"RGE\" \n};\nreturn dict[value];"
              } ],
              "entityAliasId" : "4256bdb6-ffef-7ddd-3ee5-da27415aa55e"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<table width=\"100%\" class='card'>\n    <tr width=\"100%\">\n        <td width=\"5%\">&nbsp;</td>\n        <td width=\"95%\">\n            <div class='content'>\n                <div class='column'>\n                    <div class='value_red'>\n                        ${description}\n                    </div>\n                    <div class='description'>\n                        ${status_cliente} ${classe_tensao} ${enq_tarifario} ${demanda_fp}<br>\n                        ${utility}\n                    </div>    \n                </div>\n            </div>\n        </td>\n    </tr>\n</table>\n",
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}\n"
            },
            "title" : "ID Site 2",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "978e061b-fbdc-fb98-4f25-5e492a11c56b",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "b2c37ea2-3a01-1c9a-7d06-4bfd57b7fae0" : {
          "type" : "static",
          "sizeX" : 4,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>x</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
            },
            "title" : "label x",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "b2c37ea2-3a01-1c9a-7d06-4bfd57b7fae0",
          "typeFullFqn" : "system.cards.html_card"
        },
        "1312cedd-7031-f5b7-6238-8d5e8b2c44e2" : {
          "type" : "timeseries",
          "sizeX" : 44,
          "sizeY" : 29,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy_month_sum",
                "type" : "timeseries",
                "label" : "Site 1",
                "color" : "#3c9ad8",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : true,
                  "showPoints" : true,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "tooltipValueFormatter" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}) + \" kWh\";",
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.10772487818705123
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            }, {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy_month_sum",
                "type" : "timeseries",
                "label" : "Site 2",
                "color" : "#e34844",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : true,
                  "showPoints" : true,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "tooltipValueFormatter" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}) + \" kWh\";",
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.7651355102815629
              } ],
              "entityAliasId" : "4256bdb6-ffef-7ddd-3ee5-da27415aa55e"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 7200000,
                "timewindowMs" : 31104000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454",
                "title" : "Consumo (kWh)"
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "showLegend" : false,
              "legendConfig" : {
                "direction" : "column",
                "position" : "bottom",
                "sortDataKeys" : false,
                "showMin" : false,
                "showMax" : false,
                "showAvg" : true,
                "showTotal" : false,
                "showLatest" : false
              }
            },
            "title" : "Comparação entre Sites",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : false
          },
          "id" : "1312cedd-7031-f5b7-6238-8d5e8b2c44e2",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "c93b8c14-f566-b490-f820-ce882165a6f3" : {
          "type" : "timeseries",
          "sizeX" : 44,
          "sizeY" : 29,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Active Energy",
                "type" : "timeseries",
                "label" : "Site 1",
                "color" : "#3c9ad8",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : true,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "tooltipValueFormatter" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1}) + \" kW\";",
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.3103175875348938,
                "postFuncBody" : "return value*4;"
              } ]
            }, {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "4256bdb6-ffef-7ddd-3ee5-da27415aa55e",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Active Energy",
                "type" : "timeseries",
                "label" : "Site 2",
                "color" : "#e34844",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : true,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "tooltipValueFormatter" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1}) + \" kW\";",
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.3685127979220164,
                "postFuncBody" : "return value*4;"
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 0,
                "timewindowMs" : 86400000,
                "interval" : 4998000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1.6294734783623706E12,
                  "endTimeMs" : 1.6295084689582534E12
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454",
                "title" : "Demanda (kW)",
                "tickDecimals" : 0
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "smoothLines" : false,
              "tooltipCumulative" : false,
              "hideZeros" : false,
              "showTooltip" : true,
              "comparisonEnabled" : false,
              "customLegendEnabled" : false,
              "showLegend" : false,
              "legendConfig" : {
                "direction" : "column",
                "position" : "bottom",
                "sortDataKeys" : false,
                "showMin" : false,
                "showMax" : false,
                "showAvg" : true,
                "showTotal" : false,
                "showLatest" : false
              }
            },
            "title" : "Comparação entre Sites",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.3rem",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "mobileHeight" : null,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "c93b8c14-f566-b490-f820-ce882165a6f3",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "48f64166-be95-c850-5d6d-3f9c1791bcbd" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "displayEntityName" : false,
              "displayEntityType" : false,
              "enableSelectColumnDisplay" : false,
              "defaultSortOrder" : "Regional",
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "true",
              "displayEntityLabel" : false,
              "useRowStyleFunction" : false
            },
            "title" : "tabela sub-clientes",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "4689d64f-96da-0141-f27c-9cdea4f29f5c",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "name",
                "type" : "entityField",
                "label" : "Regional",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.06803405201382273,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "widgetStyle" : { },
            "displayTimewindow" : true,
            "actions" : {
              "rowClick" : [ {
                "id" : "1a6a885a-bada-0e74-d2c3-cfc438478b5a",
                "name" : "update",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : null,
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_SubClient"
              } ],
              "actionCellButton" : [ ],
              "rowDoubleClick" : [ {
                "name" : "test",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "custom",
                "customFunction" : "function openDashboardState(dashName){\n\n    var params = widgetContext.stateController.getStateParams();\n    params.Curr_SubClient = {\n        entityId: entityId,\n        entityName: entityName\n    };\n\n    widgetContext.stateController.updateState(dashName, params, false);\n}\n\n\nopenDashboardState(\"ssu_home\")\nwidgetContext.dashboard.reload();",
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "d2568e39-87fa-af10-623e-054b860e626e"
              } ]
            },
            "enableDataExport" : false
          },
          "id" : "48f64166-be95-c850-5d6d-3f9c1791bcbd",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "b18dca36-79cb-69fa-6449-34a9c3629313" : {
          "type" : "latest",
          "sizeX" : 33,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Unidade",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "entitiesTitle" : "Pontos de Medição",
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Pontos Monitorados",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.48641114469564783
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "Unidade",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.7759033120837209
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "Concessionária",
                "color" : "#607d8b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.2134916550455277,
                "postFuncBody" : "var dict = {\n    0: \" \",\n    1: \"CPFL-PIRATININGA\",\n    2: \"ENEL SP ELETROPAULO\",\n    3: \"LIGHT\",\n    4: \"COPEL\",\n    5: \"CEMIG\",\n    6: \"ELEKTRO\",\n    7: \"CELPE\",\n    8: \"CEA AMAPA\",\n    9: \"COELBA\",\n    10: \"CEB\",\n    11: \"COSERN\",\n    12: \"CPFL-PAULISTA\",\n    13: \"CEEE\",\n    14: \"EDP ES ESCELSA\",\n    15: \"EDP SP BANDEIRANTE\",\n    16: \"CELESC\",\n    17: \"ELETROBRAS AL CEAL\",\n    18: \"AMAZONAS ENERGIA\",\n    19: \"ENEL CE COELCE\",\n    20: \"ENEL RJ AMPLA\",\n    21: \"CELG\",\n    22: \"ENERGISA AC ELETROACRE\",\n    23: \"ENERGISA MG CAT-LEO\",\n    24: \"ENERGISA MS ENERSUL\",\n    25: \"ENERGISA MT CEMAT\",\n    26: \"ENERGISA PB SAELPA\",\n    27: \"ENERGISA BORBOREMA\",\n    28: \"ENERGISA RJ NOVA FRIBURGO\",\n    29: \"ENERGISA RO CERON\",\n    30: \"ENERGISA SE ENERGIPE\",\n    31: \"ENERGISA SUL-SUDESTE\",\n    32: \"ENERGISA TO CELTINS\",\n    33: \"EQUATORIAL MA CEMAR\",\n    34: \"EQUATORIAL PI CEPISA\",\n    35: \"CELPA\",\n    36: \"RGE SUL\",\n    37: \"CPFL JAGUARI\",\n    38: \"CPFL LESTE PAULISTA\",\n    39: \"CPFL MOCOCA\",\n    40: \"CPFL SANTA CRUZ\",\n    41: \"CPFL SUL PAULISTA\",\n    42: \"RGE\"\n};\n\nreturn dict[value];"
              }, {
                "name" : "status_cliente",
                "type" : "attribute",
                "label" : "Status",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.4862853354186383,
                "postFuncBody" : "var dict = {\n    0: \" \",\n    1:\"Cativo\",\n    2:\"Livre\"\n};\nreturn dict[value];\n"
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "Classe",
                "color" : "#607d8b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.1670091764608992,
                "postFuncBody" : "var dict = {\n    0:\" \",\n    1:\"A1\",\n    2:\"A2\",\n    3:\"A3\",\n    4:\"A3a\",\n    5:\"A4\",\n    6:\"AS\",\n    7:\"B1\",\n    8:\"B2\",\n    9:\"B3\"\n};\nreturn dict[value];"
              }, {
                "name" : "enq_tarifario",
                "type" : "attribute",
                "label" : "Tarifa",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.11983964095468247,
                "postFuncBody" : "var dict = {\n    0:\" \",\n    1:\"Azul\",\n    2:\"Verde\",\n    3:\"Convencional\",\n    4:\"Branca\"\n};\nreturn dict[value];"
              } ],
              "entityAliasId" : "ea337dd3-3e20-573c-3268-117e79aee26d"
            } ],
            "enableDataExport" : true,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "id" : "6ac6bd4e-ce75-befd-fed6-18c9e6466d1d",
                "name" : "change entity",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "faturas_site",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Fat_BT"
              } ],
              "headerButton" : [ {
                "name" : "Enviar faturas PDF",
                "icon" : "cloud_upload",
                "type" : "customPretty",
                "customHtml" : "<form #editDeviceForm=\"ngForm\" [formGroup] = 'fileAdd'\n      (ngSubmit)=\"send()\" style=\"width: 650px;\" >\n  <mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>Importar contas em PDF</h2>\n    <span fxFlex></span>\n    <button mat-button mat-icon-button\n            (click)=\"cancel()\"\n            type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div class = 'loading' *ngIf=\"loadingFiles\">\n        <div fxLayout = 'column'>\n            <mat-progress-spinner class=\"test\" mode = 'determinate' value = '{{progress}}' diameter=\"100\"></mat-progress-spinner>\n            <div>Aguarde...</div>\n        </div>\n    </div>\n    <div class=\"tb-container\">\n      <label class=\"action-title\">Arquivos PDF originais da concessionária</label>\n        <div class=\"action-file-select-container \">\n              <div class=\"action-file-clear-container\">\n                <button mat-button mat-icon-button color=\"primary\"\n                        type=\"button\"\n                        (click)=\"clearFile()\"\n                        class=\"action-file-clear-btn\"\n                        matTooltip=\"{{ 'action.remove' | translate }}\"\n                        matTooltipPosition=\"above\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </div>\n            <div class=\"drop-area action-flow-drop\">\n                <label for=\"file-input\">Arraste o arquivo ou clique aqui para selecionar</label>\n                <input class=\"file-input\" type=\"file\" id=\"file-input\" formControlName = 'controlInputField' multiple (change)=\"fileAdded($event.target.files)\">\n              </div>\n        </div>\n    </div>\n    <div class = 'file-info'>\n      <div *ngIf=\"!fileName\" class=\"cut-text\">Nenhum arquivo selecionado</div>\n      <div *ngIf=\"fileName\" class=\"cut-text\">{{ fileName }}</div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\">\n    <span fxFlex></span>\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button mat-raised-button color=\"primary\"\n            style=\"margin-right: 20px;\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || fileAdd.invalid\">\n      Import\n    </button>\n  </div>\n</form>",
                "customCss" : "\n.file-input{\n       display: none;\n}\n\n.action-flow-drop{\n     position: relative;\n    height: 100%;\n    overflow: hidden;\n    border: dashed 2px;\n    margin-left: 15px;\n}\n\n.action-flow-drop label{\n    display: flex;\n      flex-direction: column;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      font-size: 16px;\n      text-align: center;\n}\n\n.action-title{\n    display: block;\n    padding-bottom: 8px;\n    margin-left: 15px;\n    color: #8E8E8E;\n    font-size:12px;\n}\n\n.action-file-select-container{\n    position: relative;\n    width: 100%;\n    height: 100px;\n}\n\n.action-file-clear-container{\n    position: relative;\n    float: right;\n    width: 48px;\n    height: 100%;\n}\n\n.action-file-clear-btn{\n    top: 50%;\n    transform: translate(0%, -50%) !important;\n}\n\n.file-info{\n    margin-left: 15px;\n    margin-right: 15px;\n}\n\n.loading{\n    margin-top: 5px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    text-align: center;\n}\n\n.action-flow-drop label{\n    font-size: 25px;\n}",
                "customFunction" : "\nlet $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nlet parent_id = widgetContext.stateController.getEntityId('Curr_SubClient')\nif (!parent_id) {\n    window.alert(\"Selecione um sub-cliente\")\n    return\n}\n\n\nopenEditDeviceDialog();\n\nfunction openEditDeviceDialog() {\n    customDialog.customDialog(htmlTemplate, EditDeviceDialogController).subscribe();\n}\n\nfunction EditDeviceDialogController(instance) {\n    let vm = instance;\n    vm.fileName = '';\n    vm.progress = 0;\n    vm.loadingFiles = false;\n    let url = 'https://solarhub.engecomp.io/invoices'\n    let user = widgetContext.currentUser;\n    let userMail = user.sub\n\n     $( document ).ready(function() {\n        let form = $('.drop-area');\n        form.on('drag dragstart dragend dragover dragenter dragleave drop', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n        }).on('drop', function(e) {\n            vm.fileAdded(e.originalEvent.dataTransfer.files);\n        });\n    });\n    \n    vm.fileAdd = vm.fb.group({\n        file:[[], [vm.validators.required]],\n        controlInputField:''\n    });\n\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n    vm.clearFile = () => {\n        $(\".file-input\").value = \"\";\n        vm.fileName = '';\n        vm.fileAdd.patchValue({file: []})\n    }\n\n    vm.fileAdded = (files)=> {\n        for(let i = 0; i < files.length; i++){\n            let filetype=files[i].name.split('.').pop();\n            if (filetype === 'pdf') {\n                let newFiles = vm.fileAdd.get('file').value\n                if(vm.fileAdd.get('file').value.length !== 0){\n                    vm.fileName += ' // ';\n                }\n                newFiles.push(files.item(i))\n                vm.fileAdd.patchValue({file: newFiles})\n                vm.fileName += files.item(i).name;\n            } else {\n               alert(files[i].name + \" tem extensão inválida\");\n            }\n        }\n        vm.fileAdd.get('controlInputField').patchValue('', {emitEvent: false});\n    }\n\n    vm.send = () =>\n    {\n        vm.loadingFiles = true;\n        for(let i=0; i < vm.fileAdd.get('file').value.length; i++) {\n            vm.progress = Math.round((i+1) / vm.fileAdd.get('file').value.length * 100)\n            let req = new XMLHttpRequest();\n            let formData = new FormData();\n            \n            var instructions = {\n                url: \"http://localhost:5000/gd\",\n                parent_id: parent_id,\n                tenant: 'bt',\n                user: userMail\n            };\n            \n            formData.append(\"invoice\", vm.fileAdd.get('file').value[i]);\n            formData.append(\"instructions\", JSON.stringify( instructions ))\n            fetch(url, {method: \"POST\", body: formData}).then(function(r) {\n            });\n\n        }\n        vm.loadingFiles = false;\n        vm.cancel();\n    }\n}\n\n\n",
                "customResources" : [ ],
                "id" : "cc41cd89-1cd2-4ed8-5733-283ad7ea45e4"
              }, {
                "name" : "Upload dados produção",
                "icon" : "show_chart",
                "type" : "customPretty",
                "customHtml" : "\t<form #editDeviceForm=\"ngForm\" [formGroup] = 'fileAdd'\n      (ngSubmit)=\"send()\" style=\"width: 650px;\" >\n  <mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>Importar dados de produção</h2>\n    <span fxFlex></span>\n    <button mat-button mat-icon-button\n            (click)=\"cancel()\"\n            type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n\n    <mat-spinner [fxShow]=\"loading\" class=\"spinner_container\"></mat-spinner>\n\n    <div class=\"tb-container\">\n      <label class=\"action-title\">Arquivo Excel conforme acordado</label>\n        <div class=\"action-file-select-container \">\n              <div class=\"action-file-clear-container\">\n                <button mat-button mat-icon-button color=\"primary\"\n                        type=\"button\"\n                        (click)=\"clearFile()\"\n                        class=\"action-file-clear-btn\"\n                        matTooltip=\"{{ 'action.remove' | translate }}\"\n                        matTooltipPosition=\"above\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </div>\n            <div class=\"drop-area action-flow-drop\">\n                <label for=\"file-input\">Arraste o arquivo ou clique aqui para selecionar</label>\n                <input class=\"file-input\" type=\"file\" id=\"file-input\" formControlName = 'controlInputField' (change)=\"fileAdded($event.target.files)\">\n              </div>\n        </div>\n    </div>\n    <div class = 'file-info'>\n      <div *ngIf=\"!fileName\" class=\"cut-text\">Nenhum arquivo selecionado</div>\n      <div *ngIf=\"fileName\" class=\"cut-text\">{{ fileName }}</div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\">\n    <span fxFlex></span>\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button mat-raised-button color=\"primary\"\n            style=\"margin-right: 20px;\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || fileAdd.invalid\">\n      Import\n    </button>\n  </div>\n</form>",
                "customCss" : "\n.file-input{\n       display: none;\n}\n\n.action-flow-drop{\n     position: relative;\n    height: 100%;\n    overflow: hidden;\n    border: dashed 2px;\n    margin-left: 15px;\n}\n\n.action-flow-drop label{\n    display: flex;\n      flex-direction: column;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      font-size: 16px;\n      text-align: center;\n}\n\n.action-title{\n    display: block;\n    padding-bottom: 8px;\n    margin-left: 15px;\n    color: #8E8E8E;\n    font-size:12px;\n}\n\n.action-file-select-container{\n    position: relative;\n    width: 100%;\n    height: 100px;\n}\n\n.action-file-clear-container{\n    position: relative;\n    float: right;\n    width: 48px;\n    height: 100%;\n}\n\n.action-file-clear-btn{\n    top: 50%;\n    transform: translate(0%, -50%) !important;\n}\n\n.file-info{\n    margin-left: 15px;\n    margin-right: 15px;\n}\n\n.loading{\n    margin-top: 5px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    text-align: center;\n}\n\n.action-flow-drop label{\n    font-size: 25px;\n}\n\n.spinner_container {\n    border-radius: 10px;\n    height: 70px;\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    transform: translate(-50%,-50%);\n    width: 70px;\n    z-index: 3;\n    opacity: 0.5;\n}",
                "customFunction" : "\nlet $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenEditDeviceDialog();\n\nsearch = {\n    entityFilter: widgetContext.defaultSubscription.configuredDatasources[0].entityFilter,\n    pageLink: {\n        page: 0,\n        pageSize: 1000,\n        textSearch: null,\n        dynamic: false,\n        sortOrder: {\n          key: {\n            key: \"name\",\n            type: \"ENTITY_FIELD\"\n          },\n          direction: \"ASC\"\n        }\n      },\n    entityFields: [\n        {\n          key: \"name\",\n          type: \"ENTITY_FIELD\"\n        }\n      ],\n    latestValues: [\n        {\n          key: \"description\",\n          type: \"ATTRIBUTE\"\n        }\n      ]\n}\n\nfunction openEditDeviceDialog() {\n    customDialog.customDialog(htmlTemplate, EditDeviceDialogController).subscribe();\n}\n\nfunction EditDeviceDialogController(instance) {\n    let vm = instance;\n    vm.fileName = '';\n    vm.loading = false;\n    let url = 'https://solarhub.engecomp.io/openapi/file_upload'\n    let user = widgetContext.currentUser;\n    let userMail = user.sub\n    //let parent_id = widgetContext.stateController.getEntityId('Curr_Client')\n    \n     $( document ).ready(function() {\n        let form = $('.drop-area');\n        form.on('drag dragstart dragend dragover dragenter dragleave drop', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n        }).on('drop', function(e) {\n            vm.fileAdded(e.originalEvent.dataTransfer.files);\n        });\n    });\n    \n    vm.fileAdd = vm.fb.group({\n        file:[[], [vm.validators.required]],\n        controlInputField:''\n    });\n\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n    vm.clearFile = () => {\n        $(\".file-input\").value = \"\";\n        vm.fileName = '';\n        vm.fileAdd.patchValue({file: []})\n    }\n\n    vm.fileAdded = (files)=> {\n        for(let i = 0; i < files.length; i++){\n            let filetype=files[i].name.split('.').pop();\n            let filesize=files[i].size\n            if ((filetype.toLowerCase() === 'xls' || filetype.toLowerCase() === 'xlsx') && filesize < 1024*1024*20) {\n                let newFiles = vm.fileAdd.get('file').value\n                if(vm.fileAdd.get('file').value.length !== 0){\n                    vm.fileName += ' // ';\n                }\n                newFiles.push(files.item(i))\n                vm.fileAdd.patchValue({file: newFiles})\n                vm.fileName += files.item(i).name;\n            } else {\n                if (filetype.toLowerCase() !== 'xls' && filetype.toLowerCase() !== 'xlsx') {\n                    alert(files[i].name + \" tem extensão inválida\");\n                } else {\n                    alert(files[i].name + \" excede 20MB\");\n                }\n                \n            }\n        }\n        vm.fileAdd.get('controlInputField').patchValue('', {emitEvent: false});\n    }\n\n\n    vm.send = () =>\n    {\n        vm.loading = true;\n        \n        var form = new FormData();\n        form.append(\"file\", vm.fileAdd.get('file').value[0]);\n        form.append(\"file_type\", \"bacio_production_v2\");\n        form.append(\"search\", JSON.stringify(search));\n        form.append(\"token\", localStorage[\"jwt_token\"])\n        form.append(\"email\", userMail)\n        \n        var settings = {\n          \"url\": url,\n          \"method\": \"POST\",\n          \"timeout\": 0,\n          \"processData\": false,\n          \"mimeType\": \"multipart/form-data\",\n          \"contentType\": false,\n          \"data\": form,\n          \"success\": function(data) {\n              vm.loading = false\n              widgetContext.showSuccessToast('Arquivo enviado com sucesso.', 3000)\n              vm.cancel();\n          },\n          \"error\": function(data) {\n            vm.loading = false\n            response = JSON.parse(data.responseText)\n            if (response.hasOwnProperty('detail')) {\n                message = response.detail\n            } else {\n                message = 'Erro. Por favor contacte a Engecomp.'\n            }\n            widgetContext.showErrorToast(message, 3000)\n            vm.cancel();\n          }\n        };\n        \n        $.ajax(settings)\n\n    }\n}\n\n\n",
                "customResources" : [ ],
                "id" : "ab198e71-1972-8774-8b94-8f92be4a5e03"
              }, {
                "name" : "Exportação de dados",
                "icon" : "file_download",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n     <div fxLayout=\"column\" fxLayout.gt-sm=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"20px\">\n         \n\n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"0\" fxFlexOrder.gt-sm=\"0\">\n          <mat-label>Data Inicial</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"sdStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n        \n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"1\" fxFlexOrder.gt-sm=\"1\">\n          <mat-label>Data Final</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"edStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n\n    </div>\n    \n    <div [fxShow]=\"!OK\" fxLayoutGap=\"20px\" style=\"color: red; font-weight: bold;\">ATENÇÃO: {{ errorMessage }}</div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nvar user = widgetContext.currentUser;\n\n\nvar url = 'https://solarhub.engecomp.io/be/uc_data_export/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\n\npayload = {\n    email: user.sub,\n    token: localStorage[\"jwt_token\"]\n}\n\npayload.search = {\n    entityFilter: widgetContext.defaultSubscription.configuredDatasources[0].entityFilter,\n    pageLink: {\n        page: 0,\n        pageSize: 1000,\n        textSearch: null,\n        dynamic: false,\n        sortOrder: {\n          key: {\n            key: \"name\",\n            type: \"ENTITY_FIELD\"\n          },\n          direction: \"ASC\"\n        }\n      },\n    entityFields: [\n        {\n          key: \"name\",\n          type: \"ENTITY_FIELD\"\n        }\n      ],\n    latestValues: [\n        {\n          key: \"description\",\n          type: \"ATTRIBUTE\"\n        }\n      ]\n}\n\n//payload.search.entityFilter.maxLevel = 9\n\nshowInfoDialog()\n\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    \n    let vm = instance;   \n    vm.OK = true\n\n    vm.importTitle = 'Exportação de dados - FATURAS'\n    \n    vm.ed = moment.utc().startOf('day').toDate();\n    vm.sd = moment(vm.ed).subtract(1, 'month').toDate();\n\n    vm.sdStr = moment(vm.sd).format('DD/MM/YYYY');\n    vm.edStr = moment(vm.ed).format('DD/MM/YYYY');\n    \n    vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY')\n    vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY')\n    \n    \n    vm.change = function() {\n\n        vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY HH:mm')\n        vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY HH:mm')\n        \n        var days = moment(vm.ed).diff(moment(vm.sd),\n            'days');\n            \n        if (!vm.sd._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data inicial inválida\"\n            return\n        }\n        \n        if (!vm.ed._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data final inválida\"\n            return\n        }\n\n        //check start date greater than end date\n        if (days < 0) {\n            vm.OK = false;\n            vm.errorMessage =\n                \"Data inicial maior que data final\";\n            return;\n        }\n\n        vm.OK = true;\n    }\n\n    \n    vm.change()\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n\n        let formData = new FormData();\n        \n        sd = moment(vm.sd).format('YYYY-MM-DD');\n        ed = moment(vm.ed).format('YYYY-MM-DD');\n        \n        payload.start_date = sd\n        payload.end_date = ed\n        payload.getnow = true\n        payload.use_case = \"ssu\"\n        \n        formData.append(\"payload\", JSON.stringify( payload ))\n        console.log(JSON.stringify( payload ))\n\n        var fetchParams = { method: \"POST\", body: formData }\n        \n        fetch(url, fetchParams).then(function(r) {\n            if (r.status == 200) {\n\n                return r.json().then(\n                    function(data) {\n                        if (data.link && data.link.length > 0) {\n                            window.open(data.link,'_blank');\n                        }\n                        else {\n                            widgetContext.showSuccessToast('Sucesso. Um link será enviado para o seu e-mail', 3000)\n                        }\n                    })\n            }\n            else {\n                widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n            }\n            \n        })\n        .catch(function(error) {\n            widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n        });\n  \n        vm.cancel();  \n        \n    }\n}\n",
                "customResources" : [ ],
                "id" : "d8afdd25-e457-6736-c085-dfcebb70b276"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "b18dca36-79cb-69fa-6449-34a9c3629313",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "cca317b2-d029-4adb-b9b5-230ce26197c2" : {
          "type" : "static",
          "sizeX" : 15,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Gestão de Faturas</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 30px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "label UC GD",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "cca317b2-d029-4adb-b9b5-230ce26197c2",
          "typeFullFqn" : "system.cards.html_card"
        },
        "ecd22b7f-784d-44b2-9fa9-b64673b8e13b" : {
          "type" : "latest",
          "sizeX" : 28,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "ea337dd3-3e20-573c-3268-117e79aee26d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "serial",
                "type" : "attribute",
                "label" : "serial",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.2480594686375368,
                "decimals" : 0,
                "postFuncBody" : "return \"Remota: \"+value;"
              }, {
                "name" : "latitude",
                "type" : "attribute",
                "label" : "latitude",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.4835535055608968
              }, {
                "name" : "longitude",
                "type" : "attribute",
                "label" : "longitude",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.5324887104274882
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.16456604186865653,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"-- SEM NOME --\"    \n}\nreturn nome;"
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "classe_tensao",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.41833777839022757,
                "postFuncBody" : "var dict = {\n    0:\"?Classe?\",\n    1:\"A1\",\n    2:\"A2\",\n    3:\"A3\",\n    4:\"A3a\",\n    5:\"A4\",\n    6:\"AS\",\n    7:\"B1\",\n    8:\"B2\",\n    9:\"B3\"\n};\nreturn dict[value];"
              }, {
                "name" : "enq_tarifario",
                "type" : "attribute",
                "label" : "tarifa",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.08184931893109293,
                "postFuncBody" : "var dict = {\n    0:\"?Tarifa?\",\n    1:\"Azul\",\n    2:\"Verde\",\n    3:\"Convencional\",\n    4:\"Branca\"\n};\nreturn dict[value];\n"
              }, {
                "name" : "status_cliente",
                "type" : "attribute",
                "label" : "status_cliente",
                "color" : "#03a9f4",
                "settings" : { },
                "_hash" : 0.6243039221706308,
                "postFuncBody" : "var dict = {\n    0: \"?Status? \",\n    1:\"Cativo\",\n    2:\"Livre\"\n};\nreturn dict[value];"
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "utility",
                "color" : "#ff9800",
                "settings" : { },
                "_hash" : 0.09683687422599174,
                "postFuncBody" : "var url = 'https://solarhub.engecomp.io/res/utility_list.json?'+moment().format('MMDD');\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nvar obj = JSON.parse(Get(url));\n\nif (value == \"\") {\n    return \"Não definida\";\n}\nreturn obj[Math.floor(value)];",
                "usePostProcessing" : true,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_consumo_kwh",
                "type" : "attribute",
                "label" : "fat_consumo_kwh",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.9457281678001042
              }, {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "consumo",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.38275648283902153,
                "aggregationType" : "NONE",
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "if (value > 0) {\n    return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}) + \" kWh (\" + moment(time).format('MMM/YY') + \")\";\n    \n}\nreturn \"\";"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "provider" : "openstreet-map",
              "gmApiKey" : "AIzaSyDoEx2kaGz3PxwbI9T7ccTSg5xjdw8Nw8Q",
              "gmDefaultMapType" : "roadmap",
              "mapProvider" : "CartoDB.Positron",
              "useCustomProvider" : false,
              "customProviderTileUrl" : "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
              "mapProviderHere" : "HERE.normalDay",
              "credentials" : {
                "app_id" : "AhM6TzD9ThyK78CT3ptx",
                "app_code" : "p6NPiITB3Vv0GMUFnkLOOg"
              },
              "mapImageUrl" : "tb-image;/api/images/system/air_quality_monitoring_dashboard_widget_new_openstreetmap_map_image.svg",
              "tmApiKey" : "84d6d83e0e51e481e50454ccbe8986b",
              "tmDefaultMapType" : "roadmap",
              "latKeyName" : "latitude",
              "lngKeyName" : "longitude",
              "xPosKeyName" : "xPos",
              "yPosKeyName" : "yPos",
              "defaultZoomLevel" : 20,
              "defaultCenterPosition" : "-15.7801, -47.9292 ",
              "disableScrollZooming" : false,
              "disableDoubleClickZooming" : false,
              "disableZoomControl" : false,
              "fitMapBounds" : true,
              "useDefaultCenterPosition" : true,
              "mapPageSize" : 16384,
              "markerOffsetX" : 0.5,
              "markerOffsetY" : 0.5,
              "draggableMarker" : false,
              "showLabel" : false,
              "showTooltip" : true,
              "showTooltipAction" : "hover",
              "autocloseTooltip" : true,
              "useTooltipFunction" : false,
              "tooltipPattern" : "<b>${description}</b><br/>\n${entityName}<br/>\n<br/>\n${consumo}<br/>\n<b>Status:</b> ${status_cliente}<br/>\n<b>Enq.Tarifário:</b> ${classe_tensao} ${tarifa}<br/>\n<b>Distribuidora:</b> ${utility}<br/>",
              "tooltipOffsetX" : 0,
              "tooltipOffsetY" : 0,
              "color" : "#FE7569",
              "useColorFunction" : false,
              "useMarkerImageFunction" : true,
              "markerImageFunction" : "function getMaxConsumption(){\n  return dsData.reduce((max, b) => Math.max(max, b.fat_consumo_kwh), dsData[0].fat_consumo_kwh);\n}\n\n\nif (!dsData[0].hasOwnProperty(\"max\")) {\n    dsData[0].max = getMaxConsumption()\n}\n\nvar size = 20\nvar max_size = 27;\nvar min_size = 9;\nvar prop = max_size / dsData[0].max\nvar size = Math.max(min_size, data.fat_consumo_kwh * prop);\n\nreturn\t{\n\t    url: images[0],\n\t    size: size\n\t}\n",
              "markerImages" : [ "tb-image;/api/images/tenant/assai_teste_03_23_dashboard_widget_unidades_monitoradas_marker_image_0.png", "tb-image;/api/images/tenant/assai_teste_03_23_dashboard_widget_unidades_monitoradas_marker_image_1.png", "tb-image;/api/images/tenant/assai_teste_03_23_dashboard_widget_unidades_monitoradas_marker_image_2.png" ],
              "showPolygon" : false,
              "polygonKeyName" : "coordinates",
              "editablePolygon" : false,
              "showPolygonLabel" : false,
              "usePolygonLabelFunction" : false,
              "polygonLabel" : "${entityName}",
              "showPolygonTooltip" : false,
              "showPolygonTooltipAction" : "click",
              "autoClosePolygonTooltip" : true,
              "usePolygonTooltipFunction" : false,
              "polygonTooltipPattern" : "<b>${entityName}</b><br/><br/><b>TimeStamp:</b> ${ts:7}",
              "polygonColor" : "#3388ff",
              "polygonOpacity" : 0.5,
              "usePolygonColorFunction" : false,
              "polygonStrokeColor" : "#3388ff",
              "polygonStrokeOpacity" : 1,
              "polygonStrokeWeight" : 1,
              "usePolygonStrokeColorFunction" : false,
              "showCircle" : false,
              "circleKeyName" : "perimeter",
              "editableCircle" : false,
              "showCircleLabel" : false,
              "useCircleLabelFunction" : false,
              "circleLabel" : "${entityName}",
              "showCircleTooltip" : false,
              "showCircleTooltipAction" : "click",
              "autoCloseCircleTooltip" : true,
              "useCircleTooltipFunction" : false,
              "circleTooltipPattern" : "<b>${entityName}</b><br/><br/><b>TimeStamp:</b> ${ts:7}",
              "circleFillColor" : "#3388ff",
              "circleFillColorOpacity" : 0.2,
              "useCircleFillColorFunction" : false,
              "circleStrokeColor" : "#3388ff",
              "circleStrokeOpacity" : 1,
              "circleStrokeWeight" : 3,
              "useCircleStrokeColorFunction" : false,
              "useClusterMarkers" : false,
              "zoomOnClick" : true,
              "maxClusterRadius" : 1,
              "animate" : true,
              "spiderfyOnMaxZoom" : false,
              "showCoverageOnHover" : true,
              "chunkedLoading" : true,
              "removeOutsideVisibleBounds" : true,
              "useIconCreateFunction" : false
            },
            "title" : "Unidades Monitoradas",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : {
              "markerClick" : [ {
                "name" : "Detalhes do ponto",
                "icon" : "more_horiz",
                "type" : "custom",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\nvar params = widgetContext.stateController.getStateParams();\n\nif (!params[\"Curr_Site\"]) {\n    params[\"Curr_Site\"] = {}\n}\nparams[\"Curr_Site\"] = {entityId: entityId}\n\n$injector.get(widgetContext.servicesMap.get('deviceService')).getDevice(entityId.id).subscribe((device) => {\n    if (device.type == 'UC') {\n        destination = \"ssu_geral_uc\"\n    } else {\n        destination = \"ssu_site\"\n    }\n    widgetContext.stateController.updateState(destination, params, false);\n});\n",
                "id" : "d3e01a61-d917-ce67-7582-c2db686ca4ce"
              } ],
              "tooltipAction" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "ecd22b7f-784d-44b2-9fa9-b64673b8e13b",
          "typeFullFqn" : "system.maps_v2.openstreetmap"
        },
        "dd65334e-59af-4aaf-8093-5fdd386f94ea" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.43104392397461777,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"-- SEM NOME --\"    \n}\nreturn nome;"
              }, {
                "name" : "UC",
                "type" : "attribute",
                "label" : "serial",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.990692722682671,
                "postFuncBody" : "return \"UC: \"+value;"
              }, {
                "name" : "status_cliente",
                "type" : "attribute",
                "label" : "status_cliente",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.8283791337304818,
                "postFuncBody" : "var dict = {\n    0: \"?Status? \",\n    1:\"Cativo\",\n    2:\"Livre\"\n};\nreturn dict[value];"
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "utility",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.4863317508156675,
                "postFuncBody" : "var dict = {\n    0: \"?Distribuidora?\",\n    1: \"CPFL PIRATININGA\",\n    2: \"ENEL SP\",\n    3: \"LIGHT\",\n    4: \"COPEL\",\n    5: \"CEMIG\",\n    6: \"ELEKTRO\",\n    7: \"CELPE\",\n    8: \"CEA AMAPA\",\n    9: \"COELBA\",\n    10: \"CEB\",\n    11: \"COSERN\",\n    12: \"CPFL PAULISTA\",\n    13: \"CEEE\",\n    14: \"EDP ES\",\n    15: \"EDP SP\",\n    16: \"CELESC\",\n    17: \"ELETROBRAS AL\",\n    18: \"ELETROBRAS AM\",\n    19: \"ENEL CE COELCE\",\n    20: \"ENEL RJ AMPLA\",\n    21: \"CELG\",\n    22: \"ENERGISA ACE\",\n    23: \"ENERGISA MG\",\n    24: \"ENERGISA MSL\",\n    25: \"ENERGISA MT\",\n    26: \"ENERGISA PB\",\n    27: \"ENERGISA BORBOREMA\",\n    28: \"ENERGISA RJ\",\n    29: \"ENERGISA RO\",\n    30: \"ENERGISA SE\",\n    31: \"ENERGISA SUL-SE\",\n    32: \"ENERGISA TO\",\n    33: \"EQUATORIAL MA\",\n    34: \"EQUATORIAL PI\",\n    35: \"CELPA\",\n    36: \"RGE SUL\",\n    37: \"CPFL JAGUARI\",\n    38: \"CPFL LESTE PAULISTA\",\n    39: \"CPFL MOCOCA\",\n    40: \"CPFL SANTA CRUZ\",\n    41: \"CPFL SUL PAULISTA\",\n    42: \"RGE\" \n};\nreturn dict[value];"
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "classe_tensao",
                "color" : "#03a9f4",
                "settings" : { },
                "_hash" : 0.587870269516126,
                "postFuncBody" : "var dict = {\n    0:\"\",\n    1:\"A1\",\n    2:\"A2\",\n    3:\"A3\",\n    4:\"A3a\",\n    5:\"A4\",\n    6:\"AS\",\n    7:\"B1\",\n    8:\"B2\",\n    9:\"B3\"\n};\nreturn dict[value];"
              }, {
                "name" : "enq_tarifario",
                "type" : "attribute",
                "label" : "enq_tarifario",
                "color" : "#ff9800",
                "settings" : { },
                "_hash" : 0.27826031193207723,
                "postFuncBody" : "var dict = {\n    0:\"?Tarifa?\",\n    1:\"Azul\",\n    2:\"Verde\",\n    3:\"Convencional\",\n    4:\"Branca\"\n};\nreturn dict[value];"
              }, {
                "name" : "endereco",
                "type" : "attribute",
                "label" : "endereco",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.3670957501947778
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.33523773778490085
              }, {
                "name" : "estado",
                "type" : "attribute",
                "label" : "estado",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.30775536957216876
              }, {
                "name" : "bairro",
                "type" : "attribute",
                "label" : "bairro",
                "color" : "#03a9f4",
                "settings" : { },
                "_hash" : 0.5812480733670164
              } ],
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgb(255, 255, 255)",
            "padding" : "10px",
            "settings" : {
              "cardHtml" : "<div class='card'>\n    <div class='content'>\n        <div class='column'>\n            <div class='title'>\n                ${description}\n            </div>    \n            <div class='value'>\n                ${serial}<br>\n                ${bairro} - ${cidade}/${estado}<br>\n                ${utility} - ${classe_tensao} ${enq_tarifario}\n            </div>\n        </div>\n    </div>\n</div>",
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value {\n    font-size: 1.7vh;\n    font-weight: 300;\n}\n\n.card .title {\n    font-size: 2.0vh;\n    font-weight: bold;\n    color: #bdfbf8;\n}\n\n.card .description {\n    font-size: 14px;\n    color: #999;\n}\n"
            },
            "title" : "id_site_bt",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "margin" : ""
          },
          "id" : "dd65334e-59af-4aaf-8093-5fdd386f94ea",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "073e2e59-8904-4d00-b37e-0a3639c458f6" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 23,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgb(255, 255, 255)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Consumidor",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "enableSelectColumnDisplay" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Tabela de Pontos",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "Consumidor",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.5889221504240929,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"-- SEM NOME --\"    \n}\nreturn nome;"
              }, {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#f44336",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.7356644379330228
              } ],
              "entityAliasId" : "ea337dd3-3e20-573c-3268-117e79aee26d"
            } ],
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "name" : "update state",
                "icon" : "more_horiz",
                "type" : "custom",
                "customFunction" : "let entityRelationService = widgetContext.entityRelationService\nlet attributeService = widgetContext.attributeService\n\nvar params = widgetContext.stateController.getStateParams();\nparams[\"Curr_Fat_BT\"] = {\n    entityId: entityId,\n    entityName: entityName\n};\n\nentityRelationService.findInfoByFrom(entityId).subscribe(\n    (relations) => {\n        if (relations.length > 0 && relations[0].to.entityType == 'DEVICE') {\n            params[\"Curr_Site\"] = {\n                entityId: relations[0].to,\n                entityName: relations[0].toName\n            };\n        }\n        widgetContext.stateController.updateState('faturas_site', params, false);\n    }\n);\n",
                "id" : "8f9ced22-f791-ff78-d806-189d7616763e"
              } ],
              "rowDoubleClick" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "073e2e59-8904-4d00-b37e-0a3639c458f6",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "48bc2adc-bdf9-4992-bd43-b883bcd280a5" : {
          "type" : "latest",
          "sizeX" : 15,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_total",
                "type" : "attribute",
                "label" : "fatura",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.30331350383434086,
                "decimals" : 2,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nif (value>100000) {\n    return \"R$ \"+formattedNumber(value, 0, 0);\n} \nreturn \"R$ \"+formattedNumber(value, 2, 2);"
              }, {
                "name" : "fat_total_delta",
                "type" : "attribute",
                "label" : "variacao",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.811158365946371,
                "decimals" : 1,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nsinal=\"+\";\nif (value<0) {\n    sinal=\"-\";\n}\nreturn sinal+formattedNumber(Math.abs(value), 1, 1)+\"% versus mês anterior\";"
              } ],
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${fatura}</div><br>\n        <footer>\n            <div class=\"additional-info\">${variacao}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Última Fatura",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "48bc2adc-bdf9-4992-bd43-b883bcd280a5",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "5de43f7c-8c41-4438-99ac-3817025cbb5a" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh",
                "type" : "attribute",
                "label" : "valor",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.3934882063636649,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nreturn formattedNumber(value, 0, 0) + \" kWh\";"
              } ],
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Consumo Medido",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "5de43f7c-8c41-4438-99ac-3817025cbb5a",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "b9f393b5-8633-4cf1-ae4a-d43aa2e67ecd" : {
          "type" : "latest",
          "sizeX" : 13,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_consumo_esperado_kwh",
                "type" : "attribute",
                "label" : "valor",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.6609605132223935,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nreturn formattedNumber(value, 0, 0) + \" kWh\";"
              } ],
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Consumo Esperado",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false,
            "displayTimewindow" : true
          },
          "id" : "b9f393b5-8633-4cf1-ae4a-d43aa2e67ecd",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "2ceb140e-5b41-49a7-94e0-7cb70a2331dc" : {
          "type" : "latest",
          "sizeX" : 12,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_economia_brl",
                "type" : "attribute",
                "label" : "valor",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.1406557509836388,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nif (value>100000) {\n    return \"R$ \"+formattedNumber(value, 0, 0);\n} \nreturn \"R$ \"+formattedNumber(value, 2, 2);"
              }, {
                "name" : "fat_economia_perc",
                "type" : "attribute",
                "label" : "variacao",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.01589567176505602,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nreturn formattedNumber(value*100, 1, 1)+\"% da fatura\";"
              } ],
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n        <footer>\n            <div class=\"additional-info\">${variacao}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Economia",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "2ceb140e-5b41-49a7-94e0-7cb70a2331dc",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "8de9d21e-1f5f-4767-85de-a14fa4f88373" : {
          "type" : "timeseries",
          "sizeX" : 25,
          "sizeY" : 18,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "uc_url_conta",
                "type" : "timeseries",
                "label" : "Leitura",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "function timeConverter(UNIX_timestamp) {\n    var a = new Date(UNIX_timestamp);\n    var months = ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun',\n        'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'\n    ];\n    var year = a.getFullYear() - 2000;\n    var month = months[a.getMonth()];\n    var day = a.getDate()\n    var time = day + \"-\" + month + '-' + year;\n    return time;\n}\n\nvar html = timeConverter(rowData['Timestamp'])\nif (value !== undefined) {\n    html = '' +\n        '<html>' +\n        '<a href=\"' + value + '\" target=\"_blank\">' +\n        timeConverter(rowData['Timestamp']) + '</a>' +\n        '</html>'\n}\nreturn html;"
                },
                "_hash" : 0.7821151291852728,
                "postFuncBody" : "return value;"
              }, {
                "name" : "fat_consumo_total_reais",
                "type" : "timeseries",
                "label" : "Consumo (R$)",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.5349386412549832,
                "decimals" : 2
              }, {
                "name" : "fat_outros_reais",
                "type" : "timeseries",
                "label" : "Outros (R$)",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.9990272823573612,
                "decimals" : 2
              }, {
                "name" : "fat_total",
                "type" : "timeseries",
                "label" : "Total (R$)",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.38617481896365846,
                "decimals" : 2
              } ],
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 630720000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 20000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : false,
              "defaultPageSize" : 15,
              "enableSearch" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Faturas de Energia",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : {
              "headerButton" : [ {
                "id" : "1c2bf03f-f432-65ca-0040-abc2972ea2d1",
                "name" : "Detalhes das faturas",
                "icon" : "grid_on",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "faturas_rel_fats",
                "setEntityId" : true,
                "stateEntityParamName" : ""
              }, {
                "name" : "Download dos PDFs",
                "icon" : "file_download",
                "type" : "custom",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\n\nvar user = widgetContext.currentUser;\nvar userMail = user.sub\n\n//var url = 'https://solarhub.engecomp.io/be/pdf_export/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\nvar url = 'https://solarhub.engecomp.io/be/pdf_export_v2/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\n\npayload = createJSON();\n\nsend();\n\nfunction createJSON(UC) {\n    var payload = {};\n    //payload.devices = [];\n    payload.files = [];\n    payload.email = userMail\n    payload.UC = entityName.substring(3,entityName.length)\n    payload.utility = entityName.substring(0,2)\n\n    for (var i = 0; i < widgetContext.data.length; i++) {\n        if (widgetContext.data[i].dataKey.name == 'uc_url_conta') {\n            for (j=0; j < widgetContext.data[i].data.length ; j++){\n                file = {}\n                file.link = widgetContext.data[i].data[j][1]\n                file.month = moment(widgetContext.data[i].data[j][0],'x').format('MM/YYYY')\n                //payload.devices.push(widgetContext.data[i].data[j][1])\n                payload.files.push(file)\n            }\n        }\n    }\n    return payload\n}\n\n\nfunction send() {\n\n    let formData = new FormData();    \n    formData.append(\"payload\", JSON.stringify( payload ))\n\n    var fetchParams = { method: \"POST\", body: formData }\n    \n    fetch(url, fetchParams).then(function(r) {\n        if (r.status == 200) {\n\n            return r.json().then(\n                function(data) {\n                    if (data.link && data.link.length > 0) {\n                        window.open(data.link,'_blank');\n                    }\n                    else {\n                        widgetContext.showSuccessToast('Sucesso. Um link será enviado para o seu e-mail', 3000)\n                    }\n                })\n        }\n        else {\n            widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n        }\n        \n    }); \n\n    vm.cancel();  \n        \n}\n",
                "id" : "9f76a015-492a-3e0d-ad2f-edff47f4c98b"
              } ]
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : false
          },
          "id" : "8de9d21e-1f5f-4767-85de-a14fa4f88373",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "04b434ab-ad56-47ef-8c87-36b1c1917912" : {
          "type" : "timeseries",
          "sizeX" : 54,
          "sizeY" : 29,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "uc_url_conta",
                "type" : "timeseries",
                "label" : "Leitura",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "function timeConverter(UNIX_timestamp) {\n    var a = new Date(UNIX_timestamp);\n    var months = ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun',\n        'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'\n    ];\n    var year = a.getFullYear() - 2000;\n    var month = months[a.getMonth()];\n    var day = a.getDate()\n    var time = day + \"-\" + month + '-' + year;\n    return time;\n}\n\nvar html = timeConverter(rowData['Timestamp'])\nif (value !== undefined) {\n    html = '' +\n        '<html>' +\n        '<a href=\"' + value + '\" target=\"_blank\">' +\n        timeConverter(rowData['Timestamp']) + '</a>' +\n        '</html>'\n}\nreturn html;"
                },
                "_hash" : 0.1734767597534892,
                "postFuncBody" : "return value;"
              }, {
                "name" : "fat_consumo_total_reais",
                "type" : "timeseries",
                "label" : "Consumo (R$)",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.47244520907040877,
                "decimals" : 2
              }, {
                "name" : "fat_outros_reais",
                "type" : "timeseries",
                "label" : "Outros (R$)",
                "color" : "#f44336",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.19326274371146357,
                "decimals" : 2
              }, {
                "name" : "fat_total",
                "type" : "timeseries",
                "label" : "Total (R$)",
                "color" : "#ffc107",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.7389895863121774,
                "decimals" : 2
              }, {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "Consumo (kWh)",
                "color" : "#607d8b",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.31354711767034327,
                "decimals" : 0
              }, {
                "name" : "fat_temp_media",
                "type" : "timeseries",
                "label" : "T. Média (°C)",
                "color" : "#9c27b0",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1});"
                },
                "_hash" : 0.47981233510377197,
                "decimals" : 1
              }, {
                "name" : "fat_operating_hours",
                "type" : "timeseries",
                "label" : "Horas Operação",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.8862113693299869,
                "decimals" : 0
              }, {
                "name" : "fat_tarifa_bruta_media",
                "type" : "timeseries",
                "label" : "Tarifa (R$/MWh)",
                "color" : "#3f51b5",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return (value*1000).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.6777234326386925,
                "decimals" : 2
              } ],
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 630720000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 20000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : false,
              "defaultPageSize" : 15,
              "enableSearch" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Dados das Faturas de Energia",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "displayTimewindow" : false
          },
          "id" : "04b434ab-ad56-47ef-8c87-36b1c1917912",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "c4f11684-a72c-4b07-ad08-135627fbe051" : {
          "type" : "static",
          "sizeX" : 64,
          "sizeY" : 2,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(0, 105, 92)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "tablist" : "[\n    {\"name\": \"Telemetria\", \"icon\": \"fa-home\", \"stateId\": \"ssu_home\"},\n    {\"name\": \"Faturas\", \"icon\": \"fa-file-invoice-dollar\", \"stateId\": \"faturas_home\"},\n    {\"name\": \"Benchmarking\", \"icon\": \"fa-sort-amount-down\", \"stateId\": \"faturas_benchmarking\"},\n    {\"name\": \"Medição e Verificação\", \"icon\": \"fa-search-dollar\", \"stateId\": \"faturas_m_v_consolidado\"},\n    {\"name\": \"Créditos GD\", \"icon\": \"fa-sun\", \"stateId\": \"faturas_gd_consolidado\"}\n]\n"
            },
            "title" : "Tab Faturas BT Landing",
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "c4f11684-a72c-4b07-ad08-135627fbe051",
          "typeFullFqn" : "tenant.teste.tabs"
        },
        "dfa1d42f-776c-7547-1136-6e380ba11517" : {
          "type" : "static",
          "sizeX" : 54,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 30px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}",
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Medição e Verificação</div>"
            },
            "title" : "label Medicao Verificacao BT",
            "dropShadow" : false,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "dfa1d42f-776c-7547-1136-6e380ba11517",
          "typeFullFqn" : "system.cards.html_card"
        },
        "eaf04b27-bef4-4c0e-b137-4a51a9b3cb8b" : {
          "type" : "latest",
          "sizeX" : 64,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Unidade",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "entitiesTitle" : "Economia por Unidade Consumidora",
              "enableSelectColumnDisplay" : false
            },
            "title" : "Economia por Unidade Consumidora",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#e91e63",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.47992357283323894
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "Unidade",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.3986992590260452
              }, {
                "name" : "fat_consumo_kwh",
                "type" : "attribute",
                "label" : "Cons Medido",
                "color" : "#ffc107",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.31650662019480813
              }, {
                "name" : "fat_temp_media",
                "type" : "attribute",
                "label" : "Temp Média",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1});"
                },
                "_hash" : 0.42491180969595654
              }, {
                "name" : "fat_consumo_esperado_kwh",
                "type" : "attribute",
                "label" : "Cons Esperado",
                "color" : "#607d8b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.6520373252348499
              }, {
                "name" : "fat_economia_kwh",
                "type" : "attribute",
                "label" : "Economia (kWh)",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.39004464911247094
              }, {
                "name" : "fat_tarifa_bruta_media",
                "type" : "attribute",
                "label" : "Tarifa (R$/MWh)",
                "color" : "#ffeb3b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return (value*1000).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.6922757498538832
              }, {
                "name" : "fat_economia_brl",
                "type" : "attribute",
                "label" : "Economia (R$)",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.9492119540836372
              }, {
                "name" : "fat_economia_perc",
                "type" : "attribute",
                "label" : "Economia (%)",
                "color" : "#ffeb3b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return (value*100).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1});"
                },
                "_hash" : 0.24187879904606735
              }, {
                "name" : "fat_economia_perc",
                "type" : "attribute",
                "label" : "Score",
                "color" : "#03a9f4",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var dict = {\n    0: 0,\n    1: 0,\n    2: 1,\n    3: 1,\n    4: 2,\n    5: 2,\n    6: 3,\n    7: 3,\n    8: 4,\n    9: 4,\n    10: 5,\n    11: 5,\n    12: 5,\n    13: 5,\n    14: 6,\n    15: 6,\n    16: 6,\n    17: 6\n};\n\nvar html = {\n    0: '<html><img src=\"https://solarhub.engecomp.io/res/pe_a.png\" width=\"auto\" height=\"22em\"></html>',\n    1: '<html><img src=\"https://solarhub.engecomp.io/res/pe_b.png\" width=\"auto\" height=\"22em\"></html>',\n    2: '<html><img src=\"https://solarhub.engecomp.io/res/pe_c.png\" width=\"auto\" height=\"22em\"></html>',\n    3: '<html><img src=\"https://solarhub.engecomp.io/res/pe_d.png\" width=\"auto\" height=\"22em\"></html>',\n    4: '<html><img src=\"https://solarhub.engecomp.io/res/pe_e.png\" width=\"auto\" height=\"22em\"></html>',\n    5: '<html><img src=\"https://solarhub.engecomp.io/res/pe_f.png\" width=\"auto\" height=\"22em\"></html>',\n    6: '<html><img src=\"https://solarhub.engecomp.io/res/pe_g.png\" width=\"auto\" height=\"22em\"></html>'\n};\n\nvar valor = value * 100;\nif (valor < 0.1) {\n\treturn '<html>&nbsp;</html>';\n}\nindex = dict[Math.floor(valor)];\nif (valor < 1) {\n    index = 0;\n} else if (valor > 15) {\n    index = 6;\n}\nreturn html[index];\n"
                },
                "_hash" : 0.42446944011829424
              } ],
              "entityAliasId" : "ea337dd3-3e20-573c-3268-117e79aee26d"
            } ],
            "enableDataExport" : true,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "id" : "d6334b7d-5385-1efc-dd3d-fe0e13842870",
                "name" : "Detalhes da unidade",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "faturas_site",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Fat_BT"
              } ],
              "headerButton" : [ ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "eaf04b27-bef4-4c0e-b137-4a51a9b3cb8b",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "7a3652f2-f8d9-ae7e-e3ac-c48cec8d5d28" : {
          "type" : "static",
          "sizeX" : 54,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 30px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}",
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Geração Distribuída</div>"
            },
            "title" : "label Geracao Distribuida",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "7a3652f2-f8d9-ae7e-e3ac-c48cec8d5d28",
          "typeFullFqn" : "system.cards.html_card"
        },
        "921ddc82-5460-40ff-b035-77ef1632a15e" : {
          "type" : "latest",
          "sizeX" : 37,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Unidade",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "entitiesTitle" : "Unidades Consumidoras",
              "entityNameColumnTitle" : "Nome",
              "enableSelectColumnDisplay" : true
            },
            "title" : "Unidades Consumidoras",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "14%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.7899136876515169
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "Unidade",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "columnWidth" : "16%"
                },
                "_hash" : 0.957563964157851
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "Cidade",
                "color" : "#f44336",
                "settings" : {
                  "columnWidth" : "14%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.9545775993492569
              }, {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "Consumo (kWh)",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.4276277313827559
              }, {
                "name" : "fat_energia_creditada",
                "type" : "timeseries",
                "label" : "Créditos (kWh)",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.3101243825923863,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "fat_saldo_creditos",
                "type" : "attribute",
                "label" : "Saldo Créditos (kWh)",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.699167590840374,
                "postFuncBody" : "return Math.round(value);"
              } ],
              "entityAliasId" : "ea337dd3-3e20-573c-3268-117e79aee26d"
            } ],
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "id" : "5947e007-5483-ba83-a228-fc0bf47bae3b",
                "name" : "detalhe_UC",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "faturas_site_gd",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Fat_BT"
              } ],
              "headerButton" : [ ],
              "actionCellButton" : [ ]
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "921ddc82-5460-40ff-b035-77ef1632a15e",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "33e61f48-716f-4f6e-9e04-e14144d1df0b" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_energia_creditada",
                "type" : "attribute",
                "label" : "valor",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.22625719352176676,
                "postFuncBody" : "function numberWithCommas(x, y, z) {\n    return x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z});\n}\nreturn numberWithCommas(value, 0, 0) + \"kWh\";"
              } ],
              "entityAliasId" : "c887f65b-386b-db62-7d93-8ff5fe5ecdcd"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardCss" : "@import 'https://solarhub.engecomp.io/res/style.css';",
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n        <footer>\n            <div class=\"additional-info\">${variacao}</div>\n        </footer>\n    </section>\n</div>"
            },
            "title" : "Créditos no ano",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false,
            "displayTimewindow" : true
          },
          "id" : "33e61f48-716f-4f6e-9e04-e14144d1df0b",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "eb4e3d68-d21c-4fa9-8fc3-cc1ee002807a" : {
          "type" : "latest",
          "sizeX" : 13,
          "sizeY" : 5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_co2_gd",
                "type" : "attribute",
                "label" : "valor",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 1.9171047514632278E-4,
                "postFuncBody" : "function numberWithCommas(x, y, z) {\n    return x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z});\n}\n\nunit = 'ton';\nvalor = value;\ns = \"0\";\nif (valor < 10) {\n\tunit = \"kg\";\n\tvalor *= 1000;\n\ts = numberWithCommas(valor, 0, 0);\n} else {\n    s = numberWithCommas(valor, 1, 1);\n}\n\nreturn s + \" \" + unit;\n"
              } ],
              "entityAliasId" : "c887f65b-386b-db62-7d93-8ff5fe5ecdcd"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n        <footer>\n            <div class=\"additional-info\">${variacao}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : "@import 'https://solarhub.engecomp.io/res/style.css';"
            },
            "title" : "CO2 evitados",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false,
            "displayTimewindow" : true
          },
          "id" : "eb4e3d68-d21c-4fa9-8fc3-cc1ee002807a",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "daf0f327-cda9-488e-a232-e114ae6223c8" : {
          "type" : "timeseries",
          "sizeX" : 27,
          "sizeY" : 24,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "Consumo",
                "color" : "#f44336",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : true,
                  "showPoints" : true,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.5614207437483503,
                "decimals" : 0
              }, {
                "name" : "fat_energia_creditada",
                "type" : "timeseries",
                "label" : "Créditos",
                "color" : "#04bd53",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : true,
                  "showPoints" : true,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.9862822574107597,
                "decimals" : 0,
                "postFuncBody" : "return Math.floor(value);"
              }, {
                "name" : "fat_saldo_creditos",
                "type" : "timeseries",
                "label" : "Saldo de Créditos",
                "color" : "#ffc107",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : true,
                  "showPoints" : true,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.29912881619545373,
                "postFuncBody" : "return Math.floor(value);"
              } ],
              "entityAliasId" : "c887f65b-386b-db62-7d93-8ff5fe5ecdcd"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 86400000,
                "timewindowMs" : 35424000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "smoothLines" : true,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "showLegend" : true,
              "legendConfig" : {
                "position" : "right",
                "showMin" : false,
                "showMax" : false,
                "showAvg" : false,
                "showTotal" : false
              }
            },
            "title" : "Balanço Consumo x Créditos (kWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "widgetStyle" : { },
            "units" : "",
            "decimals" : null,
            "useDashboardTimewindow" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : false
          },
          "id" : "daf0f327-cda9-488e-a232-e114ae6223c8",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "16130c76-02e9-46a7-8283-292b94605b8c" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh",
                "type" : "attribute",
                "label" : "valor",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.3934882063636649,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nreturn formattedNumber(value, 0, 0) + \" kWh\";"
              } ],
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Consumo Último Mês",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "16130c76-02e9-46a7-8283-292b94605b8c",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "0f50e323-4eb0-4d62-954a-4305b3e6b701" : {
          "type" : "timeseries",
          "sizeX" : 54,
          "sizeY" : 17,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "uc_url_conta",
                "type" : "timeseries",
                "label" : "Mês",
                "color" : "#9c27b0",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "function timeConverter(UNIX_timestamp){\n  var a = new Date(UNIX_timestamp);\n  var months = ['Jan','Fev','Mar','Abr','Mai','Jun','Jul','Ago','Set','Out','Nov','Dez'];\n  var year = a.getFullYear();\n  var month = months[a.getMonth()];\n  var time = month + '-' + year;\n  return time;\n}\n\nvar html = timeConverter(rowData['Timestamp'])\nif (value !== undefined) {\n  html = ''+\n    '<html>'+\n    '<a href=\"'+value+'\" target=\"_blank\">'+timeConverter(rowData['Timestamp'])+'</a>'+\n    '</html>'\n}\nreturn html;"
                },
                "_hash" : 0.5019676276311937,
                "postFuncBody" : "return value;"
              }, {
                "name" : "fat_consumo_te_fp_registrado",
                "type" : "timeseries",
                "label" : "Consumo (kWh)",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellStyleFunction" : "\n",
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.6627250355168759,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "fat_energia_creditada",
                "type" : "timeseries",
                "label" : "Crédito (kWh)",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.24408499204136458,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "fat_saldo_creditos",
                "type" : "timeseries",
                "label" : "Saldo Créditos (kWh)",
                "color" : "#ffc107",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.8938151577816245,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "fat_total",
                "type" : "timeseries",
                "label" : "Fatura (R$)",
                "color" : "#607d8b",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.9155472012116606,
                "postFuncBody" : "return Math.round(value*100)/100;"
              }, {
                "name" : "fat_valor_creditado_energia",
                "type" : "timeseries",
                "label" : "Créditos (R$)",
                "color" : "#9c27b0",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.27822176066150295,
                "postFuncBody" : "return Math.round(value*100)/100;"
              }, {
                "name" : "fat_tarifa_bruta_media",
                "type" : "timeseries",
                "label" : "Tarifa (R$/MWh)",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return (value*1000).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.49089885270438427
              } ],
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 86400000,
                "timewindowMs" : 64800000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 2000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : false,
              "defaultPageSize" : 12,
              "enableSearch" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Faturas Mensais de Energia",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : {
              "headerButton" : [ ]
            },
            "legendConfig" : {
              "position" : "bottom",
              "showMin" : false,
              "showMax" : false,
              "showAvg" : true,
              "showTotal" : true
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : false
          },
          "id" : "0f50e323-4eb0-4d62-954a-4305b3e6b701",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "8ac5238a-a449-480f-858c-08c3709abf24" : {
          "type" : "timeseries",
          "sizeX" : 54,
          "sizeY" : 18,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_consumo_te_fp_registrado",
                "type" : "timeseries",
                "label" : "Consumo",
                "color" : "rgb(255, 100, 100)",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : true,
                  "showPoints" : true,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.5676293663270451,
                "decimals" : 0,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "fat_energia_creditada",
                "type" : "timeseries",
                "label" : "Créditos",
                "color" : "rgb(52, 185, 158)",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : true,
                  "showPoints" : true,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.15621929652787725,
                "decimals" : 0,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "fat_saldo_creditos",
                "type" : "timeseries",
                "label" : "Saldo de Créditos",
                "color" : "rgb(242, 176, 32)",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : true,
                  "showPoints" : true,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.49937620476316225,
                "postFuncBody" : "return Math.round(value);"
              } ],
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 604800000,
                "timewindowMs" : 64800000000
              },
              "aggregation" : {
                "type" : "MAX",
                "limit" : 400
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "smoothLines" : true,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "column",
                "position" : "right",
                "showMin" : false,
                "showMax" : false,
                "showAvg" : false,
                "showTotal" : false
              }
            },
            "title" : "Balanço Consumo x Créditos (kWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : false
          },
          "id" : "8ac5238a-a449-480f-858c-08c3709abf24",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "968bd0b0-6ad7-4c9f-9c57-75fd79145c6e" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Unidade",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "entitiesTitle" : "Site 1",
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Site 1",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "Unidade",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.7626665376485484
              }, {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.5556550431266114
              } ],
              "entityAliasId" : "ea337dd3-3e20-573c-3268-117e79aee26d"
            } ],
            "enableDataExport" : false,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "id" : "210730dc-1dca-0e5c-4b8c-4877665a296b",
                "name" : "change entity",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : null,
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Fat_BT"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "968bd0b0-6ad7-4c9f-9c57-75fd79145c6e",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "12812525-6276-4e1f-b0cc-f616ced04bf1" : {
          "type" : "latest",
          "sizeX" : 20,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5155785689407371
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "classe_tensao",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.7789197618211576,
                "postFuncBody" : "var dict = {\n    0:\"\",\n    1:\"A1\",\n    2:\"A2\",\n    3:\"A3\",\n    4:\"A3a\",\n    5:\"A4\",\n    6:\"AS\",\n    7:\"B1\",\n    8:\"B2\",\n    9:\"B3\"\n};\nreturn dict[value];"
              }, {
                "name" : "enq_tarifario",
                "type" : "attribute",
                "label" : "enq_tarifario",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.5065987338045093,
                "postFuncBody" : "var dict = {\n    0:\"?Tarifa?\",\n    1:\"Azul\",\n    2:\"Verde\",\n    3:\"Convencional\",\n    4:\"Branca\"\n};\nreturn dict[value];"
              }, {
                "name" : "demanda_fp",
                "type" : "attribute",
                "label" : "demanda_fp",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.7312962999006185,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 1}) + \" kW\";"
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "utility",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.8852897696852668,
                "postFuncBody" : "var dict = {\n    0: \"?Distribuidora?\",\n    1: \"CPFL PIRATININGA\",\n    2: \"ENEL SP\",\n    3: \"LIGHT\",\n    4: \"COPEL\",\n    5: \"CEMIG\",\n    6: \"ELEKTRO\",\n    7: \"CELPE\",\n    8: \"CEA AMAPA\",\n    9: \"COELBA\",\n    10: \"CEB\",\n    11: \"COSERN\",\n    12: \"CPFL PAULISTA\",\n    13: \"CEEE\",\n    14: \"EDP ES\",\n    15: \"EDP SP\",\n    16: \"CELESC\",\n    17: \"ELETROBRAS AL\",\n    18: \"ELETROBRAS AM\",\n    19: \"ENEL CE COELCE\",\n    20: \"ENEL RJ AMPLA\",\n    21: \"CELG\",\n    22: \"ENERGISA ACE\",\n    23: \"ENERGISA MG\",\n    24: \"ENERGISA MSL\",\n    25: \"ENERGISA MT\",\n    26: \"ENERGISA PB\",\n    27: \"ENERGISA BORBOREMA\",\n    28: \"ENERGISA RJ\",\n    29: \"ENERGISA RO\",\n    30: \"ENERGISA SE\",\n    31: \"ENERGISA SUL-SE\",\n    32: \"ENERGISA TO\",\n    33: \"EQUATORIAL MA\",\n    34: \"EQUATORIAL PI\",\n    35: \"CELPA\",\n    36: \"RGE SUL\",\n    37: \"CPFL JAGUARI\",\n    38: \"CPFL LESTE PAULISTA\",\n    39: \"CPFL MOCOCA\",\n    40: \"CPFL SANTA CRUZ\",\n    41: \"CPFL SUL PAULISTA\",\n    42: \"RGE\" \n};\nreturn dict[value];"
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.2749712890857279
              }, {
                "name" : "estado",
                "type" : "attribute",
                "label" : "estado",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.39311028025251993
              } ],
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<table width=\"100%\" class='card'>\n    <tr width=\"100%\">\n        <td width=\"95%\">\n            <div class='content'>\n                <div class='column'>\n                    <div class='value_blue' align=\"right\">\n                        ${description}\n                    </div>\n                    <div class='description' align=\"right\">\n                        ${status_cliente} ${classe_tensao} ${enq_tarifario} ${demanda_fp}<br>\n                        ${utility}\n                    </div>    \n                </div>\n            </div>\n        </td>\n        <td width=\"5%\">&nbsp;</td>\n    </tr>\n</table>",
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   width: 100%;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   width: 100%;\n   height: 100%;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}"
            },
            "title" : "ID Site 1",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "12812525-6276-4e1f-b0cc-f616ced04bf1",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "763bc8b9-57f9-478f-9ffe-d2f802587f23" : {
          "type" : "static",
          "sizeX" : 4,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>x</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
            },
            "title" : "label x",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "763bc8b9-57f9-478f-9ffe-d2f802587f23",
          "typeFullFqn" : "system.cards.html_card"
        },
        "0d23d3ed-192c-4629-a930-e8dc992a27d9" : {
          "type" : "latest",
          "sizeX" : 20,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.4791707582333746
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "classe_tensao",
                "color" : "#e34844",
                "settings" : { },
                "_hash" : 0.2693891785658551,
                "postFuncBody" : "var dict = {\n    0:\"\",\n    1:\"A1\",\n    2:\"A2\",\n    3:\"A3\",\n    4:\"A3a\",\n    5:\"A4\",\n    6:\"AS\",\n    7:\"B1\",\n    8:\"B2\",\n    9:\"B3\"\n};\nreturn dict[value];"
              }, {
                "name" : "enq_tarifario",
                "type" : "attribute",
                "label" : "enq_tarifario",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.7979988314678461,
                "postFuncBody" : "var dict = {\n    0:\"?Tarifa?\",\n    1:\"Azul\",\n    2:\"Verde\",\n    3:\"Convencional\",\n    4:\"Branca\"\n};\nreturn dict[value];"
              }, {
                "name" : "demanda_fp",
                "type" : "attribute",
                "label" : "demanda_fp",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.6170238355590876,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 1}) + \" kW\";"
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "utility",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.9958414655770815,
                "postFuncBody" : "var dict = {\n    0: \"?Distribuidora?\",\n    1: \"CPFL PIRATININGA\",\n    2: \"ENEL SP\",\n    3: \"LIGHT\",\n    4: \"COPEL\",\n    5: \"CEMIG\",\n    6: \"ELEKTRO\",\n    7: \"CELPE\",\n    8: \"CEA AMAPA\",\n    9: \"COELBA\",\n    10: \"CEB\",\n    11: \"COSERN\",\n    12: \"CPFL PAULISTA\",\n    13: \"CEEE\",\n    14: \"EDP ES\",\n    15: \"EDP SP\",\n    16: \"CELESC\",\n    17: \"ELETROBRAS AL\",\n    18: \"ELETROBRAS AM\",\n    19: \"ENEL CE COELCE\",\n    20: \"ENEL RJ AMPLA\",\n    21: \"CELG\",\n    22: \"ENERGISA ACE\",\n    23: \"ENERGISA MG\",\n    24: \"ENERGISA MSL\",\n    25: \"ENERGISA MT\",\n    26: \"ENERGISA PB\",\n    27: \"ENERGISA BORBOREMA\",\n    28: \"ENERGISA RJ\",\n    29: \"ENERGISA RO\",\n    30: \"ENERGISA SE\",\n    31: \"ENERGISA SUL-SE\",\n    32: \"ENERGISA TO\",\n    33: \"EQUATORIAL MA\",\n    34: \"EQUATORIAL PI\",\n    35: \"CELPA\",\n    36: \"RGE SUL\",\n    37: \"CPFL JAGUARI\",\n    38: \"CPFL LESTE PAULISTA\",\n    39: \"CPFL MOCOCA\",\n    40: \"CPFL SANTA CRUZ\",\n    41: \"CPFL SUL PAULISTA\",\n    42: \"RGE\" \n};\nreturn dict[value];"
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.8078976834835212
              }, {
                "name" : "estado",
                "type" : "attribute",
                "label" : "estado",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.5851067738933313
              } ],
              "entityAliasId" : "2ffa1716-0cf5-5edb-d0e5-e76972d43f0d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<table width=\"100%\" class='card'>\n    <tr width=\"100%\">\n        <td width=\"5%\">&nbsp;</td>\n        <td width=\"95%\">\n            <div class='content'>\n                <div class='column'>\n                    <div class='value_red'>\n                        ${description}\n                    </div>\n                    <div class='description'>\n                        ${status_cliente} ${classe_tensao} ${enq_tarifario} ${demanda_fp}<br>\n                        ${utility}\n                    </div>    \n                </div>\n            </div>\n        </td>\n    </tr>\n</table>\n",
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}"
            },
            "title" : "ID Site 2",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "0d23d3ed-192c-4629-a930-e8dc992a27d9",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "47e9cbb8-fbe3-4aaf-a092-8e018158892a" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 35,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Consumidor",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "entitiesTitle" : "Site 2",
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Site 2",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "Consumidor",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.9958691716519923
              }, {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.728839973881811
              } ],
              "entityAliasId" : "ea337dd3-3e20-573c-3268-117e79aee26d"
            } ],
            "enableDataExport" : false,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "id" : "749f930c-b8ec-e81c-9eae-ce058a052f81",
                "name" : "change entity",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : null,
                "setEntityId" : true,
                "stateEntityParamName" : "Site_Comparison_BT"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "47e9cbb8-fbe3-4aaf-a092-8e018158892a",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "2df04a9a-0a76-417c-9691-58c6cfd66a04" : {
          "type" : "timeseries",
          "sizeX" : 44,
          "sizeY" : 29,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "Site 1",
                "color" : "#3c9ad8",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : true,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "tooltipValueFormatter" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}) + \" kWh\";",
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.10772487818705123,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            }, {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "2ffa1716-0cf5-5edb-d0e5-e76972d43f0d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "Site 2",
                "color" : "#e34844",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : true,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "tooltipValueFormatter" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}) + \" kWh\";",
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.7651355102815629,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 7200000,
                "timewindowMs" : 73440000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454",
                "title" : "Consumo (kWh)"
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "showLegend" : false,
              "legendConfig" : {
                "direction" : "column",
                "position" : "bottom",
                "sortDataKeys" : false,
                "showMin" : false,
                "showMax" : false,
                "showAvg" : true,
                "showTotal" : false,
                "showLatest" : false
              }
            },
            "title" : "Comparação entre Sites",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : false
          },
          "id" : "2df04a9a-0a76-417c-9691-58c6cfd66a04",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "d1ec433b-ca68-f974-27f5-ac91455cbb5b" : {
          "type" : "timeseries",
          "sizeX" : 54,
          "sizeY" : 35,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_tarifa_bruta_media",
                "type" : "timeseries",
                "label" : "Site 1",
                "color" : "#3c9ad8",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  },
                  "tooltipValueFormatter" : "return \"R$ \" + value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.7437795821088464,
                "postFuncBody" : "return value*1000;",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            }, {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "2ffa1716-0cf5-5edb-d0e5-e76972d43f0d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_tarifa_bruta_media",
                "type" : "timeseries",
                "label" : "Site 2",
                "color" : "#e34844",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  },
                  "tooltipValueFormatter" : "return \"R$ \" + value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.7221532240150614,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return value*1000;"
              } ]
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 2592000000,
                "timewindowMs" : 86400000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 2000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "showLegend" : false,
              "legendConfig" : {
                "direction" : "row",
                "position" : "right",
                "showMin" : true,
                "showMax" : true,
                "showAvg" : true,
                "showTotal" : false
              }
            },
            "title" : "Evolução da Tarifa Bruta (R$/MWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "actions" : { }
          },
          "id" : "d1ec433b-ca68-f974-27f5-ac91455cbb5b",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "f327e9a7-ad0c-4e67-9121-685e46ff34df" : {
          "type" : "static",
          "sizeX" : 54,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Dados do Consumidor</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 24px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "Info do Consumidor",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "f327e9a7-ad0c-4e67-9121-685e46ff34df",
          "typeFullFqn" : "system.cards.html_card"
        },
        "f6380acb-6138-4c8f-8b15-9a8e424ee3c4" : {
          "type" : "static",
          "sizeX" : 34,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Dados do Contrato de Energia</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 24px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "Label Dados Contrato Energia",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "f6380acb-6138-4c8f-8b15-9a8e424ee3c4",
          "typeFullFqn" : "system.cards.html_card"
        },
        "19626558-c918-4082-b6f6-7528f98bf99a" : {
          "type" : "latest",
          "sizeX" : 34,
          "sizeY" : 7,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "lb_cte_temp",
                "type" : "attribute",
                "label" : "lb_cte_temp",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.9786055946697367,
                "decimals" : null,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 4, minimumFractionDigits: 4}); "
              }, {
                "name" : "lb_cte_horas",
                "type" : "attribute",
                "label" : "lb_cte_horas",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.9944835729406607,
                "decimals" : null,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 4, minimumFractionDigits: 4}); "
              }, {
                "name" : "lb_cte",
                "type" : "attribute",
                "label" : "lb_cte",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.46821722842822355,
                "decimals" : null,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 2, minimumFractionDigits: 2}); "
              }, {
                "name" : "lb_data_ref",
                "type" : "attribute",
                "label" : "lb_data_ref",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.6109761249273724,
                "postFuncBody" : "return value.substring(0, 10); "
              }, {
                "name" : "lb_cte_prod",
                "type" : "attribute",
                "label" : "lb_cte_prod",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.37386018493700046,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 4, minimumFractionDigits: 4}); "
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 16px;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 16px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n",
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"100%\">\n            <tr height=\"48\">\n                <td width=\"2%\">&nbsp;</td>\n                <td width=\"96%\" align=\"left\"><style class=\"title\">Cons.Esperado = ( Temp.Média * </style><style class=\"value\">${lb_cte_temp}</style><style class=\"title\"> ) + ( Horas Operação * </style><style class=\"value\">${lb_cte_horas}</style><style class=\"title\"> )  + ( Produção * </style><style class=\"value\">${lb_cte_prod}</style><style class=\"title\"> ) + ( </style><style class=\"value\">${lb_cte}</style><style class=\"title\"> )</style></td>\n                <td width=\"2%\">&nbsp;</td>\n            </tr>\n            <tr height=\"16\">\n                <td colspan=\"2\">&nbsp;</td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"100%\">\n            <tr height=\"20\">\n                <td width=\"2%\">&nbsp;</td>\n                <td width=\"46%\" align=\"left\"><style class=\"title\">Data Base: </style><style class=\"value\">${lb_data_ref}</style></td>\n                <td width=\"4%\">&nbsp;</td>\n                <td width=\"46%\">&nbsp;</td>\n                <td width=\"2%\">&nbsp;</td>\n            </tr>\n        </table>\n</div>\n"
            },
            "title" : "Linha de Base",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\">\n        <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Temperatura *</mat-label>\n                <input matInput type=\"number\" [(ngModel)]=\"lb_cte_temp\">\n            </mat-form-field>\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Horas Operação *</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"lb_cte_horas\">\n            </mat-form-field>\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Constante</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"lb_cte\">\n            </mat-form-field>            \n        </div>\n        \n        <div fxLayout=\"row\" fxLayoutAlign=\"space-around left\">    \n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Data Base</mat-label>\n                <input matInput \n                    [(ngModel)]=\"lb_data_ref\">\n            </mat-form-field>\n        </div>        \n        \n    </div>    \n\n\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\nattributes = {}\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.OK = true\n    vm.importTitle = 'Editar linha de base'\n\n    vm.attributes = {}\n    for (var i=0; i<widgetContext.data.length; i++){\n        var x = widgetContext.data[i].data[0][1]\n        vm.attributes[widgetContext.data[i].dataKey.name] = x\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()\n    }\n\n}",
                "customResources" : [ ],
                "id" : "23ee79a1-9d97-3fd9-9e37-af7b579aaa9e"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false,
            "displayTimewindow" : true
          },
          "id" : "19626558-c918-4082-b6f6-7528f98bf99a",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "e299b500-f973-456a-af80-b5a407d45d37" : {
          "type" : "static",
          "sizeX" : 34,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Linha de Base</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 24px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "lbl Linha de Base",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "e299b500-f973-456a-af80-b5a407d45d37",
          "typeFullFqn" : "system.cards.html_card"
        },
        "5ed8c5d2-310f-4868-a5fd-fdcc16a0584e" : {
          "type" : "static",
          "sizeX" : 20,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Coordenadas do Site</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 24px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "Label Coordenadas",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "5ed8c5d2-310f-4868-a5fd-fdcc16a0584e",
          "typeFullFqn" : "system.cards.html_card"
        },
        "89ad4b2e-6615-48f0-be92-7f28692a2943" : {
          "type" : "latest",
          "sizeX" : 20,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "latitude",
                "type" : "attribute",
                "label" : "latitude",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.7978682596412687
              }, {
                "name" : "longitude",
                "type" : "attribute",
                "label" : "longitude",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.3895649100631746
              } ],
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "fitMapBounds" : true,
              "latKeyName" : "latitude",
              "lngKeyName" : "longitude",
              "showLabel" : false,
              "label" : "${entityName}",
              "tooltipPattern" : "<b>${entityName}</b><br/><br/><b>Latitude:</b> ${latitude:7}<br/><b>Longitude:</b> ${longitude:7}<br/><b>Temperature:</b> ${temperature} °C<br/><small>See advanced settings for details</small>",
              "markerImageSize" : 34,
              "useColorFunction" : true,
              "markerImages" : [ "tb-image;/api/images/system/map_marker_image_0.png", "tb-image;/api/images/system/map_marker_image_1.png", "tb-image;/api/images/system/map_marker_image_2.png", "tb-image;/api/images/system/map_marker_image_3.png" ],
              "useMarkerImageFunction" : true,
              "colorFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'colorpin') {\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120 * 100;\n\t    return tinycolor.mix('blue', 'red', amount = percent).toHexString();\n\t}\n\treturn 'blue';\n}\n",
              "markerImageFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'thermomether') {\n\tvar res = {\n\t    url: images[0],\n\t    size: 40\n\t}\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120;\n\t    var index = Math.min(3, Math.floor(4 * percent));\n\t    res.url = images[index];\n\t}\n\treturn res;\n}",
              "color" : "#fe7569",
              "mapProvider" : "OpenStreetMap.Mapnik",
              "showTooltip" : true,
              "autocloseTooltip" : true,
              "tooltipFunction" : "var deviceType = dsData[dsIndex]['deviceType'];\r\nif (typeof deviceType !== undefined) {\r\n    if (deviceType == \"energy meter\") {\r\n        return '<b>${entityName}</b><br/><b>Energy:</b> ${energy:2} kWt<br/>';\r\n    } else if (deviceType == \"thermometer\") {\r\n        return '<b>${entityName}</b><br/><b>Temperature:</b> ${temperature:2} °C<br/>';\r\n    }\r\n}",
              "labelFunction" : "var deviceType = dsData[dsIndex]['deviceType'];\r\nif (typeof deviceType !== undefined) {\r\n    if (deviceType == \"energy meter\") {\r\n        return '<span style=\"color:orange;\">${entityName}, ${energy:2} kWt</span>';\r\n    } else if (deviceType == \"thermometer\") {\r\n        return '<span style=\"color:blue;\">${entityName}, ${temperature:2} °C</span>';\r\n    }\r\n}",
              "polygonKeyName" : "coordinates",
              "polygonOpacity" : 0.5,
              "polygonStrokeOpacity" : 1,
              "polygonStrokeWeight" : 1,
              "customProviderTileUrl" : "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
              "showTooltipAction" : "click",
              "defaultCenterPosition" : [ 0, 0 ],
              "zoomOnClick" : true,
              "showCoverageOnHover" : true,
              "animate" : true,
              "maxClusterRadius" : 80,
              "removeOutsideVisibleBounds" : true
            },
            "title" : "Localização Unidade",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "89ad4b2e-6615-48f0-be92-7f28692a2943",
          "typeFullFqn" : "system.maps_v2.openstreetmap"
        },
        "90a537f6-da77-4780-bdc7-c6557dd12d8a" : {
          "type" : "latest",
          "sizeX" : 34,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.2371823133874449
              } ],
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 24px;\n    color: rgba(0, 0, 0, 0.87);\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}\n",
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Benchmarking</div>"
            },
            "title" : "label config benchmarking",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<head>\n    <style type=\"text/css\">\n        body {\n            color: purple;\n            background-color: #d8da3d\n        }\n    </style>\n</head>\n<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\" fxLayoutGap=\"10px\"\n        style=\"min-width: 600px\">\n\n        <div fxLayout=\"row\" fxLayoutAlign=\" center\" fxLayoutGap=\"0px\">\n           <div fxLayoutAlign=\"space-around left\">\n            Horas de Operação</div>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=25 fxFill>\n                <mat-label>Dias\n                    semana</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.bench_hor_dow\">\n            </mat-form-field>\n            \n            <mat-form-field fxFlex=25 fxFill>\n                <mat-label>Sábados</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.bench_hor_sat\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex=25 fxFill>\n                <mat-label>Domingos</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.bench_hor_sun\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex=25 fxFill>\n                <mat-label>Feriados</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.bench_hor_hol\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=50 fxFill>\n                <mat-label>Área / Volume (m2 ou m3)</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.bench_area\">\n            </mat-form-field>\n            <mat-form-field fxFlex=50 fxFill>\n                <mat-label>Considera temperatura externa na normalização?</mat-label>\n                <mat-select name=\"bench_temperatura\"\n                    [(ngModel)]=\"attributes.bench_temperatura\"\n                    ng-change=\"change()\">\n                    <mat-option [value]=\"0\">Não\n                    </mat-option>\n                    <mat-option [value]=\"1\">Sim\n                    </mat-option>\n                </mat-select><br>\n            </mat-form-field>\n        </div>\n        \n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"10px\">&nbsp;</div>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\" center\" fxLayoutGap=\"0px\">\n           <div fxLayoutAlign=\"space-around left\">\n            Parâmetros para Equalização</div>\n        </div>        \n\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex fxFill>\n                <mat-label>Temp. Referência\n                    (°C)</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.lb_temp_ref\">\n            </mat-form-field>\n            <mat-form-field fxFlex fxFill>\n                <mat-label>Temp. Mensal\n                    (°C)</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.equal_temp_med\">\n            </mat-form-field>\n            <mat-form-field fxFlex fxFill>\n                <mat-label>Horas Mensais\n                    Operação</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.equal_horas_op\">\n            </mat-form-field>\n        </div>\n\n        \n    </div>\n</div>\n\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Configurar Coeficientes de Normalização'\n\n    defaults = {\n            bench_producao: 0,\n            bench_hor_dow: 10,\n            bench_hor_sat: 8,\n            bench_hor_sun: 6,\n            bench_hor_hol: 6,\n            bench_area: 0,\n            bench_temperatura: 0,\n            equal_temp_med: 22,\n            equal_horas_op: 300,\n            lb_temp_ref: 17\n    }\n    \n    vm.diffAttrs=['bench_area', 'bench_hor_dow', 'bench_hor_sat', 'bench_hor_sun', 'bench_hor_hol', 'bench_producao', 'bench_temperatura', 'equal_temp_med', 'equal_horas_op', 'lb_temp_ref']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n            debugger\n            for (var key in defaults){\n                if (!vm.attributes.hasOwnProperty(key) || vm.attributes[key] == null) {\n                    vm.attributes[key] = defaults[key]\n                }\n            }  \n         })\n    }\n\n    for (var i=0; i<widgetContext.data.length; i++){\n        if (!vm.diffAttrs.includes(widgetContext.data[i].dataKey.name)) {\n            var x = widgetContext.data[i].data[0][1]\n            vm.attributes[widgetContext.data[i].dataKey.name] = x\n        }\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        debugger\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()\n    }\n\n}\n",
                "customResources" : [ ],
                "id" : "f58dccac-b906-31bd-b8bd-f46024ee38bb"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "90a537f6-da77-4780-bdc7-c6557dd12d8a",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "518673b0-8bdf-4a8a-87dd-7005ecacc312" : {
          "type" : "latest",
          "sizeX" : 37,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Ponto de Medição",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "entitiesTitle" : "Pontos de Medição",
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Pontos de Medição",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "last_telemetry",
                "type" : "attribute",
                "label" : "Status",
                "color" : "#03a9f4",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var html = {\n    0: '<html>&nbsp;</html>',\n    1: '<html><img title=\"Online\" src=\"https://solarhub.engecomp.io/res/ok.png\" width=\"20\" height=\"20\"></html>',\n    2: '<html><img title=\"Offline\" src=\"https://solarhub.engecomp.io/res/nok.png\" width=\"20\" height=\"20\"></html>',\n    3: '<html><img title=\"Alarme\" src=\"https://solarhub.engecomp.io/res/attention6.png\" width=\"20\" height=\"20\"></html>'\n};\n\nreturn html[value];"
                },
                "_hash" : 0.9863293527661336,
                "postFuncBody" : "x = parseInt(moment.utc().format('x'))\nvar horas = ((x - value) / 3600000);\n\nvar tolerancia = 3;\n\n// calcula se tá online ou offline\nif (horas > tolerancia) { \n    return 2;     // vermelho NotOk \n}\n\nreturn 1;         // verde OK"
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "Ponto de Medição",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.283215932135525,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~~ SEM NOME ~~\"    \n}\nreturn nome;"
              }, {
                "name" : "ref_cliente",
                "type" : "attribute",
                "label" : "Ref Cliente",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.6824419619163928
              }, {
                "name" : "area",
                "type" : "attribute",
                "label" : "Área",
                "color" : "#607d8b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.6001273165028669
              }, {
                "name" : "kwh_mensal_m00",
                "type" : "attribute",
                "label" : "Consumo M-0",
                "color" : "#ffeb3b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0})"
                },
                "_hash" : 0.16253240492215038,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\n//if (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    return value;\n\n//}\n//return \" \";"
              }, {
                "name" : "kwh_mensal_m01",
                "type" : "attribute",
                "label" : "Consumo M-1",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0})"
                },
                "_hash" : 0.6360106646866897,
                "decimals" : 0,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\n//if (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    return value;\n\n//}\n//return \" \";"
              }, {
                "name" : "kwh_mensal_m02",
                "type" : "attribute",
                "label" : "Consumo M-2",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0})"
                },
                "_hash" : 0.7062809090246078,
                "decimals" : 0,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\n//if (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    return value;\n\n//}\n//return \" \";"
              }, {
                "name" : "kwh_mensal_m03",
                "type" : "attribute",
                "label" : "Consumo M-3",
                "color" : "#03a9f4",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0})"
                },
                "_hash" : 0.5628822283783612,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\n//if (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    return value;\n\n//}\n//return \" \";"
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "Remota (SN)",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.9237771354167557,
                "postFuncBody" : "return value;"
              }, {
                "name" : "meter",
                "type" : "attribute",
                "label" : "Medidor",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.2808489926085027,
                "postFuncBody" : "return value;"
              }, {
                "name" : "contrato",
                "type" : "attribute",
                "label" : "Contrato",
                "color" : "#607d8b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.6902791349859607
              }, {
                "name" : "last_telemetry",
                "type" : "attribute",
                "label" : "Ult Conexão",
                "color" : "#ff9800",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.7156438536152372,
                "postFuncBody" : "return moment.unix(value/1000).format('DD-MMM HH:mm');"
              } ],
              "entityAliasId" : "ec56fa06-0a91-729e-9215-d365c1f8d57d"
            } ],
            "enableDataExport" : true,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "id" : "0f439a7a-c1b1-63cf-a83d-e5137a9bb69e",
                "name" : "Detalhes da unidade",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : null,
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Ponto_Sub"
              } ],
              "actionCellButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n        style=\"min-width: 500px; padding-top: 20px\">\n        <mat-form-field fxFlex class=\"mat-block\" >\n            <mat-label>Nome</mat-label>\n            <input matInput [(ngModel)]=\"attributes.description\">\n        </mat-form-field>\n\n        <mat-form-field fxFlex class=\"mat-block\" >\n            <mat-label>Ref. Cliente</mat-label>\n            <input matInput [(ngModel)]=\"attributes.ref_cliente\">\n        </mat-form-field>\n\n        <mat-form-field fxFlex class=\"mat-block\" >\n            <mat-label>Área</mat-label>\n            <input matInput [(ngModel)]=\"attributes.area\">\n        </mat-form-field>\n\n        <mat-form-field fxFlex class=\"mat-block\" >\n            <mat-label>Contrato</mat-label>\n            <input matInput [(ngModel)]=\"attributes.contrato\">\n        </mat-form-field>\n\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Editar dados'\n    \n    vm.diffAttrs=['description','area','contrato','ref_cliente']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n         })\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        debugger\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()\n    }\n\n}\n\n",
                "customResources" : [ ],
                "id" : "e5d1593e-620c-b452-c62f-23091486f900"
              } ],
              "headerButton" : [ {
                "name" : "Exportação de Dados",
                "icon" : "file_download",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <mat-form-field fxFlex class=\"mat-block\">\n        <mat-label>Integração</mat-label>\n        <mat-select name=\"integracao\" [(ngModel)]=\"integracao\" (ngModelChange)=\"change()\">\n          <mat-option value=\"all\">15 minutos</mat-option>\n          <mat-option value=\"hour\">1 hora</mat-option>\n          <mat-option value=\"day\">1 dia</mat-option>\n          <mat-option value=\"month\">1 mês</mat-option>\n          <mat-option value=\"none\">Soma do período</mat-option>\n        </mat-select><br>\n    </mat-form-field>\n    \n     <div fxLayout=\"column\" fxLayout.gt-sm=\"row\" fxLayoutGap=\"5px\" ng-cloak>\n        \n                \n        <mat-form-field color=\"accent\" appearance=\"fill\">\n          <mat-label>Data Inicial</mat-label>\n          <input matInput [matDatepicker]=\"picker1\" [(ngModel)]=\"sd\" (ngModelChange)=\"change()\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n          <mat-datepicker #picker1></mat-datepicker>\n        </mat-form-field>\n        \n        \n        <mat-form-field color=\"accent\" appearance=\"fill\">\n          <mat-label>Data Final</mat-label>\n          <input matInput [matDatepicker]=\"picker2\" [(ngModel)]=\"ed\" (ngModelChange)=\"change()\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n          <mat-datepicker #picker2></mat-datepicker>\n        </mat-form-field>\n        \n        <div fxLayout=\"column\" fxFlexOrder=\"0\" fxFlexOrder.gt-sm=\"2\">\n            <matSubheader>Dates</matSubheader>\n            <div>\n                <mat-label style=\"font-size: x-small;\">Start</mat-label>\n                <div>{{sd | date:shortDate}}</div>\n            </div>\n            <div>\n                <mat-label style=\"font-size: x-small;\">End</mat-label>\n                <div>{{ed | date:shortDate}}</div>\n            </div>\n        </div>\n    </div>\n    \n    \n    <mat-label>\n        Tamanho estimado: {{ linhas }} linhas<br><br>\n    </mat-label>\n    \n    <mat-label>\n        <input type=\"checkbox\" [(ngModel)]=\"async\"> Envio por email (recomendado)\n    </mat-label>\n\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form md-input-container {\n    padding-right: 10px;\n}\n\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body md-autocomplete-wrap md-input-container {\n    height: 30px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n\n.relations-list.old-relations tb-entity-select tb-entity-autocomplete button {\n    display: none;\n} \n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form md-input-container {\n    padding-right: 10px;\n}\n\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body md-autocomplete-wrap md-input-container {\n    height: 30px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nvar user = widgetContext.currentUser;\n\n\nvar url = 'https://solarhub.engecomp.io/be/sm_data_export/cdf9d21d-f312-4ea9-8de7-e54819278999/form/v3'\n\npayload = {\n    email: user.sub,\n    token: localStorage[\"jwt_token\"]\n}\n\npayload.search = {\n    entityFilter: widgetContext.defaultSubscription.configuredDatasources[0].entityFilter,\n    pageLink: {\n        page: 0,\n        pageSize: 1000,\n        textSearch: null,\n        dynamic: false,\n        sortOrder: {\n          key: {\n            key: \"name\",\n            type: \"ENTITY_FIELD\"\n          },\n          direction: \"ASC\"\n        }\n      },\n    entityFields: [\n        {\n          key: \"name\",\n          type: \"ENTITY_FIELD\"\n        }\n      ],\n    latestValues: [\n        {\n          key: \"description\",\n          type: \"ATTRIBUTE\"\n        }\n      ]\n}\n\n\nshowInfoDialog()\n\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    debugger\n    let vm = instance;\n    \n    vm.importTitle = 'Exportação de dados'\n\n    vm.layout= \"simplificado\"\n    vm.sd= moment(vm.ed).subtract(1, 'month').toDate()\n    vm.ed= moment.utc().startOf('day').toDate()\n    vm.integracao= \"all\"\n    vm.async= true\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.change = function() {\n        \n        debugger;\n\n        var diffTime = Math.abs(vm.ed - vm.sd);\n        var diffMonths = diffTime / (1000 * 60 * 60 * 24 * 30)\n        var linhasPorMes = 0\n\n        switch(vm.integracao){\n            case \"all\": \n                linhasPorMes = 24*4*30\n                break;\n            case \"hour\":\n                linhasPorMes = 24*30\n                break;\n            case \"day\":\n                linhasPorMes = 30\n                break;\n            case \"month\":\n                linhasPorMes = 1\n                break;   \n        }\n        \n        vm.linhas = Math.ceil(linhasPorMes * diffMonths * widgetContext.defaultSubscription.dataPages[0].totalElements)\n        \n        if (vm.linhas < 5000) {\n            vm.async = false\n        } else {\n            vm.async = true\n        }\n        \n    }\n    \n    vm.change()\n\n\n    vm.send = function() {\n        \n        debugger;\n\n        let formData = new FormData();\n        \n        sd = moment(vm.sd).format('YYYY-MM-DD');\n        ed = moment(vm.ed).format('YYYY-MM-DD');\n        \n        payload.start_date = sd\n        payload.end_date = ed\n        payload.interval = vm.integracao\n        payload.layout = vm.layout\n        payload.getnow = !vm.async\n        \n        formData.append(\"payload\", JSON.stringify( payload ))\n        console.log(JSON.stringify( payload ))\n\n        var fetchParams = { method: \"POST\", body: formData }\n        \n        fetch(url, fetchParams).then(function(r) {\n            if (r.status == 200) {\n\n                return r.json().then(\n                    function(data) {\n                        if (data.link && data.link.length > 0) {\n                            window.open(data.link,'_blank');\n                        }\n                        else {\n                            widgetContext.showSuccessToast('Sucesso. Um link será enviado para o seu e-mail', 3000)\n                        }\n                    })\n            }\n            else {\n                widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n            }\n            \n        })\n        .catch(function(error) {\n            widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n        });\n  \n        vm.cancel();  \n        \n    }\n}\n",
                "customResources" : [ ],
                "id" : "1b96f6ff-dc58-7b21-46d9-db9b72b210c4"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "518673b0-8bdf-4a8a-87dd-7005ecacc312",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "8a4b1127-da8c-4383-9511-4a5bca1e2512" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy Delta",
                "type" : "timeseries",
                "label" : "last_interval_wh",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.553795007728678,
                "postFuncBody" : "function formattedNumber(x,maxDigits) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: maxDigits}); \n}\n\nif (value > 250) {\n    return formattedNumber(value*4,0)+' kW';\n}\n\nreturn formattedNumber(value*4,1)+' kW';"
              }, {
                "name" : "Active Energy Delta",
                "type" : "timeseries",
                "label" : "last_interval_ts",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.47690608127243594,
                "postFuncBody" : "return moment.unix(time/1000).format('DD-MMM HH:mm');"
              } ],
              "entityAliasId" : "11be4446-48c0-cac9-6400-94a717e876ba"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${last_interval_wh}</div><br>\n        <footer>\n            <div class=\"additional-info\">${last_interval_ts}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Última Leitura",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "18px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "8a4b1127-da8c-4383-9511-4a5bca1e2512",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "938452de-33da-4808-84f5-47160b171f46" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy Delta_day_sum",
                "type" : "timeseries",
                "label" : "consumo",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5623134603429236,
                "postFuncBody" : "function formattedNumber(x, min, max) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: min,  maximumFractionDigits: max});\n}\nif ( value > 99999 ) {\n    return formattedNumber(value/1000, 1, 2)+' MWh';\n}\nreturn formattedNumber(value, 0, 0)+' kWh';"
              } ],
              "entityAliasId" : "11be4446-48c0-cac9-6400-94a717e876ba"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${consumo}</div>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Consumo Hoje",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "18px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "938452de-33da-4808-84f5-47160b171f46",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "80d3404a-0d59-4d43-974b-b656670fa208" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy Delta_month_sum",
                "type" : "timeseries",
                "label" : "consumo",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.3239682579078662,
                "postFuncBody" : "function formattedNumber(x, min, max) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: min,  maximumFractionDigits: max});\n}\nif ( value > 99999 ) {\n    return formattedNumber(value/1000, 1, 2)+' MWh';\n}\nreturn formattedNumber(value, 0, 0)+' kWh';"
              } ],
              "entityAliasId" : "11be4446-48c0-cac9-6400-94a717e876ba"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${consumo}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Consumo Mês",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "18px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "80d3404a-0d59-4d43-974b-b656670fa208",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "28cb884f-b25d-e490-821e-ecd71acd1e9b" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy Delta_year_sum",
                "type" : "timeseries",
                "label" : "consumo",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5066239839346354,
                "postFuncBody" : "function formattedNumber(x, min, max) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: min,  maximumFractionDigits: max});\n}\nif ( value > 99999 ) {\n    return formattedNumber(value/1000, 1, 2)+' MWh';\n}\nreturn formattedNumber(value, 0, 0)+' kWh';"
              } ],
              "entityAliasId" : "11be4446-48c0-cac9-6400-94a717e876ba"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${consumo}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Consumo Ano",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "18px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "28cb884f-b25d-e490-821e-ecd71acd1e9b",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "c0ddfad5-091a-4adc-8090-334d15b2a53c" : {
          "type" : "latest",
          "sizeX" : 12,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "alias",
                "type" : "attribute",
                "label" : "alias",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5671112303010537
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.08753771580722458,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"-- SEM NOME --\"    \n}\nreturn nome;"
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "serial",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5235226956368948,
                "postFuncBody" : "return \"SN: \" + value;"
              }, {
                "name" : "firmware_version",
                "type" : "attribute",
                "label" : "firmware_version",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.53024477538874
              }, {
                "name" : "last_telemetry",
                "type" : "attribute",
                "label" : "last_telemetry",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.5057664517123861
              }, {
                "name" : "meter",
                "type" : "attribute",
                "label" : "meter",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.5521594546006754,
                "postFuncBody" : "return \"End: \"+value;"
              }, {
                "name" : "ref_cliente",
                "type" : "attribute",
                "label" : "ref_cliente",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.8831237265429479
              }, {
                "name" : "area",
                "type" : "attribute",
                "label" : "area",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.10640042482383616
              }, {
                "name" : "contrato",
                "type" : "attribute",
                "label" : "contrato",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.5466639338323851,
                "postFuncBody" : "return \"Contrato: \"+value;"
              } ],
              "entityAliasId" : "11be4446-48c0-cac9-6400-94a717e876ba"
            }, {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "nome_site",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.8758669588353116
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgb(255, 255, 255)",
            "padding" : "10px",
            "settings" : {
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value {\n    font-size: 1.8vh;\n    font-weight: 300;\n}\n\n.card .title {\n    font-size: 2.0vh;\n    font-weight: bold;\n    color: #bdfbf8;\n}\n\n.card .description {\n    font-size: 14px;\n    color: #999;\n}\n",
              "cardHtml" : "<div class='card'>\n    <div class='content'>\n        <div class='column'>\n            <div class='title'>\n                ${nome_site}<br>\n                ${description} ${area}\n            </div>    \n            <div class='value'>\n                Ref: ${ref_cliente}<br>\n                ${contrato}<br>\n                ${serial} ${meter}\n            </div>    \n        </div>\n    </div>\n</div>"
            },
            "title" : "id_site_sem_config",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "c0ddfad5-091a-4adc-8090-334d15b2a53c",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "cff3a151-a6ca-4ab8-a1ba-71a5c6c673d0" : {
          "type" : "timeseries",
          "sizeX" : 18,
          "sizeY" : 35,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Pulsos Delta_hour_sum",
                "type" : "timeseries",
                "label" : "Data/Hora",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return moment(value).format('DD/MM/YYYY hh:mm')"
                },
                "_hash" : 0.09356051866408621,
                "postFuncBody" : "return time;"
              }, {
                "name" : "Pulsos Delta_hour_sum",
                "type" : "timeseries",
                "label" : "Consumo",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return (value).toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0});\n}\nreturn \"\";"
                },
                "_hash" : 0.6083084923741058
              } ],
              "entityAliasId" : "4658668c-deb7-d1e4-3bb5-86ced47d6e05"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 604800000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 20000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "enableSearch" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Consumo a cada hora",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "cff3a151-a6ca-4ab8-a1ba-71a5c6c673d0",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "2c318be1-feee-4d48-902c-1e43c2ae79f6" : {
          "type" : "timeseries",
          "sizeX" : 18,
          "sizeY" : 35,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "4658668c-deb7-d1e4-3bb5-86ced47d6e05",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "consumption_m3",
                "type" : "timeseries",
                "label" : "Mês",
                "color" : "#f44336",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return moment(value).format('MMM/YY')"
                },
                "_hash" : 0.563166542896457,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return time;"
              }, {
                "name" : "consumption_m3",
                "type" : "timeseries",
                "label" : "Consumo",
                "color" : "#ffc107",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return (value).toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0});\n}\nreturn \"\";"
                },
                "_hash" : 0.13233644967457092,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 31104000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 20000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "enableSearch" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "true",
              "showMilliseconds" : false,
              "useEntityLabel" : false,
              "hideEmptyLines" : false,
              "useRowStyleFunction" : false
            },
            "title" : "Consumo a cada mês",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "2c318be1-feee-4d48-902c-1e43c2ae79f6",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "704478cc-7fa6-4f19-b708-5e8f379c1962" : {
          "type" : "timeseries",
          "sizeX" : 18,
          "sizeY" : 35,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Pulsos Delta_day_sum",
                "type" : "timeseries",
                "label" : "Data",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return moment(value).format('DD/MM/YYYY')"
                },
                "_hash" : 0.5864488054988719,
                "postFuncBody" : "return time;"
              }, {
                "name" : "Pulsos Delta_day_sum",
                "type" : "timeseries",
                "label" : "Consumo",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return (value).toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0});\n}\nreturn \"\";"
                },
                "_hash" : 0.07991026517159394
              } ],
              "entityAliasId" : "4658668c-deb7-d1e4-3bb5-86ced47d6e05"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 2592000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 20000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "enableSearch" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Consumo a cada dia",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "enableDataExport" : true,
            "mobileOrder" : 12,
            "mobileHeight" : 4,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "704478cc-7fa6-4f19-b708-5e8f379c1962",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "a025b7c6-ea42-4c2c-8077-2af9ebe06c9e" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 23,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgba(255, 255, 255, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Equipamento",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "true",
              "displayEntityLabel" : false,
              "useRowStyleFunction" : false
            },
            "title" : "Equiptos do Cliente",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "label",
                "type" : "entityField",
                "label" : "Equipamento",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.41220314008793446
              } ],
              "entityAliasId" : "c859c0ee-357c-41a3-6a6f-044ed377e485"
            } ],
            "enableDataExport" : false,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "name" : "Detalhes do equipamento",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "custom",
                "customFunction" : "// var $injector = widgetContext.$scope.$injector;\n// let attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\n// attributeService.getEntityAttributes(entityId, 'CLIENT_SCOPE', ['category']).subscribe((attribute) => {\n//     if (attribute.length == 0) {\n//         category = \"meter\";\n//     } else {\n//         category = attribute[0].value.toLowerCase();\n//     }\n\n//     openDashboardState(category);\n// });\n\n// function openDashboardState(category){\n\n//     var dashName;\n//     var params = widgetContext.stateController.getStateParams();\n//     params.Curr_Equip = {\n//         entityId: entityId,\n//         entityName: entityName\n//     };\n\n\n//     dict = {\n//         es: \"solar_est_solar\",\n//         tracker: \"solar_trackers\",\n//         meter: \"solar_medidor_detalhe\",\n//         inverter: \"solar_inversor_detalhe\",\n//         relay: \"solar_relay\",\n//         other: \"solar_rele_temp\"\n//     };\n\n//     dashName = dict[category];\n\n//     widgetContext.stateController.updateState(dashName, params, false);\n// }\n\n\n\n\n\n\n\n\n\nvar $injector = widgetContext.$scope.$injector;\ndebugger\nvar attribute = {}\nvar dashName\n\nvar dict = {\n    es: \"solar_est_solar\",\n    tracker: \"solar_trackers\",\n    meter: \"solar_medidor_detalhe\",\n    sub: \"solar_medidor_detalhe\",\n    inverter: \"solar_inversor_detalhe\",\n    relay: \"solar_relay\",\n    other: \"solar_rele_temp\"\n};\n\nvar convert = {\n    inverter_std: \"solar_inversor_detalhe\",\n    es: \"solar_est_solar\"\n}\n\n$injector.get(widgetContext.servicesMap.get('attributeService')).getEntityAttributes(entityId, 'CLIENT_SCOPE', ['category','stateName']).subscribe(\n    (r) => {\n        \n        for (var i=0; i<r.length; i++){\n            attribute[r[i].key] = r[i].value\n        }\n\n        if (!attribute.hasOwnProperty('category')) {\n            attribute.category = 'meter'\n        }\n\n        if (attribute.hasOwnProperty('stateName')) {\n            dashName = attribute.stateName\n            if (convert.hasOwnProperty(dashName)) {\n                dashName = convert[dashName]\n            }\n        } else {\n            dashName = dict[attribute.category];    \n        }\n        \n        \n        // if (r.length == 0) {\n        //     category = \"meter\";\n        // } else {\n        //     category = attribute[0].value.toLowerCase();\n        // }\n\n        openDashboardState(dashName);\n    }\n);\n\n\nfunction openDashboardState(dashName){\n\n    var params = widgetContext.stateController.getStateParams();\n    params.Curr_Equip = {\n        entityId: entityId,\n        entityName: entityName\n    };\n\n    widgetContext.stateController.updateState(dashName, params, false);\n}",
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "1bcd40cc-9729-3bee-bef3-88b9eb0ea280"
              } ],
              "rowDoubleClick" : [ ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "a025b7c6-ea42-4c2c-8077-2af9ebe06c9e",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "b3905faa-3ecd-49f3-91b1-8004e7bab956" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "serial_number",
                "type" : "timeseries",
                "label" : "serial_number",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.26192297000392806,
                "postFuncBody" : "text = value.toLocaleString('pt-BR', {useGrouping: false})\n\nreturn 'SN: '+text"
              }, {
                "name" : "fabricante",
                "type" : "attribute",
                "label" : "fabricante",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.7147401433148863
              }, {
                "name" : "modelo",
                "type" : "attribute",
                "label" : "modelo",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.862842102111397
              }, {
                "name" : "label",
                "type" : "entityField",
                "label" : "description",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.7163411218063591
              }, {
                "name" : "last_telemetry",
                "type" : "attribute",
                "label" : "last_telemetry",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.40955255520798195,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return moment(value).format('DD/MM/YYYY HH:MM');"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgb(255, 255, 255)",
            "padding" : "10px",
            "settings" : {
              "cardHtml" : "<div class='card'>\n    <div class='content'>\n        <div class='column'>\n            <div class='title'>\n                ${description}\n            </div>\n            <div class='value'>\n                ${fabricante} ${modelo}<br />\n                ${serial_number}<br />\n                Último dado: ${last_telemetry}\n            </div>    \n        </div>\n    </div>\n</div>\n",
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value {\n    font-size: 1.7vh;\n    font-weight: 300;\n}\n\n.card .title {\n    font-size: 2.0vh;\n    font-weight: bold;\n    color: #bdfbf8;\n}\n\n.card .description {\n    font-size: 14px;\n    color: #999;\n}\n"
            },
            "title" : "id_equipto_usina_gd",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "b3905faa-3ecd-49f3-91b1-8004e7bab956",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "861cd7b3-c164-42a9-ae6e-668738434630" : {
          "type" : "latest",
          "sizeX" : 9,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "pm_wh_produced_delta_day_sum",
                "type" : "timeseries",
                "label" : "pm_wh_produced_delta_day_sum",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.1593727725006875,
                "postFuncBody" : "var d = new Date();\nvar h = d.getHours() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (h*3600)) { \n\n    // formata o valor a ser apresentado\n    unit = \"kWh\";\n    if (value >= 1000) {\n    \tvalue /= 1000;\t// to MWh\n    \tunit = \"MWh\";\n    }\n    \n    s = value.toLocaleString('pt-BR', { style: 'decimal', minimumSignificantDigits: 3, maximumSignificantDigits: 3});\n    return s + \" \" + unit;\n\n}\nreturn \" \";\n"
              } ],
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#f7f7f7",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${pm_wh_produced_delta_day_sum}</div><br>\n        <footer>\n            <!-- <div class=\"additional-info\">${last_interval_ts}</div> -->\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Geração hoje",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "861cd7b3-c164-42a9-ae6e-668738434630",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "0d9db73b-9b39-4e24-bb13-672535556a62" : {
          "type" : "latest",
          "sizeX" : 9,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "pm_wh_produced_delta_month_sum",
                "type" : "timeseries",
                "label" : "pm_wh_produced_delta_month_sum",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.1593727725006875,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    unit = \"kWh\";\n    if (value >= 1000) {\n    \tvalue /= 1000;\t// to MWh\n    \tunit = \"MWh\";\n    }\n    \n    s = value.toLocaleString('pt-BR', { style: 'decimal', minimumSignificantDigits: 3, maximumSignificantDigits: 3});\n    return s + \" \" + unit;\n\n}\nreturn \" \";\n\n"
              } ],
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#f7f7f7",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${pm_wh_produced_delta_month_sum}</div><br>\n        <footer>\n            <!-- <div class=\"additional-info\">${last_interval_ts}</div> -->\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Geração mês",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "0d9db73b-9b39-4e24-bb13-672535556a62",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "a4cd13ae-9366-402b-9743-b316d00e1a47" : {
          "type" : "latest",
          "sizeX" : 9,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "pm_h_running_time_delta_day_sum",
                "type" : "timeseries",
                "label" : "pm_h_running_time",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.1593727725006875,
                "postFuncBody" : "var d = new Date();\nvar h = d.getHours() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (h*3600)) { \n\n    // formata o valor a ser apresentado\n    unit = \"\";\n    s = value.toLocaleString('pt-BR', { style: 'decimal', minimumSignificantDigits: 3, maximumSignificantDigits: 3});\n    return s + \" \" + unit;\n\n}\nreturn \" \";"
              } ],
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#f7f7f7",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${pm_h_running_time}</div><br>\n        <footer>\n            <!-- <div class=\"additional-info\">${last_interval_ts}</div> -->\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Horas hoje",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "a4cd13ae-9366-402b-9743-b316d00e1a47",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "f0b02926-1c66-43c3-91fd-a769d9ccaf87" : {
          "type" : "timeseries",
          "sizeX" : 24,
          "sizeY" : 12,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "pm_dc_w",
                "type" : "timeseries",
                "label" : "DC (kW)",
                "color" : "#2196f3",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.30737402078584397,
                "postFuncBody" : "return value/1000;",
                "decimals" : 1
              }, {
                "name" : "pm_grid_w",
                "type" : "timeseries",
                "label" : "Rede (kW)",
                "color" : "#4caf50",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.9204863596974833,
                "postFuncBody" : "return value/1000;",
                "decimals" : 1
              }, {
                "name" : "pm_temp",
                "type" : "timeseries",
                "label" : "Temp (°C)",
                "color" : "#f44336",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : true,
                  "axisPosition" : "right",
                  "axisTitle" : "Temp (°C)"
                },
                "_hash" : 0.304459375422515,
                "decimals" : 1
              } ],
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 86400000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "smoothLines" : false,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "column",
                "position" : "right",
                "showMin" : false,
                "showMax" : false,
                "showAvg" : false,
                "showTotal" : false
              }
            },
            "title" : "Potências (kW) x Temperatura (°C)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "enableDataExport" : true,
            "decimals" : 1,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "f0b02926-1c66-43c3-91fd-a769d9ccaf87",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "df870c82-db48-4b3f-b3d8-af6077713afd" : {
          "type" : "timeseries",
          "sizeX" : 21,
          "sizeY" : 12,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pm_i1",
                "type" : "timeseries",
                "label" : "String 1",
                "color" : "#2196f3",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : false
                  },
                  "removeFromLegend" : false
                },
                "_hash" : 0.876911465508307,
                "decimals" : 2
              }, {
                "name" : "pm_i2",
                "type" : "timeseries",
                "label" : "String 2",
                "color" : "#4caf50",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.012611892346924947,
                "decimals" : 2
              }, {
                "name" : "pm_i3",
                "type" : "timeseries",
                "label" : "String 3",
                "color" : "#f44336",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.503130515187993,
                "decimals" : 2
              }, {
                "name" : "pm_i4",
                "type" : "timeseries",
                "label" : "String 4",
                "color" : "#ffc107",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.07540901862512484,
                "decimals" : 2
              }, {
                "name" : "pm_i5",
                "type" : "timeseries",
                "label" : "String 5",
                "color" : "#607d8b",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.3162323576432078,
                "decimals" : 2
              }, {
                "name" : "pm_i6",
                "type" : "timeseries",
                "label" : "String 6",
                "color" : "#9c27b0",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.3130297652649552,
                "decimals" : 2
              }, {
                "name" : "pm_i7",
                "type" : "timeseries",
                "label" : "String 7",
                "color" : "#8bc34a",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.11263574162662215,
                "decimals" : 2
              }, {
                "name" : "pm_i8",
                "type" : "timeseries",
                "label" : "String 8",
                "color" : "#3f51b5",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.19735282960494605,
                "decimals" : 2
              }, {
                "name" : "pm_i9",
                "type" : "timeseries",
                "label" : "String 9",
                "color" : "#e91e63",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.8820035351495406,
                "decimals" : 2
              }, {
                "name" : "pm_i10",
                "type" : "timeseries",
                "label" : "String 10",
                "color" : "#ffeb3b",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.9966958686691578,
                "decimals" : 2
              }, {
                "name" : "pm_i11",
                "type" : "timeseries",
                "label" : "String 11",
                "color" : "#03a9f4",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.9433454185577019,
                "decimals" : 2
              }, {
                "name" : "pm_i12",
                "type" : "timeseries",
                "label" : "String 12",
                "color" : "#ff9800",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.8677249299756302,
                "decimals" : 2
              }, {
                "name" : "pm_i13",
                "type" : "timeseries",
                "label" : "String 13",
                "color" : "#673ab7",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.2675279584235093,
                "decimals" : 2
              }, {
                "name" : "pm_i14",
                "type" : "timeseries",
                "label" : "String 14",
                "color" : "#cddc39",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.32509051842308145,
                "decimals" : 2
              }, {
                "name" : "pm_i15",
                "type" : "timeseries",
                "label" : "String 15",
                "color" : "#009688",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.21813360786583202,
                "decimals" : 2
              }, {
                "name" : "pm_i16",
                "type" : "timeseries",
                "label" : "String 16",
                "color" : "#795548",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.3042145882847276,
                "decimals" : 2
              }, {
                "name" : "pm_i17",
                "type" : "timeseries",
                "label" : "String 17",
                "color" : "#00bcd4",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.9097265252196864,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "pm_i18",
                "type" : "timeseries",
                "label" : "String 18",
                "color" : "#ff5722",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.9035011354588367,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "pm_i19",
                "type" : "timeseries",
                "label" : "String 19",
                "color" : "#9e9e9e",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.4011534941854995,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "pm_i20",
                "type" : "timeseries",
                "label" : "String 20",
                "color" : "#2962ff",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.2846933347678804,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 86400000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454",
                "tickDecimals" : 0
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "hideZeros" : false,
              "smoothLines" : false,
              "tooltipCumulative" : false,
              "showTooltip" : true,
              "comparisonEnabled" : false,
              "customLegendEnabled" : false,
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "column",
                "position" : "right",
                "showMin" : false,
                "showMax" : false,
                "showAvg" : false,
                "showTotal" : false
              }
            },
            "title" : "Correntes por String (A)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "df870c82-db48-4b3f-b3d8-af6077713afd",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "4a90fedf-85fc-4ab2-95a9-611102137005" : {
          "type" : "timeseries",
          "sizeX" : 24,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pm_grid_v1",
                "type" : "timeseries",
                "label" : "Fase A",
                "color" : "#2196f3",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.6676314261035907,
                "decimals" : 1
              }, {
                "name" : "pm_grid_v2",
                "type" : "timeseries",
                "label" : "Fase B",
                "color" : "#4caf50",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.5589090117140578,
                "decimals" : 1
              }, {
                "name" : "pm_grid_v3",
                "type" : "timeseries",
                "label" : "Fase C",
                "color" : "#f44336",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.08587173173862794,
                "decimals" : 1
              }, {
                "name" : "pm_grid_pf",
                "type" : "timeseries",
                "label" : "F.Potência",
                "color" : "#ffc107",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : true,
                  "axisPosition" : "right",
                  "axisMin" : 0.85,
                  "axisMax" : 1.05,
                  "axisTickDecimals" : 2,
                  "axisTickSize" : 0.02,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  },
                  "axisTitle" : " "
                },
                "_hash" : 0.9225064069818416,
                "decimals" : 2
              }, {
                "name" : "pm_mppt1_v",
                "type" : "timeseries",
                "label" : "MPPT1",
                "color" : "#607d8b",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "excludeFromStacking" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.5946484240079153,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "pm_mppt2_v",
                "type" : "timeseries",
                "label" : "MPPT2",
                "color" : "#9c27b0",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.27286353857056667,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "pm_mppt3_v",
                "type" : "timeseries",
                "label" : "MPPT3",
                "color" : "#8bc34a",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.20237091203128688,
                "units" : "",
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "pm_mppt4_v",
                "type" : "timeseries",
                "label" : "MPPT4",
                "color" : "#3f51b5",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.7897703332031261,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 86400000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454",
                "tickDecimals" : 0
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "smoothLines" : false,
              "tooltipCumulative" : false,
              "hideZeros" : false,
              "showTooltip" : true,
              "comparisonEnabled" : false,
              "customLegendEnabled" : false,
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "column",
                "position" : "right",
                "showMin" : false,
                "showMax" : false,
                "showAvg" : false,
                "showTotal" : false
              }
            },
            "title" : "Tensões de Linha (V) x Fator de Potência",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "4a90fedf-85fc-4ab2-95a9-611102137005",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "bc748fbd-ea11-4791-a6fd-fcaa084a75f0" : {
          "type" : "timeseries",
          "sizeX" : 21,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "pm_grid_i1",
                "type" : "timeseries",
                "label" : "Fase A",
                "color" : "#2196f3",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.17625564489723455,
                "decimals" : 2
              }, {
                "name" : "pm_grid_i2",
                "type" : "timeseries",
                "label" : "Fase B",
                "color" : "#4caf50",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.9158844279806402,
                "decimals" : 2
              }, {
                "name" : "pm_grid_i3",
                "type" : "timeseries",
                "label" : "Fase C",
                "color" : "#f44336",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.6355373554410992,
                "decimals" : 2
              } ],
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 86400000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "column",
                "position" : "right",
                "showMin" : false,
                "showMax" : false,
                "showAvg" : false,
                "showTotal" : false
              }
            },
            "title" : "Correntes de Linha (A)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "bc748fbd-ea11-4791-a6fd-fcaa084a75f0",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "37593fa3-2b78-c62b-6d00-f372016891a4" : {
          "type" : "latest",
          "sizeX" : 9,
          "sizeY" : 9,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "pm_grid_w",
                "type" : "timeseries",
                "label" : "pm_grid_w",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.4778827326184958,
                "decimals" : 1,
                "postFuncBody" : "var d = new Date();\nvar h = d.getHours() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (h*3600)) { \n\n    // formata o valor a ser apresentado\n    return value/1000;\n\n}\nreturn 0;"
              } ],
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "maxValue" : 225,
              "startAngle" : 45,
              "ticksAngle" : 270,
              "showBorder" : true,
              "defaultColor" : "#4caf50",
              "needleCircleSize" : 10,
              "highlights" : [ ],
              "showUnitTitle" : true,
              "colorPlate" : "#fff",
              "colorMajorTicks" : "#444",
              "colorMinorTicks" : "#666",
              "minorTicks" : 10,
              "valueInt" : 1,
              "highlightsWidth" : 15,
              "valueBox" : true,
              "animation" : true,
              "animationDuration" : 500,
              "animationRule" : "cycle",
              "colorNeedleShadowUp" : "rgba(2, 255, 255, 0)",
              "numbersFont" : {
                "family" : "Arial",
                "size" : 18,
                "style" : "normal",
                "weight" : "500",
                "color" : "#616161"
              },
              "titleFont" : {
                "family" : "Roboto Condensed",
                "size" : 24,
                "style" : "normal",
                "weight" : "500",
                "color" : "#32587f"
              },
              "unitsFont" : {
                "size" : 22,
                "style" : "normal",
                "weight" : "500",
                "color" : "#32587f",
                "family" : "Roboto Condensed"
              },
              "valueFont" : {
                "family" : "Arial",
                "size" : 36,
                "style" : "normal",
                "weight" : "normal",
                "shadowColor" : "rgba(0, 0, 0, 0.49)",
                "color" : "#444"
              },
              "minValue" : 0,
              "colorNeedleShadowDown" : "rgba(188,143,143,0.45)",
              "colorValueBoxRect" : "#888",
              "colorValueBoxRectEnd" : "#666",
              "colorValueBoxBackground" : "#babab2",
              "colorValueBoxShadow" : "rgba(0,0,0,1)",
              "unitTitle" : "Potência"
            },
            "title" : "Potência (kW)",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "enableDataExport" : false,
            "widgetStyle" : { },
            "units" : "kW",
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "37593fa3-2b78-c62b-6d00-f372016891a4",
          "typeFullFqn" : "system.analogue_gauges.radial_gauge_canvas_gauges"
        },
        "4b9872b1-df56-63e4-1ee2-65a861035a2f" : {
          "type" : "latest",
          "sizeX" : 9,
          "sizeY" : 8,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "pm_grid_hz",
                "type" : "timeseries",
                "label" : "pm_grid_hz",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.1547639787950985,
                "postFuncBody" : "var d = new Date();\nvar h = d.getHours() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (h*3600)) { \n\n    // formata o valor a ser apresentado\n    return value;\n\n}\nreturn 0;"
              } ],
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "maxValue" : 61,
              "startAngle" : 60,
              "ticksAngle" : 240,
              "showBorder" : true,
              "defaultColor" : "#e65100",
              "needleCircleSize" : 7,
              "highlights" : [ {
                "from" : 59.8,
                "to" : 60.2,
                "color" : "rgba(129, 199, 132, 0.75)"
              } ],
              "showUnitTitle" : true,
              "colorMajorTicks" : "#444",
              "colorMinorTicks" : "#666",
              "minorTicks" : 5,
              "highlightsWidth" : 15,
              "valueBox" : true,
              "animation" : true,
              "animationDuration" : 1000,
              "animationRule" : "bounce",
              "colorNeedleShadowUp" : "rgba(2, 255, 255, 0)",
              "colorNeedleShadowDown" : "rgba(188, 143, 143, 0.78)",
              "numbersFont" : {
                "family" : "Arial",
                "size" : 20,
                "style" : "normal",
                "weight" : "normal",
                "color" : "#263238"
              },
              "titleFont" : {
                "family" : "Roboto Condensed",
                "size" : 24,
                "style" : "normal",
                "weight" : "normal",
                "color" : "#32587f"
              },
              "unitsFont" : {
                "family" : "Roboto Condensed",
                "size" : 28,
                "style" : "normal",
                "weight" : "500",
                "color" : "#32587f"
              },
              "valueFont" : {
                "family" : "Arial",
                "size" : 30,
                "style" : "normal",
                "weight" : "normal",
                "shadowColor" : "rgba(0, 0, 0, 0.49)",
                "color" : "#444"
              },
              "colorValueBoxRect" : "#888",
              "colorValueBoxRectEnd" : "#666",
              "colorValueBoxBackground" : "#babab2",
              "colorValueBoxShadow" : "rgba(0,0,0,1)",
              "minValue" : 59,
              "valueInt" : 2,
              "majorTicksCount" : 4,
              "colorPlate" : "#fff",
              "unitTitle" : "Frequência"
            },
            "title" : "Frequência (Hz)",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.3rem",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "widgetStyle" : { },
            "units" : "Hz",
            "decimals" : 1,
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "4b9872b1-df56-63e4-1ee2-65a861035a2f",
          "typeFullFqn" : "system.analogue_gauges.temperature_radial_gauge_canvas_gauges"
        },
        "982fb10a-377a-1355-75df-ecb400276e6d" : {
          "type" : "latest",
          "sizeX" : 61,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Cliente",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Clientes",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "b4f3f50d-1185-657f-9f66-c31658f285c0",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "Cliente",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.7408350082196815
              }, {
                "name" : "consumo_projetado_kwh_mes",
                "type" : "attribute",
                "label" : "Consumo (MWh)",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Math.round(value/1000).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1});",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.09837274973445642,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "consumo_projetado_mwm_mes",
                "type" : "attribute",
                "label" : "Volume (MWm)",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value).toFixed(1)",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.747586793574107,
                "decimals" : null,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "consumo_projetado_mwm_mes",
                "type" : "attribute",
                "label" : "CO2 (ton)",
                "color" : "#f44336",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return (Math.round(value*24*365*0.074)).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigitsimumFractionDigits: 1, maximumFractionDigits: 1});"
                },
                "_hash" : 0.29758804733629396
              }, {
                "name" : "ativo",
                "type" : "attribute",
                "label" : "Ativas",
                "color" : "#ffc107",
                "settings" : {
                  "columnWidth" : "10px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.6055495091946752
              }, {
                "name" : "total",
                "type" : "attribute",
                "label" : "Total",
                "color" : "#607d8b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.3745868784838804
              }, {
                "name" : "suspenso",
                "type" : "attribute",
                "label" : "Suspensas",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.3306923795353012
              }, {
                "name" : "padrinho",
                "type" : "attribute",
                "label" : "Padrinho",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.9949100062981648,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "enableDataExport" : false,
            "widgetStyle" : { },
            "actions" : {
              "actionCellButton" : [ {
                "id" : "a6b9a664-8c7f-b89f-b648-9674b9b3d5a6",
                "name" : "Editar dados",
                "icon" : "settings",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "adm_config_cliente",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_customer"
              } ],
              "rowClick" : [ {
                "name" : "Pontos deste cliente",
                "icon" : "more_horiz",
                "type" : "custom",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\n\n$injector.get(widgetContext.servicesMap.get('attributeService')).getEntityAttributes(entityId, 'SERVER_SCOPE', ['mainApp']).subscribe((attribute) => {\n    openDashboardState(attribute[0].value);\n});\n\n\n\nfunction openDashboardState(stateId){\n\n    var dashName;\n    var params = widgetContext.stateController.getStateParams();\n    params.Curr_customer = {\n        entityId: entityId,\n        entityName: entityName\n    };\n\n    dashName = \"ssu_home\"\n    if (stateId.length > 0) {\n        dashName = stateId\n    }\n\n    widgetContext.stateController.updateState(dashName, params, false);\n}",
                "id" : "efcfc924-e8f2-6d02-e139-f9220b917fbe"
              } ],
              "rowDoubleClick" : [ ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "982fb10a-377a-1355-75df-ecb400276e6d",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "afb7f81d-e500-62b1-dd8a-c29b779f1a71" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.6665740724826521
              }, {
                "name" : "logo",
                "type" : "attribute",
                "label" : "logo",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5546173981793001
              }, {
                "name" : "cor_de_fundo",
                "type" : "attribute",
                "label" : "cor_de_fundo",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.5078014693385344
              } ],
              "entityAliasId" : "aa66c396-3b76-f7a9-4dc0-b30decc31a48"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class=\"background\" style=\"background-color:${cor_de_fundo}\">\n    <img class=\"image vertical-center\" src=\"${logo}\" alt=\"${description}\">\n</div>",
              "cardCss" : "@import 'https://solarhub.engecomp.io/res/style.css';\n\n.card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    display: block;\n    align-items: center;\n    justify-content: center;\n}\n\n.vertical-center {\n  margin: 0;\n  padding: 3px 3px 3px 3px;\n  position: absolute;\n  top: 50%;\n  /* -ms-transform: translateY(-50%); */\n  transform: translateY(-50%) translateX(-50%);\n  left: 50%;\n}\n\n.image {\n  max-height: 80%;\n  max-width: 80%;\n  margin:auto;\n  display:block;\n}"
            },
            "title" : "Logotipo Engecomp",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "afb7f81d-e500-62b1-dd8a-c29b779f1a71",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "fcc3cd85-9215-4903-8ae1-013faefbfeb2" : {
          "type" : "static",
          "sizeX" : 54,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Clientes Engecomp</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 30px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "label Clientes",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "fcc3cd85-9215-4903-8ae1-013faefbfeb2",
          "typeFullFqn" : "system.cards.html_card"
        },
        "73deecf8-ce5a-48c0-b273-55d8b0ebca8a" : {
          "type" : "static",
          "sizeX" : 54,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Cadastro do Cliente</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 30px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "label Cadastro Cliente",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "73deecf8-ce5a-48c0-b273-55d8b0ebca8a",
          "typeFullFqn" : "system.cards.html_card"
        },
        "c07d9559-a015-87cf-06fc-c79df685399d" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.3794107055847138
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Nome"
            },
            "title" : "New Update server string attribute",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "c07d9559-a015-87cf-06fc-c79df685399d",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "609ddb72-d06e-abd4-3624-48f6fc9798ce" : {
          "type" : "latest",
          "sizeX" : 30,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "razao_social",
                "type" : "attribute",
                "label" : "razao_social",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.7168227460476349
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Razão Social",
              "minLength" : 0
            },
            "title" : "edit_razao_social",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "609ddb72-d06e-abd4-3624-48f6fc9798ce",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "cd8fbcd8-44b7-2665-d1ce-9f9de603de45" : {
          "type" : "latest",
          "sizeX" : 35,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "endereco",
                "type" : "attribute",
                "label" : "endereco",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.20629975572258452
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Endereço",
              "minLength" : 0
            },
            "title" : "edit_endereco_cliente",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "cd8fbcd8-44b7-2665-d1ce-9f9de603de45",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "eb0cdebe-20dd-c1d8-13f9-5ec40ae2dd5f" : {
          "type" : "latest",
          "sizeX" : 19,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "bairro",
                "type" : "attribute",
                "label" : "bairro",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5257278232772491
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Bairro",
              "minLength" : 0
            },
            "title" : "edit_bairro_cliente",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "eb0cdebe-20dd-c1d8-13f9-5ec40ae2dd5f",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "f5a60560-54c7-b20e-9da4-e15748453a5a" : {
          "type" : "latest",
          "sizeX" : 30,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.48800582947968696
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Cidade",
              "minLength" : 0
            },
            "title" : "edit_cidade_cliente",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "f5a60560-54c7-b20e-9da4-e15748453a5a",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "6d2dccd5-638d-8115-d3c4-a96d9e6d38c6" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "estado",
                "type" : "attribute",
                "label" : "estado",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.4417540009670744
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Estado",
              "minLength" : 0
            },
            "title" : "edit_estado_cliente",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "6d2dccd5-638d-8115-d3c4-a96d9e6d38c6",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "93ddf1e4-b2a3-9b99-dd0f-3a96c79207d2" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "cep",
                "type" : "attribute",
                "label" : "cep",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.14457801740864507
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "CEP",
              "minLength" : 0
            },
            "title" : "edit_cep_cliente",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "93ddf1e4-b2a3-9b99-dd0f-3a96c79207d2",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "53af338e-3b88-9a46-a05a-e5c9a7bb9e07" : {
          "type" : "latest",
          "sizeX" : 23,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "cnpj",
                "type" : "attribute",
                "label" : "cnpj",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.14258867647908113
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "CNPJ",
              "minLength" : 0
            },
            "title" : "edit_cnpj",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "53af338e-3b88-9a46-a05a-e5c9a7bb9e07",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "3b65ff61-db86-190d-b72d-ca923daae837" : {
          "type" : "latest",
          "sizeX" : 21,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "inscr_est",
                "type" : "attribute",
                "label" : "inscr_est",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.8979446114523628
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Inscrição Estadual",
              "minLength" : 0
            },
            "title" : "edit_iest",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "3b65ff61-db86-190d-b72d-ca923daae837",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "f1ae0ed1-7c63-4219-b575-fff8f7d3dc25" : {
          "type" : "latest",
          "sizeX" : 35,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "logo",
                "type" : "attribute",
                "label" : "logo",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.056418372580504306
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Logo (URL)",
              "minLength" : 0
            },
            "title" : "edit logo url",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "f1ae0ed1-7c63-4219-b575-fff8f7d3dc25",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "a9340500-24f3-8d57-d514-e67720ed17dd" : {
          "type" : "latest",
          "sizeX" : 19,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "cor_de_fundo",
                "type" : "attribute",
                "label" : "cor_de_fundo",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.056418372580504306
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Cor de Fundo (logo)",
              "minLength" : 0
            },
            "title" : "edit cor de fundo",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "a9340500-24f3-8d57-d514-e67720ed17dd",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "273a1c08-bd61-87e6-aa35-3e0a80884796" : {
          "type" : "latest",
          "sizeX" : 35,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "contato",
                "type" : "attribute",
                "label" : "contato",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.7601001176285422
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Contato",
              "minLength" : 0
            },
            "title" : "edit_contato_cliente",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "273a1c08-bd61-87e6-aa35-3e0a80884796",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "b88930e1-c09a-9989-904b-0c7f188863cf" : {
          "type" : "latest",
          "sizeX" : 19,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "depto",
                "type" : "attribute",
                "label" : "depto",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.4136155342103669
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Depto",
              "minLength" : 0
            },
            "title" : "edit_depto_cliente",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "b88930e1-c09a-9989-904b-0c7f188863cf",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "3b086daa-b373-71f4-8618-2da11d60baca" : {
          "type" : "latest",
          "sizeX" : 23,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "telefone",
                "type" : "attribute",
                "label" : "telefone",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.9853482741401354
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Telefone",
              "minLength" : 0
            },
            "title" : "edit_telefone_cliente",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "3b086daa-b373-71f4-8618-2da11d60baca",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "905b7aaa-c4d5-4335-333f-db5ef8b6526a" : {
          "type" : "latest",
          "sizeX" : 31,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "email",
                "type" : "attribute",
                "label" : "email",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.26101452279390003
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Email",
              "minLength" : 0
            },
            "title" : "edit_email_cliente",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "905b7aaa-c4d5-4335-333f-db5ef8b6526a",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "058e5006-fd85-8230-66e6-d1da40b86559" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.7216794627531955
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "#bdfbf8",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Dashboard</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 20px;\n    color: #bdfbf8;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "New HTML Value Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "id" : "41c02f21-0e88-f411-5c4f-8bf7a1880836",
                "name" : "Ir",
                "icon" : "play_arrow",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "ssu_home",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Customer"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "058e5006-fd85-8230-66e6-d1da40b86559",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "1eba224c-c84c-427b-8f69-8fdcd474821f" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgb(255, 255, 255)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Cliente",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "enableSelectColumnDisplay" : false
            },
            "title" : "Tabela de Pontos",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "Cliente",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "70%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.5889221504240929
              } ],
              "entityAliasId" : "b4f3f50d-1185-657f-9f66-c31658f285c0"
            } ],
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "id" : "c5d1b936-ce6b-5a8e-8834-b9faf6e78d71",
                "name" : "change entity",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : null,
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_customer"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "1eba224c-c84c-427b-8f69-8fdcd474821f",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "9c0647f5-9be6-1618-c9cd-7858aa335568" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 2,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "title",
                "type" : "entityField",
                "label" : "entityName",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.9054216092629781
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "10px",
            "settings" : {
              "cardCss" : ".card {\n    font-weight: normal;\n    font-size: 1.7vh;\n    color: #434343;\n    width: 90%;\n    height: 100%;\n    align-items: left;\n    vertical-align: middle;\n}\n",
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;ID: ${entityName}</div>\n"
            },
            "title" : "ID Cliente",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false,
            "displayTimewindow" : true
          },
          "id" : "9c0647f5-9be6-1618-c9cd-7858aa335568",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "6f94c93c-9ec2-47f3-8c6a-13d470c3f611" : {
          "type" : "static",
          "sizeX" : 54,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Faturamento Engecomp</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 30px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "label Clientes",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "6f94c93c-9ec2-47f3-8c6a-13d470c3f611",
          "typeFullFqn" : "system.cards.html_card"
        },
        "6a7c08f6-20da-43b6-8233-d1a443632a6b" : {
          "type" : "latest",
          "sizeX" : 51,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "displayEntityName" : false,
              "displayEntityType" : false,
              "entitiesTitle" : "Pontos de Consumo",
              "defaultSortOrder" : "Ponto de medição",
              "enableSelectColumnDisplay" : true
            },
            "title" : "Tabela de Pontos Home",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "Ponto de medição",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.7759033120837209
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "Remota",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.46047340608980813
              }, {
                "name" : "last_telemetry",
                "type" : "attribute",
                "label" : "Status",
                "color" : "#e91e63",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.3319542789910914,
                "postFuncBody" : "var d = new Date();\nif (((d.getTime()/1000) - (value/1000)) < 43200) { return \"OK\"; }\nreturn \"Off line\";"
              }, {
                "name" : "missing_intervals",
                "type" : "attribute",
                "label" : "Lacunas",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.18962906193867735
              }, {
                "name" : "NF",
                "type" : "attribute",
                "label" : "NF",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.3087275655973303
              }, {
                "name" : "Obs",
                "type" : "attribute",
                "label" : "Obs",
                "color" : "#e91e63",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.6970922390889018
              }, {
                "name" : "data_envio",
                "type" : "attribute",
                "label" : "Envio",
                "color" : "#ffeb3b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.4293176800054561
              }, {
                "name" : "ativo",
                "type" : "attribute",
                "label" : "ativo",
                "color" : "#03a9f4",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.3702883377966122
              }, {
                "name" : "preco",
                "type" : "attribute",
                "label" : "$ serviço",
                "color" : "#ff9800",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.4217004206995052
              }, {
                "name" : "preco_loc",
                "type" : "attribute",
                "label" : "$ locação",
                "color" : "#673ab7",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.22470846939090383
              } ],
              "entityAliasId" : "ab7bed59-2d35-6f4b-bb65-96acf6fab9bc"
            } ],
            "enableDataExport" : true,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "id" : "6ac6bd4e-ce75-befd-fed6-18c9e6466d1d",
                "name" : "change entity",
                "icon" : "more_horiz",
                "type" : "custom",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\nvar\n    $mdDialog = $injector.get('$mdDialog'),\n    $document = $injector.get('$document');\n    userService = $injector.get('userService');\n\nvar user = userService.getCurrentUser();\n\nattributeService = $injector.get('attributeService');\nattributeList = ['params']\nattributes = {}\nattributes.params = '{}'\n\nattributeService.getEntityAttributesValues('USER', user.userId, 'SERVER_SCOPE', attributeList, null).then(function(response) {\n    for (var i=0; i < response.length; i++) {\n        attributes[response[i].key] = response[i].value\n    }\n    debugger;\n\n    var params = JSON.parse(attributes.params)\n    \n    if (typeof params.firstState === 'undefined') {\n        firstState = 'ssu_site'    \n    } else {\n        firstState = params.firstState\n    }\n    \n    openDashboardState(firstState);\n\n});\n\n\n\nfunction openDashboardState(stateId){\n    \n    var state = widgetContext.stateController.getStateParams()\n    state.Curr_Site = {\n        entityId: entityId,\n        entityName: entityName\n    };\n    widgetContext.stateController.openState(stateId, state, false);\n}\n\n\n"
              } ],
              "headerButton" : [ ],
              "actionCellButton" : [ {
                "id" : "31fa3f30-6837-b6d0-3a18-782c896aec50",
                "name" : "Dados envio",
                "icon" : "description",
                "type" : "custom",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\nvar\n    $mdDialog = $injector.get('$mdDialog'),\n    $document = $injector.get('$document');\ndeviceService = $injector.get('deviceService');\n\nattributeService = $injector.get('attributeService');\nattributeList = ['NF','Obs','data_envio','preco','preco_loc']\nattributes = {}\n\n\nvar infoDialogTemplate =`\n<!DOCTYPE html>\n<head>\n    <style>\n    </style>\n</head>\n<html ng-strict-di>\n    <body>\n        <md-dialog aria-label=\\\"{{ vm.importTitle | translate }}\\\">\n            <form name=\\\"dialog.theForm\\\">\n                <md-toolbar>\n                    <div class=\\\"md-toolbar-tools\\\">\n                        <h2 translate>{{ vm.importTitle }}</h2>\n                        <span flex></span>\n                        <md-button class=\\\"md-icon-button\\\" ng-click=\\\"vm.cancel()\\\">\n                            <ng-md-icon icon=\\\"close\\\" aria-label=\\\"{{ \\'dialog.close\\' | translate }}\\\"></ng-md-icon>\n                        </md-button>\n                    </div>\n                </md-toolbar>\n                <md-progress-linear class=\\\"md-warn\\\" md-mode=\\\"indeterminate\\\" ng-disabled=\\\"!$root.loading\\\" ng-show=\\\"$root.loading\\\"></md-progress-linear>\n                <span style=\\\"min-height: 5px;\\\" flex=\\\"\\\" ng-show=\\\"!$root.loading\\\"></span>\n                <md-dialog-content style=\"padding: 20px 20px 20px 20px;\" ng-cloak=\"\">\n                    <div layout=\"column\" layout-align=\"space-around left\" style=\"min-width: 500px; padding-top: 20px\">\n                        <md-input-container>\n                            <label>NF</label>\n                            <input ng-model=\"vm.NF\">\n                        </md-input-container>\n                        \n                        <md-input-container>\n                            <label>Data de envio</label>\n                            <input ng-model=\"vm.data_envio\">\n                        </md-input-container>\n                        \n                        <md-input-container>\n                            <label>Obs</label>\n                            <input ng-model=\"vm.Obs\">\n                        </md-input-container>\n                        \n                        <md-input-container>\n                            <label>Preço Serviço</label>\n                            <input ng-model=\"vm.preco\">\n                        </md-input-container>\n                        \n                        <md-input-container>\n                            <label>Preço Locação</label>\n                            <input ng-model=\"vm.preco_loc\">\n                        </md-input-container>\n                        \n                    </div>\n\n                </md-dialog-content>\n                <md-dialog-actions layout=\\\"row\\\">\n                    <span flex></span>\n                    <md-button ng-disabled=\"!vm.OK\" ng-click= \\\"vm.send()\\\" type=\\\"submit\\\" class=\\\"md-raised md-primary\\\">SALVAR</md-button>\n                    <md-button ng-disabled=\\\"$root.loading\\\" ng-click=\\\"vm.cancel()\\\" style=\\\"margin-right:20px;\\\">{{ \\'action.cancel\\' | translate }}</md-button>\n                </md-dialog-actions>\n            </form>\n        </md-dialog>\n    </body>\n</html>`\n\nshowInfoDialog()\n\n\nfunction showInfoDialog() {\n    \n\n    $mdDialog.show({\n        controller: ['$mdDialog',\n            InfoDialogController\n        ],\n        controllerAs: 'vm',\n        template: infoDialogTemplate,\n        parent: angular.element($document[0].body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        fullscreen: true\n    })\n}\n\n\nfunction InfoDialogController($mdDialog) {\n    let vm = this;\n    \n    vm.OK = true\n    \n    var locale = window.navigator.userLanguage || window.navigator.language;\n    moment.locale(locale);\n    \n    deviceService.getDevice(entityId.id).then(function(device) {\n        deviceName = device.name\n        deviceId = device.id.id\n        \n        attributeService.getEntityAttributesValues('DEVICE', deviceId, 'SERVER_SCOPE', attributeList, null).then(function(response) {\n            for (var i=0; i < response.length; i++) {\n                attributes[response[i].key] = response[i].value\n            }\n            vm.NF = attributes[\"NF\"]\n            vm.Obs = attributes[\"Obs\"]\n            vm.data_envio = attributes[\"data_envio\"]\n            vm.preco = attributes[\"preco\"]\n        });\n    });\n\n    vm.importTitle = 'Editar dados'\n\n\n    vm.cancel = () => {\n        $mdDialog.cancel();\n    }\n    \n    vm.send = () => {\n        var attributesToSave = []\n        attributesToSave.push({key: \"NF\", value: vm.NF})\n        attributesToSave.push({key: \"Obs\", value: vm.Obs})\n        attributesToSave.push({key: \"data_envio\", value: vm.data_envio})\n        attributesToSave.push({key: \"preco\", value: vm.preco})\n        attributesToSave.push({key: \"preco_loc\", value: vm.preco_loc})\n        attributeService.saveEntityAttributes('DEVICE', deviceId, 'SERVER_SCOPE',attributesToSave)\n        vm.cancel()\n    }\n\n\n}"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "6a7c08f6-20da-43b6-8233-d1a443632a6b",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "7f2b5ac2-9547-489d-8a35-2dcb5919d377" : {
          "type" : "timeseries",
          "sizeX" : 27,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy Delta_hour_sum",
                "type" : "timeseries",
                "label" : "Consumo Hora",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "aggUnit" : [ "hour" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "Stack0"
                },
                "_hash" : 0.040219466505192925
              }, {
                "name" : "Active Energy Delta_day_sum",
                "type" : "timeseries",
                "label" : "Consumo Dia",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "Stack0",
                  "aggUnit" : [ "day" ]
                },
                "_hash" : 0.8740100839991156
              }, {
                "name" : "Active Energy Delta_month_sum",
                "type" : "timeseries",
                "label" : "Consumo Mês",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ "month" ]
                },
                "_hash" : 0.09957695826280699
              }, {
                "name" : "Active Energy Delta_year_sum",
                "type" : "timeseries",
                "label" : "Consumo Ano",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ ]
                },
                "_hash" : 0.520745973724257
              } ],
              "entityAliasId" : "11be4446-48c0-cac9-6400-94a717e876ba"
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1654142399000,
                  "endTimeMs" : 1654747199000
                },
                "interval" : 12342000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : false,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : true,
              "timeWindows" : [ "Hoje", "24H", "7D", "30D", "Mes", "12M", "Ano" ],
              "timeWindowsUnits" : "hour,hour,day,day,day,month,month,year",
              "initialTimeWindow" : "7D",
              "showContractedDemandCurves" : false,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "showRightScale" : false,
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: false,\n    callback: callback,\n    precision: 0\n}\n\nreturn ticks",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            label += tooltipItem.yLabel.toLocaleString(\n                'pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n        \nfilter = function (tooltipItem, data) {return tooltipItem.value != \"NaN\"}\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n\n    }\n}\n\nreturn tooltip",
              "stacked" : true,
              "showOverFlowInRed" : false,
              "sortLegendByLabel" : false,
              "roundToUnit" : true,
              "roundingMethod" : "nearest",
              "showRightScale2" : false
            },
            "title" : "Consumo (kWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            }
          },
          "id" : "7f2b5ac2-9547-489d-8a35-2dcb5919d377",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "81e36239-3c07-4531-b07e-3ada17d41ad1" : {
          "type" : "timeseries",
          "sizeX" : 27,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy Delta",
                "type" : "timeseries",
                "label" : "Demanda Intervalo",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "aggUnit" : [ "minute" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "Stack0"
                },
                "_hash" : 0.040219466505192925,
                "postFuncBody" : "return value*4;"
              }, {
                "name" : "Active Energy Delta_day_max",
                "type" : "timeseries",
                "label" : "Demanda Dia",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "xx"
                },
                "_hash" : 0.8740100839991156,
                "postFuncBody" : "return value*4;"
              }, {
                "name" : "Active Energy Delta_month_max",
                "type" : "timeseries",
                "label" : "Demanda Mês",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.09957695826280699,
                "postFuncBody" : "return value*4;"
              } ],
              "entityAliasId" : "11be4446-48c0-cac9-6400-94a717e876ba"
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1654142399000,
                  "endTimeMs" : 1654747199000
                },
                "interval" : 60480000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : false,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : true,
              "timeWindows" : [ "7D", "30D", "Mes", "12M", "Ano" ],
              "timeWindowsUnits" : "day,day,day,month,month",
              "initialTimeWindow" : "7D",
              "showContractedDemandCurves" : false,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: false,\n    callback: callback,\n    precision: 0\n}\n\nreturn ticks",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            label += tooltipItem.yLabel.toLocaleString(\n                'pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n        \nfilter = function (tooltipItem, data) {return tooltipItem.value != \"NaN\"}\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n\n    }\n}\n\nreturn tooltip",
              "stacked" : true,
              "roundToUnit" : true,
              "showOverFlowInRed" : false,
              "sortLegendByLabel" : false,
              "roundingMethod" : "nearest",
              "showRightScale" : false,
              "showRightScale2" : false
            },
            "title" : "Demanda (kW)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            }
          },
          "id" : "81e36239-3c07-4531-b07e-3ada17d41ad1",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "502f94d8-3336-419b-af87-95b95b988fe8" : {
          "type" : "static",
          "sizeX" : 14,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Alarmes</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 24px;\n    color: rgba(0, 0, 0, 0.87);\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}\n"
            },
            "title" : "Dados Alarmes",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "id" : "09138c12-7c56-2491-427b-7925b760a121",
                "name" : "Download configuração",
                "icon" : "cloud_download",
                "type" : "custom",
                "customFunction" : "\nfor (var alias in widgetContext.dashboard.aliasController.resolvedAliases) {\n    if (widgetContext.dashboard.aliasController.resolvedAliases[alias].alias == \"Curr_Site\") {\n        var stateId = widgetContext.dashboard.aliasController.resolvedAliases[alias].currentEntity.id\n        var entityType = widgetContext.dashboard.aliasController.resolvedAliases[alias].currentEntity.entityType\n    }\n}\n\nwindow.open('https://solarhub.engecomp.io/alarm_engine/download/'+stateId+'/'+entityType+'/'+moment().unix(), '_blank');\n//window.open('http://127.0.0.1:5000/alarm_engine/download/'+stateId+'/'+entityType+'/'+moment().unix(), '_blank');"
              }, {
                "name" : "Upload configuração",
                "icon" : "cloud_upload",
                "type" : "customPretty",
                "customHtml" : "<form #editDeviceForm=\"ngForm\" [formGroup] = 'fileAdd'\n      (ngSubmit)=\"send()\" style=\"width: 650px;\" >\n  <mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n    <span fxFlex></span>\n    <button mat-button mat-icon-button\n            (click)=\"cancel()\"\n            type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div class = 'loading' *ngIf=\"loadingFiles\">\n        <div fxLayout = 'column'>\n            <mat-progress-spinner class=\"test\" mode = 'determinate' value = '{{progress}}' diameter=\"100\"></mat-progress-spinner>\n            <div>Aguarde...</div>\n        </div>\n    </div>\n    <div class=\"tb-container\">\n      <label class=\"action-title\">{{ importFileLabel }}</label>\n        <div class=\"action-file-select-container \">\n              <div class=\"action-file-clear-container\">\n                <button mat-button mat-icon-button color=\"primary\"\n                        type=\"button\"\n                        (click)=\"clearFile()\"\n                        class=\"action-file-clear-btn\"\n                        matTooltip=\"{{ 'action.remove' | translate }}\"\n                        matTooltipPosition=\"above\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </div>\n            <div class=\"drop-area action-flow-drop\">\n                <label for=\"file-input\">Arraste o arquivo ou clique aqui para selecionar</label>\n                <input class=\"file-input\" type=\"file\" id=\"file-input\" formControlName = 'controlInputField' multiple (change)=\"fileAdded($event.target.files)\">\n              </div>\n        </div>\n    </div>\n    <div class = 'file-info'>\n      <div *ngIf=\"!fileName\" class=\"cut-text\">Nenhum arquivo selecionado</div>\n      <div *ngIf=\"fileName\" class=\"cut-text\">{{ fileName }}</div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\">\n    <span fxFlex></span>\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button mat-raised-button color=\"primary\"\n            style=\"margin-right: 20px;\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || fileAdd.invalid\">\n      Import\n    </button>\n  </div>\n</form>",
                "customCss" : "\n.file-input{\n       display: none;\n}\n\n.action-flow-drop{\n     position: relative;\n    height: 100%;\n    overflow: hidden;\n    border: dashed 2px;\n    margin-left: 15px;\n}\n\n.action-flow-drop label{\n    display: flex;\n      flex-direction: column;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      font-size: 16px;\n      text-align: center;\n}\n\n.action-title{\n    display: block;\n    padding-bottom: 8px;\n    margin-left: 15px;\n    color: #8E8E8E;\n    font-size:12px;\n}\n\n.action-file-select-container{\n    position: relative;\n    width: 100%;\n    height: 100px;\n}\n\n.action-file-clear-container{\n    position: relative;\n    float: right;\n    width: 48px;\n    height: 100%;\n}\n\n.action-file-clear-btn{\n    top: 50%;\n    transform: translate(0%, -50%) !important;\n}\n\n.file-info{\n    margin-left: 15px;\n    margin-right: 15px;\n}\n\n.loading{\n    margin-top: 5px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    text-align: center;\n}\n\n.action-flow-drop label{\n    font-size: 25px;\n}",
                "customFunction" : "\nlet $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenEditDeviceDialog();\n\nfunction openEditDeviceDialog() {\n    customDialog.customDialog(htmlTemplate, EditDeviceDialogController).subscribe();\n}\n\nfunction EditDeviceDialogController(instance) {\n    let vm = instance;\n    vm.fileName = '';\n    vm.progress = 0;\n    vm.loadingFiles = false;\n    let url = 'https://solarhub.engecomp.io/alarm_engine/upload'\n    let user = widgetContext.currentUser;\n    let userMail = user.sub\n    let parent_id = widgetContext.stateController.getEntityId('Curr_customer')\n    \n    vm.importTitle = 'Importar configurações em Excel'\n    vm.importFileLabel = 'Arquivos Excel de configuração de notificações'\n    \n     $( document ).ready(function() {\n        let form = $('.drop-area');\n        form.on('drag dragstart dragend dragover dragenter dragleave drop', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n        }).on('drop', function(e) {\n            vm.fileAdded(e.originalEvent.dataTransfer.files);\n        });\n    });\n    \n    vm.fileAdd = vm.fb.group({\n        file:[[], [vm.validators.required]],\n        controlInputField:''\n    });\n\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n    vm.clearFile = () => {\n        $(\".file-input\").value = \"\";\n        vm.fileName = '';\n        vm.fileAdd.patchValue({file: []})\n    }\n\n    vm.fileAdded = (files)=> {\n        for(let i = 0; i < files.length; i++){\n            let filetype=files[i].name.split('.').pop();\n            if (filetype === 'xlsx') {\n                let newFiles = vm.fileAdd.get('file').value\n                if(vm.fileAdd.get('file').value.length !== 0){\n                    vm.fileName += ' // ';\n                }\n                newFiles.push(files.item(i))\n                vm.fileAdd.patchValue({file: newFiles})\n                vm.fileName += files.item(i).name;\n            } else {\n               alert(files[i].name + \" tem extensão inválida\");\n            }\n        }\n        vm.fileAdd.get('controlInputField').patchValue('', {emitEvent: false});\n    }\n\n    // vm.send = async () => \n    // {\n\n    //     let req = new XMLHttpRequest();\n    //     let formData = new FormData();\n        \n    //     formData.append(\"the_file\", vm.fileAdd.get('file').value[i]);\n        \n    //     try {\n    //         let r = await fetch(url, {method: \"POST\", body: formData}); \n    //     }\n    //     catch(error) {\n    //         alert(\"Ocorreu um erro na leitura do arquivo.\")\n    //     }\n        \n    //     vm.cancel();\n    // }\n    \n    vm.send = () =>\n    {\n        vm.loadingFiles = true;\n        for(let i=0; i < vm.fileAdd.get('file').value.length; i++) {\n            vm.progress = Math.round((i+1) / vm.fileAdd.get('file').value.length * 100)\n            let req = new XMLHttpRequest();\n            let formData = new FormData();\n            \n            formData.append(\"the_file\", vm.fileAdd.get('file').value[i]);\n            fetch(url, {method: \"POST\", body: formData}).then(function(r) {\n                \n                if (r.status == 200) {\n                \n                    widgetContext.showSuccessToast('Alarmes carregados com sucesso', 3000)\n                } else {\n                    widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n                }\n                \n            });\n\n        }\n        vm.loadingFiles = false;\n        vm.cancel();\n    }    \n\n\n}\n\n",
                "customResources" : [ ],
                "id" : "d860bb1c-5892-6659-2f48-0b8d4ecb9431"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "502f94d8-3336-419b-af87-95b95b988fe8",
          "typeFullFqn" : "system.cards.html_card"
        },
        "27485df8-61d7-4865-aab9-a2e66df018f9" : {
          "type" : "timeseries",
          "sizeX" : 16,
          "sizeY" : 35,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "UFER CALC_day_sum",
                "type" : "timeseries",
                "label" : "Dia",
                "color" : "#e91e63",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.15347730458125852,
                "postFuncBody" : "return moment.unix(time/1000).format('DD-MMM');"
              }, {
                "name" : "UFER CALC (FPI)_day_sum",
                "type" : "timeseries",
                "label" : "FP-Ind",
                "color" : "#9c27b0",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.12198756940446698,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "UFER CALC (FPC)_day_sum",
                "type" : "timeseries",
                "label" : "FP-Cap",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.8478363502830246,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "UFER CALC (P)_day_sum",
                "type" : "timeseries",
                "label" : "Ponta",
                "color" : "#3f51b5",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.7618387961827258,
                "postFuncBody" : "return Math.round(value);"
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 5184000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 10000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : false,
              "defaultPageSize" : 24
            },
            "title" : "UFER Diária",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "18px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "27485df8-61d7-4865-aab9-a2e66df018f9",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "4f9537b2-c551-4582-ba5d-fe32883f728d" : {
          "type" : "alarm",
          "sizeX" : 64,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "timewindowMs" : 25920000000,
                "quickInterval" : "CURRENT_DAY",
                "interval" : 1000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSelection" : true,
              "enableSearch" : true,
              "displayDetails" : false,
              "allowAcknowledgment" : true,
              "allowClear" : false,
              "displayPagination" : true,
              "defaultPageSize" : 20,
              "defaultSortOrder" : "-startTime",
              "alarmsTitle" : "Alarmes",
              "enableSelectColumnDisplay" : true,
              "enableFilter" : true,
              "enableStickyHeader" : true
            },
            "title" : "Alarmes",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.3rem",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "alarmSource" : {
              "type" : "entity",
              "name" : "alarms",
              "entityAliasId" : "ffaddc2f-20f2-387e-9b2a-e84653802171",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "severity",
                "type" : "alarm",
                "label" : "Criticidade",
                "color" : "#ffc107",
                "settings" : {
                  "columnWidth" : "0px"
                },
                "_hash" : 0.6283523281992602
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "serial",
                "color" : "#e91e63",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.16358184899007688
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "Ponto",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.4703724035771084,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "details.name",
                "type" : "alarm",
                "label" : "Tipo",
                "color" : "#f44336",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var obj = JSON.parse(value)\nreturn obj.name",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.9033520003454285,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "startTime",
                "type" : "alarm",
                "label" : "Início",
                "color" : "#ffc107",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.7814015650239671
              }, {
                "name" : "endTime",
                "type" : "alarm",
                "label" : "Fim",
                "color" : "#607d8b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (alarm.status == 'ACTIVE_ACK' || alarm.status =='ACTIVE_UNACK') {\n    return null\n} else {\n    return moment.unix(value/1000).format(\"YYYY-MM-DD HH:mm:ss\");\n}\n"
                },
                "_hash" : 0.6723418179347178
              }, {
                "name" : "status",
                "type" : "alarm",
                "label" : "Status",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var dict ={\n    'ACTIVE_UNACK': 'Ativo',\n    'ACTIVE_ACK': 'Reconhecido',\n    'CLEARED_ACK':'Reconhecido',\n    'CLEARED_UNACK':'Normalizado'\n}\n\nreturn dict[value]\n"
                },
                "_hash" : 0.27193457482678196
              }, {
                "name" : "details.message",
                "type" : "alarm",
                "label" : "Mensagem",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.7757432908660367,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            },
            "alarmsPollingInterval" : 60,
            "datasources" : [ ],
            "widgetStyle" : { },
            "actions" : {
              "actionCellButton" : [ ],
              "rowClick" : [ {
                "name" : "Detalhes",
                "icon" : "more_horiz",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div class=\"widget status-widget\">\n        <table width=\"280px\">\n            <tr>\n                <td class=\"title\">Criticidade: </td>\n                <td class=\"value\">{{ additionalParams.alarm.severity | translate}}</td>\n            </tr>\n            <tr>\n                <td class=\"title\">Ponto de Medição: </td>\n                <td class=\"value\">{{ details.originator }}</td>\n            </tr>\n            <tr>\n                <td class=\"title\">Tipo do Evento: </td>\n                <td class=\"value\"> {{ details.name }}</td>\n            </tr>\n            <tr>\n                <td class=\"title\">Data do Evento: </td>\n                <td class=\"value\">{{ eventDate }}</td>\n            </tr>\n            <tr>\n                <td class=\"title\">Status: </td>\n                <td class=\"value\">{{ dict[additionalParams.alarm.status] }}</td>\n            </tr>\n            <tr>\n                <td class=\"title\">Valor Medido: </td>\n                <td class=\"value_trigger\"> {{ details.value || \"\" }} </td>\n            </tr>\n            <tr>\n                <td class=\"title\">Valor Limite: </td>\n                <td class=\"value\"> {{ details.threshold || \"\" }} </td>\n            </tr>\n        </table>\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"ack()\"\n        type=\"submit\" [disabled]=\"!unack || (isLoading$ | async)\">\n        {{ \"Acknowledge\" | translate }}\n    </button>    \n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Fechar\n    </button>\n</div>\n",
                "customCss" : " .widget {\n     position: relative;\n     min-width: 0;\n     width: 100%;\n     height: 100%;\n }\n\n .status-widget .title {\n     display: inline-block;\n     font-family: Arial;\n     font-weight: normal;\n     font-size: 14px;\n     width: 50%;\n     color: rgba(0, 0, 0, 0.66);\n }\n\n .status-widget .value {\n     display: inline-block;\n     padding: 2px;\n     font-family: Arial;\n     font-weight: normal;\n     font-size: 14px;\n     width: 50%;\n     color: rgba(0, 0, 0, 0.87);\n }\n\n .status-widget .value_trigger {\n     display: inline-block;\n     padding: 2px;\n     font-family: Arial;\n     font-weight: bold;\n     font-size: 14px;\n     color: #ff0000;\n }\n\n .status-widget .criticidade {\n     display: inline-block;\n     padding: 2px;\n     font-family: Arial;\n     font-weight: bold;\n     font-size: 14px;\n     color: rgba(0, 0, 0, 0.87);\n }\n\n .status-widget .button {\n     display: inline-block;\n     padding: 2px;\n     font-family: Arial;\n     font-weight: bold;\n     font-size: 16px;\n     color: #bdfbf8;\n}",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\nlet alarmService = $injector.get(widgetContext.servicesMap.get('alarmService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Detalhes do alarme'\n    \n    vm.details = additionalParams.alarm.details\n    vm.alarmId = additionalParams.alarm.id.id;\n    vm.additionalParams = additionalParams\n\n    vm.dict ={\n        'ACTIVE_UNACK': 'Ativo',\n        'ACTIVE_ACK': 'Ativo',\n        'CLEARED_ACK':'Normalizado',\n        'CLEARED_UNACK':'Normalizado'\n    };\n    \n    vm.eventDate = moment.unix(vm.additionalParams.alarm.startTs/1000).format(\"DD/MM/YYYY HH:mm\");\n    if (vm.dict[vm.additionalParams.alarm.status] == 'Normalizado' ) {\n        vm.eventDate = vm.eventDate+ ' - '+moment.unix(additionalParams.alarm.endTs/1000).format(\"DD/MM/YYYY HH:mm\");\n    }    \n    \n    if (vm.additionalParams.alarm.status == 'ACTIVE_UNACK' || additionalParams.alarm.status == 'CLEARED_UNACK') {\n        vm.unack = true;\n    } else {\n        vm.unack = false;\n    }\n    \n    \n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.ack = () =>\n    {\n        alarmService.ackAlarm(vm.alarmId).then(\n            vm.cancel()\n        );\n    };    \n\n}\n\n",
                "customResources" : [ ],
                "id" : "343ad200-d73e-491a-cd75-d25ad2b1cc8a"
              } ],
              "headerButton" : [ ]
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "alarmsMaxCountLoad" : 0,
            "alarmsFetchSize" : 100,
            "alarmFilterConfig" : {
              "statusList" : [ "ACTIVE" ],
              "severityList" : [ ],
              "typeList" : [ ],
              "searchPropagatedAlarms" : false
            }
          },
          "id" : "4f9537b2-c551-4582-ba5d-fe32883f728d",
          "typeFullFqn" : "system.alarm_widgets.alarms_table"
        },
        "d57090bf-9d82-4d36-abee-c9c332ecffe0" : {
          "type" : "static",
          "sizeX" : 54,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Alarmes Operacionais</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 30px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "label Alarmes",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "alarmSearchStatus" : "ANY",
            "alarmsPollingInterval" : 60,
            "alarmsMaxCountLoad" : 0,
            "alarmsFetchSize" : 100
          },
          "id" : "d57090bf-9d82-4d36-abee-c9c332ecffe0",
          "typeFullFqn" : "system.cards.html_card"
        },
        "56d51850-a875-4ef6-b0dd-961de3a7a0c1" : {
          "type" : "static",
          "sizeX" : 64,
          "sizeY" : 2,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(0, 105, 92)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "tablist" : "[\n    {\"name\": \"Administração\", \"icon\": \"fa-address-card\", \"stateId\": \"adm_clientes\"},\n    {\"name\": \"Telemetria\", \"icon\": \"fa-chart-line\", \"stateId\": \"ssu_home\"},\n    {\"name\": \"Geração Distribuída\", \"icon\": \"fa-solar-panel\", \"stateId\": \"solar_home\"},\n    {\"name\": \"Faturas BT\", \"icon\": \"fa-file-invoice-dollar\", \"stateId\": \"faturas_home\"},\n    {\"name\": \"Água\", \"icon\": \"fa-water\", \"stateId\": \"water_site\"},\n    {\"name\": \"Gás\", \"icon\": \"fa-gas-pump\", \"stateId\": \"gas_site\", \"hidden\": true}\n]\n"
            },
            "title" : "Tab Clientes Home",
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "56d51850-a875-4ef6-b0dd-961de3a7a0c1",
          "typeFullFqn" : "tenant.teste.tabs"
        },
        "90fcf9b7-3161-4747-9f5d-3d08143d0095" : {
          "type" : "latest",
          "sizeX" : 34,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "displayEntityName" : false,
              "displayEntityType" : false,
              "entityNameColumnTitle" : "Usinas",
              "defaultSortOrder" : "Site",
              "enableSelectColumnDisplay" : false,
              "entitiesTitle" : "TREEVIEW COM TUDO DO CLIENTE (LINK PRA PAGINA CORRESPONDENTE)"
            },
            "title" : "Treeview cliente",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "Site",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.6023863017299247
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "Cidade",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "30%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.6593539409904223
              }, {
                "name" : "potencia_nominal",
                "type" : "attribute",
                "label" : "Potência",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "10%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.3008403297160325,
                "units" : "kWp",
                "decimals" : 0
              } ],
              "entityAliasId" : "537cefd0-9672-24ca-46cd-d952c3f0a036"
            } ],
            "widgetStyle" : {
              "fontSize" : "8vh"
            },
            "actions" : {
              "rowClick" : [ {
                "id" : "523c43b3-e44a-bdc1-a2ca-5107ece12fae",
                "name" : "change entity",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "ssu_site",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Site"
              } ],
              "actionCellButton" : [ ],
              "headerButton" : [ ]
            },
            "legendConfig" : {
              "position" : "bottom",
              "showMin" : false,
              "showMax" : false,
              "showAvg" : true,
              "showTotal" : false
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "90fcf9b7-3161-4747-9f5d-3d08143d0095",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "ffae80e0-4a58-47f1-8f30-de659b8544e5" : {
          "type" : "latest",
          "sizeX" : 30,
          "sizeY" : 35,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "serial",
                "type" : "attribute",
                "label" : "serial",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.2480594686375368,
                "decimals" : 0,
                "postFuncBody" : "return \"Remota: \"+value;"
              }, {
                "name" : "latitude",
                "type" : "attribute",
                "label" : "latitude",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.4835535055608968
              }, {
                "name" : "longitude",
                "type" : "attribute",
                "label" : "longitude",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.5324887104274882
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.16456604186865653,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"-- SEM NOME --\"    \n}\nreturn nome;"
              }, {
                "name" : "last_interval_ts",
                "type" : "attribute",
                "label" : "last_interval_ts",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.4575188999208146,
                "postFuncBody" : "return moment.unix(value/1000).format('DD-MMM HH:mm');\n"
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#673ab7",
                "settings" : { },
                "_hash" : 0.6583591669145992
              } ],
              "entityAliasId" : "e9fddcf6-bc82-dc6b-9934-4dc8c288ccc2"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "fitMapBounds" : true,
              "latKeyName" : "latitude",
              "lngKeyName" : "longitude",
              "showLabel" : false,
              "label" : "${description}",
              "tooltipPattern" : "<b>${description}</b><br/>\n${entityName}<br/>\n<br/>\n<b>Cidade:</b> ${cidade}<br/>",
              "markerImageSize" : 34,
              "useColorFunction" : false,
              "markerImages" : [ "tb-image;/api/images/system/map_marker_image_0.png", "tb-image;/api/images/system/map_marker_image_1.png", "tb-image;/api/images/system/map_marker_image_2.png", "tb-image;/api/images/system/map_marker_image_3.png" ],
              "useMarkerImageFunction" : true,
              "colorFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'colorpin') {\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120 * 100;\n\t    return tinycolor.mix('blue', 'red', amount = percent).toHexString();\n\t}\n\treturn 'blue';\n}\n",
              "markerImageFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'thermomether') {\n\tvar res = {\n\t    url: images[0],\n\t    size: 40\n\t}\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120;\n\t    var index = Math.min(3, Math.floor(4 * percent));\n\t    res.url = images[index];\n\t}\n\treturn res;\n}",
              "color" : "#fe7569",
              "mapProvider" : "OpenStreetMap.Mapnik",
              "showTooltip" : true,
              "autocloseTooltip" : true,
              "tooltipFunction" : "var deviceType = dsData[dsIndex]['deviceType'];\r\nif (typeof deviceType !== undefined) {\r\n    if (deviceType == \"energy meter\") {\r\n        return '<b>${alias}</b><br/><b>Energy:</b> ${energy:2} kWt<br/>';\r\n    } else if (deviceType == \"thermometer\") {\r\n        return '<b>${alias}</b><br/><b>Temperature:</b> ${temperature:2} °C<br/>';\r\n    }\r\n}",
              "labelFunction" : "var deviceType = dsData[dsIndex]['deviceType'];\r\nif (typeof deviceType !== undefined) {\r\n    if (deviceType == \"energy meter\") {\r\n        return '<span style=\"color:orange;\">${alias}, ${energy:2} kWt</span>';\r\n    } else if (deviceType == \"thermometer\") {\r\n        return '<span style=\"color:blue;\">${alias}, ${temperature:2} °C</span>';\r\n    }\r\n}",
              "polygonKeyName" : "coordinates",
              "polygonOpacity" : 0.5,
              "polygonStrokeOpacity" : 1,
              "polygonStrokeWeight" : 1,
              "customProviderTileUrl" : "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
              "showTooltipAction" : "hover",
              "useLabelFunction" : false,
              "defaultCenterPosition" : [ 0, 0 ],
              "zoomOnClick" : true,
              "showCoverageOnHover" : true,
              "animate" : true,
              "maxClusterRadius" : 80,
              "removeOutsideVisibleBounds" : true,
              "useClusterMarkers" : true
            },
            "title" : "Unidades Monitoradas",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : {
              "markerClick" : [ {
                "id" : "d3e01a61-d917-ce67-7582-c2db686ca4ce",
                "name" : "Detalhes do ponto",
                "icon" : "more_horiz",
                "type" : "openDashboardState",
                "targetDashboardStateId" : "usina_gd",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Usina"
              } ],
              "tooltipAction" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "ffae80e0-4a58-47f1-8f30-de659b8544e5",
          "typeFullFqn" : "system.maps_v2.openstreetmap"
        },
        "e3e03576-a0bd-709e-5335-18a996edfc00" : {
          "type" : "alarm",
          "sizeX" : 54,
          "sizeY" : 35,
          "config" : {
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 0,
                "timewindowMs" : 31536060000,
                "interval" : 1000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1618599847990,
                  "endTimeMs" : 1618686247990
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSelection" : true,
              "enableSearch" : true,
              "displayDetails" : false,
              "allowAcknowledgment" : true,
              "allowClear" : false,
              "displayPagination" : true,
              "defaultPageSize" : 20,
              "defaultSortOrder" : "severity",
              "alarmsTitle" : "Alarmes",
              "enableSelectColumnDisplay" : true,
              "enableFilter" : true,
              "enableStickyHeader" : true
            },
            "title" : "Alarmes",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "alarmSource" : {
              "type" : "entity",
              "name" : "alarms",
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "severity",
                "type" : "alarm",
                "label" : "Criticidade",
                "color" : "#ffc107",
                "settings" : {
                  "columnWidth" : "0px"
                },
                "_hash" : 0.6283523281992602
              }, {
                "name" : "details.originator",
                "type" : "alarm",
                "label" : "Ponto",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "debugger\nvar obj = JSON.parse(value)\nreturn obj.originator",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.039248350563928946,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "details.name",
                "type" : "alarm",
                "label" : "Tipo",
                "color" : "#f44336",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "var obj = JSON.parse(value)\nreturn obj.name",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.9033520003454285,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "startTime",
                "type" : "alarm",
                "label" : "Início",
                "color" : "#ffc107",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.7814015650239671
              }, {
                "name" : "endTime",
                "type" : "alarm",
                "label" : "Fim",
                "color" : "#607d8b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (alarm.status == 'ACTIVE_ACK' || alarm.status =='ACTIVE_UNACK') {\n    return null\n} else {\n    return moment.unix(value/1000).format(\"YYYY-MM-DD HH:mm:ss\");\n}\n"
                },
                "_hash" : 0.6723418179347178
              }, {
                "name" : "status",
                "type" : "alarm",
                "label" : "Status",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var dict ={\n    'ACTIVE_UNACK': 'Ativo',\n    'ACTIVE_ACK': 'Ativo',\n    'CLEARED_ACK':'Normalizado',\n    'CLEARED_UNACK':'Normalizado'\n}\n\nreturn dict[value]\n"
                },
                "_hash" : 0.27193457482678196
              }, {
                "name" : "details.message",
                "type" : "alarm",
                "label" : "Mensagem",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "var obj = JSON.parse(value)\nreturn obj.message",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.03750843248544866,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            },
            "alarmsPollingInterval" : 60,
            "datasources" : [ ],
            "widgetStyle" : { },
            "actions" : {
              "actionCellButton" : [ {
                "name" : "Detalhes",
                "icon" : "more_horiz",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div class=\"widget status-widget\">\n        <table width=\"280px\">\n            <tr>\n                <td class=\"title\">Criticidade: </td>\n                <td class=\"value\">{{ additionalParams.alarm.severity | translate}}</td>\n            </tr>\n            <tr>\n                <td class=\"title\">Ponto de Medição: </td>\n                <td class=\"value\">{{ details.originator }}</td>\n            </tr>\n            <tr>\n                <td class=\"title\">Tipo do Evento: </td>\n                <td class=\"value\"> {{ details.name }}</td>\n            </tr>\n            <tr>\n                <td class=\"title\">Data do Evento: </td>\n                <td class=\"value\">{{ eventDate }}</td>\n            </tr>\n            <tr>\n                <td class=\"title\">Status: </td>\n                <td class=\"value\">{{ dict[additionalParams.alarm.status] }}</td>\n            </tr>\n            <tr>\n                <td class=\"title\">Valor Medido: </td>\n                <td class=\"value_trigger\"> {{ details.value || \"\" }} </td>\n            </tr>\n            <tr>\n                <td class=\"title\">Valor Limite: </td>\n                <td class=\"value\"> {{ details.threshold || \"\" }} </td>\n            </tr>\n        </table>\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"ack()\"\n        type=\"submit\" [disabled]=\"!unack || (isLoading$ | async)\">\n        {{ \"Acknowledge\" | translate }}\n    </button>    \n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Fechar\n    </button>\n</div>\n",
                "customCss" : " .widget {\n     position: relative;\n     min-width: 0;\n     width: 100%;\n     height: 100%;\n }\n\n .status-widget .title {\n     display: inline-block;\n     font-family: Arial;\n     font-weight: normal;\n     font-size: 14px;\n     width: 50%;\n     color: rgba(0, 0, 0, 0.66);\n }\n\n .status-widget .value {\n     display: inline-block;\n     padding: 2px;\n     font-family: Arial;\n     font-weight: normal;\n     font-size: 14px;\n     width: 50%;\n     color: rgba(0, 0, 0, 0.87);\n }\n\n .status-widget .value_trigger {\n     display: inline-block;\n     padding: 2px;\n     font-family: Arial;\n     font-weight: bold;\n     font-size: 14px;\n     color: #ff0000;\n }\n\n .status-widget .criticidade {\n     display: inline-block;\n     padding: 2px;\n     font-family: Arial;\n     font-weight: bold;\n     font-size: 14px;\n     color: rgba(0, 0, 0, 0.87);\n }\n\n .status-widget .button {\n     display: inline-block;\n     padding: 2px;\n     font-family: Arial;\n     font-weight: bold;\n     font-size: 16px;\n     color: #bdfbf8;\n}",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\nlet alarmService = $injector.get(widgetContext.servicesMap.get('alarmService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Detalhes do alarme'\n    \n    vm.details = additionalParams.alarm.details\n    vm.alarmId = additionalParams.alarm.id.id;\n    vm.additionalParams = additionalParams\n\n    vm.dict ={\n        'ACTIVE_UNACK': 'Ativo',\n        'ACTIVE_ACK': 'Ativo',\n        'CLEARED_ACK':'Normalizado',\n        'CLEARED_UNACK':'Normalizado'\n    };\n    \n    vm.eventDate = moment.unix(vm.additionalParams.alarm.startTs/1000).format(\"DD/MM/YYYY HH:mm\");\n    if (vm.dict[vm.additionalParams.alarm.status] == 'Normalizado' ) {\n        vm.eventDate = vm.eventDate+ ' - '+moment.unix(additionalParams.alarm.endTs/1000).format(\"DD/MM/YYYY HH:mm\");\n    }    \n    \n    if (vm.additionalParams.alarm.status == 'ACTIVE_UNACK' || additionalParams.alarm.status == 'CLEARED_UNACK') {\n        vm.unack = true;\n    } else {\n        vm.unack = false;\n    }\n    \n    \n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.ack = () =>\n    {\n        alarmService.ackAlarm(vm.alarmId).then(\n            vm.cancel()\n        );\n    };    \n\n}\n\n",
                "customResources" : [ ],
                "id" : "b3ebb212-5c16-a987-3a4d-4c5de4f222d5"
              } ],
              "rowClick" : [ ],
              "headerButton" : [ ]
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "alarmsMaxCountLoad" : 0,
            "alarmsFetchSize" : 50,
            "alarmFilterConfig" : {
              "statusList" : [ "ACTIVE" ],
              "severityList" : [ ],
              "typeList" : [ ],
              "searchPropagatedAlarms" : true
            }
          },
          "id" : "e3e03576-a0bd-709e-5335-18a996edfc00",
          "typeFullFqn" : "system.alarm_widgets.alarms_table"
        },
        "016a5c89-aab1-ca35-257a-dd93d3ceefc9" : {
          "type" : "latest",
          "sizeX" : 20,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "mainApp",
                "type" : "attribute",
                "label" : "mainApp",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.6842930563189837
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Aplicação principal",
              "minLength" : 0
            },
            "title" : "New Update server string attribute",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "016a5c89-aab1-ca35-257a-dd93d3ceefc9",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "b5710b28-3f4d-43cd-98e1-03cfb35dd78b" : {
          "type" : "latest",
          "sizeX" : 13,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "geracao_projetada_mwm_mes",
                "type" : "attribute",
                "label" : "CO2_ton_ano",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.10127310431513736,
                "postFuncBody" : "function formattedNumber(x) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1}); \n}\n\nreturn formattedNumber(value*24*365*0.074)+' ton';"
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${CO2_ton_ano}</div><br>\n    </section>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "CO2 Evitados (ano)",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "b5710b28-3f4d-43cd-98e1-03cfb35dd78b",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "7c04691f-c4ee-44b7-8102-94e9530613ca" : {
          "type" : "latest",
          "sizeX" : 15,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "geracao_projetada_mwm_mes",
                "type" : "attribute",
                "label" : "geracao",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.29810837747938357,
                "postFuncBody" : "volume = value * 24 * 365000;\n\nif ( volume > 1000000 ) {\n    return (volume/1000).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}) + \" MWh\"; \n}\nif ( volume > 10000 ) {\n    return (volume/1000).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1}) + \" MWh\"; \n}\nif ( volume > 0 ) {\n    return volume.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}) + \" kWh\"; \n}\nreturn \"-x-\";"
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${geracao}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Ger. Projetada Ano",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "7c04691f-c4ee-44b7-8102-94e9530613ca",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "83feba53-0d23-44cb-9bcb-e2ebd2aa2286" : {
          "type" : "latest",
          "sizeX" : 28,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "serial",
                "type" : "attribute",
                "label" : "serial",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.2480594686375368,
                "decimals" : 0,
                "postFuncBody" : "return \"Remota: \"+value;"
              }, {
                "name" : "latitude",
                "type" : "attribute",
                "label" : "latitude",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.4835535055608968
              }, {
                "name" : "longitude",
                "type" : "attribute",
                "label" : "longitude",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.5324887104274882
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.16456604186865653,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"-- SEM NOME --\"    \n}\nreturn nome;"
              }, {
                "name" : "last_interval_ts",
                "type" : "attribute",
                "label" : "last_interval_ts",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.4575188999208146,
                "postFuncBody" : "return moment.unix(value/1000).format('DD-MMM HH:mm');\n"
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "classe_tensao",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.41833777839022757,
                "postFuncBody" : "var dict = {\n    0:\"?Classe?\",\n    1:\"A1\",\n    2:\"A2\",\n    3:\"A3\",\n    4:\"A3a\",\n    5:\"A4\",\n    6:\"AS\",\n    7:\"B1\",\n    8:\"B2\",\n    9:\"B3\"\n};\nreturn dict[value];"
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "utility",
                "color" : "#ff9800",
                "settings" : { },
                "_hash" : 0.09683687422599174,
                "postFuncBody" : "var dict = {\n    0: \"?Distribuidora?\",\n    1: \"CPFL PIRATININGA\",\n    2: \"ENEL SP\",\n    3: \"LIGHT\",\n    4: \"COPEL\",\n    5: \"CEMIG\",\n    6: \"ELEKTRO\",\n    7: \"CELPE\",\n    8: \"CEA AMAPA\",\n    9: \"COELBA\",\n    10: \"CEB\",\n    11: \"COSERN\",\n    12: \"CPFL PAULISTA\",\n    13: \"CEEE\",\n    14: \"EDP ES\",\n    15: \"EDP SP\",\n    16: \"CELESC\",\n    17: \"ELETROBRAS AL\",\n    18: \"ELETROBRAS AM\",\n    19: \"ENEL CE COELCE\",\n    20: \"ENEL RJ AMPLA\",\n    21: \"CELG\",\n    22: \"ENERGISA ACE\",\n    23: \"ENERGISA MG\",\n    24: \"ENERGISA MSL\",\n    25: \"ENERGISA MT\",\n    26: \"ENERGISA PB\",\n    27: \"ENERGISA BORBOREMA\",\n    28: \"ENERGISA RJ\",\n    29: \"ENERGISA RO\",\n    30: \"ENERGISA SE\",\n    31: \"ENERGISA SUL-SE\",\n    32: \"ENERGISA TO\",\n    33: \"EQUATORIAL MA\",\n    34: \"EQUATORIAL PI\",\n    35: \"CELPA\",\n    36: \"RGE SUL\",\n    37: \"CPFL JAGUARI\",\n    38: \"CPFL LESTE PAULISTA\",\n    39: \"CPFL MOCOCA\",\n    40: \"CPFL SANTA CRUZ\",\n    41: \"CPFL SUL PAULISTA\",\n    42: \"RGE\" \n};\nreturn dict[value];"
              }, {
                "name" : "potencia_nominal",
                "type" : "attribute",
                "label" : "potencia_nominal",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.6044050484001942,
                "decimals" : 0,
                "postFuncBody" : "return value + \" kW\";"
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.9169777273201221
              }, {
                "name" : "estado",
                "type" : "attribute",
                "label" : "estado",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.3144766325741253
              } ],
              "entityAliasId" : "2c70827c-80e8-29fe-93ad-4c1321059057"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "fitMapBounds" : true,
              "latKeyName" : "latitude",
              "lngKeyName" : "longitude",
              "showLabel" : false,
              "label" : "${description}",
              "tooltipPattern" : "<b>${description}</b><br/>\n${entityName}<br/>\n<br/>\n<b>Cidade:</b> ${cidade} ${estado}<br/>\n<b>Distribuidora:</b> ${utility}<br/>\n<b>Potência:</b> ${potencia_nominal}<br/>",
              "markerImageSize" : 34,
              "useColorFunction" : false,
              "markerImages" : [ "tb-image;/api/images/system/map_marker_image_0.png", "tb-image;/api/images/system/map_marker_image_1.png", "tb-image;/api/images/system/map_marker_image_2.png", "tb-image;/api/images/system/map_marker_image_3.png" ],
              "useMarkerImageFunction" : true,
              "colorFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'colorpin') {\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120 * 100;\n\t    return tinycolor.mix('blue', 'red', amount = percent).toHexString();\n\t}\n\treturn 'blue';\n}\n",
              "markerImageFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'thermomether') {\n\tvar res = {\n\t    url: images[0],\n\t    size: 40\n\t}\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120;\n\t    var index = Math.min(3, Math.floor(4 * percent));\n\t    res.url = images[index];\n\t}\n\treturn res;\n}",
              "color" : "#fe7569",
              "mapProvider" : "OpenStreetMap.Mapnik",
              "showTooltip" : true,
              "autocloseTooltip" : true,
              "tooltipFunction" : "var deviceType = dsData[dsIndex]['deviceType'];\r\nif (typeof deviceType !== undefined) {\r\n    if (deviceType == \"energy meter\") {\r\n        return '<b>${alias}</b><br/><b>Energy:</b> ${energy:2} kWt<br/>';\r\n    } else if (deviceType == \"thermometer\") {\r\n        return '<b>${alias}</b><br/><b>Temperature:</b> ${temperature:2} °C<br/>';\r\n    }\r\n}",
              "labelFunction" : "var deviceType = dsData[dsIndex]['deviceType'];\r\nif (typeof deviceType !== undefined) {\r\n    if (deviceType == \"energy meter\") {\r\n        return '<span style=\"color:orange;\">${alias}, ${energy:2} kWt</span>';\r\n    } else if (deviceType == \"thermometer\") {\r\n        return '<span style=\"color:blue;\">${alias}, ${temperature:2} °C</span>';\r\n    }\r\n}",
              "polygonKeyName" : "coordinates",
              "polygonOpacity" : 0.5,
              "polygonStrokeOpacity" : 1,
              "polygonStrokeWeight" : 1,
              "customProviderTileUrl" : "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
              "showTooltipAction" : "hover",
              "useLabelFunction" : false,
              "defaultCenterPosition" : "0,0",
              "zoomOnClick" : true,
              "showCoverageOnHover" : true,
              "animate" : true,
              "maxClusterRadius" : 80,
              "removeOutsideVisibleBounds" : true,
              "useClusterMarkers" : true,
              "provider" : "openstreet-map",
              "mapPageSize" : 16384
            },
            "title" : "Unidades Monitoradas",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : {
              "markerClick" : [ {
                "id" : "d3e01a61-d917-ce67-7582-c2db686ca4ce",
                "name" : "Detalhes do ponto",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "geracao_site",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Usina"
              } ],
              "tooltipAction" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "83feba53-0d23-44cb-9bcb-e2ebd2aa2286",
          "typeFullFqn" : "system.maps_v2.openstreetmap"
        },
        "93a2eae3-be18-4d27-9023-750c3fafe7c9" : {
          "type" : "latest",
          "sizeX" : 64,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "entitiesTitle" : "Benchmarking",
              "enableSearch" : true,
              "enableSelectColumnDisplay" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "true",
              "displayEntityName" : false,
              "displayEntityLabel" : false,
              "displayEntityType" : false,
              "displayPagination" : false,
              "defaultSortOrder" : "Nome da Loja",
              "useRowStyleFunction" : false
            },
            "title" : "Benchmarking",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.3rem",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "ea337dd3-3e20-573c-3268-117e79aee26d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "id_ref_cliente",
                "type" : "attribute",
                "label" : "ID",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return value.toString();"
                },
                "_hash" : 0.7853114753420347,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "Nome da Loja",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "25%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.26440763097163766,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~SEM NOME\"    \n}\nreturn nome;",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "aggregationType" : null
              }, {
                "name" : "dif_consumo_espelho",
                "type" : "attribute",
                "label" : "Var %",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-br',{style: 'percent', minimumFractionDigits:1, maximumFractionDigits:1});",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.4714472031114567,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "score_assai_consumo",
                "type" : "timeseries",
                "label" : "Consumo/Referência",
                "color" : "#e91e63",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var html = {\n    0: '<html><img src=\"https://solarhub.engecomp.io/res/ee_g.png\" width=\"auto\" height=\"22em\"></html>',\n    1: '<html><img src=\"https://solarhub.engecomp.io/res/ee_g.png\" width=\"auto\" height=\"22em\"></html>',\n    2: '<html><img src=\"https://solarhub.engecomp.io/res/ee_f.png\" width=\"auto\" height=\"22em\"></html>',\n    3: '<html><img src=\"https://solarhub.engecomp.io/res/ee_e.png\" width=\"auto\" height=\"22em\"></html>',\n    4: '<html><img src=\"https://solarhub.engecomp.io/res/ee_d.png\" width=\"auto\" height=\"22em\"></html>',\n    5: '<html><img src=\"https://solarhub.engecomp.io/res/ee_c.png\" width=\"auto\" height=\"22em\"></html>',\n    6: '<html><img src=\"https://solarhub.engecomp.io/res/ee_c.png\" width=\"auto\" height=\"22em\"></html>',\n    7: '<html><img src=\"https://solarhub.engecomp.io/res/ee_b.png\" width=\"auto\" height=\"22em\"></html>',\n    8: '<html><img src=\"https://solarhub.engecomp.io/res/ee_b.png\" width=\"auto\" height=\"22em\"></html>',\n    9: '<html><img src=\"https://solarhub.engecomp.io/res/ee_a.png\" width=\"auto\" height=\"22em\"></html>',\n   10: '<html><img src=\"https://solarhub.engecomp.io/res/ee_a.png\" width=\"auto\" height=\"22em\"></html>',\n    11: '<html>&nbsp;</html>'\n};\n\nif (value <= 0) {\n\treturn html[11];\n}\nvar index = Math.round(value * 10);\nif (index < 0)\n    index = 0;\nreturn html[index];",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.705500429827167,
                "aggregationType" : "NONE",
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "score_fator_carga",
                "type" : "attribute",
                "label" : "Fator de Carga",
                "color" : "#f44336",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var html = {\n    0: '<html><img src=\"https://solarhub.engecomp.io/res/ee_g.png\" width=\"auto\" height=\"22em\"></html>',\n    1: '<html><img src=\"https://solarhub.engecomp.io/res/ee_g.png\" width=\"auto\" height=\"22em\"></html>',\n    2: '<html><img src=\"https://solarhub.engecomp.io/res/ee_f.png\" width=\"auto\" height=\"22em\"></html>',\n    3: '<html><img src=\"https://solarhub.engecomp.io/res/ee_e.png\" width=\"auto\" height=\"22em\"></html>',\n    4: '<html><img src=\"https://solarhub.engecomp.io/res/ee_d.png\" width=\"auto\" height=\"22em\"></html>',\n    5: '<html><img src=\"https://solarhub.engecomp.io/res/ee_c.png\" width=\"auto\" height=\"22em\"></html>',\n    6: '<html><img src=\"https://solarhub.engecomp.io/res/ee_c.png\" width=\"auto\" height=\"22em\"></html>',\n    7: '<html><img src=\"https://solarhub.engecomp.io/res/ee_b.png\" width=\"auto\" height=\"22em\"></html>',\n    8: '<html><img src=\"https://solarhub.engecomp.io/res/ee_b.png\" width=\"auto\" height=\"22em\"></html>',\n    9: '<html><img src=\"https://solarhub.engecomp.io/res/ee_a.png\" width=\"auto\" height=\"22em\"></html>',\n   10: '<html><img src=\"https://solarhub.engecomp.io/res/ee_a.png\" width=\"auto\" height=\"22em\"></html>',\n    11: '<html>&nbsp;</html>'\n};\n\nif (value <= 0) {\n\treturn html[11];\n}\nvar index = Math.round(value * 10);\nif (index < 0)\n    index = 0;\nreturn html[index];",
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.07778646174336856,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "score_assai_custo_medio",
                "type" : "timeseries",
                "label" : "Custo Médio",
                "color" : "#ffeb3b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var html = {\n    0: '<html><img src=\"https://solarhub.engecomp.io/res/ee_g.png\" width=\"auto\" height=\"22em\"></html>',\n    1: '<html><img src=\"https://solarhub.engecomp.io/res/ee_g.png\" width=\"auto\" height=\"22em\"></html>',\n    2: '<html><img src=\"https://solarhub.engecomp.io/res/ee_f.png\" width=\"auto\" height=\"22em\"></html>',\n    3: '<html><img src=\"https://solarhub.engecomp.io/res/ee_e.png\" width=\"auto\" height=\"22em\"></html>',\n    4: '<html><img src=\"https://solarhub.engecomp.io/res/ee_d.png\" width=\"auto\" height=\"22em\"></html>',\n    5: '<html><img src=\"https://solarhub.engecomp.io/res/ee_c.png\" width=\"auto\" height=\"22em\"></html>',\n    6: '<html><img src=\"https://solarhub.engecomp.io/res/ee_c.png\" width=\"auto\" height=\"22em\"></html>',\n    7: '<html><img src=\"https://solarhub.engecomp.io/res/ee_b.png\" width=\"auto\" height=\"22em\"></html>',\n    8: '<html><img src=\"https://solarhub.engecomp.io/res/ee_b.png\" width=\"auto\" height=\"22em\"></html>',\n    9: '<html><img src=\"https://solarhub.engecomp.io/res/ee_a.png\" width=\"auto\" height=\"22em\"></html>',\n   10: '<html><img src=\"https://solarhub.engecomp.io/res/ee_a.png\" width=\"auto\" height=\"22em\"></html>',\n    11: '<html>&nbsp;</html>'\n};\n\nif (value <= 0) {\n\treturn html[11];\n}\nvar index = Math.round(value * 10);\nif (index < 0)\n    index = 0;\nreturn html[index];",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.34709484487665465,
                "aggregationType" : "NONE",
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "score_penalidades",
                "type" : "attribute",
                "label" : "Penalidades",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellStyleFunction" : "var html = {\n    0: '<html><img src=\"https://solarhub.engecomp.io/res/ee_g.png\" width=\"auto\" height=\"22em\"></html>',\n    1: '<html><img src=\"https://solarhub.engecomp.io/res/ee_g.png\" width=\"auto\" height=\"22em\"></html>',\n    2: '<html><img src=\"https://solarhub.engecomp.io/res/ee_f.png\" width=\"auto\" height=\"22em\"></html>',\n    3: '<html><img src=\"https://solarhub.engecomp.io/res/ee_e.png\" width=\"auto\" height=\"22em\"></html>',\n    4: '<html><img src=\"https://solarhub.engecomp.io/res/ee_d.png\" width=\"auto\" height=\"22em\"></html>',\n    5: '<html><img src=\"https://solarhub.engecomp.io/res/ee_c.png\" width=\"auto\" height=\"22em\"></html>',\n    6: '<html><img src=\"https://solarhub.engecomp.io/res/ee_c.png\" width=\"auto\" height=\"22em\"></html>',\n    7: '<html><img src=\"https://solarhub.engecomp.io/res/ee_b.png\" width=\"auto\" height=\"22em\"></html>',\n    8: '<html><img src=\"https://solarhub.engecomp.io/res/ee_b.png\" width=\"auto\" height=\"22em\"></html>',\n    9: '<html><img src=\"https://solarhub.engecomp.io/res/ee_a.png\" width=\"auto\" height=\"22em\"></html>',\n   10: '<html><img src=\"https://solarhub.engecomp.io/res/ee_a.png\" width=\"auto\" height=\"22em\"></html>',\n    11: '<html>&nbsp;</html>'\n};\n\nif (value <= 0) {\n\treturn html[11];\n}\nindex = Math.round(value * 10);\nif (index < 0)\n    index = 0;\nreturn html[index];",
                  "cellContentFunction" : "var html = {\n    0: '<html><img src=\"https://solarhub.engecomp.io/res/ee_g.png\" width=\"auto\" height=\"22em\"></html>',\n    1: '<html><img src=\"https://solarhub.engecomp.io/res/ee_g.png\" width=\"auto\" height=\"22em\"></html>',\n    2: '<html><img src=\"https://solarhub.engecomp.io/res/ee_f.png\" width=\"auto\" height=\"22em\"></html>',\n    3: '<html><img src=\"https://solarhub.engecomp.io/res/ee_e.png\" width=\"auto\" height=\"22em\"></html>',\n    4: '<html><img src=\"https://solarhub.engecomp.io/res/ee_d.png\" width=\"auto\" height=\"22em\"></html>',\n    5: '<html><img src=\"https://solarhub.engecomp.io/res/ee_c.png\" width=\"auto\" height=\"22em\"></html>',\n    6: '<html><img src=\"https://solarhub.engecomp.io/res/ee_c.png\" width=\"auto\" height=\"22em\"></html>',\n    7: '<html><img src=\"https://solarhub.engecomp.io/res/ee_b.png\" width=\"auto\" height=\"22em\"></html>',\n    8: '<html><img src=\"https://solarhub.engecomp.io/res/ee_b.png\" width=\"auto\" height=\"22em\"></html>',\n    9: '<html><img src=\"https://solarhub.engecomp.io/res/ee_a.png\" width=\"auto\" height=\"22em\"></html>',\n   10: '<html><img src=\"https://solarhub.engecomp.io/res/ee_a.png\" width=\"auto\" height=\"22em\"></html>',\n    11: '<html>&nbsp;</html>'\n};\n\nif (value <= 0) {\n\treturn html[11];\n}\nindex = Math.round(value * 10);\nif (index < 0)\n    index = 0;\nreturn html[index];"
                },
                "_hash" : 0.16664590892006648,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "score_pe",
                "type" : "attribute",
                "label" : "Potencial Economia",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "var html = {\n    0: '<html><img src=\"https://solarhub.engecomp.io/res/ee_g.png\" width=\"auto\" height=\"22em\"></html>',\n    1: '<html><img src=\"https://solarhub.engecomp.io/res/ee_g.png\" width=\"auto\" height=\"22em\"></html>',\n    2: '<html><img src=\"https://solarhub.engecomp.io/res/ee_f.png\" width=\"auto\" height=\"22em\"></html>',\n    3: '<html><img src=\"https://solarhub.engecomp.io/res/ee_e.png\" width=\"auto\" height=\"22em\"></html>',\n    4: '<html><img src=\"https://solarhub.engecomp.io/res/ee_d.png\" width=\"auto\" height=\"22em\"></html>',\n    5: '<html><img src=\"https://solarhub.engecomp.io/res/ee_c.png\" width=\"auto\" height=\"22em\"></html>',\n    6: '<html><img src=\"https://solarhub.engecomp.io/res/ee_c.png\" width=\"auto\" height=\"22em\"></html>',\n    7: '<html><img src=\"https://solarhub.engecomp.io/res/ee_b.png\" width=\"auto\" height=\"22em\"></html>',\n    8: '<html><img src=\"https://solarhub.engecomp.io/res/ee_b.png\" width=\"auto\" height=\"22em\"></html>',\n    9: '<html><img src=\"https://solarhub.engecomp.io/res/ee_a.png\" width=\"auto\" height=\"22em\"></html>',\n   10: '<html><img src=\"https://solarhub.engecomp.io/res/ee_a.png\" width=\"auto\" height=\"22em\"></html>',\n    11: '<html>&nbsp;</html>'\n};\n\nif (value <= 0) {\n\treturn html[11];\n}\nindex = Math.round(value * 10);\nif (index < 0)\n    index = 0;\nreturn html[index];"
                },
                "_hash" : 0.9650737244197702,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "enableDataExport" : true,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "name" : "Detalhes da unidade",
                "icon" : "more_horiz",
                "type" : "custom",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\nvar params = widgetContext.stateController.getStateParams()\n\nif (!params[\"Curr_Site\"]) {\n    params[\"Curr_Site\"] = {}\n}\nparams[\"Curr_Site\"] = {entityId: entityId}\n\n\n$injector.get(widgetContext.servicesMap.get('deviceService')).getDevice(entityId.id).subscribe((device) => {\n    if (device.type == 'UC') {\n        destination = \"ssu_geral_uc\"\n    } else {\n        destination = \"ssu_site\"\n    }\n    widgetContext.stateController.updateState(destination, params, false);\n});\n",
                "id" : "680b63b8-c9eb-7f14-2c8a-3af3228191b9"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "93a2eae3-be18-4d27-9023-750c3fafe7c9",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "22f58fdd-a8d3-73e9-df0b-be3db332785c" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "dm_boot_time",
                "type" : "timeseries",
                "label" : "dm_boot_time",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.3039191375035015,
                "postFuncBody" : "return \"Último boot: \" + moment.unix(value/1000).format('DD/MMM HH:mm');"
              }, {
                "name" : "hostname",
                "type" : "attribute",
                "label" : "hostname",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.3723233366080818
              }, {
                "name" : "lastActivityTime",
                "type" : "attribute",
                "label" : "atividade",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.983246062197104,
                "postFuncBody" : "return \"Atividade: \" + moment.unix(value/1000).format('DD/MMM HH:mm');"
              } ],
              "entityAliasId" : "8f683444-e30b-ce20-12dd-8a0cd659196c"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgba(255, 255, 255, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class='card'>\n    <div class='content'>\n        <div class='column'>\n            <div class='title'>\n                ${hostname}\n            </div>    \n            <div class='value'>\n                ${atividade}<br>\n                ${dm_boot_time}\n            </div>    \n        </div>\n    </div>\n</div>",
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value {\n    font-size: 1.0vw;\n    font-weight: 300;\n}\n\n.card .title {\n    font-size: 1.1vw;\n    font-weight: bold;\n    color: #bdfbf8;\n}\n\n.card .description {\n    font-size: 14px;\n    color: #999;\n}\n"
            },
            "title" : "id_server",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "22f58fdd-a8d3-73e9-df0b-be3db332785c",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "afab22b5-c717-23b1-8444-4b5f479c8914" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 24,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgba(255, 255, 255, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "hostname",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "enableSelectColumnDisplay" : true
            },
            "title" : "Servidores",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "hostname",
                "type" : "attribute",
                "label" : "Server",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.18351726674631763
              } ],
              "entityAliasId" : "a5c469d4-a69f-beb7-4d5d-189846986221"
            } ],
            "enableDataExport" : false,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "id" : "fb9abcb6-b197-18f8-e130-361a386ba3b0",
                "name" : "change entity",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : null,
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Server"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "afab22b5-c717-23b1-8444-4b5f479c8914",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "a2f280e9-312f-fb73-2706-e139832e78cb" : {
          "type" : "latest",
          "sizeX" : 9,
          "sizeY" : 7,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "dm_cpu_1m",
                "type" : "timeseries",
                "label" : "Load Average 1m",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.9921264587518339
              } ],
              "entityAliasId" : "8f683444-e30b-ce20-12dd-8a0cd659196c"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "maxValue" : 4,
              "startAngle" : 45,
              "ticksAngle" : 270,
              "showBorder" : false,
              "defaultColor" : "#e65100",
              "needleCircleSize" : 7,
              "highlights" : [ {
                "from" : 0,
                "to" : 1,
                "color" : "#ffffff"
              }, {
                "from" : 1,
                "to" : 2,
                "color" : "#008f00"
              }, {
                "from" : 2,
                "to" : 3,
                "color" : "#ffc400"
              }, {
                "from" : 3,
                "to" : 4,
                "color" : "#ef5350"
              } ],
              "showUnitTitle" : false,
              "colorPlate" : "#fff",
              "colorMajorTicks" : "#444",
              "colorMinorTicks" : "#666",
              "minorTicks" : 0,
              "valueInt" : 1,
              "minValue" : 0,
              "highlightsWidth" : 15,
              "valueBox" : true,
              "animation" : true,
              "animationDuration" : 1500,
              "animationRule" : "linear",
              "colorNeedleShadowUp" : "rgba(2, 255, 255, 0)",
              "colorNeedleShadowDown" : "rgba(188, 143, 143, 0.78)",
              "majorTicksCount" : 10,
              "numbersFont" : {
                "family" : "Roboto",
                "size" : 22,
                "style" : "normal",
                "weight" : "500",
                "color" : "#616161"
              },
              "titleFont" : {
                "family" : "Roboto",
                "size" : 24,
                "style" : "normal",
                "weight" : "500",
                "color" : "#888"
              },
              "unitsFont" : {
                "family" : "Roboto",
                "size" : 28,
                "style" : "normal",
                "weight" : "500",
                "color" : "#616161"
              },
              "valueFont" : {
                "size" : 32,
                "style" : "normal",
                "weight" : "normal",
                "shadowColor" : "rgba(0, 0, 0, 0.49)",
                "color" : "#444",
                "family" : "Segment7Standard"
              },
              "colorValueBoxRect" : "#888",
              "colorValueBoxRectEnd" : "#666",
              "colorValueBoxBackground" : "#babab2",
              "colorValueBoxShadow" : "rgba(0,0,0,1)"
            },
            "title" : "CPU 1m",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "enableDataExport" : false,
            "widgetStyle" : { },
            "decimals" : 2,
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "a2f280e9-312f-fb73-2706-e139832e78cb",
          "typeFullFqn" : "system.analogue_gauges.speed_gauge_canvas_gauges"
        },
        "23f90fc9-152a-631f-b55e-b25e43ae1a30" : {
          "type" : "latest",
          "sizeX" : 9,
          "sizeY" : 7,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "dm_cpu_5m",
                "type" : "timeseries",
                "label" : "dm_cpu_5m",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.9475781536402827
              } ],
              "entityAliasId" : "8f683444-e30b-ce20-12dd-8a0cd659196c"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "maxValue" : 4,
              "startAngle" : 45,
              "ticksAngle" : 270,
              "showBorder" : false,
              "defaultColor" : "#e65100",
              "needleCircleSize" : 7,
              "highlights" : [ ],
              "showUnitTitle" : false,
              "colorPlate" : "#fff",
              "colorMajorTicks" : "#444",
              "colorMinorTicks" : "#666",
              "minorTicks" : 0,
              "valueInt" : 1,
              "minValue" : 0,
              "highlightsWidth" : 15,
              "valueBox" : true,
              "animation" : true,
              "animationDuration" : 1500,
              "animationRule" : "linear",
              "colorNeedleShadowUp" : "rgba(2, 255, 255, 0)",
              "colorNeedleShadowDown" : "rgba(188, 143, 143, 0.78)",
              "majorTicksCount" : 10,
              "numbersFont" : {
                "family" : "Roboto",
                "size" : 22,
                "style" : "normal",
                "weight" : "500",
                "color" : "#616161"
              },
              "titleFont" : {
                "family" : "Roboto",
                "size" : 24,
                "style" : "normal",
                "weight" : "500",
                "color" : "#888"
              },
              "unitsFont" : {
                "family" : "Roboto",
                "size" : 28,
                "style" : "normal",
                "weight" : "500",
                "color" : "#616161"
              },
              "valueFont" : {
                "size" : 32,
                "style" : "normal",
                "weight" : "normal",
                "shadowColor" : "rgba(0, 0, 0, 0.49)",
                "color" : "#444",
                "family" : "Segment7Standard"
              },
              "colorValueBoxRect" : "#888",
              "colorValueBoxRectEnd" : "#666",
              "colorValueBoxBackground" : "#babab2",
              "colorValueBoxShadow" : "rgba(0,0,0,1)"
            },
            "title" : "CPU 5m",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "enableDataExport" : false,
            "widgetStyle" : { },
            "decimals" : 2,
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "23f90fc9-152a-631f-b55e-b25e43ae1a30",
          "typeFullFqn" : "system.analogue_gauges.speed_gauge_canvas_gauges"
        },
        "6d6f6cb5-406b-d232-f819-9c9653598043" : {
          "type" : "latest",
          "sizeX" : 9,
          "sizeY" : 7,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "dm_cpu_15m",
                "type" : "timeseries",
                "label" : "dm_cpu_15m",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.9169376017236937
              } ],
              "entityAliasId" : "8f683444-e30b-ce20-12dd-8a0cd659196c"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "maxValue" : 4,
              "startAngle" : 45,
              "ticksAngle" : 270,
              "showBorder" : false,
              "defaultColor" : "#e65100",
              "needleCircleSize" : 7,
              "highlights" : [ ],
              "showUnitTitle" : false,
              "colorPlate" : "#fff",
              "colorMajorTicks" : "#444",
              "colorMinorTicks" : "#666",
              "minorTicks" : 0,
              "minValue" : 0,
              "highlightsWidth" : 15,
              "valueBox" : true,
              "animation" : true,
              "animationDuration" : 1500,
              "animationRule" : "linear",
              "colorNeedleShadowUp" : "rgba(2, 255, 255, 0)",
              "colorNeedleShadowDown" : "rgba(188, 143, 143, 0.78)",
              "majorTicksCount" : 10,
              "numbersFont" : {
                "family" : "Roboto",
                "size" : 22,
                "style" : "normal",
                "weight" : "500",
                "color" : "#616161"
              },
              "titleFont" : {
                "family" : "Roboto",
                "size" : 24,
                "style" : "normal",
                "weight" : "500",
                "color" : "#888"
              },
              "unitsFont" : {
                "family" : "Roboto",
                "size" : 28,
                "style" : "normal",
                "weight" : "500",
                "color" : "#616161"
              },
              "valueFont" : {
                "size" : 32,
                "style" : "normal",
                "weight" : "normal",
                "shadowColor" : "rgba(0, 0, 0, 0.49)",
                "color" : "#444",
                "family" : "Segment7Standard"
              },
              "colorValueBoxRect" : "#888",
              "colorValueBoxRectEnd" : "#666",
              "colorValueBoxBackground" : "#babab2",
              "colorValueBoxShadow" : "rgba(0,0,0,1)",
              "valueInt" : 1
            },
            "title" : "CPU 15m",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "enableDataExport" : false,
            "widgetStyle" : { },
            "decimals" : 2,
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "6d6f6cb5-406b-d232-f819-9c9653598043",
          "typeFullFqn" : "system.analogue_gauges.speed_gauge_canvas_gauges"
        },
        "da5f4cc8-ef17-ea2e-7821-9be02a368bbe" : {
          "type" : "latest",
          "sizeX" : 9,
          "sizeY" : 7,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "dm_mem_percent",
                "type" : "timeseries",
                "label" : "dm_mem_percent",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.03836248693308142
              } ],
              "entityAliasId" : "8f683444-e30b-ce20-12dd-8a0cd659196c"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "maxValue" : 100,
              "startAngle" : 45,
              "ticksAngle" : 270,
              "showBorder" : false,
              "defaultColor" : "#e57373",
              "needleCircleSize" : 7,
              "highlights" : [ {
                "from" : 40,
                "to" : 60,
                "color" : "#fdd835"
              }, {
                "color" : "#e57373",
                "from" : 60,
                "to" : 100
              } ],
              "showUnitTitle" : true,
              "colorPlate" : "#fff",
              "colorMajorTicks" : "#444",
              "colorMinorTicks" : "#666",
              "minorTicks" : 0,
              "valueInt" : 2,
              "minValue" : 0,
              "highlightsWidth" : 15,
              "valueBox" : true,
              "animation" : true,
              "animationDuration" : 1500,
              "animationRule" : "linear",
              "colorNeedleShadowUp" : "rgba(2, 255, 255, 0)",
              "colorNeedleShadowDown" : "rgba(188, 143, 143, 0.78)",
              "majorTicksCount" : 10,
              "numbersFont" : {
                "family" : "Roboto",
                "size" : 22,
                "style" : "normal",
                "weight" : "500",
                "color" : "#616161"
              },
              "titleFont" : {
                "family" : "Roboto",
                "size" : 24,
                "style" : "normal",
                "weight" : "500",
                "color" : "#888"
              },
              "unitsFont" : {
                "family" : "Roboto",
                "size" : 28,
                "style" : "normal",
                "weight" : "500",
                "color" : "#616161"
              },
              "valueFont" : {
                "size" : 32,
                "style" : "normal",
                "weight" : "normal",
                "shadowColor" : "rgba(0, 0, 0, 0.49)",
                "color" : "#444",
                "family" : "Segment7Standard"
              },
              "colorValueBoxRect" : "#888",
              "colorValueBoxRectEnd" : "#666",
              "colorValueBoxBackground" : "#babab2",
              "colorValueBoxShadow" : "rgba(0,0,0,1)",
              "unitTitle" : "%"
            },
            "title" : "RAM",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "enableDataExport" : false,
            "widgetStyle" : { },
            "decimals" : 0,
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "units" : "%",
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "da5f4cc8-ef17-ea2e-7821-9be02a368bbe",
          "typeFullFqn" : "system.analogue_gauges.speed_gauge_canvas_gauges"
        },
        "6da29f46-1767-b5ea-6375-8dfc1ce8f6f0" : {
          "type" : "latest",
          "sizeX" : 9,
          "sizeY" : 7,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "dm_temperature",
                "type" : "timeseries",
                "label" : "°C",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.9530339689996778
              } ],
              "entityAliasId" : "8f683444-e30b-ce20-12dd-8a0cd659196c"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "maxValue" : 100,
              "startAngle" : 45,
              "ticksAngle" : 270,
              "showBorder" : false,
              "defaultColor" : "#e57373",
              "needleCircleSize" : 7,
              "highlights" : [ {
                "from" : 40,
                "to" : 60,
                "color" : "#fdd835"
              }, {
                "color" : "#e57373",
                "from" : 60,
                "to" : 100
              } ],
              "showUnitTitle" : true,
              "colorPlate" : "#fff",
              "colorMajorTicks" : "#444",
              "colorMinorTicks" : "#666",
              "minorTicks" : 0,
              "valueInt" : 2,
              "minValue" : 0,
              "highlightsWidth" : 15,
              "valueBox" : true,
              "animation" : true,
              "animationDuration" : 1500,
              "animationRule" : "linear",
              "colorNeedleShadowUp" : "rgba(2, 255, 255, 0)",
              "colorNeedleShadowDown" : "rgba(188, 143, 143, 0.78)",
              "majorTicksCount" : 10,
              "numbersFont" : {
                "family" : "Roboto",
                "size" : 22,
                "style" : "normal",
                "weight" : "500",
                "color" : "#616161"
              },
              "titleFont" : {
                "family" : "Roboto",
                "size" : 24,
                "style" : "normal",
                "weight" : "500",
                "color" : "#888"
              },
              "unitsFont" : {
                "family" : "Roboto",
                "size" : 28,
                "style" : "normal",
                "weight" : "500",
                "color" : "#616161"
              },
              "valueFont" : {
                "size" : 32,
                "style" : "normal",
                "weight" : "normal",
                "shadowColor" : "rgba(0, 0, 0, 0.49)",
                "color" : "#444",
                "family" : "Segment7Standard"
              },
              "colorValueBoxRect" : "#888",
              "colorValueBoxRectEnd" : "#666",
              "colorValueBoxBackground" : "#babab2",
              "colorValueBoxShadow" : "rgba(0,0,0,1)",
              "unitTitle" : "°C"
            },
            "title" : "Temperature",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "enableDataExport" : false,
            "widgetStyle" : { },
            "decimals" : 1,
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "6da29f46-1767-b5ea-6375-8dfc1ce8f6f0",
          "typeFullFqn" : "system.analogue_gauges.speed_gauge_canvas_gauges"
        },
        "f88c2871-0aba-b46f-c886-97335a3d88b1" : {
          "type" : "latest",
          "sizeX" : 9,
          "sizeY" : 7,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "dm_cpu_count",
                "type" : "timeseries",
                "label" : "Cores",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.821879846579896
              } ],
              "entityAliasId" : "8f683444-e30b-ce20-12dd-8a0cd659196c"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#ffffff",
            "color" : "rgb(0, 0, 0)",
            "padding" : "16px",
            "settings" : {
              "labelPosition" : "top"
            },
            "title" : "Cores",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "units" : "",
            "decimals" : 0,
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "f88c2871-0aba-b46f-c886-97335a3d88b1",
          "typeFullFqn" : "system.cards.simple_card"
        },
        "d3d1ea87-23b1-4e4b-b554-7560cf4eee69" : {
          "type" : "timeseries",
          "sizeX" : 27,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "dm_disk_percent",
                "type" : "timeseries",
                "label" : "ROOT",
                "color" : "#2196f3",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.04243499898420011
              }, {
                "name" : "dm_volume_percent",
                "type" : "timeseries",
                "label" : "VOLUME",
                "color" : "#4caf50",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.12675162729347056
              }, {
                "name" : "dm_mem_percent",
                "type" : "timeseries",
                "label" : "RAM",
                "color" : "#f44336",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.3975559162243998
              }, {
                "name" : "dm_cpu",
                "type" : "timeseries",
                "label" : "CPU",
                "color" : "#ffc107",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.36397526584565054
              } ],
              "entityAliasId" : "8f683444-e30b-ce20-12dd-8a0cd659196c"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 7200000,
                "timewindowMs" : 2592000000
              },
              "aggregation" : {
                "type" : "MAX",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454",
                "min" : 0,
                "max" : 100
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "smoothLines" : true,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "column",
                "position" : "bottom",
                "showMin" : true,
                "showMax" : true,
                "showAvg" : true,
                "showTotal" : false
              }
            },
            "title" : "CPU / RAM / Disks Used (%) - 30 dias",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "mobileHeight" : null,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "d3d1ea87-23b1-4e4b-b554-7560cf4eee69",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "7dd60ccc-af16-05cd-7cc7-570dfaf0185b" : {
          "type" : "timeseries",
          "sizeX" : 27,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "dm_net_bytes_recv",
                "type" : "timeseries",
                "label" : "LAN In (kB)",
                "color" : "#2196f3",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.3973755354935369,
                "postFuncBody" : "return value  / 1024;"
              }, {
                "name" : "dm_net_bytes_sent",
                "type" : "timeseries",
                "label" : "LAN Out (kB)",
                "color" : "#4caf50",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.6695108163797223,
                "postFuncBody" : "return value  / 1024 / 1024;"
              } ],
              "entityAliasId" : "8f683444-e30b-ce20-12dd-8a0cd659196c"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 3600000,
                "timewindowMs" : 172800000
              },
              "aggregation" : {
                "type" : "SUM",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "smoothLines" : true,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "column",
                "position" : "bottom",
                "showMin" : false,
                "showMax" : true,
                "showAvg" : false,
                "showTotal" : false
              }
            },
            "title" : "Network",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "mobileHeight" : null,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "7dd60ccc-af16-05cd-7cc7-570dfaf0185b",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "bc899af5-12cf-0e31-c577-db48deab1917" : {
          "type" : "timeseries",
          "sizeX" : 27,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "dm_temperature",
                "type" : "timeseries",
                "label" : "dm_temperature",
                "color" : "#2196f3",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "tooltipValueFormatter" : "",
                  "showSeparateAxis" : false,
                  "axisTitle" : "",
                  "axisPosition" : "left",
                  "axisTicksFormatter" : ""
                },
                "_hash" : 0.33775477305215706
              } ],
              "entityAliasId" : "8f683444-e30b-ce20-12dd-8a0cd659196c"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 900000,
                "timewindowMs" : 172800000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 42017
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454",
                "min" : 30,
                "max" : 80
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "smoothLines" : true,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "column",
                "position" : "bottom",
                "showMin" : true,
                "showMax" : true,
                "showAvg" : true,
                "showTotal" : false
              }
            },
            "title" : "Core temperature",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "mobileHeight" : null,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "units" : "°C",
            "decimals" : 1,
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "bc899af5-12cf-0e31-c577-db48deab1917",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "613fb2a8-fcec-27b3-d409-42e5e3ba3e05" : {
          "type" : "timeseries",
          "sizeX" : 27,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "dm_cpu_15m",
                "type" : "timeseries",
                "label" : "Load Average 15m",
                "color" : "#4caf50",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.07006957755947951,
                "decimals" : 1
              }, {
                "name" : "dm_cpu_1m",
                "type" : "timeseries",
                "label" : "Load Average 1m",
                "color" : "#f44336",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.2914789643804463,
                "decimals" : 1
              }, {
                "name" : "dm_cpu_5m",
                "type" : "timeseries",
                "label" : "Load Average 5m",
                "color" : "#ffc107",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.379765299305576,
                "decimals" : 1
              } ],
              "entityAliasId" : "8f683444-e30b-ce20-12dd-8a0cd659196c"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 300000,
                "timewindowMs" : 86400000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454",
                "min" : 0,
                "max" : 4
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "smoothLines" : true,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "column",
                "position" : "bottom",
                "showMin" : false,
                "showMax" : true,
                "showAvg" : false,
                "showTotal" : false
              }
            },
            "title" : "Load Average",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "mobileHeight" : null,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "613fb2a8-fcec-27b3-d409-42e5e3ba3e05",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "728a6ab1-a08d-447e-b125-c888885e3a95" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "alias",
                "type" : "attribute",
                "label" : "alias",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5671112303010537
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.08753771580722458
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgb(255, 255, 255)",
            "padding" : "10px",
            "settings" : {
              "cardHtml" : "<div class='card'>\n    <div class='content'>\n        <div class='column'>\n            <div class='title'>\n                ${description}\n            </div>    \n        </div>\n    </div>\n</div>\n",
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value {\n    font-size: 1.0vw;\n    font-weight: 300;\n}\n\n.card .title {\n    font-size: 1.1vw;\n    font-weight: bold;\n    color: #bdfbf8;\n}\n\n.card .description {\n    font-size: 14px;\n    color: #999;\n}\n"
            },
            "title" : "id_site_sem_config",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "728a6ab1-a08d-447e-b125-c888885e3a95",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "4c37125e-bf25-4d12-9872-1465a8e8fef0" : {
          "type" : "timeseries",
          "sizeX" : 38,
          "sizeY" : 29,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "UFER CALC (P)_day_sum",
                "type" : "timeseries",
                "label" : "Ponta",
                "color" : "#ebab54",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ "minute" ]
                },
                "_hash" : 0.6894148849634667,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "UFER CALC (FPC)_day_sum",
                "type" : "timeseries",
                "label" : "F.Ponta Capacitivo",
                "color" : "#35b89b",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ "minute" ]
                },
                "_hash" : 0.7913818431000674,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "UFER CALC (FPI)_day_sum",
                "type" : "timeseries",
                "label" : "F.Ponta Indutivo",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ "minute" ]
                },
                "_hash" : 0.1446612084613561,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "UFER CALC (P)_month_sum",
                "type" : "timeseries",
                "label" : "Ponta",
                "color" : "#ebab54",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.8905094606697765,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "UFER CALC (FPC)_month_sum",
                "type" : "timeseries",
                "label" : "F.Ponta Capacitivo",
                "color" : "#35b89b",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.48271257705564574,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "UFER CALC (FPI)_month_sum",
                "type" : "timeseries",
                "label" : "F.Ponta Indutivo",
                "color" : "#3c9ad8",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.9810924992267211,
                "postFuncBody" : "return Math.round(value);"
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1661486399000,
                  "endTimeMs" : 1662091199000
                },
                "interval" : 63244000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : true,
              "timeWindows" : [ "7D", "30D", "Mes", "12M" ],
              "timeWindowsUnits" : "day,day,day,month",
              "initialTimeWindow" : "7D",
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "showRightScale" : false,
              "rightScaleTicks" : "callback = function(value, index, values) {\n    //if (value <= 1) {\n    //    return \"\"\n    //}\n    return value.toLocaleString('pt-BR', {\n        style: 'decimal',\n        maximumFractionDigits: 0,\n        //minimumSignificantDigits: 2\n    });\n}\n\nticks = {\n    beginAtZero: true,\n    callback: callback\n}\n\nreturn ticks",
              "stacked" : true,
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: false,\n    callback: callback\n}\n\nreturn ticks",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            label += tooltipItem.yLabel.toLocaleString(\n                'pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n        \nfilter = function (tooltipItem, data) {return tooltipItem.value != \"NaN\"}\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n\n    }\n}\n\nreturn tooltip",
              "roundToUnit" : true,
              "showContractedDemandCurves" : false,
              "showOverFlowInRed" : false,
              "sortLegendByLabel" : false,
              "showRightScale2" : false,
              "roundingMethod" : "nearest"
            },
            "title" : "UFER (kVArh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : { },
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "4c37125e-bf25-4d12-9872-1465a8e8fef0",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "1dd70e9d-140d-4d57-8dea-913a231c02a3" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "ufer_fp",
                "type" : "timeseries",
                "label" : "ufer_fp",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.8480124974938985,
                "postFuncBody" : "function formattedNumber(x) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0});\n}\n\nfunction formattedNumber1(x) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 1});\n}\n\nif (value > 100000) {\n    return formattedNumber1(value/1000)+\" MVArh\";\n}\n\nreturn formattedNumber(Math.round(value))+\" kVArh\";\n"
              }, {
                "name" : "ufer_p",
                "type" : "timeseries",
                "label" : "ufer_p",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.8095005871854049,
                "postFuncBody" : "function formattedNumber(x) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0});\n}\n\nfunction formattedNumber1(x) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 1});\n}\n\nif (value > 100000) {\n    return formattedNumber1(value/1000)+\" MVArh\";\n}\n\nreturn formattedNumber(Math.round(value))+\" kVArh\";\n"
              }, {
                "name" : "ufer_fp",
                "type" : "timeseries",
                "label" : "tituloFP",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.3827209638490774,
                "postFuncBody" : "if (value > 1000000) {\n    return 'FP:';\n}\nreturn 'F.Ponta:';\n"
              }, {
                "name" : "ufer_fp",
                "type" : "timeseries",
                "label" : "tituloP",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.6826918185291457,
                "postFuncBody" : "if (value > 1000000) {\n    return 'P:';\n}\nreturn 'Ponta:';"
              }, {
                "name" : "ufer_fp",
                "type" : "timeseries",
                "label" : "largura",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.6802370270512839,
                "postFuncBody" : "if (value > 1000000) {\n    return '15%';\n}\nreturn '32%';"
              }, {
                "name" : "ufer_fp",
                "type" : "timeseries",
                "label" : "largura2",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.6402461095854941,
                "postFuncBody" : "if (value > 1000000) {\n    return '70%';\n}\nreturn '53%';\n"
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table align=\"center\" width=\"100%\">\n            <tr>\n                <td widht=\"5%\">&nbsp;</td>\n                <td width=\"${largura}\" class=\"value_left\">${tituloFP}</td>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura2}\" class=\"value_right\">${ufer_fp}</td>\n                <td widht=\"5%\">&nbsp;</td>\n            </tr>\n            <tr>\n                <td widht=\"5%\">&nbsp;</td>\n                <td width=\"${largura}\" class=\"value_left\">${tituloP}</td>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura2}\" class=\"value_right\">${ufer_p}</td>\n                <td widht=\"5%\">&nbsp;</td>\n            </tr>\n        </table>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "UFER Mês",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "1dd70e9d-140d-4d57-8dea-913a231c02a3",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "6021a2ef-1d07-4af2-9e68-3b1bfe62fb34" : {
          "type" : "timeseries",
          "sizeX" : 27,
          "sizeY" : 23,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "535d38b6-bac2-47c1-29d3-0326839d41f9",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pm_grid_w",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#2196f3",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "minute" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "steppedLine" : "none",
                  "spanGaps" : false
                },
                "_hash" : 0.5976337871863835,
                "postFuncBody" : "return value/1000;",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            }, {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "13a3d106-d96a-c88d-0ba4-36ceaaa1cb66",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Active Energy",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#35b89b",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack1",
                  "aggUnit" : [ "minute" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "steppedLine" : "none",
                  "spanGaps" : false
                },
                "_hash" : 0.5321380468750005,
                "postFuncBody" : "return value*4;",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1671506099000,
                  "endTimeMs" : 1671592499000
                },
                "interval" : 173000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 50000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : false,
              "timeWindows" : [ "Hoje" ],
              "showLeftScale" : true,
              "leftScaleTicks" : "callback = function(value, index, values) {\nreturn value.toLocaleString('pt-BR', {\nstyle: 'decimal',\nmaximumFractionDigits: 1,\nminimumSignificantDigits: 2\n});\n}\nticks = {\nbeginAtZero: true,\ncallback: callback\n}\nreturn ticks",
              "initialTimeWindow" : "Hoje",
              "timeWindowsUnits" : "minute",
              "tooltipSettings" : "var tooltip = {\n    intersect: true,\n    mode: 'index',\n    position: 'nearest',\n    itemSort: function(a, b, data) {\n        //data.datasets[a.datasetIndex].label\n    },\n    callbacks: {\n\n        afterTitle: function(tooltipItem, object) {\n            var total = 0;\n            for (var i = 0; i < tooltipItem\n                .length; i++) {\n                index = tooltipItem[i].datasetIndex\n                if (object.datasets[index].type ==\n                    'bar') {\n                    total = total + (tooltipItem[i]['yLabel'] || 0)\n                }\n            }\n            //total = tooltipItem.map(yLabel).reduce(sum).toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0, minimumFractionDigits: 0}); \n            total = total.toLocaleString('pt-BR', {\n                style: 'decimal',\n                maximumFractionDigits: 0,\n                minimumFractionDigits: 0\n            });\n            return \"Total: \" + total\n        },\n        label: function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            var value = tooltipItem.yLabel || 0\n            label += value\n                .toLocaleString('pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n    }\n}\n\nreturn tooltip",
              "stacked" : true,
              "sortLegendByLabel" : true,
              "roundToUnit" : true,
              "showContractedDemandCurves" : false,
              "showOverFlowInRed" : false,
              "roundingMethod" : "same",
              "showRightScale" : false,
              "showRightScale2" : false
            },
            "title" : "Potência (kW)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "6021a2ef-1d07-4af2-9e68-3b1bfe62fb34",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "193e9112-c414-4277-afbc-cf44dc22c961" : {
          "type" : "static",
          "sizeX" : 54,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;UCs por cliente</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 30px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "label Clientes",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "193e9112-c414-4277-afbc-cf44dc22c961",
          "typeFullFqn" : "system.cards.html_card"
        },
        "d9572fd4-6003-f8ba-7b93-26c1ea115a73" : {
          "type" : "latest",
          "sizeX" : 51,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Ponto",
              "displayEntityName" : true,
              "displayEntityType" : false,
              "enableSelectColumnDisplay" : true,
              "displayEntityLabel" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "true",
              "useRowStyleFunction" : false
            },
            "title" : "Tabela de Pontos",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "a9649059-df27-4178-3840-0d2615e553fa",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "Nome",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "columnWidth" : "0px",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.22263768340744194,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~~ SEM NOME ~~\"    \n}\nreturn nome;",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "last_telemetry",
                "type" : "attribute",
                "label" : "Ult Conexão",
                "color" : "#e91e63",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return moment.unix(value/1000).format('DD-MMM HH:mm');"
                },
                "_hash" : 0.5415469805063744,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "endereco",
                "type" : "attribute",
                "label" : "Endereço",
                "color" : "#f44336",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.9182161342207651,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "Cidade",
                "color" : "#ffc107",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.5588424027337622,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "estado",
                "type" : "attribute",
                "label" : "Estado",
                "color" : "#607d8b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.9890422342315388,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_ts",
                "type" : "attribute",
                "label" : "Ult Fatura",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.3186719137219971,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return moment(value).format(\"YYYY-MM-DD\")"
              } ]
            } ],
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "id" : "abb075ef-2aee-1ec4-85f8-0b6da17e4647",
                "name" : "change entity",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "adm_remota_ssu",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Site"
              } ],
              "headerButton" : [ ]
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "d9572fd4-6003-f8ba-7b93-26c1ea115a73",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "8fd5c747-57d7-45e4-4de0-d1dd2de2ee52" : {
          "type" : "latest",
          "sizeX" : 54,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "firmware_version",
                "type" : "attribute",
                "label" : "firmware_version",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.7218601455947209
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "serial",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.04076209369145456,
                "postFuncBody" : "return \"S/N: \" + value;"
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.8013083336525304
              }, {
                "name" : "csq",
                "type" : "attribute",
                "label" : "csq",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.04307374930688823
              }, {
                "name" : "last_telemetry",
                "type" : "attribute",
                "label" : "last_telemetry",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.42096336832089176,
                "postFuncBody" : "return moment.unix(value/1000).format('DD/MMM HH:mm');"
              }, {
                "name" : "active",
                "type" : "attribute",
                "label" : "active",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.8828938616348248,
                "postFuncBody" : "if (value == \"true\") { return \"Online\"; }\nreturn \"Offline\";"
              }, {
                "name" : "apn",
                "type" : "attribute",
                "label" : "apn",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.11945481194885343
              }, {
                "name" : "ccid",
                "type" : "attribute",
                "label" : "ccid",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.23975309820123325
              }, {
                "name" : "imei",
                "type" : "attribute",
                "label" : "imei",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.9900382601332955
              }, {
                "name" : "ke",
                "type" : "attribute",
                "label" : "ke",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.10797939995195605
              }, {
                "name" : "up_time",
                "type" : "attribute",
                "label" : "up_time",
                "color" : "#03a9f4",
                "settings" : { },
                "_hash" : 0.561694670986808
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgba(255, 255, 255, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card h1 {\n    text-transform: uppercase;\n    color: #999;\n    font-size: .6em;\n    font-weight: bold;\n    margin: 0;\n    padding-bottom: 6px;\n    line-height: 32px;\n}\n\n.card .value {\n    font-size: 1.0em;\n    font-weight: 300;\n}\n\n.card .title {\n    font-size: 1.4em;\n    font-weight: bold;\n    color: #bdfbf8;\n}\n\n.card .description {\n    font-size: 14px;\n    color: #999;\n}\n",
              "cardHtml" : "<div class='card'>\n    <div class='content'>\n        <table width=\"100%\">\n            <tr>\n                <td width=\"5%\" align=\"left\" class=\"value\">&nbsp;</td>\n                <td width=\"23%\" align=\"left\" class=\"title\">${description}</td>\n                <td width=\"5%\" align=\"left\" class=\"value\">&nbsp;</td>\n                <td width=\"31%\" align=\"left\" class=\"value\">\n                ${serial}<br>\n                Firmware V.${firmware_version}<br>\n                Operadora: ${apn}<br>\n                Sinal: ${csq}<br>\n                Simcard: ${ccid}\n                </td>\n                <td width=\"5%\" align=\"left\" class=\"value\">&nbsp;</td>\n                <td width=\"31%\" align=\"left\" class=\"value\">\n                Status: ${active}<br>\n                Ult.Conexão: ${last_telemetry}<br>\n                Constante: ${ke}<br>\n                Uptime: ${up_time}<br>\n                IMEI: ${imei}\n                </td>\n            </tr>\n        </table>\n    </div>\n</div>"
            },
            "title" : "id_site_completo",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "8fd5c747-57d7-45e4-4de0-d1dd2de2ee52",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "71548ed2-797d-9abb-650a-1b4e4fb5b50a" : {
          "type" : "timeseries",
          "sizeX" : 24,
          "sizeY" : 29,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "ocorrencia",
                "type" : "timeseries",
                "label" : "ocorrencia",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.6218851330992863
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 5184000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 20000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : true,
              "displayPagination" : true,
              "defaultPageSize" : 15
            },
            "title" : "Ocorrências",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "71548ed2-797d-9abb-650a-1b4e4fb5b50a",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "22cc275e-f70c-94a5-8916-4458c66c3661" : {
          "type" : "alarm",
          "sizeX" : 30,
          "sizeY" : 16,
          "config" : {
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 2592000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSelection" : true,
              "enableSearch" : true,
              "displayDetails" : false,
              "allowAcknowledgment" : true,
              "allowClear" : false,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "-startTime",
              "alarmsTitle" : "Alarmes do Ponto",
              "enableSelectColumnDisplay" : true,
              "enableFilter" : true,
              "enableStickyHeader" : true
            },
            "title" : "Alarmes do Ponto",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "alarmSource" : {
              "type" : "entity",
              "name" : "alarms",
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "severity",
                "type" : "alarm",
                "label" : "Criticidade",
                "color" : "#ffc107",
                "settings" : {
                  "columnWidth" : "0px"
                },
                "_hash" : 0.5110774746572786
              }, {
                "name" : "details.name",
                "type" : "alarm",
                "label" : "Tipo",
                "color" : "#f44336",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "var obj = JSON.parse(value)\nreturn obj.name",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.3994000035677572,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "startTime",
                "type" : "alarm",
                "label" : "Início",
                "color" : "#ffc107",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.9927441292060479
              }, {
                "name" : "endTime",
                "type" : "alarm",
                "label" : "Fim",
                "color" : "#607d8b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (alarm.status == 'ACTIVE_ACK' || alarm.status =='ACTIVE_UNACK') {\n    return null\n} else {\n    return moment.unix(value/1000).format(\"YYYY-MM-DD HH:mm:ss\");\n}\n"
                },
                "_hash" : 0.14010095904977482
              }, {
                "name" : "status",
                "type" : "alarm",
                "label" : "Status",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var dict ={\n    'ACTIVE_UNACK': 'Ativo',\n    'ACTIVE_ACK': 'Ativo',\n    'CLEARED_ACK':'Normalizado',\n    'CLEARED_UNACK':'Normalizado'\n}\n\nreturn dict[value]\n"
                },
                "_hash" : 0.8031335087673388
              } ]
            },
            "alarmsPollingInterval" : 5,
            "datasources" : [ ],
            "enableDataExport" : true,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "id" : "b010490c-1d5e-3db6-1475-0c27ed76702e",
                "name" : "Detalhes",
                "icon" : "more_horiz",
                "type" : "custom",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\nvar\n    $mdDialog = $injector.get('$mdDialog'),\n    $document = $injector.get('$document');\n    alarmService = $injector.get('alarmService');\n\nvar details = JSON.parse(additionalParams.alarm.details);\nvar alarmId = additionalParams.alarm.id.id;\n\nvar dict ={\n    'ACTIVE_UNACK': 'Ativo',\n    'ACTIVE_ACK': 'Ativo',\n    'CLEARED_ACK':'Normalizado',\n    'CLEARED_UNACK':'Normalizado'\n};\n\nif (additionalParams.alarm.status == 'ACTIVE_UNACK' || additionalParams.alarm.status == 'CLEARED_UNACK') {\n    var unack = true;\n} else {\n    var unack = false;\n}\n\neventDate = moment.unix(additionalParams.alarm.startTs/1000).format(\"DD/MM/YYYY HH:mm\");\nif (dict[additionalParams.alarm.status] == 'Normalizado' ) {\n    eventDate = eventDate+ ' - '+moment.unix(additionalParams.alarm.endTs/1000).format(\"DD/MM/YYYY HH:mm\");\n}\n\nvar infoDialogTemplate = '<head>'+\n  '     <style>'+\n  '         .widget {'+\n  '          position: relative;'+\n  '          min-width: 0;'+\n  '          width: 100%;'+\n  '          height: 100%;'+\n  '          }'+\n  '          '+\n  '          .status-widget .title {'+\n  '              display: inline-block;'+\n  '              font-family : Arial;'+\n  '              font-weight : normal;'+\n  '              font-size : 14px;'+\n  '              color: rgba(0,0,0,0.66);'+\n  '          }'+\n  '        .status-widget .value {'+\n  '          display: inline-block;'+\n  '          padding: 2px;'+\n  '          font-family : Arial;'+\n  '          font-weight : normal;'+\n  '          font-size : 14px;'+\n  '          color: rgba(0,0,0,0.87);'+\n  '          }'+\n  '      .status-widget .value_trigger {'+\n  '          display: inline-block;'+\n  '          padding: 2px;'+\n  '          font-family : Arial;'+\n  '          font-weight : bold;'+\n  '          font-size : 14px;'+\n  '          color: #ff0000;'+\n  '          }'+\n  '      .status-widget .criticidade {'+\n  '          display: inline-block;'+\n  '          padding: 2px;'+\n  '          font-family : Arial;'+\n  '          font-weight : bold;'+\n  '          font-size : 14px;'+\n  '          color: rgba(0,0,0,0.87);'+\n  '          }'+\n  '      .status-widget .button {'+\n  '          display: inline-block;'+\n  '          padding: 2px;'+\n  '          font-family : Arial;'+\n  '          font-weight : bold;'+\n  '          font-size : 16px;'+\n  '          color: #bdfbf8;'+\n  '  }'+\n  '  '+\n  ' </style>'+\n  '</head>'+\n'<md-dialog aria-label=\"{{ vm.importTitle | translate }}\">'+\n'    <form name=\"theForm\">'+\n'        <md-toolbar>'+\n'            <div class=\"md-toolbar-tools\">'+\n'                <h2 translate>{{ vm.importTitle }}</h2>'+\n'                <span flex></span>'+\n'                <md-button class=\"md-icon-button\" ng-click=\"vm.cancel()\">'+\n'                    <ng-md-icon icon=\"close\" aria-label=\"{{ \\'dialog.close\\' | translate }}\"></ng-md-icon>'+\n'                </md-button>'+\n'            </div>'+\n'        </md-toolbar>'+\n'        <md-progress-linear class=\"md-warn\" md-mode=\"indeterminate\" ng-disabled=\"!$root.loading\" ng-show=\"$root.loading\"></md-progress-linear>'+\n'        <span style=\"min-height: 5px;\" flex=\"\" ng-show=\"!$root.loading\"></span>'+\n'        <md-dialog-content style=\"min-width: 420px; padding: 32px 28px 32px 28px\">'+\n'            <div class=\"widget status-widget\">'+\n'                    <!-- dados em colunas  //-->'+\n'                    <table align=\"center\" width=\"100%\">'+\n'                        <tr>'+\n'                            <td width=\"30%\" align=\"left\"><style class=\"title\">Criticidade: </style></td>'+\n'                            <td width=\"65%\" align=\"left\"><style class=\"criticidade\">'+additionalParams.alarm.severity+'</style></td>'+\n'                        </tr>'+\n'                        <tr>'+\n'                            <td width=\"30%\" align=\"left\"><style class=\"title\">Ponto de Medição:</style><br>&nbsp;</td>'+\n'                            <td width=\"65%\" align=\"left\"><style class=\"value\">'+details.originator+'</style><br>&nbsp;</td>'+\n'                        </tr>'+\n'                        <tr>'+\n'                            <td width=\"30%\" align=\"left\"><style class=\"title\">Tipo do Evento: </style></td>'+\n'                            <td width=\"65%\" align=\"left\"><style class=\"value\">'+details.name+'</style></td>'+\n'                        </tr>'+\n'                        <tr>'+\n'                            <td width=\"30%\" align=\"left\"><style class=\"title\">Data do Evento: </style></td>'+\n'                            <td width=\"65%\" align=\"left\"><style class=\"value\">'+eventDate+'</style></td>'+\n'                        </tr>'+\n'                        <tr>'+\n'                            <td width=\"30%\" align=\"left\"><style class=\"title\">Status: </style></td>'+\n'                            <td width=\"65%\" align=\"left\"><style class=\"value\">'+dict[additionalParams.alarm.status]+'</style></td>'+\n'                        </tr>'+\n'                        <tr>'+\n'                            <td width=\"30%\" align=\"left\"><style class=\"title\">Valor Medido: </style></td>'+\n'                            <td width=\"65%\" align=\"left\"><style class=\"value_trigger\">'+ (details.value || \"\") +'</style></td>'+\n'                        </tr>'+\n'                        <tr>'+\n'                            <td width=\"30%\" align=\"left\"><style class=\"title\">Valor Limite: </style></td>'+\n'                            <td width=\"65%\" align=\"left\"><style class=\"value\">'+ (details.threshold || \"\") +'</style></td>'+\n'                        </tr>'+\n'                    </table>'+\n'            </div>'+\n'        </md-dialog-content>'+\n'        <md-dialog-actions layout=\"row\">'+\n'            <span flex></span>'+\n'            <md-button ng-click= \"vm.ack()\" ng-disabled=\"!vm.unack\" type=\"submit\" style=\"margin-right:20px;\" class=\"md-raised\">'+\n'                {{ \\'alarm.acknowledge\\' | translate }}'+\n'            </md-button>'+\n'            <md-button ng-click=\"vm.cancel()\" type=\"submit\" style=\"margin-right:20px;\" class=\"md-raised md-primary\">{{ \\'close\\' | translate }}</md-button>'+\n'        </md-dialog-actions>'+\n'    </form>'+\n'</md-dialog>';\n\n\nshowInfoDialog();\n\nfunction showInfoDialog() {\n    $mdDialog.show({\n        controller: ['$mdDialog', InfoDialogController],\n        controllerAs: 'vm',\n        template: infoDialogTemplate,\n        parent: angular.element($document[0].body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        fullscreen: true\n    });\n}\n\nfunction InfoDialogController($mdDialog) {\n    let vm = this;\n    vm.importTitle = 'Detalhes do alarme';\n    vm.importFileLabel = 'Arquivos Excel de configuração de notificações';\n    vm.unack = unack;\n\n    vm.cancel = () =>\n    {\n        $mdDialog.cancel();\n    };\n    vm.ack = () =>\n    {\n        alarmService.ackAlarm(alarmId).then(\n            vm.cancel()\n        );\n    };\n}\n"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "alarmsMaxCountLoad" : 0,
            "alarmsFetchSize" : 100,
            "alarmFilterConfig" : {
              "statusList" : [ "UNACK" ],
              "severityList" : [ ],
              "typeList" : [ ],
              "searchPropagatedAlarms" : true
            }
          },
          "id" : "22cc275e-f70c-94a5-8916-4458c66c3661",
          "typeFullFqn" : "system.alarm_widgets.alarms_table"
        },
        "af6f75c8-0250-d0e3-73da-c8171bda1094" : {
          "type" : "timeseries",
          "sizeX" : 30,
          "sizeY" : 13,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Modem Signal Strength",
                "type" : "timeseries",
                "label" : "Modem Signal Strength",
                "color" : "#2196f3",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "tooltipValueFormatter" : "",
                  "showSeparateAxis" : false,
                  "axisTitle" : "",
                  "axisPosition" : "left",
                  "axisTicksFormatter" : ""
                },
                "_hash" : 0.7081723307877295
              }, {
                "name" : "Modem Temperature",
                "type" : "timeseries",
                "label" : "Modem Temperature",
                "color" : "#4caf50",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "tooltipValueFormatter" : "",
                  "showSeparateAxis" : false,
                  "axisTitle" : "",
                  "axisPosition" : "left",
                  "axisTicksFormatter" : ""
                },
                "_hash" : 0.1945405989606357
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1800000,
                "timewindowMs" : 2592000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "column",
                "position" : "bottom",
                "sortDataKeys" : false,
                "showMin" : false,
                "showMax" : false,
                "showAvg" : true,
                "showTotal" : false,
                "showLatest" : false
              }
            },
            "title" : "Nivel de Sinal",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "af6f75c8-0250-d0e3-73da-c8171bda1094",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "d288c06f-0b61-4155-8086-424c114be29c" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgb(255, 255, 255)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 15,
              "defaultSortOrder" : "Ponto",
              "displayEntityName" : true,
              "displayEntityType" : false,
              "enableSelectColumnDisplay" : false
            },
            "title" : "Tabela de Pontos",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "Ponto",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "70%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.5889221504240929
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "serial",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.318913393414644
              } ],
              "entityAliasId" : "ffaddc2f-20f2-387e-9b2a-e84653802171"
            } ],
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "id" : "c5d1b936-ce6b-5a8e-8834-b9faf6e78d71",
                "name" : "change entity",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : null,
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Site"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "d288c06f-0b61-4155-8086-424c114be29c",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "3458aa96-3bcb-ca64-cdf5-12dff528bda0" : {
          "type" : "latest",
          "sizeX" : 24,
          "sizeY" : 4,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "expression",
                "type" : "attribute",
                "label" : "formula",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.39748781155802027,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Fórmula para Ponto Virtual"
            },
            "title" : "New Update server string attribute",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "3458aa96-3bcb-ca64-cdf5-12dff528bda0",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "4b7c53e7-b942-1674-39f9-c6f2ea6d575b" : {
          "type" : "timeseries",
          "sizeX" : 22,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy (P)_day_sum",
                "type" : "timeseries",
                "label" : "Energia Dia (Ponta)",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.24187742379390786,
                "decimals" : 0
              }, {
                "name" : "Active Energy (FP)_day_sum",
                "type" : "timeseries",
                "label" : "Energia Dia (Fora Ponta)",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.8854021292168184,
                "decimals" : 0
              }, {
                "name" : "Active Energy (HR)_day_sum",
                "type" : "timeseries",
                "label" : "Energia Dia",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.6573265628599061
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "timewindowMs" : 2592000000,
                "quickInterval" : "CURRENT_MONTH",
                "interval" : 7200000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : { },
            "title" : "Consumo por posto tarifário",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "4b7c53e7-b942-1674-39f9-c6f2ea6d575b",
          "typeFullFqn" : "tenant.teste.consumo_por_posto"
        },
        "a0829fb1-2bdf-eb1a-7545-a55918779ce3" : {
          "type" : "static",
          "sizeX" : 64,
          "sizeY" : 2,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(0, 105, 92)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "tablist" : "[\n    {\"name\": \"Admin\", \"icon\": \"fa-address-card\", \"stateId\": \"adm_clientes\"},\n    {\"name\": \"Faturamento\", \"icon\": \"fa-donate\", \"stateId\": \"adm_faturamento\"},\n    {\"name\": \"Remotas\", \"icon\": \"fa-file-medical-alt\", \"stateId\": \"adm_remotas\"},\n    {\"name\": \"UCs\", \"icon\": \"fa-file-medical-alt\", \"stateId\": \"adm_ucs\"},\n    {\"name\": \"Usuários\", \"icon\": \"fa-users\", \"stateId\": \"adm_users\"},\n    {\"name\": \"Servidores\", \"icon\": \"fa-database\", \"stateId\": \"adm_servidores\"}\n]\n"
            },
            "title" : "Tab Adm",
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "a0829fb1-2bdf-eb1a-7545-a55918779ce3",
          "typeFullFqn" : "tenant.teste.tabs_permissions"
        },
        "1ea99a30-1eb3-22d9-0fd3-007b0a1d7e14" : {
          "type" : "static",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>HTML code here</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
            },
            "title" : "New Router",
            "dropShadow" : false,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "1ea99a30-1eb3-22d9-0fd3-007b0a1d7e14",
          "typeFullFqn" : "tenant.teste.router"
        },
        "126600ca-13f5-4eaf-99c7-d07accbcab1b" : {
          "type" : "static",
          "sizeX" : 64,
          "sizeY" : 2,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(0, 105, 92)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "tablist" : "[\n    {\"name\": \"Admin\", \"icon\": \"fa-address-card\", \"stateId\": \"adm_clientes\"},\n    {\"name\": \"Pontos de Consumo\", \"icon\": \"fa-chart-bar\", \"stateId\": \"ssu_home\"},\n    {\"name\": \"Pontos de Consumo\", \"icon\": \"fa-chart-bar\", \"stateId\": \"ssu_subcliente\"},\n    {\"name\": \"Pontos de Geração\", \"icon\": \"fa-cogs\", \"stateId\": \"geracao_home\"},\n    {\"name\": \"Usinas de Geração Distribuída\", \"icon\": \"fa-solar-panel\", \"stateId\": \"solar_home\"},\n    {\"name\": \"Usinas de Geração Distribuída\", \"icon\": \"fa-solar-panel\", \"stateId\": \"solar_home2\"},\n    {\"name\": \"Faturas\", \"icon\": \"fa-file-invoice-dollar\", \"stateId\": \"faturas_home\"},\n    {\"name\": \"Upload Faturas\", \"icon\": \"fa-cloud-upload-alt\", \"stateId\": \"faturas_upload\"},\n    {\"name\": \"Água\", \"icon\": \"fa-water\", \"stateId\": \"water_home\"},\n    {\"name\": \"Gás\", \"icon\": \"fa-fire-alt\", \"stateId\": \"gas_site\"}\n]\n"
            },
            "title" : "Tab Cliente",
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "126600ca-13f5-4eaf-99c7-d07accbcab1b",
          "typeFullFqn" : "tenant.teste.tabs_permissions"
        },
        "126a7719-a5bc-49f8-9348-23e834762708" : {
          "type" : "static",
          "sizeX" : 64,
          "sizeY" : 2,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(0, 105, 92)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "tablist" : "[\n    {\"name\": \"Administração\", \"icon\": \"fa-address-card\", \"stateId\": \"adm_clientes\"},\n    {\"name\": \"Voltar\", \"icon\": \"fa-arrow-circle-left\", \"stateId\": \"water_home\"},\n    {\"name\": \"Geral\", \"icon\": \"fa-water\", \"stateId\": \"water_site\"},\n    {\"name\": \"Relatórios\", \"icon\": \"fa-border-all\", \"stateId\": \"water_relatorios\"},\n    {\"name\": \"Configuração\", \"icon\": \"fa-cog\", \"stateId\": \"water_config\"}\n]\n"
            },
            "title" : "Tab Agua",
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "126a7719-a5bc-49f8-9348-23e834762708",
          "typeFullFqn" : "tenant.teste.tabs_permissions"
        },
        "2c3c2cde-008f-48ce-900e-af613a264361" : {
          "type" : "static",
          "sizeX" : 64,
          "sizeY" : 2,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(0, 105, 92)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "tablist" : "[\n    {\"name\": \"Admin\", \"icon\": \"fa-address-card\", \"stateId\": \"adm_clientes\"},\n    {\"name\": \"Voltar\", \"icon\": \"fa-arrow-circle-left\", \"stateId\": \"geracao_home\"},\n    {\"name\": \"Gráficos\", \"icon\": \"fa-cogs\", \"stateId\": \"geracao_site\"},\n    {\"name\": \"Relatórios\", \"icon\": \"fa-border-all\", \"stateId\": \"geracao_relatorios\"},\n    {\"name\": \"Unidades Consumidoras\", \"icon\": \"fa-project-diagram\", \"stateId\": \"geracao_ucs\"},\n    {\"name\": \"Auditoria\", \"icon\": \"fa-check-square\", \"stateId\": \"geracao_kpis\"},    \n    {\"name\": \"Contratos\", \"icon\": \"fa-file-contract\", \"stateId\": \"geracao_contratos\"},\n    {\"name\": \"Configuração\", \"icon\": \"fa-cog\", \"stateId\": \"geracao_config\"}\n]\n"
            },
            "title" : "Tab Geracao",
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "2c3c2cde-008f-48ce-900e-af613a264361",
          "typeFullFqn" : "tenant.teste.tabs_permissions"
        },
        "afb6c33e-f4aa-4d36-970a-ae536a17186b" : {
          "type" : "static",
          "sizeX" : 64,
          "sizeY" : 2,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(0, 105, 92)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "tablist" : "[\n    {\"name\": \"Admin\", \"icon\": \"fa-address-card\", \"stateId\": \"adm_clientes\"},\n    {\"name\": \"Voltar\", \"icon\": \"fa-arrow-circle-left\", \"stateId\": \"ssu_home\"},\n    {\"name\": \"Voltar\", \"icon\": \"fa-arrow-circle-left\", \"stateId\": \"ssu_subcliente\"},\n    {\"name\": \"Geral\", \"icon\": \"fa-clipboard-list\", \"stateId\": \"ssu_site\"},\n    {\"name\": \"Demanda\", \"icon\": \"fa-chart-bar\", \"stateId\": \"ssu_demandas\"},\n    {\"name\": \"Consumo\", \"icon\": \"fa-chart-line\", \"stateId\": \"ssu_consumos\"},\n    {\"name\": \"Reativos\", \"icon\": \"fa-chart-area\", \"stateId\": \"ssu_reativos\"},\n    {\"name\": \"Submedição\", \"icon\": \"fa-sitemap\", \"stateId\": \"ssu_submedicao\"},\n    {\"name\": \"Faturas\", \"icon\": \"fa-file-invoice-dollar\", \"stateId\": \"ssu_faturas\"},\n    {\"name\": \"M.Livre\", \"icon\": \"fa-code-fork\", \"stateId\": \"ssu_mlivre\"},\n    {\"name\": \"Pot.Economia\", \"icon\": \"fa-search-dollar\", \"stateId\": \"ssu_pot_economia\"},\n    {\"name\": \"Relatórios\", \"icon\": \"fa-table\", \"stateId\": \"ssu_relatorios\"},\n    {\"name\": \"CO2\", \"icon\": \"fa-cloud-sun\", \"stateId\": \"ssu_co2\", \"hidden\": true},\n    {\"name\": \"Remotas\", \"icon\": \"fa-file-medical-alt\", \"stateId\": \"ssu_remotas\"},\n    {\"name\": \"Configuração\", \"icon\": \"fa-cog\", \"stateId\": \"ssu_config\"},\n    {\"name\": \"Admin Only\", \"icon\": \"fa-cog\", \"stateId\": \"ssu_config_admin\"}\n]\n"
            },
            "title" : "Tab Telemetria",
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "afb6c33e-f4aa-4d36-970a-ae536a17186b",
          "typeFullFqn" : "tenant.teste.tabs_permissions"
        },
        "3b1453fb-fbbd-4903-be0b-f2851db0aa84" : {
          "type" : "static",
          "sizeX" : 64,
          "sizeY" : 2,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(0, 105, 92)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "tablist" : "[\n    {\"name\": \"Admin\", \"icon\": \"fa-address-card\", \"stateId\": \"adm_clientes\"},\n    {\"name\": \"Faturas\", \"icon\": \"fa-arrow-circle-left\", \"stateId\": \"faturas_home\"},\n    {\"name\": \"Geral\", \"icon\": \"fa-clipboard-list\", \"stateId\": \"faturas_site\"},\n    {\"name\": \"Telemetria\", \"icon\": \"fa-chart-line\", \"stateId\": \"faturas_telemetria\"},\n    {\"name\": \"Consumos\", \"icon\": \"fa-chart-line\", \"stateId\": \"faturas_consumos\"},\n    {\"name\": \"Créditos GD\", \"icon\": \"fa-sun\", \"stateId\": \"faturas_site_gd\"},\n    {\"name\": \"M&V\", \"icon\": \"fa-check-circle\", \"stateId\": \"faturas_m_v\"},\n    {\"name\": \"Comparações\", \"icon\": \"fa-balance-scale\", \"stateId\": \"faturas_comp_consumo\"},\n    {\"name\": \"Tarifas\", \"icon\": \"fa-chart-area\", \"stateId\": \"faturas_tarifas\"},\n    {\"name\": \"Configurações\", \"icon\": \"fa-cog\", \"stateId\": \"faturas_config\"}\n]\n"
            },
            "title" : "Tab Faturas BT",
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "3b1453fb-fbbd-4903-be0b-f2851db0aa84",
          "typeFullFqn" : "tenant.teste.tabs_permissions"
        },
        "5bb9acca-813a-4128-9c66-974133e13016" : {
          "type" : "static",
          "sizeX" : 64,
          "sizeY" : 2,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(0, 105, 92)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "tablist" : "[\n    {\"name\": \"Admin\", \"icon\": \"fa-address-card\", \"stateId\": \"adm_clientes\"},\n    {\"name\": \"Voltar\", \"icon\": \"fa-arrow-circle-left\", \"stateId\": \"solar_home\"},\n    {\"name\": \"Usina\", \"icon\": \"fa-solar-panel\", \"stateId\": \"solar_usina\"},\n    {\"name\": \"Geração\", \"icon\": \"fa-solar-panel\", \"stateId\": \"solar_invest\"},\n    {\"name\": \"Equipamentos\", \"icon\": \"fa-hdd\", \"stateId\": \"solar_equiptos\"},\n    {\"name\": \"Unidades Consumidoras\", \"icon\": \"fa-project-diagram\", \"stateId\": \"solar_ucs\"},\n    {\"name\": \"Auditoria\", \"icon\": \"fa-check-square\", \"stateId\": \"solar_kpis\"},\n    {\"name\": \"Performance\", \"icon\": \"fa-sort-amount-up\", \"stateId\": \"solar_performance_ratio\"},\n    {\"name\": \"Contratos\", \"icon\": \"fa-file-contract\", \"stateId\": \"solar_contratos\"},\n    {\"name\": \"Configuração\", \"icon\": \"fa-cog\", \"stateId\": \"solar_config_ufv\"},\n    {\"name\": \"Admin Only\", \"icon\": \"fa-cog\", \"stateId\": \"solar_config_admin\"}\n]\n"
            },
            "title" : "Tab Solar",
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "5bb9acca-813a-4128-9c66-974133e13016",
          "typeFullFqn" : "tenant.teste.tabs_permissions"
        },
        "0f2995b0-07d7-43e0-97de-dc2762da543b" : {
          "type" : "latest",
          "sizeX" : 17,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "modules_area",
                "type" : "attribute",
                "label" : "modules_area",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.12053059779723752,
                "decimals" : null,
                "postFuncBody" : "valor = 0;\nif (value > 0) {\n    valor = Math.round(value);\n}\nreturn valor.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0, minimumFractionDigits: 0}) + \" m2\"; "
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 11px;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 16px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n",
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"90%\" align=\"left\"><style class=\"title\">Área de módulos:</style><br><style class=\"value\">${modules_area}</style></td>\n            </tr>\n        </table>\n</div>\n"
            },
            "title" : "Área de módulos",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\">\n        <mat-form-field fxFlex fxLayoutFill>\n            <mat-label>Área de Módulos (m2)</mat-label>\n            <input matInput [(ngModel)]=\"attributes.modules_area\">\n        </mat-form-field>\n    </div>\n    \n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Editar área de módulos'\n    \n    vm.diffAttrs=['modules_area']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n         })\n    }\n\n    for (var i=0; i<widgetContext.data.length; i++){\n        if (!vm.diffAttrs.includes(widgetContext.data[i].dataKey.name)) {\n            var x = widgetContext.data[i].data[0][1]\n            vm.attributes[widgetContext.data[i].dataKey.name] = x\n        }\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()\n    }\n\n}\n\n",
                "customResources" : [ ],
                "id" : "a25e279b-4ed1-6374-614e-35d9e4e1ab6e"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "0f2995b0-07d7-43e0-97de-dc2762da543b",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "f143adca-5958-45af-8d2f-e80cdaa0ea49" : {
          "type" : "static",
          "sizeX" : 34,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Outros Parâmetros</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 24px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "label Outros Parâmetros",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "f143adca-5958-45af-8d2f-e80cdaa0ea49",
          "typeFullFqn" : "system.cards.html_card"
        },
        "5c9899e5-1e81-475c-8984-21bed0c5b90b" : {
          "type" : "timeseries",
          "sizeX" : 54,
          "sizeY" : 35,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "9394fcb0-5690-2125-55f9-6406f27c509d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "uc_url_conta",
                "type" : "timeseries",
                "label" : "Data",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.3536309260118291,
                "postFuncBody" : "return time;",
                "units" : "{\"align\":\"center\",\"formatter\":\"datetime\",\"formatterParams\":{\"inputFormat\":\"x\",\"outputFormat\":\"DD/MM/YY\",\"invalidPlaceholder\":\"\"}}"
              }, {
                "name" : "fat_total",
                "type" : "timeseries",
                "label" : "Fatura (R$)",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.20092525227713165,
                "units" : "{   \"topCalc\": \"sum\",     \"topCalcFormatter\": \"money\",   \"topCalcFormatterParams\": {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 2   },   \"align\": \"right\",   \"formatter\": \"money\",   \"formatterParams\": {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 2   } }",
                "postFuncBody" : "return Math.round(value*100)/100;"
              }, {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "Consumo (kWh)",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.18776141735440843,
                "units" : "{   \"topCalc\": \"sum\",   \"topCalcFormatter\": \"money\",   \"topCalcFormatterParams\": {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 0   },   \"align\": \"right\",   \"formatter\": \"money\",   \"formatterParams\": {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 0   } }",
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "fat_energia_creditada",
                "type" : "timeseries",
                "label" : "Créditos (kWh)",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.36565710214875735,
                "units" : "{   \"topCalc\": \"sum\",   \"topCalcFormatter\": \"money\",   \"topCalcFormatterParams\": {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 0   },   \"align\": \"right\",   \"formatter\": \"money\",   \"formatterParams\": {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 0   } }",
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "fat_valor_creditado_energia",
                "type" : "timeseries",
                "label" : "Créditos (R$)",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.6532214911191807,
                "units" : "{ \"responsive\": 0,  \"topCalc\": \"sum\",     \"topCalcFormatter\": \"money\",   \"topCalcFormatterParams\": {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 2   },   \"align\": \"right\",   \"formatter\": \"money\",   \"formatterParams\": {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 2   } }",
                "postFuncBody" : "return Math.round(value*100)/100;"
              }, {
                "name" : "fat_saldo_creditos",
                "type" : "timeseries",
                "label" : "Saldo Créditos",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.42405266779726913,
                "units" : "{   \"topCalc\": \"sum\",   \"topCalcFormatter\": \"money\",   \"topCalcFormatterParams\": {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 0   },   \"align\": \"right\",   \"formatter\": \"money\",   \"formatterParams\": {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 0   } }",
                "postFuncBody" : "return Math.round(value);"
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1614567600000,
                  "endTimeMs" : 1617245999000
                },
                "interval" : 18000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "attributeSettings" : "attributeParams = [\n    {title: \"UC\", field: \"UC\", topCalc: \"count\", topCalcFormatter: \"money\",   topCalcFormatterParams: {decimal: \",\", thousand: \".\", precision: 0}, download:true},\n    {title: \"Nome\", field: \"description\", download:true},\n    {title: \"Endereço\", field: \"endereco\", download:true},\n    {title: \"Cidade\", field: \"cidade\", download:true},\n    {title: \"Estado\", field: \"estado\", download:true}\n]\n\nreturn attributeParams    "
            },
            "title" : "Balanço Mensal",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "5c9899e5-1e81-475c-8984-21bed0c5b90b",
          "typeFullFqn" : "tenant.teste.tabulator"
        },
        "1e5aa9d9-43d6-421c-984f-318b1a03edb4" : {
          "type" : "timeseries",
          "sizeX" : 28,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "geracao_dia",
                "type" : "timeseries",
                "label" : "Geração Dia",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "Stack0",
                  "aggUnit" : [ "day" ]
                },
                "_hash" : 0.8740100839991156,
                "postFuncBody" : "return value;"
              }, {
                "name" : "geracao_mes",
                "type" : "timeseries",
                "label" : "Geração Mês",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ "month" ]
                },
                "_hash" : 0.09957695826280699
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideLastInterval" : false,
              "hideQuickInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1673751599000,
                  "endTimeMs" : 1676343599000
                },
                "interval" : 61484260
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : false,
              "displayAxisTitle" : false,
              "allowDrilldown" : true,
              "timeWindows" : [ "7D", "30D", "Mes", "12M", "Ano" ],
              "timeWindowsUnits" : "day,day,day,month,month",
              "initialTimeWindow" : "30D",
              "showContractedDemandCurves" : false,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "showRightScale" : false,
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: false,\n    callback: callback\n}\n\nreturn ticks",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            label += tooltipItem.yLabel.toLocaleString(\n                'pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n        \nfilter = function (tooltipItem, data) {return tooltipItem.value != \"NaN\"}\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n\n    }\n}\n\nreturn tooltip",
              "stacked" : true,
              "axisLabel" : "kWh"
            },
            "title" : "Geração Total (kWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            }
          },
          "id" : "1e5aa9d9-43d6-421c-984f-318b1a03edb4",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "6e8641db-adff-499f-a7ee-7610ffdfe76e" : {
          "type" : "timeseries",
          "sizeX" : 28,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "c887f65b-386b-db62-7d93-8ff5fe5ecdcd",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "active_energy_month",
                "type" : "timeseries",
                "label" : "Telemetria",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ "month" ]
                },
                "_hash" : 0.09957695826280699,
                "postFuncBody" : "return value/1000;"
              }, {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "Faturas",
                "color" : "#47b1f7",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.055815327064783204,
                "postFuncBody" : "return value/1000;"
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideLastInterval" : false,
              "hideQuickInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1648781999000,
                  "endTimeMs" : 1680317999000
                },
                "interval" : 63245000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : true,
              "timeWindows" : [ "12M", "Ano" ],
              "timeWindowsUnits" : "month,month",
              "initialTimeWindow" : "12M",
              "showContractedDemandCurves" : false,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "showRightScale" : false,
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: false,\n    callback: callback\n}\n\nreturn ticks",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            label += tooltipItem.yLabel.toLocaleString(\n                'pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n        \nfilter = function (tooltipItem, data) {return tooltipItem.value != \"NaN\"}\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n\n    }\n}\n\nreturn tooltip",
              "stacked" : true,
              "roundToUnit" : true,
              "showOverFlowInRed" : false,
              "sortLegendByLabel" : false,
              "roundingMethod" : "same",
              "showRightScale2" : false
            },
            "title" : "Consumo Total (MWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            }
          },
          "id" : "6e8641db-adff-499f-a7ee-7610ffdfe76e",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "e05d0a3a-a29d-4d63-84ef-6ab2d771e046" : {
          "type" : "timeseries",
          "sizeX" : 27,
          "sizeY" : 23,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy",
                "type" : "timeseries",
                "label" : "Potência",
                "color" : "#3c9ad8",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "minute" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 2,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "lineTension" : 0
                },
                "_hash" : 0.8267823156024017,
                "postFuncBody" : "return Math.round(value*4);"
              } ],
              "entityAliasId" : "0b4da799-9c06-9418-2fa4-bf9afe91cc2e"
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1659028499000,
                  "endTimeMs" : 1659113100000
                },
                "interval" : 5356800
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 50000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : false,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : false,
              "timeWindows" : [ "Hoje", "24H", "7D", "Mes", "30D" ],
              "showLeftScale" : true,
              "leftScaleTicks" : "callback = function(value, index, values) {\nreturn value.toLocaleString('pt-BR', {\nstyle: 'decimal',\nmaximumFractionDigits: 1,\nminimumSignificantDigits: 2\n});\n}\nticks = {\nbeginAtZero: true,\ncallback: callback\n}\nreturn ticks",
              "initialTimeWindow" : "24H",
              "timeWindowsUnits" : "minute,minute,minute,minute,minute",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            label += tooltipItem.yLabel.toLocaleString(\n                'pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 1,\n                    //minimumSignificantDigits: 3\n                });\n            return label;\n        }\n        \nfilter = function (tooltipItem, data) {return tooltipItem.value != \"NaN\"}\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n    }\n}\n\nreturn tooltip",
              "stacked" : true
            },
            "title" : "Potência (kW)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "e05d0a3a-a29d-4d63-84ef-6ab2d771e046",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "2b3fa733-b28e-43bb-81cb-66cb844de7fa" : {
          "type" : "timeseries",
          "sizeX" : 27,
          "sizeY" : 23,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy_day_sum",
                "type" : "timeseries",
                "label" : "Geração",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "aggUnit" : [ "day" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "Stack0"
                },
                "_hash" : 0.040219466505192925,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "Active Energy_hour_sum",
                "type" : "timeseries",
                "label" : "Geração",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "Stack0",
                  "aggUnit" : [ "hour" ]
                },
                "_hash" : 0.8740100839991156,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "Active Energy_month_sum",
                "type" : "timeseries",
                "label" : "Geração",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ "month" ]
                },
                "_hash" : 0.09957695826280699,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "Active Energy_year_sum",
                "type" : "timeseries",
                "label" : "Geração",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ ]
                },
                "_hash" : 0.520745973724257,
                "postFuncBody" : "return Math.round(value);"
              } ],
              "entityAliasId" : "0b4da799-9c06-9418-2fa4-bf9afe91cc2e"
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1658545199000,
                  "endTimeMs" : 1659149999000
                },
                "interval" : 63072000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : false,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : true,
              "timeWindows" : [ "24H", "7D", "30D", "Mes", "12M", "Ano" ],
              "timeWindowsUnits" : "hour,day,day,day,month,month,year",
              "initialTimeWindow" : "7D",
              "showContractedDemandCurves" : false,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "showRightScale" : false,
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: false,\n    callback: callback\n}\n\nreturn ticks",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            label += tooltipItem.yLabel.toLocaleString(\n                'pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n        \nfilter = function (tooltipItem, data) {return tooltipItem.value != \"NaN\"}\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n\n    }\n}\n\nreturn tooltip",
              "stacked" : true,
              "roundToUnit" : true
            },
            "title" : "Geração de Energia (kWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            }
          },
          "id" : "2b3fa733-b28e-43bb-81cb-66cb844de7fa",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "33d501b5-d269-4b81-8174-9e91d34f3ca9" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh_average_year",
                "type" : "timeseries",
                "label" : "fat_consumo_kwh_average_year",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.10255728674114684,
                "postFuncBody" : "unit = \"kWh\";\nif (value >= 1000) {\n\tvalue /= 1000;\t// to MWh\n\tunit = \"MWh\";\n    if (value >= 1000) {\n    \tvalue /= 1000;\t// to GWh\n    \tunit = \"GWh\";\n    }\n}\n\ns = value.toLocaleString('pt-BR', { style: 'decimal', minimumSignificantDigits: 3, maximumSignificantDigits: 3});\nreturn s + \" \" + unit;\n"
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#ffffff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <div layout=\"column\" class=\"main\">\n        <div class=\"value\">${fat_consumo_kwh_average_year}</div>\n    </div>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Consumo Anual (est.)",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "33d501b5-d269-4b81-8174-9e91d34f3ca9",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "d033f9fd-5a26-4c28-859b-8327d5c97931" : {
          "type" : "latest",
          "sizeX" : 27,
          "sizeY" : 13,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_saldo_creditos",
                "type" : "attribute",
                "label" : "fat_saldo_creditos",
                "color" : "#03a9f4",
                "settings" : { },
                "_hash" : 0.25350652558151854,
                "decimals" : 0,
                "postFuncBody" : "return Math.round(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}) + \" kWh\";"
              }, {
                "name" : "fat_consumo_kwh",
                "type" : "attribute",
                "label" : "fat_consumo_kwh",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.2786153892256611,
                "postFuncBody" : "return Math.round(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}) + \" kWh\";"
              }, {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.6161711642464689
              }, {
                "name" : "latitude",
                "type" : "attribute",
                "label" : "latitude",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.08308084040489416
              }, {
                "name" : "longitude",
                "type" : "attribute",
                "label" : "longitude",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.49429207630692495
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "nome",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.48174635570234536
              }, {
                "name" : "endereco",
                "type" : "attribute",
                "label" : "endereco",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.35837773529682626
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.41014038529010044
              }, {
                "name" : "estado",
                "type" : "attribute",
                "label" : "estado",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.10114765844929896
              } ],
              "entityAliasId" : "9394fcb0-5690-2125-55f9-6406f27c509d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "fitMapBounds" : true,
              "latKeyName" : "latitude",
              "lngKeyName" : "longitude",
              "showLabel" : false,
              "label" : "${nome}",
              "tooltipPattern" : "<b>${nome}</b><br/><br/><b>Endereço:</b> ${endereco}<br/><b>Cidade:</b> ${cidade} - ${estado} <br/><br/><b>Ultimo Consumo:</b> ${fat_consumo_kwh}<br/><b>Saldo de Créditos:</b> ${fat_saldo_creditos}",
              "markerImageSize" : 34,
              "useColorFunction" : false,
              "markerImages" : [ "tb-image;/api/images/system/map_marker_image_0.png", "tb-image;/api/images/system/map_marker_image_1.png", "tb-image;/api/images/system/map_marker_image_2.png", "tb-image;/api/images/system/map_marker_image_3.png" ],
              "useMarkerImageFunction" : false,
              "colorFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'colorpin') {\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120 * 100;\n\t    return tinycolor.mix('blue', 'red', amount = percent).toHexString();\n\t}\n\treturn 'blue';\n}\n",
              "markerImageFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'thermomether') {\n\tvar res = {\n\t    url: images[0],\n\t    size: 40\n\t}\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120;\n\t    var index = Math.min(3, Math.floor(4 * percent));\n\t    res.url = images[index];\n\t}\n\treturn res;\n}",
              "color" : "#fe7569",
              "mapProvider" : "OpenStreetMap.Mapnik",
              "showTooltip" : true,
              "autocloseTooltip" : true,
              "polygonKeyName" : "coordinates",
              "polygonOpacity" : 0.5,
              "polygonStrokeOpacity" : 1,
              "polygonStrokeWeight" : 1,
              "customProviderTileUrl" : "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
              "showTooltipAction" : "hover",
              "defaultCenterPosition" : "0,0",
              "zoomOnClick" : true,
              "showCoverageOnHover" : true,
              "animate" : true,
              "maxClusterRadius" : 80,
              "removeOutsideVisibleBounds" : true,
              "provider" : "openstreet-map",
              "mapPageSize" : 16384,
              "useClusterMarkers" : true
            },
            "title" : "Mapa Unidades Consumidoras",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : {
              "markerClick" : [ {
                "name" : "Detalhes da unidade",
                "icon" : "more_horiz",
                "type" : "openDashboardState",
                "targetDashboardStateId" : "solar_uc_popup",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_UC",
                "openInSeparateDialog" : true,
                "dialogTitle" : null,
                "dialogHideDashboardToolbar" : false,
                "dialogWidth" : null,
                "dialogHeight" : null,
                "openRightLayout" : null,
                "id" : "d012b33b-2f87-a516-7cae-a1f753138a4d"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "d033f9fd-5a26-4c28-859b-8327d5c97931",
          "typeFullFqn" : "system.maps_v2.openstreetmap"
        },
        "1ced5a29-2ed2-4ebd-a569-2b0c3908bb5f" : {
          "type" : "latest",
          "sizeX" : 54,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "weatherURL",
                "type" : "attribute",
                "label" : "weatherURL",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.013806468079423428
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.4519842899633788
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgb(0, 0, 0)",
            "padding" : "0",
            "settings" : {
              "theme" : "pure"
            },
            "title" : "Weather Widget",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "margin" : "",
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "1ced5a29-2ed2-4ebd-a569-2b0c3908bb5f",
          "typeFullFqn" : "tenant.teste.weather_widget_rodolfo_azevedo"
        },
        "a273885e-5d68-440c-b2ba-5d284d6339a1" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 23,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgba(255, 255, 255, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Usina",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Usinas do Cliente",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "48230aec-e803-e27d-3129-e2e9f331d1b2",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "Usina",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.5520453912007539,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~~ SEM NOME ~~\"    \n}\nreturn nome;"
              } ]
            } ],
            "enableDataExport" : false,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "id" : "1bcd40cc-9729-3bee-bef3-88b9eb0ea280",
                "name" : "Detalhes da unidade",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : null,
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Usina"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "a273885e-5d68-440c-b2ba-5d284d6339a1",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "67e5bd4b-5e7f-4567-89bc-39ccdcd44f52" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "alias",
                "type" : "attribute",
                "label" : "alias",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5671112303010537
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "serial",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5235226956368948,
                "postFuncBody" : "return \"SN: \" + value;"
              }, {
                "name" : "firmware_version",
                "type" : "attribute",
                "label" : "firmware_version",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.53024477538874
              }, {
                "name" : "last_telemetry",
                "type" : "attribute",
                "label" : "last_telemetry",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.5057664517123861
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.08753771580722458,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"-- SEM NOME --\"    \n}\nreturn nome;"
              }, {
                "name" : "potencia_nominal",
                "type" : "attribute",
                "label" : "potencia",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.35598535893113703,
                "postFuncBody" : "return value + \" kW\";"
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.4759066416403721
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgb(255, 255, 255)",
            "padding" : "10px",
            "settings" : {
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value {\n    font-size: 1.8vh;\n    font-weight: 300;\n}\n\n.card .title {\n    font-size: 2.0vh;\n    font-weight: bold;\n    color: #bdfbf8;\n}\n\n.card .description {\n    font-size: 14px;\n    color: #999;\n}\n",
              "cardHtml" : "<div class='card'>\n    <div class='content'>\n        <div class='column'>\n            <div class='title'>\n                ${description}\n            </div>    \n            <div class='value'>\n                ${cidade}<br />\n                Potência: ${potencia}\n            </div>    \n        </div>\n    </div>\n</div>\n"
            },
            "title" : "id_site_usina_gd",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "67e5bd4b-5e7f-4567-89bc-39ccdcd44f52",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "5ce1e602-64a1-4850-8ad3-45c9e3c84f7f" : {
          "type" : "static",
          "sizeX" : 64,
          "sizeY" : 2,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(0, 105, 92)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "tablist" : "[\n    {\"name\": \"Administração\", \"icon\": \"fa-address-card\", \"stateId\": \"adm_clientes\"},\n    {\"name\": \"Geração\", \"icon\": \"fa-arrow-circle-left\", \"stateId\": \"geracao_home\"},\n    {\"name\": \"Gráficos\", \"icon\": \"fa-cogs\", \"stateId\": \"geracao_site\"},\n    {\"name\": \"Relatórios\", \"icon\": \"fa-border-all\", \"stateId\": \"geracao_relatorios\"},\n    {\"name\": \"Unidades Consumidoras\", \"icon\": \"fa-project-diagram\", \"stateId\": \"geracao_ucs\"},\n    {\"name\": \"Configuração\", \"icon\": \"fa-cog\", \"stateId\": \"geracao_config\"}\n]\n"
            },
            "title" : "Tab Geracao",
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "5ce1e602-64a1-4850-8ad3-45c9e3c84f7f",
          "typeFullFqn" : "tenant.teste.tabs_permissions"
        },
        "544ffc5e-eeb4-6190-119d-b49a265f26bf" : {
          "type" : "latest",
          "sizeX" : 20,
          "sizeY" : 4,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "tenant",
                "type" : "attribute",
                "label" : "tenant",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.2617520319699962
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Default Tenant",
              "minLength" : 0,
              "isRequired" : true
            },
            "title" : "input_tab_principal",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "544ffc5e-eeb4-6190-119d-b49a265f26bf",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "1b3f13d6-9d5b-43c7-8487-c8b71ea7dc19" : {
          "type" : "timeseries",
          "sizeX" : 54,
          "sizeY" : 29,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Active Energy",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#35b89b",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack1",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.5321380468750005,
                "postFuncBody" : "return value*4;"
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1659150899000,
                  "endTimeMs" : 1659755699000
                },
                "interval" : 8640000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 50000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "realtimeChart" : true,
              "displayLegend" : false,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : true,
              "timeWindows" : [ "Hoje", "7D", "30D", "Mes" ],
              "showLeftScale" : true,
              "leftScaleTicks" : "callback = function(value, index, values) {\nreturn value.toLocaleString('pt-BR', {\nstyle: 'decimal',\nmaximumFractionDigits: 1,\nminimumSignificantDigits: 2\n});\n}\nticks = {\nbeginAtZero: true,\ncallback: callback\n}\nreturn ticks",
              "initialTimeWindow" : "7D",
              "timeWindowsUnits" : "minute,minute,minute,minute",
              "tooltipSettings" : "var tooltip = {\n    intersect: true,\n    mode: 'index',\n    position: 'nearest',\n    itemSort: function(a, b, data) {\n        //data.datasets[a.datasetIndex].label\n    },\n    callbacks: {\n\n        afterTitle: function(tooltipItem, object) {\n            var total = 0;\n            for (var i = 0; i < tooltipItem\n                .length; i++) {\n                index = tooltipItem[i].datasetIndex\n                if (object.datasets[index].type ==\n                    'bar') {\n                    total = total + (tooltipItem[i]['yLabel'] || 0)\n                }\n            }\n            //total = tooltipItem.map(yLabel).reduce(sum).toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0, minimumFractionDigits: 0}); \n            total = total.toLocaleString('pt-BR', {\n                style: 'decimal',\n                maximumFractionDigits: 0,\n                minimumFractionDigits: 0\n            });\n//            return \"Total: \" + total\n        },\n        label: function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            var value = tooltipItem.yLabel || 0\n            label += value\n                .toLocaleString('pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n    }\n}\n\nreturn tooltip",
              "stacked" : false,
              "sortLegendByLabel" : true,
              "roundToUnit" : true,
              "showContractedDemandCurves" : false,
              "showOverFlowInRed" : false,
              "roundingMethod" : "same",
              "showRightScale" : false,
              "showRightScale2" : false
            },
            "title" : "Potência (kW)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "1b3f13d6-9d5b-43c7-8487-c8b71ea7dc19",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "5dca850a-8745-4dab-8820-70bc7c81289f" : {
          "type" : "latest",
          "sizeX" : 13,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "last_interval_wh",
                "type" : "attribute",
                "label" : "last_interval_wh",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.3149444193856531,
                "postFuncBody" : "function formattedNumber1(x) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 1}); \n}\nfunction formattedNumber0(x) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0});\n}\n\nif (value > 250) {\n    return formattedNumber0(value*4)+' kW';\n}\n\nreturn formattedNumber0(value*4)+' kW';"
              }, {
                "name" : "last_interval_tou",
                "type" : "attribute",
                "label" : "last_interval_tou",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.1446508259518281
              }, {
                "name" : "last_interval_ts",
                "type" : "attribute",
                "label" : "last_interval_ts",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.036149217944347445,
                "postFuncBody" : "return moment.unix(value/1000).format('DD-MMM HH:mm');\n"
              }, {
                "name" : "last_interval_ts",
                "type" : "attribute",
                "label" : "last_interval_fromnow",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.20618239436840158,
                "postFuncBody" : "return moment(value).fromNow();"
              }, {
                "name" : "last_interval_ts",
                "type" : "attribute",
                "label" : "last_interval_old",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.38828228678053756,
                "postFuncBody" : "return moment().diff(value,'hours') > 4 ? true : false;"
              } ],
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${last_interval_wh} ${last_interval_tou}</div><br>\n        <footer>\n            <div class=\"additional-info\">${last_interval_ts}</div><br>\n            <div data-status=\"${last_interval_old}\" class=\"status additional-info\">${last_interval_fromnow}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Potência",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "5dca850a-8745-4dab-8820-70bc7c81289f",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "a192bb14-8d3b-4714-88e4-28739e74f0aa" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Active Energy_day_sum",
                "type" : "timeseries",
                "label" : "valor",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.1593727725006875,
                "postFuncBody" : "var d = new Date();\n\nif (value === null) {\n    return 0;\n}\n\nhoje = Math.floor((d.getTime()/1000)/86400);\ndia_dado = Math.floor((time/1000)/86400);\n\nif (dia_dado == hoje) { \n\n    // retorna o valor a ser apresentado\n    unit = \"kWh\";\n    if (value >= 1000) {\n    \tvalue /= 1000;\t// to MWh\n    \tunit = \"MWh\";\n    }\n    \n    s = value.toLocaleString('pt-BR', { style: 'decimal', minimumSignificantDigits: 3, maximumSignificantDigits: 3});\n    return s + \" \" + unit;\n\n}\nreturn \"\";",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#ffffff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Geração Hoje",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "a192bb14-8d3b-4714-88e4-28739e74f0aa",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "dec0aa99-31ab-4870-8289-d5e814b15642" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Active Energy_month_sum",
                "type" : "timeseries",
                "label" : "valor",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.1593727725006875,
                "postFuncBody" : "var d = new Date();\n\nif (value === null) {\n    return 0;\n}\n\nmes_hoje = d.getMonth();\nmes_dado = Math.round(Math.round(((Math.floor((time/1000)/86400)/365.25) % 1) * 365) / 30);\n\nif (mes_dado == mes_hoje) { \n\n    // retorna o valor a ser apresentado\n    unit = \"kWh\";\n    if (value >= 1000) {\n    \tvalue /= 1000;\t// to MWh\n    \tunit = \"MWh\";\n    }\n    \n    s = value.toLocaleString('pt-BR', { style: 'decimal', minimumSignificantDigits: 3, maximumSignificantDigits: 3});\n    return s + \" \" + unit;\n\n}\nreturn \"\";",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#ffffff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Geração Mês",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "dec0aa99-31ab-4870-8289-d5e814b15642",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "f9847d57-7833-5356-8745-b8be172138ad" : {
          "type" : "static",
          "sizeX" : 11,
          "sizeY" : 1,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Carregando...</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: left;\n    justify-content: left;\n}"
            },
            "title" : "New HTML Card",
            "dropShadow" : false,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "f9847d57-7833-5356-8745-b8be172138ad",
          "typeFullFqn" : "system.cards.html_card"
        },
        "cca4a22b-b7eb-be15-acee-200d8b1f0382" : {
          "type" : "timeseries",
          "sizeX" : 45,
          "sizeY" : 9,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "pm_op_mode",
                "type" : "timeseries",
                "label" : "Operação",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.7610865486587479
              }, {
                "name" : "pm_fault_code",
                "type" : "timeseries",
                "label" : "Falha",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.9259304970852908
              } ],
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 300000,
                "timewindowMs" : 604800000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              },
              "hideAggregation" : true,
              "hideAggInterval" : true
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10
            },
            "title" : "Eventos",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : true,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "cca4a22b-b7eb-be15-acee-200d8b1f0382",
          "typeFullFqn" : "tenant.teste.egc_ts_table"
        },
        "a683e9bb-14a8-4370-a5b4-d313494ea8d1" : {
          "type" : "timeseries",
          "sizeX" : 28,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "m_demanda_mensal_ponta",
                "type" : "timeseries",
                "label" : "Ponta",
                "color" : "#ffab00",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack1",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.08277904512862033
              }, {
                "name" : "m_demanda_mensal_fora_ponta",
                "type" : "timeseries",
                "label" : "Fora Ponta",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.09957695826280699
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideLastInterval" : false,
              "hideQuickInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1648781999000,
                  "endTimeMs" : 1680317999000
                },
                "interval" : 63245000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : false,
              "timeWindows" : [ "12M", "Ano" ],
              "timeWindowsUnits" : "month,month",
              "initialTimeWindow" : "12M",
              "showContractedDemandCurves" : true,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: true,\n    callback: callback\n}\n\nreturn ticks",
              "tooltipSettings" : "// labelCallback = function(tooltipItem, data) {\n//             var label = data.datasets[tooltipItem\n//                 .datasetIndex].label || '';\n\n//             if (label) {\n//                 label += ': ';\n//             }\n//             label += tooltipItem.yLabel.toLocaleString(\n//                 'pt-BR', {\n//                     style: 'decimal',\n//                     maximumFractionDigits: 0,\n//                     minimumFractionDigits: 0\n//                 });\n//             return label;\n//         }\n        \n// filter = function (tooltipItem, data) {return tooltipItem.value != \"NaN\"}\n\n// tooltip = {\n//     intersect: false,\n//     mode: 'index',\n//     filter: filter,\n//     callbacks: {\n//         label: labelCallback,\n\n//     }\n// }\n\n// return tooltip\n\n\n\n\n\nlabelCallback = function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            decimal_places = label.includes('Temperatura') ? 1 : 0\n            suffix = label.includes('Temperatura') ? ' °C' : ' kW'\n            label += tooltipItem.yLabel.toLocaleString(\n                'pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: decimal_places,\n                    minimumFractionDigits: decimal_places\n                })+ suffix;\n            return label;\n        }\n        \nfilter = function (tooltipItem, data) {return tooltipItem.value != \"NaN\"}\n\nafterBody = function(tooltipItem, data) {\n    \n    try { \n        var PontaIndex = 0\n        var ForaPontaIndex = 0\n        var ContractIndex = 0\n        var ContractPontaIndex = 0\n        var ContractForaPontaIndex = 0\n    \n        for (var i=0;i<tooltipItem.length;i++) {\n            switch (tooltipItem[i].datasetIndex) {\n                case ctx.PontaIndex: PontaIndex = i; break;\n                case ctx.ForaPontaIndex: ForaPontaIndex = i; break;\n                case ctx.ContractIndex: ContractIndex = i; break;\n                case ctx.ContractPontaIndex: ContractPontaIndex = i; break;\n                case ctx.ContractForaPontaIndex: ContractForaPontaIndex = i; break;\n            }\n        }\n        var index = PontaIndex+ForaPontaIndex\n        \n        if (ctx.settings.showContractedDemandCurves && ctx.aggregationUnit == 'minute') {\n            let ultr = tooltipItem[index].yLabel - tooltipItem[ContractIndex].yLabel\n            if (ultr > tooltipItem[ContractIndex].yLabel*0.05) {\n                return 'Ultrapassagem: '+ultr.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0, minimumFractionDigits: 0})+' kW'\n            }\n        } else {\n            let ultrP = tooltipItem[PontaIndex].yLabel - tooltipItem[ContractPontaIndex].yLabel\n            let ultrFP = tooltipItem[ForaPontaIndex].yLabel - tooltipItem[ContractForaPontaIndex].yLabel\n            let s = []\n            if (ultrP > tooltipItem[ContractPontaIndex].yLabel*0.05) {\n                s.push('Ultrapassagem Ponta: '+ultrP.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0, minimumFractionDigits: 0})+' kW')\n            }\n            if (ultrFP > tooltipItem[ContractForaPontaIndex].yLabel*0.05) {\n                s.push('Ultrapassagem Fora Ponta: '+ultrFP.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0, minimumFractionDigits: 0})+' kW')\n            }\n            return s\n        }\n    }\n    catch {\n        return ''\n    }\n\n}\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n        footer: afterBody\n    }\n}\n\nreturn tooltip",
              "stacked" : false,
              "roundToUnit" : true,
              "showOverFlowInRed" : true,
              "sortLegendByLabel" : false,
              "roundingMethod" : "same",
              "showRightScale" : false,
              "showRightScale2" : false
            },
            "title" : "Demanda (kW)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "0.4%",
              "padding-left" : "0.4%"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Comparações",
                "icon" : "compare",
                "useShowWidgetActionFunction" : true,
                "showWidgetActionFunction" : "var params = widgetContext.stateController.getStateParams()\nreturn params.admin\n",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "ssu_comp_cons_uc",
                "setEntityId" : true,
                "stateEntityParamName" : null,
                "openRightLayout" : false,
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "50d21aba-c29b-dcd8-e43e-dfa0570cd5f1"
              } ]
            }
          },
          "id" : "a683e9bb-14a8-4370-a5b4-d313494ea8d1",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "5ff312e9-a2b9-4641-b46c-ae889493dfab" : {
          "type" : "timeseries",
          "sizeX" : 26,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "temperature_month_avg",
                "type" : "timeseries",
                "label" : "Temperatura",
                "color" : "#843c0c",
                "settings" : {
                  "datasetHidden" : true,
                  "dummyDataSet" : false,
                  "yAxisID" : "right",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : true,
                  "axisPosition" : "right",
                  "axisMin" : 0,
                  "axisMax" : 40
                },
                "_hash" : 0.6429822860887298,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null,
                "aggregationType" : null
              }, {
                "name" : "meta_consumo_espelho",
                "type" : "timeseries",
                "label" : "Meta",
                "color" : "#f44336",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : true,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.7485901405459165,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null,
                "aggregationType" : null
              }, {
                "name" : "m_consumo_mensal_ponta",
                "type" : "timeseries",
                "label" : "Ponta",
                "color" : "#ffab00",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ "month" ]
                },
                "_hash" : 0.08277904512862033
              }, {
                "name" : "m_consumo_mensal_fora_ponta",
                "type" : "timeseries",
                "label" : "Fora Ponta",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ "month" ]
                },
                "_hash" : 0.09957695826280699
              }, {
                "name" : "meta_consumo_espelho_m2",
                "type" : "timeseries",
                "label" : "meta_consumo_espelho",
                "color" : "#607d8b",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "steppedLine" : "false",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.7426886245750892,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideLastInterval" : false,
              "hideQuickInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1648781999000,
                  "endTimeMs" : 1680317999000
                },
                "interval" : 63245000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : false,
              "timeWindows" : [ "12M", "Ano" ],
              "timeWindowsUnits" : "month,month",
              "initialTimeWindow" : "12M",
              "showContractedDemandCurves" : false,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "showRightScale" : false,
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: false,\n    callback: callback\n}\n\nreturn ticks",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            label += tooltipItem.yLabel.toLocaleString(\n                'pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n        \nfilter = function (tooltipItem, data) {return tooltipItem.value != \"NaN\"}\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n\n    }\n}\n\nreturn tooltip",
              "stacked" : true,
              "showOverFlowInRed" : false,
              "sortLegendByLabel" : false,
              "roundToUnit" : true,
              "roundingMethod" : "same",
              "showRightScale2" : false,
              "rightScaleTicks" : "ticks = {\n    beginAtZero: true\n}\n\nreturn ticks"
            },
            "title" : "Consumo (kWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Comparações",
                "icon" : "compare",
                "useShowWidgetActionFunction" : true,
                "showWidgetActionFunction" : "var params = widgetContext.stateController.getStateParams()\nreturn params.admin\n",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "ssu_comp_cons_uc",
                "setEntityId" : true,
                "stateEntityParamName" : null,
                "openRightLayout" : false,
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "e49df810-7566-427f-4696-6f8a8561171d"
              } ]
            }
          },
          "id" : "5ff312e9-a2b9-4641-b46c-ae889493dfab",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "0b085e8f-4b96-4086-bd4e-e00dc1606d23" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_total",
                "type" : "attribute",
                "label" : "fatura",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.5502882792356754,
                "decimals" : 2,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nif (value>100000) {\n    return \"R$ \"+formattedNumber(value, 0, 0);\n}\nreturn \"R$ \"+formattedNumber(value, 2, 2);"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${fatura}</div><br>\n        <footer>\n            <div class=\"additional-info\">${variacao}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}\n"
            },
            "title" : "Custo Distribuidora",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "4px",
              "padding-bottom" : "10px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "0b085e8f-4b96-4086-bd4e-e00dc1606d23",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "fbe45f95-a702-46df-9ee8-451ab462a9c6" : {
          "type" : "timeseries",
          "sizeX" : 28,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "m_consumo_mensal_fora_ponta",
                "type" : "timeseries",
                "label" : "Mês",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.9106578091742827,
                "postFuncBody" : "function timeConverter(UNIX_timestamp){\n  var a = new Date(UNIX_timestamp);\n  var months = ['Jan','Fev','Mar','Abr','Mai','Jun','Jul','Ago','Set','Out','Nov','Dez'];\n  var year = a.getFullYear() - 2000;\n  var month = months[a.getMonth()];\n  var time = month + '/' + year;\n  return time;\n}\n\nreturn timeConverter(time);",
                "usePostProcessing" : true,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "m_consumo_mensal_fora_ponta",
                "type" : "timeseries",
                "label" : "Cons.FP (kWh)",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n}\nreturn \"\";"
                },
                "_hash" : 0.4539793826271601,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "m_consumo_mensal_ponta",
                "type" : "timeseries",
                "label" : "Cons.Ponta (kWh)",
                "color" : "#f44336",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n}\nreturn \"\";"
                },
                "_hash" : 0.40458076889789574,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "m_demanda_mensal_fora_ponta",
                "type" : "timeseries",
                "label" : "Dem.FP (kW)",
                "color" : "#ffc107",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n}\nreturn \"\";"
                },
                "_hash" : 0.24000142012982884,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "m_demanda_mensal_ponta",
                "type" : "timeseries",
                "label" : "Dem.Ponta (kW)",
                "color" : "#607d8b",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n}\nreturn \"\";"
                },
                "_hash" : 0.19307372741121376,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "m_fator_carga_mensal",
                "type" : "timeseries",
                "label" : "Fator de Carga",
                "color" : "#9c27b0",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value > 0) {\n    return (Number(value)*100).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1})+\"%\";\n}\nreturn \"\";"
                },
                "_hash" : 0.8385886523155583,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ],
              "latestDataKeys" : null
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 311040000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 20000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : false,
              "defaultPageSize" : 24,
              "enableSearch" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "true",
              "showMilliseconds" : false,
              "useEntityLabel" : false,
              "hideEmptyLines" : false,
              "useRowStyleFunction" : false
            },
            "title" : "Dados Mensais (kW/kWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : false
          },
          "id" : "fbe45f95-a702-46df-9ee8-451ab462a9c6",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "07d35f75-4c95-41cd-b380-d2676ea8cb74" : {
          "type" : "static",
          "sizeX" : 64,
          "sizeY" : 2,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(0, 105, 92)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "tablist" : "[\n    {\"name\": \"Admin\", \"icon\": \"fa-address-card\", \"stateId\": \"adm_clientes\"},\n    {\"name\": \"Voltar\", \"icon\": \"fa-arrow-circle-left\", \"stateId\": \"ssu_home\"},\n    {\"name\": \"Geral\", \"icon\": \"fa-clipboard-list\", \"stateId\": \"ssu_geral_uc\"},\n    {\"name\": \"Faturas\", \"icon\": \"fa-file-invoice-dollar\", \"stateId\": \"ssu_faturas_uc\"},\n    {\"name\": \"M.Livre\", \"icon\": \"fa-code-fork\", \"stateId\": \"ssu_mlivre_uc\"},\n    {\"name\": \"Pot.Economia\", \"icon\": \"fa-search-dollar\", \"stateId\": \"ssu_pot_economia_uc\"},\n    {\"name\": \"Configuração\", \"icon\": \"fa-cog\", \"stateId\": \"ssu_config_uc\"},\n    {\"name\": \"Admin Only\", \"icon\": \"fa-cog\", \"stateId\": \"ssu_config_admin\"}\n]\n"
            },
            "title" : "Tab Geral sem Telemetria",
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "07d35f75-4c95-41cd-b380-d2676ea8cb74",
          "typeFullFqn" : "tenant.teste.tabs_permissions"
        },
        "90050a0f-ed64-4a36-8544-c8c278ed0c35" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "danfe_total_brl",
                "type" : "timeseries",
                "label" : "mlivre_brl",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.6047938212875195,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nreturn \"R$ \"+formattedNumber(value, 2, 2);"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${mlivre_brl}</div><br>\n        <footer>\n            <div class=\"additional-info\">${variacao}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Custo M.Livre",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "4px",
              "padding-bottom" : "10px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "90050a0f-ed64-4a36-8544-c8c278ed0c35",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "99f8f173-7fde-43a8-9b09-b96738399525" : {
          "type" : "latest",
          "sizeX" : 13,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_fator_carga",
                "type" : "attribute",
                "label" : "fator_carga",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.6279193034163248,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nreturn formattedNumber(value, 1, 1)+\"%\";"
              }, {
                "name" : "fat_fator_carga_delta",
                "type" : "attribute",
                "label" : "variacao2",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.9794785017744654,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nvar sinal=\"+\";\nif (value<0) {\n    sinal=\"-\";\n}\nreturn sinal+formattedNumber(Math.abs(value), 1, 1)+\" pts versus mês anterior\";",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${fator_carga}</div><br>\n        <footer>\n            <div class=\"additional-info\">${variacao2}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Fator de Carga",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "4px",
              "padding-bottom" : "10px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "99f8f173-7fde-43a8-9b09-b96738399525",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "3dfbe9ca-abfd-4419-9435-32a20e94e7de" : {
          "type" : "latest",
          "sizeX" : 19,
          "sizeY" : 10,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_total_reais",
                "type" : "attribute",
                "label" : "Consumo",
                "color" : "rgb(53, 184, 155)",
                "settings" : { },
                "_hash" : 0.648666580899071,
                "decimals" : 2
              }, {
                "name" : "fat_demanda_reais",
                "type" : "attribute",
                "label" : "Demanda",
                "color" : "rgb(58, 123, 182)",
                "settings" : { },
                "_hash" : 0.8873766781802654,
                "decimals" : 2
              }, {
                "name" : "fat_penalidades",
                "type" : "attribute",
                "label" : "Penalidades",
                "color" : "#aa6510",
                "settings" : {
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false
                },
                "_hash" : 0.6157843882687393,
                "decimals" : 2,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_outros_reais",
                "type" : "attribute",
                "label" : "Outros",
                "color" : "rgb(103, 192, 224)",
                "settings" : { },
                "_hash" : 0.33968915440155945,
                "decimals" : 2
              }, {
                "name" : "fat_impostos",
                "type" : "attribute",
                "label" : "Impostos",
                "color" : "rgb(235, 171, 84)",
                "settings" : { },
                "_hash" : 0.9536111649620986,
                "decimals" : 2
              }, {
                "name" : "danfe_total_brl",
                "type" : "timeseries",
                "label" : "M.Livre",
                "color" : "#d94e56",
                "settings" : {
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false
                },
                "_hash" : 0.4965065573394414,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "radius" : 1,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "innerRadius" : 0,
              "showLabels" : true,
              "stroke" : {
                "width" : 5
              },
              "tilt" : 1,
              "animatedPie" : false,
              "showTooltip" : true
            },
            "title" : "Última Fatura",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "4px",
              "padding-bottom" : "10px",
              "line-height" : "25px"
            },
            "enableDataExport" : false,
            "widgetStyle" : { },
            "useDashboardTimewindow" : true,
            "showLegend" : true,
            "legendConfig" : {
              "position" : "right",
              "showMin" : false,
              "showMax" : false,
              "showAvg" : false,
              "showTotal" : false
            },
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "3dfbe9ca-abfd-4419-9435-32a20e94e7de",
          "typeFullFqn" : "system.charts.pie"
        },
        "8434f40c-3ce3-4041-981b-a29263cb40c6" : {
          "type" : "timeseries",
          "sizeX" : 54,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "uc_url_conta",
                "type" : "timeseries",
                "label" : "Data",
                "color" : "#ff9800",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "function timeConverter(UNIX_timestamp){\n  var a = new Date(UNIX_timestamp);\n  var months = ['Jan','Fev','Mar','Abr','Mai','Jun','Jul','Ago','Set','Out','Nov','Dez'];\n  var year = a.getFullYear() - 2000;\n  var month = months[a.getMonth()];\n  var day = a.getDate();\n  var time = day + '-' +month + '-' + year;\n  return time;\n}\n\nvar html = timeConverter(rowData['Timestamp'])\nif (value !== undefined) {\n  html = ''+\n    '<html>'+\n    '<a href=\"'+value+'\" target=\"_blank\">'+timeConverter(rowData['Timestamp'])+'</a>'+\n    '</html>'\n}\nreturn html;"
                },
                "_hash" : 0.05420126743398446,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : null
              }, {
                "name" : "fat_consumo_total_reais",
                "type" : "timeseries",
                "label" : "Consumo",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.5349386412549832,
                "decimals" : 2,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_demanda_reais",
                "type" : "timeseries",
                "label" : "Demanda",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.399049714281585,
                "decimals" : 2,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_penalidades",
                "type" : "timeseries",
                "label" : "Penalidades",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.8483381531939747,
                "decimals" : 2,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_outros_reais",
                "type" : "timeseries",
                "label" : "Outros",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});",
                  "cellStyleFunction" : "return {align: \"center\", width: \"13%\"};"
                },
                "_hash" : 0.9990272823573612,
                "decimals" : 2,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_impostos",
                "type" : "timeseries",
                "label" : "Impostos",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});",
                  "cellStyleFunction" : "return {align: \"center\", width: \"13%\"};"
                },
                "_hash" : 0.6948599326691787,
                "decimals" : 2,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_custo_medio",
                "type" : "timeseries",
                "label" : "C. Médio",
                "color" : "#e91e63",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.21647096691418466,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_total",
                "type" : "timeseries",
                "label" : "Total Dist",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});",
                  "cellStyleFunction" : "return {align: \"center\", width: \"10%\"};"
                },
                "_hash" : 0.38617481896365846,
                "decimals" : 2,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_total_danfes",
                "type" : "timeseries",
                "label" : "Total Livre",
                "color" : "#ff9800",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (typeof value == 'undefined') {\n    return \"\"\n}\nreturn Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.5856196618636937,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : null
              }, {
                "name" : "fat_total_com_danfes",
                "type" : "timeseries",
                "label" : "Total",
                "color" : "#673ab7",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (typeof value == 'undefined') {\n    return \"\"\n}\nreturn Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});",
                  "cellStyleFunction" : "return {align: \"center\", width: \"10%\"};"
                },
                "_hash" : 0.5110513689125202,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ],
              "latestDataKeys" : null
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 172713600000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 20000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : false,
              "defaultPageSize" : 50,
              "enableSearch" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "true",
              "showMilliseconds" : false,
              "useEntityLabel" : false,
              "hideEmptyLines" : false,
              "useRowStyleFunction" : false
            },
            "title" : "Faturas de Energia",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "4px",
              "padding-bottom" : "15px",
              "line-height" : "18px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : {
              "headerButton" : [ {
                "name" : "Download das faturas",
                "icon" : "file_download",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "custom",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\n\nvar user = widgetContext.currentUser;\nvar userMail = user.sub\n\n//var url = 'https://solarhub.engecomp.io/be/pdf_export/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\nvar url = 'https://solarhub.engecomp.io/be/pdf_export_v2/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\n\nvar payload = createJSON();\n\nsend();\n\nfunction createJSON(UC) {\n    var payload = {};\n    //payload.devices = [];\n    payload.files = [];\n    payload.email = userMail\n    payload.UC = entityName.substring(3,entityName.length)\n    payload.utility = entityName.substring(0,2)\n\n    var file = {}\n    for (var i = 0; i < widgetContext.data.length; i++) {\n        if (widgetContext.data[i].dataKey.label == 'Data') {\n            for (var j=0; j < widgetContext.data[i].data.length ; j++){\n                file = {}\n                file.link = widgetContext.data[i].data[j][1]\n                file.month = moment(widgetContext.data[i].data[j][0],'x').format('MM/YYYY')\n                //payload.devices.push(widgetContext.data[i].data[j][1])\n                payload.files.push(file)\n            }\n        }\n    }\n    return payload\n}\n\n\nfunction send() {\n\n    let formData = new FormData();    \n    formData.append(\"payload\", JSON.stringify( payload ))\n\n    var fetchParams = { method: \"POST\", body: formData }\n    \n    fetch(url, fetchParams).then(function(r) {\n        if (r.status == 200) {\n\n            return r.json().then(\n                function(data) {\n                    if (data.link && data.link.length > 0) {\n                        window.open(data.link,'_blank');\n                    }\n                    else {\n                        widgetContext.showSuccessToast('Sucesso. Um link será enviado para o seu e-mail', 3000)\n                    }\n                })\n        }\n        else {\n            widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n        }\n        \n    }); \n\n}\n",
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "2d452e15-9540-ff3d-657b-bd0499f6c2e0"
              } ]
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : false
          },
          "id" : "8434f40c-3ce3-4041-981b-a29263cb40c6",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "9565d000-aaf7-407d-8367-32334fedd5d7" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 23,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgb(255, 255, 255)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "enableSelectColumnDisplay" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "true",
              "displayEntityName" : false,
              "displayEntityLabel" : false,
              "displayEntityType" : false,
              "displayPagination" : false,
              "defaultSortOrder" : "Consumidor",
              "useRowStyleFunction" : false
            },
            "title" : "Tabela de Pontos UC",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "ea337dd3-3e20-573c-3268-117e79aee26d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "Consumidor",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "70%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.5889221504240929,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~~ SEM NOME ~~\"    \n}\nreturn nome;"
              }, {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "30%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.32020296738311727
              } ]
            } ],
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "name" : "change entity",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "custom",
                "customFunction" : "// var $injector = widgetContext.$scope.$injector;\nvar params = widgetContext.stateController.getStateParams()\nvar destination\nvar attributes = {}\n\nwidgetContext.attributeService.getEntityAttributes(entityId, \"SERVER_SCOPE\", [\"loja_espelho\"]).subscribe((r) => {\n    for (var i = 0; i < r.length; i++) {\n        var x = r[i].value\n        attributes[r[i].key] = x\n    }\n    \n    if (!params[\"Curr_Site\"]) {\n        params[\"Curr_Site\"] = {};\n    }\n    params[\"Curr_Site\"] = {entityId: entityId};\n    \n    if (attributes.hasOwnProperty(\"loja_espelho\")) {\n        if (!params[\"Site_Espelho\"]) {\n            params[\"Site_Espelho\"] = {};\n        }\n        params[\"Site_Espelho\"] = {entityId: {id: attributes.loja_espelho, entityType: \"DEVICE\"}};\n    }\n    \n    widgetContext.stateController.updateState(null, params, false);    \n})\n",
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "c5d1b936-ce6b-5a8e-8834-b9faf6e78d71"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : ".ng-star-inserted\r\n{\r\n  font-size: 1vh;\r\n}",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "id" : "9565d000-aaf7-407d-8367-32334fedd5d7",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "2dc837c5-e6da-42af-8885-d1421c623d83" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.08753771580722458,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"-- SEM NOME --\"    \n}\nreturn nome;"
              }, {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5235226956368948,
                "postFuncBody" : "return \"UC: \" + value;"
              }, {
                "name" : "status_cliente",
                "type" : "attribute",
                "label" : "status_cliente",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.53024477538874,
                "postFuncBody" : "var dict = {\n    0: \"?Status? \",\n    1:\"Cativo\",\n    2:\"Livre\"\n};\nreturn dict[value];\n"
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "classe_tensao",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.5057664517123861,
                "postFuncBody" : "var dict = {\n    0:\"?Classe?\",\n    1:\"A1\",\n    2:\"A2\",\n    3:\"A3\",\n    4:\"A3a\",\n    5:\"A4\",\n    6:\"AS\",\n    7:\"B1\",\n    8:\"B2\",\n    9:\"B3\"\n};\nreturn dict[value];"
              }, {
                "name" : "enq_tarifario",
                "type" : "attribute",
                "label" : "enq_tarifario",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.6850701168426965,
                "postFuncBody" : "var dict = {\n    0:\"?Tarifa?\",\n    1:\"Azul\",\n    2:\"Verde\",\n    3:\"Convencional\",\n    4:\"Branca\"\n};\nreturn dict[value];"
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "utility",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5671112303010537,
                "postFuncBody" : "var url = 'https://solarhub.engecomp.io/res/utility_list.json?'+moment().format('MMDD');\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nvar obj = JSON.parse(Get(url));\nif (value == \"\") {\n    return \"Não definida\";\n}\nreturn obj[Math.floor(value)];",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "aggregationType" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgb(255, 255, 255)",
            "padding" : "10px",
            "settings" : {
              "cardHtml" : "<div class='card'>\n    <div class='content'>\n        <div class='column'>\n            <div class='title'>\n                ${description}\n            </div>    \n            <div class='value'>\n                ${UC}<br>\n                ${status_cliente} ${classe_tensao} ${enq_tarifario}<br>\n                ${utility}\n            </div>    \n        </div>\n    </div>\n</div>\n",
              "cardCss" : "@media screen and (max-width: 1366px)  {\n  /* Alterar o tamanho da fonte para monitores de 1366 x 768 pixels\n  and (max-height: 768px)*/\n  .card {\n    width: 200px;\n  }\n}\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value {\n    font-size: 1.7vh;\n    font-weight: 300;\n}\n\n.card .title {\n    font-size: 2.0vh;\n    font-weight: bold;\n    color: #bdfbf8;\n}\n\n.card .description {\n    font-size: 14px;\n    color: #999;\n}\n"
            },
            "title" : "id_site_uc",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Exportação de dados",
                "icon" : "file_download",
                "useShowWidgetActionFunction" : true,
                "showWidgetActionFunction" : "var params = widgetContext.stateController.getStateParams()\nreturn params.admin\n",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n     <div fxLayout=\"column\" fxLayout.gt-sm=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"20px\">\n         \n\n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"0\" fxFlexOrder.gt-sm=\"0\">\n          <mat-label>Data Inicial</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"sdStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n        \n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"1\" fxFlexOrder.gt-sm=\"1\">\n          <mat-label>Data Final</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"edStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n\n    </div>\n    \n    <div [fxShow]=\"!OK\" fxLayoutGap=\"20px\" style=\"color: red; font-weight: bold;\">ATENÇÃO: {{ errorMessage }}</div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nvar user = widgetContext.currentUser;\n\n\nvar url = 'https://solarhub.engecomp.io/be/uc_data_export/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\n\npayload = {\n    email: user.sub,\n    token: localStorage[\"jwt_token\"]\n}\n\npayload.search = {\n    entityFilter: widgetContext.defaultSubscription.configuredDatasources[0].entityFilter,\n    pageLink: {\n        page: 0,\n        pageSize: 1000,\n        textSearch: null,\n        dynamic: false,\n        sortOrder: {\n          key: {\n            key: \"name\",\n            type: \"ENTITY_FIELD\"\n          },\n          direction: \"ASC\"\n        }\n      },\n    entityFields: [\n        {\n          key: \"name\",\n          type: \"ENTITY_FIELD\"\n        }\n      ],\n    latestValues: [\n        {\n          key: \"description\",\n          type: \"ATTRIBUTE\"\n        }\n      ]\n}\n\n\nshowInfoDialog()\n\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    \n    let vm = instance;   \n    vm.OK = true\n\n    vm.importTitle = 'Exportação de dados'\n    \n    vm.ed = moment.utc().startOf('day').toDate();\n    vm.sd = moment(vm.ed).subtract(1, 'month').toDate();\n\n    vm.sdStr = moment(vm.sd).format('DD/MM/YYYY');\n    vm.edStr = moment(vm.ed).format('DD/MM/YYYY');\n    \n    vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY')\n    vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY')\n    \n    \n    vm.change = function() {\n\n        vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY HH:mm')\n        vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY HH:mm')\n        \n        var days = moment(vm.ed).diff(moment(vm.sd),\n            'days');\n            \n        if (!vm.sd._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data inicial inválida\"\n            return\n        }\n        \n        if (!vm.ed._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data final inválida\"\n            return\n        }\n\n        //check start date greater than end date\n        if (days < 0) {\n            vm.OK = false;\n            vm.errorMessage =\n                \"Data inicial maior que data final\";\n            return;\n        }\n\n        vm.OK = true;\n    }\n\n    \n    vm.change()\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n\n        let formData = new FormData();\n        \n        sd = moment(vm.sd).format('YYYY-MM-DD');\n        ed = moment(vm.ed).format('YYYY-MM-DD');\n        \n        payload.start_date = sd\n        payload.end_date = ed\n        payload.getnow = true\n        payload.use_case = \"ssu\"\n        \n        formData.append(\"payload\", JSON.stringify( payload ))\n        console.log(JSON.stringify( payload ))\n\n        var fetchParams = { method: \"POST\", body: formData }\n        \n        fetch(url, fetchParams).then(function(r) {\n            if (r.status == 200) {\n\n                return r.json().then(\n                    function(data) {\n                        if (data.link && data.link.length > 0) {\n                            window.open(data.link,'_blank');\n                        }\n                        else {\n                            widgetContext.showSuccessToast('Sucesso. Um link será enviado para o seu e-mail', 3000)\n                        }\n                    })\n            }\n            else {\n                widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n            }\n            \n        })\n        .catch(function(error) {\n            widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n        });\n  \n        vm.cancel();  \n        \n    }\n}\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "0c4fb320-d662-cd0d-f305-04d4e0ea26ed"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "2dc837c5-e6da-42af-8885-d1421c623d83",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "fbebe885-ce2d-4c9b-8c59-a82305c5cb9d" : {
          "type" : "timeseries",
          "sizeX" : 54,
          "sizeY" : 29,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "4658668c-deb7-d1e4-3bb5-86ced47d6e05",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fatw_consumption_m3",
                "type" : "timeseries",
                "label" : "Consumo",
                "color" : "#65baa7",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.7104218163968588,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideLastInterval" : false,
              "hideQuickInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1646103599000,
                  "endTimeMs" : 1677639599000
                },
                "interval" : 63245000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : false,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : false,
              "timeWindows" : [ "12M", "Ano" ],
              "timeWindowsUnits" : "month,month,year",
              "initialTimeWindow" : "12M",
              "showContractedDemandCurves" : false,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "showRightScale" : false,
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: false,\n    callback: callback\n}\n\nreturn ticks",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            label += tooltipItem.yLabel.toLocaleString(\n                'pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n        \nfilter = function (tooltipItem, data) {return tooltipItem.value != \"NaN\"}\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n\n    }\n}\n\nreturn tooltip",
              "stacked" : true,
              "roundToUnit" : true,
              "showOverFlowInRed" : false,
              "sortLegendByLabel" : false,
              "roundingMethod" : "nearest",
              "showRightScale2" : false
            },
            "title" : "Consumo (㎥)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "fbebe885-ce2d-4c9b-8c59-a82305c5cb9d",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "5e153973-603e-4cf5-b409-cf134afcee03" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "alias",
                "type" : "attribute",
                "label" : "alias",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5671112303010537
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "serial",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5235226956368948,
                "postFuncBody" : "return \"SN: \" + value;"
              }, {
                "name" : "firmware_version",
                "type" : "attribute",
                "label" : "firmware_version",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.53024477538874
              }, {
                "name" : "last_telemetry",
                "type" : "attribute",
                "label" : "last_telemetry",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.5057664517123861
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.08753771580722458,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"-- SEM NOME --\"    \n}\nreturn nome;"
              }, {
                "name" : "potencia_nominal",
                "type" : "attribute",
                "label" : "potencia",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.35598535893113703,
                "postFuncBody" : "return value + \" kW\";"
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.4759066416403721
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgb(255, 255, 255)",
            "padding" : "10px",
            "settings" : {
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value {\n    font-size: 1.7vh;\n    font-weight: 300;\n}\n\n.card .title {\n    font-size: 2.0vh;\n    font-weight: bold;\n    color: #bdfbf8;\n}\n\n.card .description {\n    font-size: 14px;\n    color: #999;\n}\n",
              "cardHtml" : "<div class='card'>\n    <div class='content'>\n        <div class='column'>\n            <div class='title'>\n                ${description}\n            </div>    \n            <div class='value'>\n                ${cidade}<br />\n                Potência: ${potencia}\n            </div>    \n        </div>\n    </div>\n</div>\n"
            },
            "title" : "id_site_usina_gd",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Donwload em massa",
                "icon" : "file_download",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n     <div fxLayout=\"column\" fxLayout.gt-sm=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"20px\">\n         \n\n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"0\" fxFlexOrder.gt-sm=\"0\">\n          <mat-label>Data Inicial</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"sdStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n        \n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"1\" fxFlexOrder.gt-sm=\"1\">\n          <mat-label>Data Final</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"edStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n\n    </div>\n    \n    <div [fxShow]=\"!OK\" fxLayoutGap=\"20px\" style=\"color: red; font-weight: bold;\">ATENÇÃO: {{ errorMessage }}</div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form md-input-container {\n    padding-right: 10px;\n}\n\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body md-autocomplete-wrap md-input-container {\n    height: 30px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n\n.relations-list.old-relations tb-entity-select tb-entity-autocomplete button {\n    display: none;\n} \n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form md-input-container {\n    padding-right: 10px;\n}\n\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body md-autocomplete-wrap md-input-container {\n    height: 30px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nvar user = widgetContext.currentUser\nvar userMail = user.sub\n\n//var url = 'https://solarhub.engecomp.io/data_export_form'\nvar url = 'https://solarhub.engecomp.io/be/gd_data_export/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\n\npayload = createJSON();\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;   \n    vm.OK = true\n\n    vm.importTitle = 'Exportação de dados'\n    \n    vm.ed = moment.utc().startOf('day').toDate();\n    vm.sd = moment(vm.ed).subtract(1, 'month').toDate();\n\n    // vm.ed = moment().startOf('day').toDate();\n    // vm.sd = moment(vm.ed).subtract(30, 'day').add(15,'minutes').toDate();\n\n    vm.sdStr = moment(vm.sd).format('DD/MM/YYYY');\n    vm.edStr = moment(vm.ed).format('DD/MM/YYYY');\n    \n    vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY')\n    vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY')\n    \n    \n    vm.change = function() {\n\n        vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY HH:mm')\n        vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY HH:mm')\n        \n        var days = moment(vm.ed).diff(moment(vm.sd),\n            'days');\n            \n        if (!vm.sd._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data inicial inválida\"\n            return\n        }\n        \n        if (!vm.ed._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data final inválida\"\n            return\n        }\n\n        //check start date greater than end date\n        if (days < 0) {\n            vm.OK = false;\n            vm.errorMessage =\n                \"Data inicial maior que data final\";\n            return;\n        }\n\n        vm.OK = true;\n    }\n\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = () => {\n        \n        debugger;\n\n        let formData = new FormData();\n        \n        // sd = moment(vm.sd).format('YYYY-MM-DD');\n        // ed = moment(vm.ed).format('YYYY-MM-DD');\n        \n        sdSend = vm.sd.toISOString().substring(0, 10)\n        edSend = vm.ed.toISOString().substring(0, 10)\n        \n        payload.start_date = sdSend\n        payload.end_date = edSend\n\n        formData.append(\"payload\", JSON.stringify( payload ))\n\n        var fetchParams = { method: \"POST\", body: formData }\n        \n        fetch(url, fetchParams).then(function(r) {\n            if (r.status == 200) {\n\n                return r.json().then(\n                    function(data) {\n                        if (data.link && data.link.length > 0) {\n                            window.open(data.link,'_blank');\n                        }\n                        else {\n                            widgetContext.showSuccessToast('Sucesso. Um link será enviado para o seu e-mail', 3000)\n                        }\n                    })\n            }\n            else {\n                widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n            }\n        }); \n        vm.cancel();  \n        \n    }\n\n}\n\nfunction createJSON() {\n    var payload = {};\n    payload.email = []\n    payload.email.push(userMail)\n    payload.plant_name = entityName\n\n    return payload\n}\n\n",
                "customResources" : [ ],
                "id" : "f2f1d922-a2b2-33b5-da70-d098ab82bf96"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "5e153973-603e-4cf5-b409-cf134afcee03",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "4dc187c7-98a7-4c15-88ae-bf2e87ce041a" : {
          "type" : "latest",
          "sizeX" : 64,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Ponto",
              "displayEntityName" : true,
              "displayEntityType" : false,
              "enableSelectColumnDisplay" : true,
              "displayEntityLabel" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Tabela de Pontos",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "ffaddc2f-20f2-387e-9b2a-e84653802171",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "Ponto",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "columnWidth" : "0px"
                },
                "_hash" : 0.22263768340744194,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~~ SEM NOME ~~\"    \n}\nreturn nome;"
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "Remota",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.8321127602164051
              }, {
                "name" : "firmware_version",
                "type" : "attribute",
                "label" : "Versão",
                "color" : "#ffc107",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('en-US', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2})"
                },
                "_hash" : 0.16741055228436275
              }, {
                "name" : "csq",
                "type" : "attribute",
                "label" : "Sinal",
                "color" : "#607d8b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.8544024770464009,
                "decimals" : null
              }, {
                "name" : "last_telemetry",
                "type" : "attribute",
                "label" : "Ult Conexão",
                "color" : "#e91e63",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return moment.unix(value/1000).format('DD-MMM HH:mm');"
                },
                "_hash" : 0.5415469805063744,
                "postFuncBody" : "",
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "last_telemetry",
                "type" : "attribute",
                "label" : "Status",
                "color" : "#ffeb3b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.3882020607307275,
                "postFuncBody" : "var d = new Date();\nvar h = d.getHours() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (h*3600)) { \n\n    // formata o valor a ser apresentado\n    return \"Ok\";\n\n}\nreturn \"Off line\";"
              }, {
                "name" : "apn",
                "type" : "attribute",
                "label" : "Operadora",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.20532911344910554
              }, {
                "name" : "ccid",
                "type" : "attribute",
                "label" : "Simcard",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.02915241040114447
              }, {
                "name" : "imei",
                "type" : "attribute",
                "label" : "IMEI",
                "color" : "#e91e63",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.7620483566779137
              }, {
                "name" : "ke",
                "type" : "attribute",
                "label" : "Cte",
                "color" : "#ffeb3b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.10545936164417147,
                "decimals" : 4
              }, {
                "name" : "up_time",
                "type" : "attribute",
                "label" : "Uptime",
                "color" : "#03a9f4",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.5424368930811185
              } ]
            } ],
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "id" : "abb075ef-2aee-1ec4-85f8-0b6da17e4647",
                "name" : "change entity",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "ssu_remota_detalhes",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Site"
              } ],
              "headerButton" : [ ]
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "4dc187c7-98a7-4c15-88ae-bf2e87ce041a",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "16c22fac-bdc6-4425-8e2f-de51059716f4" : {
          "type" : "timeseries",
          "sizeX" : 35,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "9372d9cb-e9ba-c2a0-1b4c-4316d7a28718",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_custo_medio",
                "type" : "timeseries",
                "label" : "Custo Médio",
                "color" : "#9a5ab3",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "right",
                  "chartType" : "line",
                  "dashedLine" : false,
                  "stackId" : "Stack1",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : true,
                  "axisPosition" : "right",
                  "axisTitle" : "Custo Médio (R$/MWh)",
                  "axisMin" : 200,
                  "axisMax" : 1000,
                  "lineTension" : 0,
                  "axisTickDecimals" : 0,
                  "axisTickSize" : 100
                },
                "_hash" : 0.6890256300148832,
                "units" : "R$ {} /MWh",
                "decimals" : 2
              } ]
            }, {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "9372d9cb-e9ba-c2a0-1b4c-4316d7a28718",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_fator_carga",
                "type" : "timeseries",
                "label" : "F.Carga",
                "color" : "#465d71",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "right2",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack2",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : true,
                  "axisPosition" : "right",
                  "axisMin" : 20,
                  "axisMax" : 100,
                  "axisTitle" : "F.Carga",
                  "axisTickDecimals" : 0,
                  "axisTickSize" : 10
                },
                "_hash" : 0.6693465393307587,
                "units" : "{}%",
                "decimals" : 1
              } ]
            }, {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "9372d9cb-e9ba-c2a0-1b4c-4316d7a28718",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_total_reais",
                "type" : "timeseries",
                "label" : "Consumo",
                "color" : "#35b89b",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.05172564850041583,
                "units" : "R$ {}",
                "decimals" : 2
              }, {
                "name" : "fat_demanda_reais",
                "type" : "timeseries",
                "label" : "Demanda",
                "color" : "#3a7bb6",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.6202374624460265,
                "units" : "R$ {}",
                "decimals" : 2
              }, {
                "name" : "fat_penalidades",
                "type" : "timeseries",
                "label" : "Penalidades",
                "color" : "#d94e56",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.2737581771441737,
                "units" : "R$ {}",
                "decimals" : 2
              }, {
                "name" : "fat_disponibilidade_valor_liq",
                "type" : "timeseries",
                "label" : "Disponibilidade",
                "color" : "#2ea58a",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "steppedLine" : "false",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.2940541131738814,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_outros_reais",
                "type" : "timeseries",
                "label" : "Outros",
                "color" : "#67c0e0",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.5816650977533395,
                "units" : "R$ {}",
                "decimals" : 2
              }, {
                "name" : "fat_impostos",
                "type" : "timeseries",
                "label" : "Impostos",
                "color" : "#ebab54",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.10408039859673668,
                "units" : "R$ {}",
                "decimals" : 2
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1633060799000,
                  "endTimeMs" : 1664596799000
                },
                "interval" : 63244800
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 2000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "allowDrilldown" : false,
              "timeWindows" : [ "12M", "Ano" ],
              "timeWindowsUnits" : "month,month",
              "initialTimeWindow" : "12M",
              "showContractedDemandCurves" : false,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "showRightScale" : true,
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: false,\n    callback: callback\n}\n\nreturn ticks",
              "stacked" : true,
              "sortLegendByLabel" : false,
              "axisLabel" : "Enter axis label here",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n        var decimals = ctx.decimals[tooltipItem\n            .datasetIndex];\n        var label = data.datasets[tooltipItem.datasetIndex]\n            .label || '';\n        var value = tooltipItem.yLabel.toLocaleString(\n            'pt-BR', {\n                style: 'decimal',\n                minimumFractionDigits: decimals,\n                maximumFractionDigits: decimals\n            });\n\n        try {\n            value = ctx.units[tooltipItem.datasetIndex]\n                .replace(/{}/g, value)\n        } catch (err) {}\n\n        var message = `${label}: ${value}`\n\n        return message;\n    },\n\n    filter = function(tooltipItem, data) {\n        return tooltipItem.value != \"NaN\"\n    }\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n\n    }\n}\n\nreturn tooltip\n\n",
              "rightScaleTicks" : "ticks = {\n    beginAtZero: true\n}\n\nreturn ticks",
              "showRightScale2" : true,
              "rightScaleTicks2" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'percent',\n            maximumFractionDigits: 0\n        });\n    }\n\n\nticks = {\n    beginAtZero: true,\n    callback: callback\n}\n\nreturn ticks",
              "roundToUnit" : true
            },
            "title" : "Histórico de Faturas",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Enviar fatura PDF",
                "icon" : "cloud_upload",
                "type" : "customPretty",
                "customHtml" : "<form #editDeviceForm=\"ngForm\" [formGroup] = 'fileAdd'\n      (ngSubmit)=\"send()\" style=\"width: 650px;\" >\n  <mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>Importar contas em PDF</h2>\n    <span fxFlex></span>\n    <button mat-button mat-icon-button\n            (click)=\"cancel()\"\n            type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div class = 'loading' *ngIf=\"loadingFiles\">\n        <div fxLayout = 'column'>\n            <mat-progress-spinner class=\"test\" mode = 'determinate' value = '{{progress}}' diameter=\"100\"></mat-progress-spinner>\n            <div>Aguarde...</div>\n        </div>\n    </div>\n    <div class=\"tb-container\">\n      <label class=\"action-title\">Arquivos PDF originais da concessionária</label>\n        <div class=\"action-file-select-container \">\n              <div class=\"action-file-clear-container\">\n                <button mat-button mat-icon-button color=\"primary\"\n                        type=\"button\"\n                        (click)=\"clearFile()\"\n                        class=\"action-file-clear-btn\"\n                        matTooltip=\"{{ 'action.remove' | translate }}\"\n                        matTooltipPosition=\"above\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </div>\n            <div class=\"drop-area action-flow-drop\">\n                <label for=\"file-input\">Arraste o arquivo ou clique aqui para selecionar</label>\n                <input class=\"file-input\" type=\"file\" id=\"file-input\" formControlName = 'controlInputField' multiple (change)=\"fileAdded($event.target.files)\">\n              </div>\n        </div>\n    </div>\n    <div class = 'file-info'>\n      <div *ngIf=\"!fileName\" class=\"cut-text\">Nenhum arquivo selecionado</div>\n      <div *ngIf=\"fileName\" class=\"cut-text\">{{ fileName }}</div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\">\n    <span fxFlex></span>\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button mat-raised-button color=\"primary\"\n            style=\"margin-right: 20px;\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || fileAdd.invalid\">\n      Import\n    </button>\n  </div>\n</form>",
                "customCss" : "\n.file-input{\n       display: none;\n}\n\n.action-flow-drop{\n     position: relative;\n    height: 100%;\n    overflow: hidden;\n    border: dashed 2px;\n    margin-left: 15px;\n}\n\n.action-flow-drop label{\n    display: flex;\n      flex-direction: column;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      font-size: 16px;\n      text-align: center;\n}\n\n.action-title{\n    display: block;\n    padding-bottom: 8px;\n    margin-left: 15px;\n    color: #8E8E8E;\n    font-size:12px;\n}\n\n.action-file-select-container{\n    position: relative;\n    width: 100%;\n    height: 100px;\n}\n\n.action-file-clear-container{\n    position: relative;\n    float: right;\n    width: 48px;\n    height: 100%;\n}\n\n.action-file-clear-btn{\n    top: 50%;\n    transform: translate(0%, -50%) !important;\n}\n\n.file-info{\n    margin-left: 15px;\n    margin-right: 15px;\n}\n\n.loading{\n    margin-top: 5px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    text-align: center;\n}\n\n.action-flow-drop label{\n    font-size: 25px;\n}",
                "customFunction" : "\nlet $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenEditDeviceDialog();\n\nfunction openEditDeviceDialog() {\n    customDialog.customDialog(htmlTemplate, EditDeviceDialogController).subscribe();\n}\n\nfunction EditDeviceDialogController(instance) {\n    let vm = instance;\n    vm.fileName = '';\n    vm.progress = 0;\n    vm.loadingFiles = false;\n    let url = 'https://solarhub.engecomp.io/invoices'\n    let user = widgetContext.currentUser;\n    let userMail = user.sub\n    let parent_id = widgetContext.stateController.getEntityId('Curr_customer')\n    \n     $( document ).ready(function() {\n        let form = $('.drop-area');\n        form.on('drag dragstart dragend dragover dragenter dragleave drop', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n        }).on('drop', function(e) {\n            vm.fileAdded(e.originalEvent.dataTransfer.files);\n        });\n    });\n    \n    vm.fileAdd = vm.fb.group({\n        file:[[], [vm.validators.required]],\n        controlInputField:''\n    });\n\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n    vm.clearFile = () => {\n        $(\".file-input\").value = \"\";\n        vm.fileName = '';\n        vm.fileAdd.patchValue({file: []})\n    }\n\n    vm.fileAdded = (files)=> {\n        for(let i = 0; i < files.length; i++){\n            let filetype=files[i].name.split('.').pop();\n            let filesize=files[i].size\n            if (filetype.toLowerCase() === 'pdf' && filesize < 1024*1024*4) {\n                let newFiles = vm.fileAdd.get('file').value\n                if(vm.fileAdd.get('file').value.length !== 0){\n                    vm.fileName += ' // ';\n                }\n                newFiles.push(files.item(i))\n                vm.fileAdd.patchValue({file: newFiles})\n                vm.fileName += files.item(i).name;\n            } else {\n                if (filetype.toLowerCase() !== 'pdf') {\n                    alert(files[i].name + \" tem extensão inválida\");\n                } else {\n                    alert(files[i].name + \" excede 4MB\");\n                }\n                \n            }\n        }\n        vm.fileAdd.get('controlInputField').patchValue('', {emitEvent: false});\n    }\n\n    vm.send = () =>\n    {\n        vm.loadingFiles = true;\n        for(let i=0; i < vm.fileAdd.get('file').value.length; i++) {\n            vm.progress = Math.round((i+1) / vm.fileAdd.get('file').value.length * 100)\n            let req = new XMLHttpRequest();\n            let formData = new FormData();\n            \n            var instructions = {\n                url: \"http://localhost:5000/gd\",\n                parent_id: widgetContext.stateController.getEntityId('Curr_Site'),\n                tenant: 'energy',\n                user: userMail\n            };\n            \n            formData.append(\"invoice\", vm.fileAdd.get('file').value[i]);\n            formData.append(\"instructions\", JSON.stringify( instructions ))\n            fetch(url, {method: \"POST\", body: formData}).then(function(r) {\n            });\n\n        }\n        vm.loadingFiles = false;\n        vm.cancel();\n    }\n}\n\n\n",
                "customResources" : [ ],
                "id" : "ceefe86e-7893-f899-80d9-46ca52afaea1"
              }, {
                "name" : "Simulação de faturas",
                "icon" : "help",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxfxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <mat-spinner [fxShow]=\"loading\" class=\"spinner_container\"></mat-spinner>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"20px\">\n        <mat-form-field layout-fill>\n            <mat-label>Subgrupo</mat-label>\n            <mat-select name=\"classe_tensao\" [(ngModel)]=\"attributes.classe_tensao\" (ngModelChange)=\"change()\">\n              <mat-option value=\"A4\">A4</mat-option>\n              <mat-option value=\"A3a\">A3a</mat-option>\n              <mat-option value=\"A3\">A3</mat-option>\n              <mat-option value=\"A2\">A2</mat-option>\n              <mat-option value=\"A1\">A1</mat-option>\n              <mat-option value=\"B3\">B3</mat-option>\n              <mat-option value=\"B2\">B2</mat-option>\n              <mat-option value=\"B1\">B1</mat-option>              \n            </mat-select><br>\n        </mat-form-field>\n        \n        <mat-form-field fxFlex class=\"mat-block\">\n            <mat-label>Modalidade tarifária</mat-label>\n            <mat-select name=\"modalidade\" [(ngModel)]=\"attributes.enq_tarifario\" (ngModelChange)=\"change()\">\n              <mat-option value=\"verde\">Verde</mat-option>\n              <mat-option value=\"azul\">Azul</mat-option>\n              <mat-option value=\"convencional\">Convencional</mat-option>\n              <mat-option value=\"branca\">Branca</mat-option>\n            </mat-select><br>\n        </mat-form-field>\n        \n        <mat-form-field fxFlex class=\"mat-block\">\n            <mat-label>Amb. contratação</mat-label>\n            <mat-select name=\"ambiente\" [(ngModel)]=\"attributes.status_cliente\" (ngModelChange)=\"change()\">\n              <mat-option value=\"cativo\">Cativo</mat-option>\n              <mat-option value=\"livre\">Livre</mat-option>\n            </mat-select><br>\n        </mat-form-field>\n    </div>\n    \n     <div fxLayout=\"column\" fxLayout.gt-sm=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"20px\">\n         \n\n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"0\" fxFlexOrder.gt-sm=\"0\">\n          <mat-label>Data Inicial</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"sdStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n        \n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"1\" fxFlexOrder.gt-sm=\"1\">\n          <mat-label>Data Final</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"edStr\" (ngModelChange)=\"change()\" name=\"ed\">\n        </mat-form-field>\n\n    </div>\n    \n    <div fxLayout=\"column\" [fxShow]=\"cliente_livre\" fxLayoutGap=\"30px\">\n        <mat-checkbox [(ngModel)]=\"energia_cliente_livre\" (ngModelChange)=\"change()\">\n            Calcular custo da energia (TE)\n        </mat-checkbox>\n        \n         <mat-checkbox [(ngModel)]=\"ICMS_energia_cliente_livre\" [disabled]=\"energia_cliente_livre\" (ngModelChange)=\"change()\">\n            Cobrar ICMS/PIS/COFINS da energia do mercado livre<br>na conta da distribuidora\n        </mat-checkbox>                           \n    </div>\n    \n    <br><div [fxShow]=\"!OK\" fxLayoutGap=\"20px\" style=\"color: red; font-weight: bold;\">ATENÇÃO: {{ errorMessage }}</div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(!OK || (isLoading$ | async))\">\n        Enviar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>\n",
                "customCss" : ".spinner_container {\n    border-radius: 10px;\n    height: 70px;\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    transform: translate(-50%,-50%);\n    width: 70px;\n    z-index: 3;\n    opacity: 0.5;\n}",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap\n    .get('customDialog'));\nlet attributeService = $injector.get(widgetContext\n    .servicesMap.get('attributeService'));\nlet deviceService = $injector.get(widgetContext.servicesMap\n    .get('deviceService'));\n\nparams = widgetContext.stateController.getStateParams()\nrtu = params.Curr_Site.entityId\n\nvar r = deviceService.getDevice(rtu.id);\nr.subscribe((r) => {\n    deviceName = r.name\n})\n\ndict = {\n    status_cliente: {\n        0: \"Não definido\",\n        1: \"cativo\",\n        2: \"livre\"\n    },\n    enq_tarifario: {\n        0: \"Não definida\",\n        1: \"azul\",\n        2: \"verde\",\n        3: \"convencional\",\n        4: \"branca\"\n    },\n    classe_tensao: {\n        0: \"Não definida\",\n        1: \"A1\",\n        2: \"A2\",\n        3: \"A3\",\n        4: \"A3a\",\n        5: \"A4\",\n        6: \"AS\",\n        7: \"B1\",\n        8: \"B2\",\n        9: \"B3\"\n    }\n}\n\nvar locale = window.navigator.userLanguage || window\n    .navigator.language;\nmoment.locale(locale);\nwidgetContext.date.locale = locale\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate,\n        InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;\n\n    vm.attributes = {}\n    vm.OK = true\n    vm.loading = false\n    vm.importTitle = 'Simulação de fatura';\n\n\n    vm.diffAttrs = ['status_cliente', 'classe_tensao',\n        'enq_tarifario'\n    ]\n    if (vm.diffAttrs.length > 0) {\n\n        var response = attributeService.getEntityAttributes(\n            rtu, 'SERVER_SCOPE', vm.diffAttrs);\n        response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = dict[r[i].key][r[i].value]\n                vm.attributes[r[i].key] = x\n            }\n            vm.change()\n        })\n\n    }\n\n    // for (var i = 0; i < widgetContext.data.length; i++) {\n    //     if (!vm.diffAttrs.includes(widgetContext.data[i]\n    //             .dataKey.name)) {\n    //         var x = widgetContext.data[i].data[0][1]\n    //         vm.attributes[widgetContext.data[i].dataKey\n    //             .name] = x\n    //     }\n    // }\n\n    vm.ed = moment().startOf('day').toDate();\n    vm.sd = moment(vm.ed).subtract(30, 'day').add(15,'minutes').toDate();\n\n    vm.sdStr = moment(vm.sd).format('DD/MM/YYYY HH:mm');\n    vm.edStr = moment(vm.ed).format('DD/MM/YYYY HH:mm');\n    \n    vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY HH:mm')\n    vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY HH:mm')\n    vm.cliente_livre = false\n    \n\n    vm.energia_cliente_livre = true;\n    vm.ICMS_energia_cliente_livre = true;\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.change = function() {\n        \n        debugger;\n\n        vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY HH:mm')\n        vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY HH:mm')\n        \n        var days = moment(vm.ed).diff(moment(vm.sd),\n            'days');\n            \n        if (vm.attributes.status_cliente == 'livre') {\n            vm.cliente_livre = true\n        } else {\n            vm.cliente_livre = false\n        }\n            \n        if (!vm.sd._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data inicial inválida\"\n            return\n        }\n        \n        if (!vm.ed._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data final inválida\"\n            return\n        }\n\n        if (vm.attributes.status_cliente == 'cativo') {\n            vm.energia_cliente_livre = true;\n            vm.ICMS_energia_cliente_livre = true;\n        }\n\n        if (vm.energia_cliente_livre) {\n            vm.ICMS_energia_cliente_livre = true;\n        }\n\n        //check start date greater than end date\n        if (days < 0) {\n            vm.OK = false;\n            vm.errorMessage =\n                \"Data inicial maior que data final\";\n            return;\n        }\n\n        //check timewindow days\n        //if (days > 33 || days < 27) {\n        //    vm.OK = false\n        //    vm.errorMessage = \"Simulação deve ter entre 27 e 33 dias.\"\n        //    return\n        //}\n\n        vm.OK = true;\n    }\n    \n    vm.send = function() {\n        \n        // sdSend = vm.sd.format('YYYY-MM-DDTHH:mm:ss')\n        // edSend = vm.ed.format('YYYY-MM-DDTHH:mm:ss')\n        sdSend = vm.sd.toISOString().substring(0, 19)\n        edSend = vm.ed.toISOString().substring(0, 19)\n        \n        ICMS_energia_cliente_livre = vm.ICMS_energia_cliente_livre\n        energia_cliente_livre = vm.energia_cliente_livre\n\n        if (vm.attributes.status_cliente == 'cativo') {\n            ambiente = '';\n            ICMS_energia_cliente_livre = true\n            energia_cliente_livre = true\n        } else {\n            ambiente = '&livre';\n        }\n\n        url =\n            `https://solarhub.engecomp.io/fatura_simulada_ws/ca92ecde-2ffb-4ffa-8285-6f0ca2831e42?device=${deviceName}&sd=${sdSend}&ed=${edSend}&classe=${vm.attributes.classe_tensao}&modalidade=${vm.attributes.enq_tarifario}&energia_ml=${vm.energia_cliente_livre}&impostos_energia_ml=${vm.ICMS_energia_cliente_livre}&of=fine${ambiente}&exact_dates`;\n\n        vm.loading = true\n        fetch(url, {\n            method: \"GET\"\n        }).then(function(r) {\n            html = r.text().then(function(\n            data) {\n                var win = window.open(\n                    \"\", \"_blank\");\n                win.name = \"Simulação\";\n                win.document.body\n                    .innerHTML = data;\n                vm.loading = false\n            })\n        })\n    }\n\n}",
                "customResources" : [ ],
                "id" : "fec4e198-7384-d1d6-e254-70ac9ee695fb"
              } ]
            }
          },
          "id" : "16c22fac-bdc6-4425-8e2f-de51059716f4",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "c6acd852-e005-4801-81ee-f4131b630cc7" : {
          "type" : "timeseries",
          "sizeX" : 29,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_consumo_total_reais",
                "type" : "timeseries",
                "label" : "Consumo",
                "color" : "#35b89b",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.05172564850041583,
                "units" : "R$ {}",
                "decimals" : 2
              }, {
                "name" : "fat_penalidades",
                "type" : "timeseries",
                "label" : "Penalidades",
                "color" : "#d94e56",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.2737581771441737,
                "units" : "R$ {}",
                "decimals" : 2
              }, {
                "name" : "fat_outros_reais",
                "type" : "timeseries",
                "label" : "Outros",
                "color" : "#67c0e0",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.5816650977533395,
                "units" : "R$ {}",
                "decimals" : 2
              }, {
                "name" : "fat_impostos",
                "type" : "timeseries",
                "label" : "Impostos",
                "color" : "#ebab54",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.10408039859673668,
                "units" : "R$ {}",
                "decimals" : 2
              } ],
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278"
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1641005999000,
                  "endTimeMs" : 1672541999000
                },
                "interval" : 63244800
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 2000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "allowDrilldown" : false,
              "timeWindows" : [ "12M", "Ano" ],
              "timeWindowsUnits" : "month,month",
              "initialTimeWindow" : "12M",
              "showContractedDemandCurves" : false,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "showRightScale" : true,
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: false,\n    callback: callback\n}\n\nreturn ticks",
              "stacked" : true,
              "sortLegendByLabel" : false,
              "axisLabel" : "Enter axis label here",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n        var decimals = ctx.decimals[tooltipItem\n            .datasetIndex];\n        var label = data.datasets[tooltipItem.datasetIndex]\n            .label || '';\n        var value = tooltipItem.yLabel.toLocaleString(\n            'pt-BR', {\n                style: 'decimal',\n                minimumFractionDigits: decimals,\n                maximumFractionDigits: decimals\n            });\n\n        try {\n            value = ctx.units[tooltipItem.datasetIndex]\n                .replace(/{}/g, value)\n        } catch (err) {}\n\n        var message = `${label}: ${value}`\n\n        return message;\n    },\n\n    filter = function(tooltipItem, data) {\n        return tooltipItem.value != \"NaN\"\n    }\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n\n    }\n}\n\nreturn tooltip\n\n",
              "rightScaleTicks" : "ticks = {\n    beginAtZero: true\n}\n\nreturn ticks",
              "showRightScale2" : true,
              "rightScaleTicks2" : "ticks = {\n    beginAtZero: true\n}\n\nreturn ticks"
            },
            "title" : "Histórico de Faturas R$",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            }
          },
          "id" : "c6acd852-e005-4801-81ee-f4131b630cc7",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "958e2d9f-7a8c-4b36-8d1a-27c9a3540f0d" : {
          "type" : "timeseries",
          "sizeX" : 27,
          "sizeY" : 16,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "Consumo",
                "color" : "#f44336",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.028088852031393108,
                "postFuncBody" : "return Math.round(value);",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_energia_creditada",
                "type" : "timeseries",
                "label" : "Créditos",
                "color" : "#04bd53",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.46766385383799847,
                "postFuncBody" : "return Math.round(value);",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_saldo_creditos",
                "type" : "timeseries",
                "label" : "Saldo de Créditos",
                "color" : "#ffc107",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.44353171969496286,
                "postFuncBody" : "return Math.round(value);",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "pm_wh_produced_delta_month_sum",
                "type" : "timeseries",
                "label" : "Geração Usina",
                "color" : "#32587f",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : true,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.3415450201119501,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return Math.round(value);"
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1641005999000,
                  "endTimeMs" : 1672541999000
                },
                "interval" : 63244800
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 50000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : false,
              "timeWindows" : [ "12M" ],
              "showLeftScale" : true,
              "leftScaleTicks" : "callback = function(value, index, values) {\nreturn value.toLocaleString('pt-BR', {\nstyle: 'decimal',\nmaximumFractionDigits: 1,\nminimumSignificantDigits: 2\n});\n}\nticks = {\nbeginAtZero: true,\ncallback: callback\n}\nreturn ticks",
              "initialTimeWindow" : "12M",
              "timeWindowsUnits" : "month, month",
              "tooltipSettings" : "var tooltip = {\n    intersect: true,\n    mode: 'index',\n    position: 'nearest',\n    itemSort: function(a, b, data) {\n        //data.datasets[a.datasetIndex].label\n    },\n    callbacks: {\n\n        label: function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            var value = tooltipItem.yLabel || 0\n            label += value\n                .toLocaleString('pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n    }\n}\n\nreturn tooltip",
              "stacked" : false,
              "sortLegendByLabel" : false,
              "roundToUnit" : true,
              "showContractedDemandCurves" : false,
              "showOverFlowInRed" : false,
              "roundingMethod" : "nearest",
              "showRightScale" : false,
              "showRightScale2" : false
            },
            "title" : "Balanço Consumo x Créditos (kWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "958e2d9f-7a8c-4b36-8d1a-27c9a3540f0d",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "836223d2-b63e-4ea6-a765-0b973ae08f0e" : {
          "type" : "timeseries",
          "sizeX" : 38,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "Consumo",
                "color" : "#f44336",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 5,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.028088852031393108,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "fat_energia_creditada",
                "type" : "timeseries",
                "label" : "Créditos",
                "color" : "#04bd53",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 5,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.46766385383799847,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "fat_saldo_creditos",
                "type" : "timeseries",
                "label" : "Saldo de Créditos",
                "color" : "#ffc107",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 5,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.44353171969496286,
                "postFuncBody" : "return Math.round(value);"
              } ],
              "entityAliasId" : "84ebed45-55d1-5dae-aa6d-a9286128fbaa"
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1606791599000,
                  "endTimeMs" : 1638327599000
                },
                "interval" : 63154382
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 50000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : false,
              "timeWindows" : [ "12M" ],
              "showLeftScale" : true,
              "leftScaleTicks" : "callback = function(value, index, values) {\nreturn value.toLocaleString('pt-BR', {\nstyle: 'decimal',\nmaximumFractionDigits: 1,\nminimumSignificantDigits: 2\n});\n}\nticks = {\nbeginAtZero: true,\ncallback: callback\n}\nreturn ticks",
              "initialTimeWindow" : "12M",
              "timeWindowsUnits" : "month, month",
              "tooltipSettings" : "var tooltip = {\n    intersect: true,\n    mode: 'index',\n    position: 'nearest',\n    itemSort: function(a, b, data) {\n        //data.datasets[a.datasetIndex].label\n    },\n    callbacks: {\n\n        label: function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            var value = tooltipItem.yLabel || 0\n            label += value\n                .toLocaleString('pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n    }\n}\n\nreturn tooltip",
              "stacked" : false,
              "sortLegendByLabel" : false,
              "roundToUnit" : true
            },
            "title" : "Balanço Consumo x Créditos (kWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "836223d2-b63e-4ea6-a765-0b973ae08f0e",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "ff095c78-ba27-4cbc-b908-8d511bd098cc" : {
          "type" : "timeseries",
          "sizeX" : 22,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "temperature_hour_avg",
                "type" : "timeseries",
                "label" : "Temperatura",
                "color" : "rgb(132, 60, 12)",
                "settings" : {
                  "datasetHidden" : true,
                  "dummyDataSet" : false,
                  "yAxisID" : "right",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack9",
                  "aggUnit" : [ "minute" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 2,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : true,
                  "axisPosition" : "right",
                  "axisMin" : 0,
                  "axisMax" : 50,
                  "steppedLine" : "none",
                  "spanGaps" : true
                },
                "_hash" : 0.6631334577319796
              }, {
                "name" : "temperature_day_avg",
                "type" : "timeseries",
                "label" : "Temperatura",
                "color" : "rgb(132, 60, 12)",
                "settings" : {
                  "datasetHidden" : true,
                  "dummyDataSet" : false,
                  "yAxisID" : "right",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : true,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack9",
                  "aggUnit" : [ "day" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 2,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : true,
                  "axisPosition" : "right",
                  "axisMin" : 0,
                  "axisMax" : 50
                },
                "_hash" : 0.9017829791057073
              }, {
                "name" : "temperature_month_avg",
                "type" : "timeseries",
                "label" : "Temperatura",
                "color" : "rgb(132, 60, 12)",
                "settings" : {
                  "datasetHidden" : true,
                  "dummyDataSet" : false,
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : true,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack9",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 2,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : true,
                  "axisPosition" : "right",
                  "yAxisID" : "right",
                  "axisMin" : 0,
                  "axisMax" : 50
                },
                "_hash" : 0.2565008102637436
              }, {
                "name" : "Active Energy (P)_hour_sum",
                "type" : "timeseries",
                "label" : "Ponta",
                "color" : "#ffab00",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "aggUnit" : [ "hour" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "Stack0"
                },
                "_hash" : 0.992718145730128,
                "postFuncBody" : "return value;"
              }, {
                "name" : "Active Energy (FP)_hour_sum",
                "type" : "timeseries",
                "label" : "Fora Ponta",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "aggUnit" : [ "hour" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "Stack0"
                },
                "_hash" : 0.040219466505192925,
                "postFuncBody" : "return value;"
              }, {
                "name" : "Active Energy (HR)_hour_sum",
                "type" : "timeseries",
                "label" : "Reservado",
                "color" : "#35b89b",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "steppedLine" : "false",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "hour" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.7423664536445447,
                "postFuncBody" : "return value;"
              }, {
                "name" : "Active Energy (P)_day_sum",
                "type" : "timeseries",
                "label" : "Ponta",
                "color" : "#ffab00",
                "settings" : {
                  "contractedDemandCurves" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "Stack0",
                  "aggUnit" : "day"
                },
                "_hash" : 0.7462366332310844,
                "postFuncBody" : "return value;"
              }, {
                "name" : "Active Energy (FP)_day_sum",
                "type" : "timeseries",
                "label" : "Fora Ponta",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "Stack0",
                  "aggUnit" : [ "day" ]
                },
                "_hash" : 0.8740100839991156,
                "postFuncBody" : "return value;"
              }, {
                "name" : "Active Energy (HR)_day_sum",
                "type" : "timeseries",
                "label" : "Reservado",
                "color" : "#35b89b",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "steppedLine" : "false",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "day" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.7267285106657415,
                "postFuncBody" : "return value;"
              }, {
                "name" : "Active Energy (P)_month_sum",
                "type" : "timeseries",
                "label" : "Ponta",
                "color" : "#ffab00",
                "settings" : {
                  "contractedDemandCurves" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : "month"
                },
                "_hash" : 0.08277904512862033,
                "postFuncBody" : "return value;"
              }, {
                "name" : "Active Energy (FP)_month_sum",
                "type" : "timeseries",
                "label" : "Fora Ponta",
                "color" : "#3c9ad8",
                "settings" : {
                  "contractedDemandCurves" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : "month"
                },
                "_hash" : 0.09957695826280699,
                "postFuncBody" : "return value;"
              }, {
                "name" : "Active Energy (HR)_month_sum",
                "type" : "timeseries",
                "label" : "Reservado",
                "color" : "#35b89b",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "steppedLine" : "false",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.10918116977177084,
                "postFuncBody" : "return value;"
              }, {
                "name" : "Active Energy (P)_year_sum",
                "type" : "timeseries",
                "label" : "Ponta",
                "color" : "#ffab00",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ "year" ]
                },
                "_hash" : 0.2956687701306926,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "Active Energy (FP)_year_sum",
                "type" : "timeseries",
                "label" : "Fora Ponta",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ "year" ]
                },
                "_hash" : 0.520745973724257,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "Active Energy (HR)_year_sum",
                "type" : "timeseries",
                "label" : "Reservado",
                "color" : "#35b89b",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "steppedLine" : "false",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "year" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.01861562008108053,
                "postFuncBody" : "return value;"
              }, {
                "name" : "energy_forecast_simple_hour",
                "type" : "timeseries",
                "label" : "Média Hist.",
                "color" : "#e83e00",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : true,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "hour" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.04768818551546006,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            }, {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "9372d9cb-e9ba-c2a0-1b4c-4316d7a28718",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "Total (fat)",
                "color" : "#1a4866",
                "settings" : {
                  "datasetHidden" : true,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : true,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.6393480395796962,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1670986799000,
                  "endTimeMs" : 1671591599000
                },
                "interval" : 63072000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : true,
              "timeWindows" : [ "Hoje", "24H", "7D", "30D", "Mes", "12M", "Ano" ],
              "timeWindowsUnits" : "hour,hour,day,day,day,month,month",
              "initialTimeWindow" : "7D",
              "showContractedDemandCurves" : false,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "showRightScale" : true,
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: false,\n    suggestedMin: 0,\n    callback: callback\n}\n\nreturn ticks",
              "stacked" : true,
              "rightScaleTicks" : "ticks = {\n    beginAtZero: true\n}\n\nreturn ticks",
              "roundToUnit" : true,
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            decimal_places = label.includes('Temperatura') ? 1 : 0\n            label += tooltipItem.yLabel.toLocaleString(\n                'pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: decimal_places,\n                    minimumFractionDigits: decimal_places\n                });\n            return label;\n        }\n        \ntotalCallback = function(tooltipItem, object) {\n            if (tooltipItem.length <= 1) {\n                return \"\"\n            }\n            var total = 0;\n            for (var i = 0; i < tooltipItem\n                .length; i++) {\n                index = tooltipItem[i].datasetIndex\n                if (object.datasets[index].type ==\n                    'bar') {\n                    total = total + (tooltipItem[i]['yLabel'] || 0)\n                }\n            }\n            total = total.toLocaleString('pt-BR', {\n                style: 'decimal',\n                maximumFractionDigits: 0,\n                minimumFractionDigits: 0\n            });\n            return \"Total: \" + total\n        }\n        \nfilter = function (tooltipItem, data) {return tooltipItem.value != \"NaN\"}\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n        footer: totalCallback,\n    }\n}\n\nreturn tooltip",
              "showOverFlowInRed" : false,
              "sortLegendByLabel" : false,
              "roundingMethod" : "nearest",
              "showRightScale2" : false
            },
            "title" : "Consumo (kWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "id" : "dc929c0f-f49c-f76c-49c3-19758ffa6813",
                "name" : "Comparações",
                "icon" : "compare",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "ssu_comp_consumo",
                "setEntityId" : true
              }, {
                "name" : "Geração Distribuída",
                "icon" : "wb_sunny",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "ssu_gd",
                "setEntityId" : false,
                "stateEntityParamName" : null,
                "openRightLayout" : false,
                "id" : "a137a25e-7032-def6-a97f-20b17a957860"
              } ]
            }
          },
          "id" : "ff095c78-ba27-4cbc-b908-8d511bd098cc",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "7244a580-9da0-4da5-bf9c-ae020421fc30" : {
          "type" : "latest",
          "sizeX" : 36,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Unidade",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "entitiesTitle" : "Pontos de Geração",
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Tabela de Geração",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "2c70827c-80e8-29fe-93ad-4c1321059057",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "last_telemetry",
                "type" : "attribute",
                "label" : "Status",
                "color" : "#e91e63",
                "settings" : {
                  "columnWidth" : "7%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var html = {\n    0: '<html>&nbsp;</html>',\n    1: '<html><img title=\"Online\" src=\"https://solarhub.engecomp.io/res/ok.png\" width=\"20\" height=\"20\"></html>',\n    2: '<html><img title=\"Offline\" src=\"https://solarhub.engecomp.io/res/nok.png\" width=\"20\" height=\"20\"></html>',\n    3: '<html><img title=\"Alarme\" src=\"https://solarhub.engecomp.io/res/attention6.png\" width=\"20\" height=\"20\"></html>'\n};\n\nreturn html[value];"
                },
                "_hash" : 0.3319542789910914,
                "postFuncBody" : "x = parseInt(moment.utc().format('x'))\nvar horas = ((x - time) / 3600000);\n\nvar tolerancia = 3;\n\n// calcula se tá online ou offline\nif (horas > tolerancia) { \n    return 2;     // vermelho NotOk \n}\n\nreturn 1;         // verde OK"
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "Unidade",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "20%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.7759033120837209,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~SEM NOME\"    \n}\nreturn nome;"
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "Remota",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "10%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.46047340608980813
              }, {
                "name" : "last_telemetry",
                "type" : "attribute",
                "label" : "Ult Conexão",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "13%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return moment.unix(value/1000).format('DD-MMM HH:mm');"
                },
                "_hash" : 0.9704030085750541
              }, {
                "name" : "Active Energy_day_sum",
                "type" : "timeseries",
                "label" : "MWh Hoje",
                "color" : "#e91e63",
                "settings" : {
                  "columnWidth" : "10%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value === null) {\n    return \"\";\n} else {\n    return value.toLocaleString('pt-br',{minimumSignificanDigits: 3, minimumFractionDigits:1, maximumFractionDigits:2});\n}"
                },
                "_hash" : 0.8199192750849629,
                "postFuncBody" : "var d = new Date();\nvar h = d.getHours() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (h*3600)) { \n\n    // formata o valor a ser apresentado\n    return value/1000;\n\n}\nreturn \" \";"
              }, {
                "name" : "consumo_projetado_kwh",
                "type" : "attribute",
                "label" : "MWh Mês Proj",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "10%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value === null) {\n    return \"\";\n} else {\n    return value.toLocaleString('pt-br',{minimumSignificanDigits: 3, minimumFractionDigits:1, maximumFractionDigits:2});\n}"
                },
                "_hash" : 0.628657354055727,
                "postFuncBody" : "var d = new Date();\nvar h = d.getHours() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (h*3600)) { \n\n    // formata o valor a ser apresentado\n    return value/1000;\n\n}\nreturn \" \";"
              }, {
                "name" : "consumo_projetado_mwm",
                "type" : "attribute",
                "label" : "MWm Proj",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "10%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value === null) {\n    return \"\";\n} else {\n    return value.toLocaleString('pt-br',{minimumSignificanDigits: 3, minimumFractionDigits:1, maximumFractionDigits:2});\n}",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.11338644952117138,
                "decimals" : null,
                "postFuncBody" : "value = Number(value)\n\nvar d = new Date();\nvar h = d.getHours() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (h*3600)) { \n\n    if (value < 0) {\n        return 0;\n    }\n    return value;\n}\nreturn \" \";",
                "usePostProcessing" : true,
                "units" : null,
                "funcBody" : null
              }, {
                "name" : "potencia_nominal",
                "type" : "attribute",
                "label" : "Potência",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "10%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value === null) {\n    return \"\";\n} else {\n    if (value > 0) {\n        return value.toLocaleString('pt-br',{minimumSignificanDigits: 3, minimumFractionDigits:0, maximumFractionDigits:0}) + \" kW\";\n    }\n    return \"\";\n}"
                },
                "_hash" : 0.6483828682273942,
                "decimals" : 0
              }, {
                "name" : "missing_intervals",
                "type" : "attribute",
                "label" : "Lacunas",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "10%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value === null) {\n    return \"\";\n} else {\n    return value.toLocaleString('pt-br',{minimumSignificanDigits: 3, minimumFractionDigits:0, maximumFractionDigits:0});\n}\n"
                },
                "_hash" : 0.18962906193867735,
                "postFuncBody" : "var d = new Date();\nvar h = d.getHours() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (h*3600)) { \n\n    if (value < 0) {\n        return 0;\n    }\n    return Math.floor(value);\n}\nreturn \" \";"
              } ]
            } ],
            "enableDataExport" : true,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "name" : "update state",
                "icon" : "more_horiz",
                "type" : "custom",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\nlet entityRelationService = $injector.get(widgetContext.servicesMap.get('entityRelationService'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar params = widgetContext.stateController.getStateParams();\nparams.Curr_Ger = {\n    entityId: entityId,\n    entityName: entityName\n};\n\nentityRelationService.findInfoByTo(entityId).subscribe(\n    (relations) => {\n        if (relations.length > 0 && relations[0].from.entityType == 'ASSET') {\n            params.Curr_Usina= {\n                entityId: relations[0].from,\n                entityName: relations[0].fromName\n            };\n        }\n        widgetContext.stateController.updateState('geracao_site', params, false);\n    }\n);\n",
                "id" : "0d03ac33-0a83-1117-a4dc-479e0523d28b"
              } ],
              "headerButton" : [ {
                "name" : "Exportação de Dados",
                "icon" : "file_download",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n\n\n    <mat-form-field fxFlex class=\"mat-block\">\n        <mat-label>Layout</mat-label>\n        <mat-select name=\"layout\" [(ngModel)]=\"layout\" (ngModelChange)=\"change()\">\n          <mat-option value=\"completo\">Completo</mat-option>\n          <mat-option [disabled]=\"integracao != 'all'\" value=\"simplificado\">Simplificado</mat-option>\n        </mat-select><br>\n    </mat-form-field>\n\n    <mat-form-field fxFlex class=\"mat-block\">\n        <mat-label>Integração</mat-label>\n        <mat-select name=\"integracao\" [(ngModel)]=\"integracao\" (ngModelChange)=\"change()\">\n          <mat-option value=\"all\">15 minutos</mat-option>\n          <mat-option [disabled]=\"layout == 'simplificado'\" value=\"hour\">1 hora</mat-option>\n          <mat-option [disabled]=\"layout == 'simplificado'\" value=\"day\">1 dia</mat-option>\n          <mat-option [disabled]=\"layout == 'simplificado'\" value=\"month\">1 mês</mat-option>\n        </mat-select><br>\n    </mat-form-field>\n    \n    <mat-form-field fxFlex class=\"mat-block\">\n        <mat-label>Formato</mat-label>\n        <mat-select name=\"format\" [(ngModel)]=\"format\">\n          <mat-option value=\"xls\">xls</mat-option>\n          <mat-option value=\"csv\">csv</mat-option>\n        </mat-select><br>\n    </mat-form-field>\n    \n     <div fxLayout=\"column\" fxLayout.gt-sm=\"row\" fxLayoutGap=\"5px\" ng-cloak>\n        \n                \n        <mat-form-field color=\"accent\" appearance=\"fill\">\n          <mat-label>Data Inicial</mat-label>\n          <input matInput [matDatepicker]=\"picker1\" [(ngModel)]=\"sd\" (ngModelChange)=\"change()\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n          <mat-datepicker #picker1></mat-datepicker>\n        </mat-form-field>\n        \n        \n        <mat-form-field color=\"accent\" appearance=\"fill\">\n          <mat-label>Data Final</mat-label>\n          <input matInput [matDatepicker]=\"picker2\" [(ngModel)]=\"ed\" (ngModelChange)=\"change()\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n          <mat-datepicker #picker2></mat-datepicker>\n        </mat-form-field>\n        \n        <div fxLayout=\"column\" fxFlexOrder=\"0\" fxFlexOrder.gt-sm=\"2\">\n            <matSubheader>Dates</matSubheader>\n            <div>\n                <mat-label style=\"font-size: x-small;\">Start</mat-label>\n                <div>{{sd | date:shortDate}}</div>\n            </div>\n            <div>\n                <mat-label style=\"font-size: x-small;\">End</mat-label>\n                <div>{{ed | date:shortDate}}</div>\n            </div>\n        </div>\n    </div>\n    \n    \n    <mat-label>\n        Tamanho estimado: {{ linhas }} linhas<br><br>\n    </mat-label>\n    \n    <mat-label>\n        <input type=\"checkbox\" [(ngModel)]=\"async\"> Envio por email (recomendado)\n    </mat-label>\n\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>\n",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nvar user = widgetContext.currentUser;\n\n\nvar url = 'https://solarhub.engecomp.io/be/data_export/cdf9d21d-f312-4ea9-8de7-e54819278999/form/v3'\n\npayload = {\n    email: user.sub,\n    token: localStorage[\"jwt_token\"]\n}\n\npayload.search = {\n    entityFilter: widgetContext.defaultSubscription.configuredDatasources[0].entityFilter,\n    pageLink: {\n        page: 0,\n        pageSize: 1000,\n        textSearch: null,\n        dynamic: false,\n        sortOrder: {\n          key: {\n            key: \"name\",\n            type: \"ENTITY_FIELD\"\n          },\n          direction: \"ASC\"\n        }\n      },\n    entityFields: [\n        {\n          key: \"name\",\n          type: \"ENTITY_FIELD\"\n        }\n      ],\n    latestValues: [\n        {\n          key: \"description\",\n          type: \"ATTRIBUTE\"\n        }\n      ]\n}\n\n\nshowInfoDialog()\n\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    debugger\n    let vm = instance;\n    \n    vm.importTitle = 'Exportação de dados'\n\n    vm.layout= \"simplificado\"\n    vm.sd= moment(vm.ed).subtract(1, 'month').toDate()\n    vm.ed= moment.utc().startOf('day').toDate()\n    vm.integracao= \"all\"\n    vm.format= \"xls\"\n    vm.async= true\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.change = function() {\n        \n        debugger;\n\n        var diffTime = Math.abs(vm.ed - vm.sd);\n        var diffMonths = diffTime / (1000 * 60 * 60 * 24 * 30)\n        var linhasPorMes = 0\n\n        switch(vm.integracao){\n            case \"all\": \n                linhasPorMes = 24*4*30\n                break;\n            case \"hour\":\n                linhasPorMes = 24*30\n                break;\n            case \"day\":\n                linhasPorMes = 30\n                break;\n            case \"month\":\n                linhasPorMes = 1\n                break;   \n        }\n        \n        vm.linhas = Math.ceil(linhasPorMes * diffMonths * widgetContext.defaultSubscription.dataPages[0].totalElements)\n        \n        if (vm.linhas < 5000) {\n            vm.async = false\n        } else {\n            vm.async = true\n        }\n        \n    }\n    \n    vm.change()\n\n\n    vm.send = function() {\n        \n        debugger;\n\n        let formData = new FormData();\n        \n        sd = moment(vm.sd).format('YYYY-MM-DD');\n        ed = moment(vm.ed).format('YYYY-MM-DD');\n        \n        payload.start_date = sd\n        payload.end_date = ed\n        payload.interval = vm.integracao\n        payload.output_format = vm.format\n        payload.layout = vm.layout\n        payload.getnow = !vm.async\n        \n        formData.append(\"payload\", JSON.stringify( payload ))\n        console.log(JSON.stringify( payload ))\n\n        var fetchParams = { method: \"POST\", body: formData }\n        \n        fetch(url, fetchParams).then(function(r) {\n            if (r.status == 200) {\n\n                return r.json().then(\n                    function(data) {\n                        if (data.link && data.link.length > 0) {\n                            window.open(data.link,'_blank');\n                        }\n                        else {\n                            widgetContext.showSuccessToast('Sucesso. Um link será enviado para o seu e-mail', 3000)\n                        }\n                    })\n            }\n            else {\n                widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n            }\n            \n        })\n        .catch(function(error) {\n            widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n        });\n  \n        vm.cancel();  \n        \n    }\n}\n\n\n\n// var $injector = widgetContext.$scope.$injector;\n// var\n//     $mdDialog = $injector.get('$mdDialog'),\n//     $mdToast = $injector.get('$mdToast'),\n//     $document = $injector.get('$document');\n//     userService = $injector.get('userService');\n\n// var user = userService.getCurrentUser();\n// var userMail = user.sub\n\n// //var url = 'https://solarhub.engecomp.io/data_export_form'\n// var url = 'https://solarhub.engecomp.io/be/data_export/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\n\n// payload = createJSON();\n\n// showInfoDialog()\n\n// function createJSON() {\n//     var payload = {};\n//     payload.devices = [];\n//     payload.email = userMail\n\n    \n//     for (var i = 0; i < widgetContext.data.length; i++) {\n//         var item = {};\n//         if (widgetContext.data[i].dataKey.name == 'description') {\n//             item.id = widgetContext.data[i].datasource.name\n            \n//             if (typeof widgetContext.data[i].data[0] === 'undefined') {\n//                 item.name = \"\"\n//             } else {\n//                 item.name = widgetContext.data[i].data[0][1]\n//             }\n            \n//             payload.devices.push(item)\n//         }\n//     }\n//     return payload\n// }\n\n\n// function showInfoDialog() {\n    \n\n//     $mdDialog.show({\n//         controller: ['$mdDialog',\n//             InfoDialogController\n//         ],\n//         controllerAs: 'vm',\n//         scope: widgetContext.$scope,\n//         preserveScope: true,\n//         template: htmlTemplate,\n//         parent: angular.element($document[0].body),\n//         targetEvent: $event,\n//         clickOutsideToClose: true,\n//         fullscreen: true\n//     })\n// }\n\n\n\n// function InfoDialogController($mdDialog) {\n//     let vm = this;\n//     vm.importTitle = 'Exportação de dados'\n\n//     debugger;\n//     vm.ed = moment.utc().startOf('day').toDate();\n//     vm.sd = moment(vm.ed).subtract(1, 'month').toDate();\n//     vm.integracao = \"all\"\n//     vm.layout = \"simplificado\"\n//     vm.async = true \n\n//     vm.cancel = () => {\n//         $mdDialog.cancel();\n//     }\n\n//     vm.change = () => {\n        \n//         var diffTime = Math.abs(vm.ed - vm.sd);\n//         var diffMonths = diffTime / (1000 * 60 * 60 * 24 * 30)\n//         var linhasPorMes = 0\n        \n//         /*\n//         if (vm.layout == \"simplificado\") {\n//             vm.integracao = \"all\"\n//         }\n        \n//         if (vm.integracao != \"all\") {\n//             vm.layout = \"completo\"\n//         }*/\n        \n//         switch(vm.integracao){\n//             case \"all\": \n//                 linhasPorMes = 24*4*30\n//                 break;\n//             case \"hour\":\n//                 linhasPorMes = 24*30\n//                 break;\n//             case \"day\":\n//                 linhasPorMes = 30\n//                 break;\n//             case \"month\":\n//                 linhasPorMes = 1\n//                 break;   \n//         }\n        \n//         vm.linhas = Math.ceil(linhasPorMes * diffMonths * payload.devices.length)\n        \n//         if (vm.linhas < 5000) {\n//             vm.async = false\n//         } else {\n//             vm.async = true\n//         }\n        \n//     }\n    \n//     vm.change()\n\n\n//     vm.send = () => {\n\n//         let formData = new FormData();\n        \n//         sd = moment(vm.sd).format('YYYY-MM-DD');\n//         ed = moment(vm.ed).format('YYYY-MM-DD');\n        \n//         payload.start_date = sd\n//         payload.end_date = ed\n//         payload.interval = vm.integracao\n//         payload.output_format = \"csv\"\n//         payload.layout = vm.layout\n//         payload.getnow = !vm.async\n        \n//         formData.append(\"payload\", JSON.stringify( payload ))\n\n//         var fetchParams = { method: \"POST\", body: formData }\n        \n//         debugger;\n//         fetch(url, fetchParams).then(function(r) {\n//             if (r.status == 200) {\n\n//                 return r.json().then(\n//                     function(data) {\n//                         if (data.link && data.link.length > 0) {\n//                             window.open(data.link,'_blank');\n//                         }\n//                         else {\n//                             $mdToast.show(\n//                                 $mdToast.simple()\n//                                 .textContent('Sucesso. Um link será enviado para o seu e-mail')\n//                                 .position(\"top left\")\n//                                 .hideDelay(3000)\n//                             )\n//                         }\n//                     })\n//             }\n//             else {\n//                 $mdToast.show(\n//                     $mdToast.simple()\n//                     .textContent('Erro. Por favor contacte a Engecomp.')\n//                     .position(\"top left\")\n//                     .hideDelay(3000)\n//                 )\n//             }\n            \n//         }); \n        \n\n        \n//         vm.cancel();  \n        \n//     }\n\n\n// }\n\n\n// toastHTML = `\n// <md-toast>\n//   <span class=\"md-toast-text\" flex>Sucesso. Um link será enviado para o seu e-mail.</span>\n//   <md-button class=\"md-highlight\" ng-click=\"openMoreInfo($event)\">\n//     More info\n//   </md-button>\n//   <md-button ng-click=\"closeToast()\">\n//     Close\n//   </md-button>\n// </md-toast>\n// `\n\n",
                "customResources" : [ ],
                "id" : "be5c82da-92df-9b1b-5ced-d84a473b267a"
              } ],
              "actionCellButton" : [ ],
              "rowDoubleClick" : [ ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "7244a580-9da0-4da5-bf9c-ae020421fc30",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "177ce34e-f1f2-4ec5-9687-5eb9be730469" : {
          "type" : "latest",
          "sizeX" : 12,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "geracao_dia",
                "type" : "timeseries",
                "label" : "valor",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.3536979054595595,
                "postFuncBody" : "function numberWithCommas(x, y, z) {\n    return x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z});\n}\n\nvar d = new Date();\nvar h = d.getHours() + 1;\nvolume = value;\n\nif (((d.getTime()/1000) - (time/1000)) < (h*3600)) { \n\n    // formata o valor a ser apresentado\n    if ( volume > 1000000 ) {\n        return numberWithCommas(volume/1000, 0, 0) + \" MWh\"; \n    }\n    if ( volume > 10000 ) {\n        return numberWithCommas(volume/1000, 1, 1) + \" MWh\"; \n    }\n    if ( volume > 0 ) {\n        return numberWithCommas(volume, 0, 0) + \" kWh\"; \n    }\n\n}\nreturn \"-x-\";"
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Geração Hoje",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "177ce34e-f1f2-4ec5-9687-5eb9be730469",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "3fac5803-6d9c-44ff-8226-3496adb3a4c7" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "geracao_projetada_kwh_mes",
                "type" : "attribute",
                "label" : "geracao",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.537356339772207,
                "postFuncBody" : "function numberWithCommas(x, y, z) {\n    return x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z});\n}\n\nvar d = new Date();\nvar h = d.getHours() + 1;\nvolume = value;\n\nif (((d.getTime()/1000) - (time/1000)) < (h*3600)) { \n\n    // formata o valor a ser apresentado\n    if ( volume > 1000000 ) {\n        return numberWithCommas(volume/1000, 0, 0) + \" MWh\"; \n    }\n    if ( volume > 10000 ) {\n        return numberWithCommas(volume/1000, 1, 1) + \" MWh\"; \n    }\n    if ( volume > 0 ) {\n        return numberWithCommas(volume, 0, 0) + \" kWh\"; \n    }\n\n}\nreturn \"-x-\";"
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${geracao}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Ger. Projetada Mês",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "3fac5803-6d9c-44ff-8226-3496adb3a4c7",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "ea5ae2cc-f871-4c8f-9244-dcf252dae5d1" : {
          "type" : "alarm",
          "sizeX" : 64,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "history" : {
                "interval" : 1000,
                "timewindowMs" : 31104000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSelection" : true,
              "enableSearch" : true,
              "displayDetails" : false,
              "allowAcknowledgment" : true,
              "allowClear" : false,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "-startTime",
              "alarmsTitle" : "Alarmes",
              "enableSelectColumnDisplay" : true,
              "enableFilter" : true,
              "enableStickyHeader" : true
            },
            "title" : "Alarmes",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "alarmSource" : {
              "type" : "entity",
              "name" : "alarms",
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "severity",
                "type" : "alarm",
                "label" : "Criticidade",
                "color" : "#ffc107",
                "settings" : {
                  "columnWidth" : "0px"
                },
                "_hash" : 0.6283523281992602
              }, {
                "name" : "details.plant_name",
                "type" : "alarm",
                "label" : "Usina",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var obj = JSON.parse(value)\nreturn obj.plant_name;",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.4981641978806992,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "details.originator",
                "type" : "alarm",
                "label" : "Ponto",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var obj = JSON.parse(value)\nreturn obj.originator;",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.039248350563928946,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "details.name",
                "type" : "alarm",
                "label" : "Tipo",
                "color" : "#f44336",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var obj = JSON.parse(value)\nreturn obj.name;",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.9033520003454285,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "startTime",
                "type" : "alarm",
                "label" : "Início",
                "color" : "#ffc107",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.7814015650239671
              }, {
                "name" : "endTime",
                "type" : "alarm",
                "label" : "Fim",
                "color" : "#607d8b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (alarm.status == 'ACTIVE_ACK' || alarm.status =='ACTIVE_UNACK') {\n    return null\n} else {\n    return moment.unix(value/1000).format(\"YYYY-MM-DD HH:mm:ss\");\n}\n"
                },
                "_hash" : 0.6723418179347178
              }, {
                "name" : "status",
                "type" : "alarm",
                "label" : "Status",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var dict ={\n    'ACTIVE_UNACK': 'Ativo',\n    'ACTIVE_ACK': 'Reconhecido',\n    'CLEARED_ACK':'Reconhecido',\n    'CLEARED_UNACK':'Normalizado'\n}\n\nreturn dict[value]\n"
                },
                "_hash" : 0.27193457482678196
              }, {
                "name" : "details.message",
                "type" : "alarm",
                "label" : "Mensagem",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var obj = JSON.parse(value)\nreturn obj.message;",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.03750843248544866,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            },
            "alarmsPollingInterval" : 60,
            "datasources" : [ ],
            "widgetStyle" : { },
            "actions" : {
              "actionCellButton" : [ ],
              "rowClick" : [ {
                "name" : "Detalhes",
                "icon" : "more_horiz",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div class=\"widget status-widget\">\n        <table width=\"280px\">\n            <tr>\n                <td class=\"title\">Criticidade: </td>\n                <td class=\"value\">{{ additionalParams.alarm.severity | translate}}</td>\n            </tr>\n            <tr>\n                <td class=\"title\">Ponto de Medição: </td>\n                <td class=\"value\">{{ details.originator }}</td>\n            </tr>\n            <tr>\n                <td class=\"title\">Tipo do Evento: </td>\n                <td class=\"value\"> {{ details.name }}</td>\n            </tr>\n            <tr>\n                <td class=\"title\">Data do Evento: </td>\n                <td class=\"value\">{{ eventDate }}</td>\n            </tr>\n            <tr>\n                <td class=\"title\">Status: </td>\n                <td class=\"value\">{{ dict[additionalParams.alarm.status] }}</td>\n            </tr>\n            <tr>\n                <td class=\"title\">Valor Medido: </td>\n                <td class=\"value_trigger\"> {{ details.value || \"\" }} </td>\n            </tr>\n            <tr>\n                <td class=\"title\">Valor Limite: </td>\n                <td class=\"value\"> {{ details.threshold || \"\" }} </td>\n            </tr>\n        </table>\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"ack()\"\n        type=\"submit\" [disabled]=\"!unack || (isLoading$ | async)\">\n        {{ \"Acknowledge\" | translate }}\n    </button>    \n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Fechar\n    </button>\n</div>\n",
                "customCss" : " .widget {\n     position: relative;\n     min-width: 0;\n     width: 100%;\n     height: 100%;\n }\n\n .status-widget .title {\n     display: inline-block;\n     font-family: Arial;\n     font-weight: normal;\n     font-size: 14px;\n     width: 50%;\n     color: rgba(0, 0, 0, 0.66);\n }\n\n .status-widget .value {\n     display: inline-block;\n     padding: 2px;\n     font-family: Arial;\n     font-weight: normal;\n     font-size: 14px;\n     width: 50%;\n     color: rgba(0, 0, 0, 0.87);\n }\n\n .status-widget .value_trigger {\n     display: inline-block;\n     padding: 2px;\n     font-family: Arial;\n     font-weight: bold;\n     font-size: 14px;\n     color: #ff0000;\n }\n\n .status-widget .criticidade {\n     display: inline-block;\n     padding: 2px;\n     font-family: Arial;\n     font-weight: bold;\n     font-size: 14px;\n     color: rgba(0, 0, 0, 0.87);\n }\n\n .status-widget .button {\n     display: inline-block;\n     padding: 2px;\n     font-family: Arial;\n     font-weight: bold;\n     font-size: 16px;\n     color: #bdfbf8;\n}",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\nlet alarmService = $injector.get(widgetContext.servicesMap.get('alarmService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Detalhes do alarme'\n    \n    vm.details = additionalParams.alarm.details\n    vm.alarmId = additionalParams.alarm.id.id;\n    vm.additionalParams = additionalParams\n\n    vm.dict ={\n        'ACTIVE_UNACK': 'Ativo',\n        'ACTIVE_ACK': 'Ativo',\n        'CLEARED_ACK':'Normalizado',\n        'CLEARED_UNACK':'Normalizado'\n    };\n    \n    vm.eventDate = moment.unix(vm.additionalParams.alarm.startTs/1000).format(\"DD/MM/YYYY HH:mm\");\n    if (vm.dict[vm.additionalParams.alarm.status] == 'Normalizado' ) {\n        vm.eventDate = vm.eventDate+ ' - '+moment.unix(additionalParams.alarm.endTs/1000).format(\"DD/MM/YYYY HH:mm\");\n    }    \n    \n    if (vm.additionalParams.alarm.status == 'ACTIVE_UNACK' || additionalParams.alarm.status == 'CLEARED_UNACK') {\n        vm.unack = true;\n    } else {\n        vm.unack = false;\n    }\n    \n    \n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.ack = () =>\n    {\n        alarmService.ackAlarm(vm.alarmId).then(\n            vm.cancel()\n        );\n    };    \n\n}\n\n",
                "customResources" : [ ],
                "id" : "343ad200-d73e-491a-cd75-d25ad2b1cc8a"
              } ]
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "alarmsMaxCountLoad" : 0,
            "alarmsFetchSize" : 100,
            "alarmFilterConfig" : {
              "statusList" : [ "ACTIVE" ],
              "severityList" : [ ],
              "typeList" : [ ],
              "searchPropagatedAlarms" : true
            }
          },
          "id" : "ea5ae2cc-f871-4c8f-9244-dcf252dae5d1",
          "typeFullFqn" : "system.alarm_widgets.alarms_table"
        },
        "3e689293-1d16-4a93-aa09-4c5ef9846838" : {
          "type" : "timeseries",
          "sizeX" : 27,
          "sizeY" : 18,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "global_irradiation_1",
                "type" : "timeseries",
                "label" : "DNI 1",
                "color" : "#2196f3",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.39527612027182824
              }, {
                "name" : "global_irradiation_2",
                "type" : "timeseries",
                "label" : "DNI 2",
                "color" : "#4caf50",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.5535938581665785
              }, {
                "name" : "radiacao_refletida",
                "type" : "timeseries",
                "label" : "Refletida",
                "color" : "#f44336",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.30692524761585505
              }, {
                "name" : "global_irradiation_3",
                "type" : "timeseries",
                "label" : "GHI 1",
                "color" : "#ffc107",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.25945460446754187
              }, {
                "name" : "global_irradiation_4",
                "type" : "timeseries",
                "label" : "GHI 2",
                "color" : "#607d8b",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.14985417966397563
              } ],
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715"
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "timewindowMs" : 86400000,
                "quickInterval" : "CURRENT_DAY",
                "interval" : 1000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454",
                "tickDecimals" : 0
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "smoothLines" : false,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "tooltipCumulative" : false,
              "hideZeros" : false,
              "showTooltip" : true,
              "comparisonEnabled" : false,
              "customLegendEnabled" : false,
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "row",
                "position" : "bottom",
                "showMin" : false,
                "showMax" : true,
                "showAvg" : false,
                "showTotal" : false
              }
            },
            "title" : "Irradiação (W/m2)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.3rem",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "mobileHeight" : null,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "enableDataExport" : true,
            "decimals" : 1,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "3e689293-1d16-4a93-aa09-4c5ef9846838",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "e3f1412d-9688-4858-b00a-fa5dfd09270b" : {
          "type" : "timeseries",
          "sizeX" : 27,
          "sizeY" : 17,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "temperatura_ar",
                "type" : "timeseries",
                "label" : "Ar",
                "color" : "#2196f3",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.45996904409407335
              }, {
                "name" : "temperatura_modulo_1",
                "type" : "timeseries",
                "label" : "Módulo 1",
                "color" : "#4caf50",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.8202067783157989
              }, {
                "name" : "temperatura_modulo_2",
                "type" : "timeseries",
                "label" : "Módulo 2",
                "color" : "#f44336",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.4960609704650687
              } ],
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715"
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "timewindowMs" : 604800000,
                "quickInterval" : "CURRENT_DAY",
                "interval" : 300000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454",
                "tickDecimals" : 0
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "smoothLines" : false,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "tooltipCumulative" : false,
              "hideZeros" : false,
              "showTooltip" : true,
              "comparisonEnabled" : false,
              "customLegendEnabled" : false,
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "row",
                "position" : "bottom",
                "showMin" : false,
                "showMax" : true,
                "showAvg" : false,
                "showTotal" : false
              }
            },
            "title" : "Temperaturas (ºC)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.3rem",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "mobileHeight" : null,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "enableDataExport" : true,
            "decimals" : 1,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "e3f1412d-9688-4858-b00a-fa5dfd09270b",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "0ddc1a1e-e861-4be4-86fd-7f7dafcf23c5" : {
          "type" : "timeseries",
          "sizeX" : 27,
          "sizeY" : 18,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "umidade_ar",
                "type" : "timeseries",
                "label" : "Umidade",
                "color" : "#2196f3",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.3586409298551383
              }, {
                "name" : "velocidade_vento",
                "type" : "timeseries",
                "label" : "Vel. Vento",
                "color" : "#4caf50",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : true,
                  "axisPosition" : "right",
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "excludeFromStacking" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  },
                  "axisTickDecimals" : 1
                },
                "_hash" : 0.24436543268299693,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "timewindowMs" : 604800000,
                "quickInterval" : "CURRENT_DAY",
                "interval" : 300000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454",
                "tickDecimals" : 0
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "smoothLines" : false,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "tooltipCumulative" : false,
              "hideZeros" : false,
              "showTooltip" : true,
              "comparisonEnabled" : false,
              "customLegendEnabled" : false,
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "row",
                "position" : "bottom",
                "showMin" : false,
                "showMax" : true,
                "showAvg" : false,
                "showTotal" : false
              }
            },
            "title" : "Umidade (%) x Vento (m/s)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.3rem",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "mobileHeight" : null,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "enableDataExport" : true,
            "decimals" : 1,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "0ddc1a1e-e861-4be4-86fd-7f7dafcf23c5",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "83dce10a-e294-4d9a-b4d9-b01eda4765da" : {
          "type" : "timeseries",
          "sizeX" : 27,
          "sizeY" : 17,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Albedo",
                "type" : "timeseries",
                "label" : "Albedo",
                "color" : "#2196f3",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "tooltipValueFormatter" : "",
                  "showSeparateAxis" : false,
                  "axisTitle" : "",
                  "axisPosition" : "left",
                  "axisTicksFormatter" : ""
                },
                "_hash" : 0.6435342486520366
              }, {
                "name" : "Albedo_percent",
                "type" : "timeseries",
                "label" : "Albedo %",
                "color" : "#f44336",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.03864835267753497
              }, {
                "name" : "Albedo_percent2",
                "type" : "timeseries",
                "label" : "Albedo2 %",
                "color" : "#4caf50",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.8616292877216785
              } ],
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715"
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "timewindowMs" : 604800000,
                "quickInterval" : "CURRENT_DAY",
                "interval" : 300000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454",
                "tickDecimals" : 0
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "smoothLines" : false,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "tooltipCumulative" : false,
              "hideZeros" : false,
              "showTooltip" : true,
              "comparisonEnabled" : false,
              "customLegendEnabled" : false,
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "row",
                "position" : "bottom",
                "showMin" : false,
                "showMax" : true,
                "showAvg" : false,
                "showTotal" : false
              }
            },
            "title" : "Albedo",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.3rem",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "mobileHeight" : null,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "enableDataExport" : true,
            "decimals" : 1,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "83dce10a-e294-4d9a-b4d9-b01eda4765da",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "63ecd8cf-034f-4a04-b5b1-6658361e8ee0" : {
          "type" : "latest",
          "sizeX" : 54,
          "sizeY" : 9,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "contrato_modelo",
                "type" : "attribute",
                "label" : "contrato_modelo",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.2175625802473531
              }, {
                "name" : "contrato_vigencia",
                "type" : "attribute",
                "label" : "contrato_vigencia",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.6577266444311776
              }, {
                "name" : "contrato_distribuidora",
                "type" : "attribute",
                "label" : "contrato_distribuidora",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.7346464562059374
              }, {
                "name" : "contrato_ult_compensacao",
                "type" : "attribute",
                "label" : "contrato_ult_compensacao",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.9507626179041067
              }, {
                "name" : "date_comissioned",
                "type" : "attribute",
                "label" : "date_comissioned",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.28479957934973754
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 11px;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 16px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n",
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"58\">\n                <td width=\"33%\" align=\"left\"><style class=\"title\">Modelo Negócio:</style><br><style class=\"value\">${contrato_modelo}</style></td>\n                <td width=\"33%\" align=\"left\"><style class=\"title\">Duração:</style><br><style class=\"value\">${contrato_vigencia}</style></td>\n                <td width=\"32%\" align=\"left\"><style class=\"title\">Distribuidora:</style><br><style class=\"value\">${contrato_distribuidora}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"58\">\n                <td width=\"33%\" align=\"left\"><style class=\"title\">Última Compensação:</style><br><style class=\"value\">${contrato_ult_compensacao}</style></td>\n                <td width=\"33%\" align=\"left\"><style class=\"title\">Entrada em operação:</style><br><style class=\"value\">${date_comissioned}</style></td>\n                <td width=\"32%\" align=\"left\"><style class=\"title\"> </style><br><style class=\"value\"> </style></td>\n            </tr>\n        </table>\n</div>\n"
            },
            "title" : "dados_contrato_cliente",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "id" : "3f837557-fdeb-b825-8c44-4b83b67d49e1",
                "name" : "Editar contratos",
                "icon" : "edit",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "geracao_config_contratos",
                "setEntityId" : false,
                "stateEntityParamName" : "Curr_Usina"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "63ecd8cf-034f-4a04-b5b1-6658361e8ee0",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "db4f2e0a-e34e-4aa8-aa95-4b35fd14a177" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 20,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "data_assinatura1",
                "type" : "attribute",
                "label" : "data_assinatura1",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.6327215430368227
              }, {
                "name" : "valor_inicial1",
                "type" : "attribute",
                "label" : "valor_inicial1",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.9673876676716882
              }, {
                "name" : "data_base1",
                "type" : "attribute",
                "label" : "data_base1",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.41097930046343323
              }, {
                "name" : "ind_reajuste1",
                "type" : "attribute",
                "label" : "ind_reajuste1",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.5761755765765237
              }, {
                "name" : "reaj_prod1",
                "type" : "attribute",
                "label" : "reaj_prod1",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.11565219200351473
              }, {
                "name" : "data_ultreaj1",
                "type" : "attribute",
                "label" : "data_ultreaj1",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.20247122543196117
              }, {
                "name" : "data_proxreaj1",
                "type" : "attribute",
                "label" : "data_proxreaj1",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.11101730056479475
              }, {
                "name" : "valor_atual1",
                "type" : "attribute",
                "label" : "valor_atual1",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.6679579647192071
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 14px;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 14px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n",
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"4\">\n                <td width=\"90%\" height=\"10\" align=\"left\">&nbsp;</td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Assinatura:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_assinatura1}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Valor Inicial:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${valor_inicial1}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Base:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_base1}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Indice de Reajuste:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${ind_reajuste1}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Reajuste Produtividade:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${reaj_prod1}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Último Reajuste:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_ultreaj1}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Próximo Reajuste:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_proxreaj1}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Valor Atual:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${valor_atual1}</style></td>\n            </tr>\n        </table>\n</div>"
            },
            "title" : "Dados Contrato 1 - Locação de Bens Móveis",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.3rem",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "id" : "0eca3f9c-598b-cd3f-fb2e-0a65b89d8b81",
                "name" : "Editar contratos",
                "icon" : "edit",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "geracao_config_contratos",
                "setEntityId" : false,
                "stateEntityParamName" : "Curr_Usina"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "db4f2e0a-e34e-4aa8-aa95-4b35fd14a177",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "69312b94-8c53-4035-9d65-606cdc74e2b1" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 20,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "data_assinatura2",
                "type" : "attribute",
                "label" : "data_assinatura2",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5794683126559845
              }, {
                "name" : "valor_inicial2",
                "type" : "attribute",
                "label" : "valor_inicial2",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.25190433506638055
              }, {
                "name" : "data_base2",
                "type" : "attribute",
                "label" : "data_base2",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.22614692791908642
              }, {
                "name" : "ind_reajuste2",
                "type" : "attribute",
                "label" : "ind_reajuste2",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.4355717066275624
              }, {
                "name" : "reaj_prod2",
                "type" : "attribute",
                "label" : "reaj_prod2",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.19891413902280397
              }, {
                "name" : "data_ultreaj2",
                "type" : "attribute",
                "label" : "data_ultreaj2",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.9779892746301333
              }, {
                "name" : "data_proxreaj2",
                "type" : "attribute",
                "label" : "data_proxreaj2",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.8363418268972458
              }, {
                "name" : "valor_atual2",
                "type" : "attribute",
                "label" : "valor_atual2",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.22416860666774818
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 14px;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 14px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n",
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"4\">\n                <td width=\"90%\" height=\"10\" align=\"left\">&nbsp;</td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Assinatura:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_assinatura2}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Valor Inicial:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${valor_inicial2}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Base:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_base2}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Indice de Reajuste:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${ind_reajuste2}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Reajuste Produtividade:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${reaj_prod2}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Último Reajuste:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_ultreaj2}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Próximo Reajuste:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_proxreaj2}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Valor Atual:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${valor_atual2}</style></td>\n            </tr>\n        </table>\n</div>"
            },
            "title" : "Dados Contrato 2 - Serviços O&M",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "id" : "243ca448-2330-b456-218b-3c1da11f23cf",
                "name" : "Editar contratos",
                "icon" : "edit",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "geracao_config_contratos",
                "setEntityId" : false,
                "stateEntityParamName" : "Curr_Usina"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "69312b94-8c53-4035-9d65-606cdc74e2b1",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "35a35d4f-bf79-46df-ae78-c2a05ddee5aa" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 20,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "data_assinatura3",
                "type" : "attribute",
                "label" : "data_assinatura3",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.49177163413990277
              }, {
                "name" : "valor_inicial3",
                "type" : "attribute",
                "label" : "valor_inicial3",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.08345446443267024
              }, {
                "name" : "data_base3",
                "type" : "attribute",
                "label" : "data_base3",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.3685945528085972
              }, {
                "name" : "ind_reajuste3",
                "type" : "attribute",
                "label" : "ind_reajuste3",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.02264729831472989
              }, {
                "name" : "reaj_prod3",
                "type" : "attribute",
                "label" : "reaj_prod3",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.3401067315154558
              }, {
                "name" : "data_ultreaj3",
                "type" : "attribute",
                "label" : "data_ultreaj3",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.49641098724152943
              }, {
                "name" : "data_proxreaj3",
                "type" : "attribute",
                "label" : "data_proxreaj3",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.9781572628075514
              }, {
                "name" : "valor_atual3",
                "type" : "attribute",
                "label" : "valor_atual3",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.10262625530375313
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 14px;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 14px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n",
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"4\">\n                <td width=\"90%\" height=\"10\" align=\"left\">&nbsp;</td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Assinatura:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_assinatura3}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Valor Inicial:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${valor_inicial3}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Base:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_base3}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Indice de Reajuste:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${ind_reajuste3}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Reajuste Produtividade:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${reaj_prod3}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Último Reajuste:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_ultreaj3}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Data Próximo Reajuste:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${data_proxreaj3}</style></td>\n            </tr>\n            <tr height=\"35\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Valor Atual:</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"value\">${valor_atual3}</style></td>\n            </tr>\n        </table>\n</div>"
            },
            "title" : "Dados Contrato 3 - Terreno",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "id" : "e3f854bf-2750-5a62-0795-53fa2af2aff6",
                "name" : "Editar contratos",
                "icon" : "edit",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "geracao_config_contratos",
                "setEntityId" : false,
                "stateEntityParamName" : "Curr_Usina"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "35a35d4f-bf79-46df-ae78-c2a05ddee5aa",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "693431a4-616b-ee3b-befc-4ef48fc100d8" : {
          "type" : "latest",
          "sizeX" : 64,
          "sizeY" : 29,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "alarm_count",
                "type" : "attribute",
                "label" : "alarm_count",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.15813855854413172
              }, {
                "name" : "last_telemetry",
                "type" : "attribute",
                "label" : "last_telemetry",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.13601772501284737
              }, {
                "name" : "potencia_nominal",
                "type" : "attribute",
                "label" : "potencia_nominal",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.2682419380805827
              }, {
                "name" : "cloud_coverage",
                "type" : "attribute",
                "label" : "cloud_coverage",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.15706923811322837
              }, {
                "name" : "clear_sky_radiation",
                "type" : "attribute",
                "label" : "clear_sky_radiation",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.39807712399085204
              }, {
                "name" : "pm_grid_w",
                "type" : "attribute",
                "label" : "pm_grid_w",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.37337945119311633
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.5454430490426616
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.7983712038342587
              }, {
                "name" : "date_comissioned",
                "type" : "attribute",
                "label" : "date_comissioned",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.8199825234632538
              } ],
              "entityAliasId" : "3a9135f6-6d19-27bd-a7b6-786b066a141b"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : { },
            "title" : "Performance - Potência x Irradiação",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false,
            "widgetStyle" : { },
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Ajuda",
                "icon" : "info_outline",
                "type" : "customPretty",
                "customHtml" : "<form #f=\"ngForm\">\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\n        <h2>Ajuda</h2>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content>\n        <div style=\"min-width: 300px; max-width: 700px; padding-top: 20px; word-wrap: break-word\">\n            O quadro <b>Performance - Potência x Irradiação</b> tem por objetivo mostrar a situação atual de várias usinas, cada uma representada por um círculo. Note que:\n                        <ul>\n                        <li>O eixo Y indica a potência atual da usina, de zero até a sua potência nominal.\n                        <li>O eixo X indica a irradiação solar atual em cada local. \n                        <li>O diâmetro dos círculos indicam a potência instalada em cada usina.\n                        </ul>\n\n                        A cor usada para cada usina é importante: \n                        <ul>\n                        <li>VERDE: indica usina online, sem alarmes.\n                        <li>AMARELO: indica usina online, mas com alarmes ativos.\n                        <li>VERMELHO: indica usina offline.\n                        <li>AZUL: indica que não há irradiação solar pois já é noite no local.\n                        </ul>\n\n                        <u>Importante</u>: Em condições normais, os círculos devem estar próximos à diagonal e na cor verde. Se estiverem acima da diagonal, estão performando melhor que o esperado. Se estiverem abaixo, estão pior que o esperado.<br>&nbsp;<br>\n                        Obs: O objetivo deste quadro não é fornecer informações detalhadas, e sim apontar quais usinas devem receber mais atenção do usuário no momento.<br>&nbsp;\n        </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <button mat-button color=\"primary\"\n                type=\"button\"\n                [disabled]=\"(isLoading$ | async)\"\n                (click)=\"cancel()\" cdkFocusInitial>\n            Fechar\n        </button>\n    </div>\n</form>\n",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenDialog();\n\nfunction openDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    let vm = instance;\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n}",
                "customResources" : [ ],
                "id" : "eff948f1-5523-f793-226f-945545180ce5"
              } ]
            }
          },
          "id" : "693431a4-616b-ee3b-befc-4ef48fc100d8",
          "typeFullFqn" : "tenant.teste.bubble"
        },
        "ac37c1a9-bf27-930d-e065-191b43c163a8" : {
          "type" : "latest",
          "sizeX" : 34,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "displayEntityName" : false,
              "displayEntityType" : false,
              "entityNameColumnTitle" : "Usinas",
              "entitiesTitle" : "Lista de Usinas",
              "defaultSortOrder" : "Usina",
              "enableSelectColumnDisplay" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "true",
              "displayEntityLabel" : false,
              "useRowStyleFunction" : false
            },
            "title" : "Lista de Usinas",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "48230aec-e803-e27d-3129-e2e9f331d1b2",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "status",
                "type" : "attribute",
                "label" : "Status",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var html = {\n    0: '<html>&nbsp;</html>',\n    1: '<html><img title=\"Online\" src=\"https://solarhub.engecomp.io/res/sitemap_verde_24.png\" width=\"20\" height=\"20\"></html>',\n    2: '<html><img title=\"Alarme\" src=\"https://solarhub.engecomp.io/res/sitemap_amarelo_24.png\" width=\"20\" height=\"20\"></html>',\n    3: '<html><img title=\"Offline\" src=\"https://solarhub.engecomp.io/res/sitemap_vermelho_24.png\" width=\"20\" height=\"20\"></html>',\n    11: '<html><img title=\"Online\" src=\"https://solarhub.engecomp.io/res/ok.png\" width=\"20\" height=\"20\"></html>',\n    12: '<html><img title=\"Alarme\" src=\"https://solarhub.engecomp.io/res/attention6.png\" width=\"20\" height=\"20\"></html>',\n    13: '<html><img title=\"Offline\" src=\"https://solarhub.engecomp.io/res/nok.png\" width=\"20\" height=\"20\"></html>'\n};\n\nreturn html[value];",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.7430476877162842,
                "postFuncBody" : "try {\n    var result = JSON.parse(value);\n}\ncatch {\n    return 1\n}\n\nvar ac = 0;\nvar lt = 0;\nvar offset = 10;\n\nac = (result.alarm_count || 0);\nlt = (result.last_telemetry || 0);    \nvar tipo = (result.type || 0); \n\nif (tipo == \"node\") {\n    offset = 0;\n}\n\nvar x = parseInt(moment.utc().format('x'))\nvar horas = ((x - lt) / 3600000);\n\nvar tolerancia = 1.5;\n\n// calcula se tá online ou offline\nif (horas > tolerancia) { \n    return offset + 3;     // vermelho NotOk \n}\n\nif (ac >= 1) {\n    return offset + 2;     // triangulo ALARME\n}\nreturn offset + 1;         // verde OK",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "Usina",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "20%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.6023863017299247,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~~ SEM NOME ~~\"    \n}\nreturn nome;"
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "Cidade",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "25%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.6593539409904223
              }, {
                "name" : "pm_wh_produced_delta_day_sum",
                "type" : "timeseries",
                "label" : "kWh Hoje",
                "color" : "#607d8b",
                "settings" : {
                  "columnWidth" : "15%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-br',{minimumSignificanDigits: 3, minimumFractionDigits:0, maximumFractionDigits:0})\n",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.0816944742981931,
                "postFuncBody" : "var d = new Date();\nvar h = d.getHours() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (h*3600)) { \n\n    // formata o valor a ser apresentado\n    return value;\n\n}\nreturn \" \";\n\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "pm_wh_produced_delta_month_sum",
                "type" : "timeseries",
                "label" : "kWh Mês",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "15%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-br',{minimumSignificanDigits: 3, minimumFractionDigits:0, maximumFractionDigits:0})+\" \""
                },
                "_hash" : 0.654638610429995,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    return value;\n\n}\nreturn \"\"\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "potencia_nominal",
                "type" : "attribute",
                "label" : "Potência",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "15%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value === null) {\n    return \"\";\n} else {\n    return value.toLocaleString('pt-br',{minimumSignificanDigits: 3, minimumFractionDigits:0, maximumFractionDigits:0});\n}",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.3008403297160325,
                "units" : "",
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_total_ucs",
                "type" : "attribute",
                "label" : "Num UCs",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.19892611014873496,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "name" : "Detalhes da unidade",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "solar_usina",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Usina",
                "openRightLayout" : null,
                "id" : "05559ec4-b511-8f2a-cc28-446813b84261"
              } ],
              "actionCellButton" : [ ],
              "headerButton" : [ {
                "id" : "2dca44d3-2e56-9fbc-21c2-40cc1e45d063",
                "name" : "Alarmes",
                "icon" : "warning",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "solar_alarmes",
                "setEntityId" : false
              }, {
                "id" : "8fa04f3a-7086-9427-deee-732bcb539c06",
                "name" : "Performance Atual",
                "icon" : "bubble_chart",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "solar_kpis_inst",
                "setEntityId" : false
              }, {
                "name" : "Relatório Faturas",
                "icon" : "arrow_downward",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n     <div fxLayout=\"column\" fxLayout.gt-sm=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"20px\">\n         \n\n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"0\" fxFlexOrder.gt-sm=\"0\">\n          <mat-label>Data Inicial</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"sdStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n        \n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"1\" fxFlexOrder.gt-sm=\"1\">\n          <mat-label>Data Final</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"edStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n\n    </div>\n    \n    <div [fxShow]=\"!OK\" fxLayoutGap=\"20px\" style=\"color: red; font-weight: bold;\">ATENÇÃO: {{ errorMessage }}</div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nvar user = widgetContext.currentUser;\n\n\nvar url = 'https://solarhub.engecomp.io/be/uc_data_export/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\n\npayload = {\n    email: user.sub,\n    token: localStorage[\"jwt_token\"]\n}\n\n//deepcopy\nvar filter = JSON.parse(JSON.stringify(widgetContext.defaultSubscription.configuredDatasources[0].entityFilter))\n\npayload.search = {\n    entityFilter: filter,\n    pageLink: {\n        page: 0,\n        pageSize: 1000,\n        textSearch: null,\n        dynamic: false,\n        sortOrder: {\n          key: {\n            key: \"name\",\n            type: \"ENTITY_FIELD\"\n          },\n          direction: \"ASC\"\n        }\n      },\n    entityFields: [\n        {\n          key: \"name\",\n          type: \"ENTITY_FIELD\"\n        }\n      ],\n    latestValues: [\n        {\n          key: \"description\",\n          type: \"ATTRIBUTE\"\n        }\n      ]\n}\n\npayload.search.entityFilter.maxLevel = 9\npayload.search.entityFilter.type = \"deviceSearchQuery\"\npayload.search.entityFilter.deviceTypes = [\"UC\"]\n\nshowInfoDialog()\n\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    \n    let vm = instance;   \n    vm.OK = true\n\n    vm.importTitle = 'Exportação de dados - FATURAS'\n    \n    vm.ed = moment.utc().startOf('day').toDate();\n    vm.sd = moment(vm.ed).subtract(1, 'month').toDate();\n\n    vm.sdStr = moment(vm.sd).format('DD/MM/YYYY');\n    vm.edStr = moment(vm.ed).format('DD/MM/YYYY');\n    \n    vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY')\n    vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY')\n    \n    \n    vm.change = function() {\n\n        vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY HH:mm')\n        vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY HH:mm')\n        \n        var days = moment(vm.ed).diff(moment(vm.sd),\n            'days');\n            \n        if (!vm.sd._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data inicial inválida\"\n            return\n        }\n        \n        if (!vm.ed._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data final inválida\"\n            return\n        }\n\n        //check start date greater than end date\n        if (days < 0) {\n            vm.OK = false;\n            vm.errorMessage =\n                \"Data inicial maior que data final\";\n            return;\n        }\n\n        vm.OK = true;\n    }\n\n    \n    vm.change()\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n\n        let formData = new FormData();\n        \n        sd = moment(vm.sd).format('YYYY-MM-DD');\n        ed = moment(vm.ed).format('YYYY-MM-DD');\n        \n        payload.start_date = sd\n        payload.end_date = ed\n        payload.getnow = true\n        payload.use_case = \"gd_bt\"\n        \n        formData.append(\"payload\", JSON.stringify( payload ))\n        console.log(JSON.stringify( payload ))\n\n        var fetchParams = { method: \"POST\", body: formData }\n        \n        fetch(url, fetchParams).then(function(r) {\n            if (r.status == 200) {\n\n                return r.json().then(\n                    function(data) {\n                        if (data.link && data.link.length > 0) {\n                            window.open(data.link,'_blank');\n                        }\n                        else {\n                            widgetContext.showSuccessToast('Sucesso. Um link será enviado para o seu e-mail', 3000)\n                        }\n                    })\n            }\n            else {\n                widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n            }\n            \n        })\n        .catch(function(error) {\n            widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n        });\n  \n        vm.cancel();  \n        \n    }\n}\n",
                "customResources" : [ ],
                "id" : "ccbed037-3fa0-7373-d6b2-f3db124b9e8d"
              }, {
                "name" : "Relatório mensal",
                "icon" : "description",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n     <div fxLayout=\"column\" fxLayout.gt-sm=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"20px\">\n         \n\n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"0\" fxFlexOrder.gt-sm=\"0\">\n          <mat-label>Data Inicial</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"sdStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n        \n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"1\" fxFlexOrder.gt-sm=\"1\">\n          <mat-label>Data Final</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"edStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n\n    </div>\n    \n    <div [fxShow]=\"!OK\" fxLayoutGap=\"20px\" style=\"color: red; font-weight: bold;\">ATENÇÃO: {{ errorMessage }}</div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nvar user = widgetContext.currentUser;\n\n\n//var url = 'https://solarhub.engecomp.io/be/matriz_inv_ssu_fat/cdf9d21d-f321-4ea9-8de7-e54819278999/form'\nvar url = 'https://solarhub.engecomp.io/apim/reports/matriz_inversores_ssu_faturas'\n\npayload = {\n    email: user.sub,\n    token: localStorage[\"jwt_token\"]\n}\n\n//deepcopy\nvar filter = JSON.parse(JSON.stringify(widgetContext.defaultSubscription.configuredDatasources[0].entityFilter))\n\npayload.search = {\n    entityFilter: filter,\n    pageLink: {\n        page: 0,\n        pageSize: 1000,\n        textSearch: null,\n        dynamic: false,\n        sortOrder: {\n          key: {\n            key: \"name\",\n            type: \"ENTITY_FIELD\"\n          },\n          direction: \"ASC\"\n        }\n      },\n    entityFields: [\n        {\n          key: \"name\",\n          type: \"ENTITY_FIELD\"\n        }\n      ],\n    latestValues: [\n        {\n          key: \"description\",\n          type: \"ATTRIBUTE\"\n        }\n      ]\n}\n\npayload.search.entityFilter.maxLevel = 9\npayload.search.entityFilter.type = \"assetSearchQuery\"\npayload.search.entityFilter.deviceTypes = [\"usina\",\"node\"]\n\nshowInfoDialog()\n\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    \n    let vm = instance;   \n    vm.OK = true\n\n    vm.importTitle = 'Relatório mensal'\n    \n    vm.ed = moment.utc().startOf('day').toDate();\n    vm.sd = moment(vm.ed).subtract(1, 'month').toDate();\n\n    vm.sdStr = moment(vm.sd).format('DD/MM/YYYY');\n    vm.edStr = moment(vm.ed).format('DD/MM/YYYY');\n    \n    vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY')\n    vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY')\n    \n    \n    vm.change = function() {\n\n        vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY HH:mm')\n        vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY HH:mm')\n        \n        var days = moment(vm.ed).diff(moment(vm.sd),\n            'days');\n            \n        if (!vm.sd._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data inicial inválida\"\n            return\n        }\n        \n        if (!vm.ed._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data final inválida\"\n            return\n        }\n\n        //check start date greater than end date\n        if (days < 0) {\n            vm.OK = false;\n            vm.errorMessage =\n                \"Data inicial maior que data final\";\n            return;\n        }\n\n        vm.OK = true;\n    }\n\n    \n    vm.change()\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n\n        let formData = new FormData();\n        \n        sd = moment(vm.sd).format('YYYY-MM-DD');\n        ed = moment(vm.ed).format('YYYY-MM-DD');\n        \n        payload.start_date = sd\n        payload.end_date = ed\n        payload.getnow = true\n        payload.use_case = \"gd_bt\"\n        \n        formData.append(\"payload\", JSON.stringify( payload ))\n        console.log(JSON.stringify( payload ))\n\n        var fetchParams = { method: \"POST\", body: formData }\n        \n        fetch(url, fetchParams).then(function(r) {\n            if (r.status == 200) {\n\n                return r.json().then(\n                    function(data) {\n                        if (data.link && data.link.length > 0) {\n                            window.open(data.link,'_blank');\n                        }\n                        else {\n                            widgetContext.showSuccessToast('Sucesso. Um link será enviado para o seu e-mail', 3000)\n                        }\n                    })\n            }\n            else {\n                widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n            }\n            \n        })\n        .catch(function(error) {\n            widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n        });\n  \n        vm.cancel();  \n        \n    }\n}\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "1033240e-0ffc-7d62-a325-41bb237dd790"
              } ],
              "rowDoubleClick" : [ {
                "name" : "Detalhes da unidade",
                "icon" : "more_horiz",
                "type" : "custom",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\nvar params = widgetContext.stateController.getStateParams()\n\nif (!params[\"Curr_Usina\"]) {\n    params[\"Curr_Usina\"] = {}\n}\nparams[\"Curr_Usina\"] = {entityId: entityId}\n\n\n$injector.get(widgetContext.servicesMap.get('attributeService')).getEntityAttributes(entityId, 'SERVER_SCOPE', ['mainTab']).subscribe((attribute) => {\n    if (attribute.length > 0) {\n        destination = attribute[0].value\n    } else {\n        destination = \"solar_usina\"\n    }\n    widgetContext.stateController.updateState(destination, params, false);\n});\n",
                "id" : "095b684e-c744-ea3d-2b34-b99e1f6bf707"
              } ]
            },
            "legendConfig" : {
              "position" : "bottom",
              "showMin" : false,
              "showMax" : false,
              "showAvg" : true,
              "showTotal" : false
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "ac37c1a9-bf27-930d-e065-191b43c163a8",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "cc02c8e9-9253-4009-a3fe-9b95d524fcd7" : {
          "type" : "timeseries",
          "sizeX" : 35,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_custo_medio",
                "type" : "timeseries",
                "label" : "Custo Médio",
                "color" : "#9a5ab3",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "right",
                  "chartType" : "line",
                  "dashedLine" : false,
                  "stackId" : "Stack1",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : true,
                  "axisPosition" : "right",
                  "axisTitle" : "Custo Médio (R$/MWh)",
                  "axisMin" : 200,
                  "axisMax" : 1000,
                  "lineTension" : 0,
                  "axisTickDecimals" : 0,
                  "axisTickSize" : 100
                },
                "_hash" : 0.6890256300148832,
                "units" : "R$ {} /MWh",
                "decimals" : 2
              } ]
            }, {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_fator_carga",
                "type" : "timeseries",
                "label" : "F.Carga",
                "color" : "#465d71",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "right2",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack2",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : true,
                  "axisPosition" : "right",
                  "axisMin" : 20,
                  "axisMax" : 100,
                  "axisTitle" : "F.Carga",
                  "axisTickDecimals" : 0,
                  "axisTickSize" : 10
                },
                "_hash" : 0.6693465393307587,
                "units" : "{}%",
                "decimals" : 1
              } ]
            }, {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_total_reais",
                "type" : "timeseries",
                "label" : "Consumo",
                "color" : "#35b89b",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.05172564850041583,
                "units" : "R$ {}",
                "decimals" : 2
              }, {
                "name" : "fat_demanda_reais",
                "type" : "timeseries",
                "label" : "Demanda",
                "color" : "#3a7bb6",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.6202374624460265,
                "units" : "R$ {}",
                "decimals" : 2
              }, {
                "name" : "fat_penalidades",
                "type" : "timeseries",
                "label" : "Penalidades",
                "color" : "#aa6510",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : true,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.7894247666616827,
                "units" : "R$ {}",
                "decimals" : 2,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_outros_reais",
                "type" : "timeseries",
                "label" : "Outros",
                "color" : "#67c0e0",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.5816650977533395,
                "units" : "R$ {}",
                "decimals" : 2
              }, {
                "name" : "fat_disponibilidade_valor_liq",
                "type" : "timeseries",
                "label" : "Disp.",
                "color" : "#fadc9b",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.4201039432975415,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null,
                "aggregationType" : null
              }, {
                "name" : "fat_impostos",
                "type" : "timeseries",
                "label" : "Impostos",
                "color" : "#ebab54",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.10408039859673668,
                "units" : "R$ {}",
                "decimals" : 2
              }, {
                "name" : "danfe_total_brl",
                "type" : "timeseries",
                "label" : "M.Livre",
                "color" : "#d94e56",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.12841860945368966,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideLastInterval" : false,
              "hideQuickInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1646103599000,
                  "endTimeMs" : 1677639599000
                },
                "interval" : 63245000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 2000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "allowDrilldown" : false,
              "timeWindows" : [ "12M", "Ano" ],
              "timeWindowsUnits" : "month,month",
              "initialTimeWindow" : "12M",
              "showContractedDemandCurves" : false,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "showRightScale" : true,
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: false,\n    callback: callback\n}\n\nreturn ticks",
              "stacked" : true,
              "sortLegendByLabel" : false,
              "axisLabel" : "Enter axis label here",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n        var decimals = ctx.decimals[tooltipItem.datasetIndex];\n        var label = data.datasets[tooltipItem.datasetIndex].label || '';\n        var value = tooltipItem.yLabel.toLocaleString('pt-BR', {style: 'decimal', minimumFractionDigits: decimals, maximumFractionDigits: decimals});\n\n        try {\n            value = ctx.units[tooltipItem.datasetIndex].replace(/{}/g, value);\n        } catch (err) {}\n\n        var message = `${label}: ${value}`;\n        return message;\n    },\n\n    filter = function(tooltipItem, data) {\n        return tooltipItem.value != \"NaN\";\n    };\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n\n    }\n};\n\nreturn tooltip;",
              "rightScaleTicks" : "ticks = {\n    beginAtZero: true\n}\n\nreturn ticks",
              "showRightScale2" : true,
              "rightScaleTicks2" : "ticks = {\n    beginAtZero: true\n}\n\nreturn ticks",
              "roundToUnit" : true,
              "showOverFlowInRed" : false,
              "roundingMethod" : "same"
            },
            "title" : "Histórico de Faturas",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Enviar fatura PDF",
                "icon" : "cloud_upload",
                "useShowWidgetActionFunction" : true,
                "showWidgetActionFunction" : "var params = widgetContext.stateController.getStateParams()\nreturn params.admin\n",
                "type" : "customPretty",
                "customHtml" : "<form #editDeviceForm=\"ngForm\" [formGroup] = 'fileAdd'\n      (ngSubmit)=\"send()\" style=\"width: 650px;\" >\n  <mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>Importar contas em PDF</h2>\n    <span fxFlex></span>\n    <button mat-button mat-icon-button\n            (click)=\"cancel()\"\n            type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div class = 'loading' *ngIf=\"loadingFiles\">\n        <div fxLayout = 'column'>\n            <mat-progress-spinner class=\"test\" mode = 'determinate' value = '{{progress}}' diameter=\"100\"></mat-progress-spinner>\n            <div>Aguarde...</div>\n        </div>\n    </div>\n    <div class=\"tb-container\">\n      <label class=\"action-title\">Arquivos PDF originais da concessionária</label>\n        <div class=\"action-file-select-container \">\n              <div class=\"action-file-clear-container\">\n                <button mat-button mat-icon-button color=\"primary\"\n                        type=\"button\"\n                        (click)=\"clearFile()\"\n                        class=\"action-file-clear-btn\"\n                        matTooltip=\"{{ 'action.remove' | translate }}\"\n                        matTooltipPosition=\"above\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </div>\n            <div class=\"drop-area action-flow-drop\">\n                <label for=\"file-input\">Arraste o arquivo ou clique aqui para selecionar</label>\n                <input class=\"file-input\"  type=\"file\" id=\"file-input\" formControlName = 'controlInputField' multiple (change)=\"fileAdded($event.target.files)\">\n              </div>\n        </div>\n    </div>\n    <div class = 'file-info'>\n      <div *ngIf=\"!fileName\" class=\"cut-text\">Nenhum arquivo selecionado</div>\n      <div *ngIf=\"fileName\" class=\"cut-text\">{{ fileName }}</div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\">\n    <span fxFlex></span>\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button mat-raised-button color=\"primary\"\n            style=\"margin-right: 20px;\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || fileAdd.invalid\">\n      Import\n    </button>\n  </div>\n</form>",
                "customCss" : "\n.file-input{\n       display: none;\n}\n\n.action-flow-drop{\n     position: relative;\n    height: 100%;\n    overflow: hidden;\n    border: dashed 2px;\n    margin-left: 15px;\n}\n\n.action-flow-drop label{\n    display: flex;\n      flex-direction: column;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      font-size: 16px;\n      text-align: center;\n}\n\n.action-title{\n    display: block;\n    padding-bottom: 8px;\n    margin-left: 15px;\n    color: #8E8E8E;\n    font-size:12px;\n}\n\n.action-file-select-container{\n    position: relative;\n    width: 100%;\n    height: 100px;\n}\n\n.action-file-clear-container{\n    position: relative;\n    float: right;\n    width: 48px;\n    height: 100%;\n}\n\n.action-file-clear-btn{\n    top: 50%;\n    transform: translate(0%, -50%) !important;\n}\n\n.file-info{\n    margin-left: 15px;\n    margin-right: 15px;\n}\n\n.loading{\n    margin-top: 5px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    text-align: center;\n}\n\n.action-flow-drop label{\n    font-size: 25px;\n}",
                "customFunction" : "\nlet $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenEditDeviceDialog();\n\nfunction openEditDeviceDialog() {\n    customDialog.customDialog(htmlTemplate, EditDeviceDialogController).subscribe();\n}\n\nfunction EditDeviceDialogController(instance) {\n    let vm = instance;\n    vm.fileName = '';\n    vm.progress = 0;\n    vm.loadingFiles = false;\n    let url = 'https://solarhub.engecomp.io/invoices'\n    // let url = 'https://solarhub.engecomp.io/'\n    // let url = 'http://127.0.0.1:5000/'\n    let user = widgetContext.currentUser;\n    let userMail = user.sub\n    let parent_id = widgetContext.stateController.getEntityId('Curr_customer')\n    \n     $( document ).ready(function() {\n        let form = $('.drop-area');\n        form.on('drag dragstart dragend dragover dragenter dragleave drop', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n        }).on('drop', function(e) {\n            vm.fileAdded(e.originalEvent.dataTransfer.files);\n        });\n    });\n    \n    vm.fileAdd = vm.fb.group({\n        file:[[], [vm.validators.required]],\n        controlInputField:''\n    });\n\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n    vm.clearFile = () => {\n        $(\".file-input\").value = \"\";\n        vm.fileName = '';\n        vm.fileAdd.patchValue({file: []})\n    }\n\n    // vm.fileAdded = (files)=> {\n    //     for(let i = 0; i < files.length; i++){\n    //         let filetype=files[i].name.split('.').pop();\n    //         if (filetype === 'pdf') {\n    //             let newFiles = vm.fileAdd.get('file').value\n    //             if(vm.fileAdd.get('file').value.length !== 0){\n    //                 vm.fileName += ' // ';\n    //             }\n    //             newFiles.push(files.item(i))\n    //             vm.fileAdd.patchValue({file: newFiles})\n    //             vm.fileName += files.item(i).name;\n    //         } else {\n    //           alert(files[i].name + \" tem extensão inválida\");\n    //         }\n    //         vm.fileAdd.get('controlInputField').patchValue('', {emitEvent: false})\n    //     }\n    // }\n\n    vm.fileAdded = (files)=> {\n        for(let i = 0; i < files.length; i++){\n            let filetype=files[i].name.split('.').pop();\n            let filesize=files[i].size\n            if (filetype.toLowerCase() === 'pdf' && filesize < 1024*1024*4) {\n                let newFiles = vm.fileAdd.get('file').value\n                if(vm.fileAdd.get('file').value.length !== 0){\n                    vm.fileName += ' // ';\n                }\n                newFiles.push(files.item(i))\n                vm.fileAdd.patchValue({file: newFiles})\n                vm.fileName += files.item(i).name;\n            } else {\n                if (filetype.toLowerCase() !== 'pdf') {\n                    alert(files[i].name + \" tem extensão inválida\");\n                } else {\n                    alert(files[i].name + \" excede 4MB\");\n                }\n                \n            }\n        }\n        vm.fileAdd.get('controlInputField').patchValue('', {emitEvent: false});\n    }\n\n    vm.send = () =>\n    {\n        vm.loadingFiles = true;\n        for(let i=0; i < vm.fileAdd.get('file').value.length; i++) {\n            vm.progress = Math.round((i+1) / vm.fileAdd.get('file').value.length * 100)\n            let req = new XMLHttpRequest();\n            let formData = new FormData();\n            let instructions = {\n                url: \"http://localhost:5000/gd\",\n                parent_id: parent_id,\n                tenant: 'bt',\n                usage: 1,\n                user: userMail\n            };\n            formData.append(\"invoice\", vm.fileAdd.get('file').value[i]);\n            formData.append(\"instructions\", JSON.stringify( instructions ))\n            fetch(url, {method: \"POST\", body: formData}).then(function(r) {\n            });\n\n        }\n        vm.loadingFiles = false;\n        vm.cancel();\n    }\n}",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "ceefe86e-7893-f899-80d9-46ca52afaea1"
              } ]
            }
          },
          "id" : "cc02c8e9-9253-4009-a3fe-9b95d524fcd7",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "646a33ae-44a9-4d48-7ec3-d88f228fd7f4" : {
          "type" : "timeseries",
          "sizeX" : 54,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pm_wh_produced_delta_month_sum",
                "type" : "timeseries",
                "label" : "val_usina",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.240025988737411
              }, {
                "name" : "fat_energia_injetada",
                "type" : "timeseries",
                "label" : "val_injetada",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.699171935890615
              }, {
                "name" : "fat_energia_creditada",
                "type" : "timeseries",
                "label" : "energia_creditada",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.6236782149201083
              }, {
                "name" : "fat_saldo_creditos_dif",
                "type" : "timeseries",
                "label" : "delta_saldo",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.782220232027711
              } ]
            }, {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "13a3d106-d96a-c88d-0ba4-36ceaaa1cb66",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Active Energy_month_sum",
                "type" : "timeseries",
                "label" : "val_ssu",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.1270474414177991
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : true,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1656647999000,
                  "endTimeMs" : 1659326399000
                },
                "interval" : 5357000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 4888
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<script>\n    \n    var en_ssu = \"${val_ssu}\";\n    var en_usina = \"${val_usina}\"; \n    var en_injetada = \"${val_injetada}\";\n    var en_creditada = \"${energia_creditada}\";\n    var en_deltasaldo = \"${delta_saldo}\";\n\n    en_ssu = parseFloat(en_ssu) || 0\n    en_usina = parseFloat(en_usina) || 0\n    en_injetada = parseFloat(en_injetada) || 0\n    en_creditada = parseFloat(en_creditada) || 0\n    en_deltasaldo = parseFloat(en_deltasaldo) || 0\n    \n    en_creditada = ( en_creditada + en_deltasaldo ) ;\n    var x2 = 0;\n    var x3 = 0;\n    var x4 = 0;\n\n    if (en_usina == 0 ) {\n        x2 = 1;       \n    } else {\n        x2 = ( ( en_ssu / en_usina ) - 1 );\n    }\n    \n    if (en_ssu == 0 ) {\n            if (en_usina == 0 ) {\n                x3 = 1;\n            } else {\n                x3 = ( ( en_injetada / en_usina ) - 1 );\n            }\n    } else {\n        x3 = ( ( en_injetada / en_ssu ) - 1 );\n    }\n\n    if (en_injetada == 0 ) {\n        x4 = 1;       \n    } else {\n        x4 = ( ( en_creditada / en_injetada ) - 1 );\n    }\n\n    if (en_usina > 0) {\n        document.getElementById(\"energyusina\").innerHTML = Math.round(en_usina).toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: 0, maximumFractionDigits: 0}) + \" kWh\";\n    } else {\n        document.getElementById(\"energyusina\").innerHTML = \"-x-\"\n    }\n    if (en_ssu > 0) {\n        document.getElementById(\"energydistrib\").innerHTML = Math.round(en_ssu).toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: 0, maximumFractionDigits: 0}) + \" kWh\";\n    } else {\n        document.getElementById(\"energydistrib\").innerHTML = \"-x-\"\n    }\n    if (en_injetada > 0) {\n        document.getElementById(\"energyinjet\").innerHTML = Math.round(en_injetada).toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: 0, maximumFractionDigits: 0}) + \" kWh\";\n    } else {\n        document.getElementById(\"energyinjet\").innerHTML = \"-x-\"\n    }\n    if (en_creditada > 0) {\n        document.getElementById(\"energycredits\").innerHTML = Math.round(en_creditada).toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: 0, maximumFractionDigits: 0}) + \" kWh\";\n    } else {\n        document.getElementById(\"energycredits\").innerHTML = \"-x-\"\n    }\n\n    if ( Math.abs(x2) > 0.999 ) {\n        document.getElementById(\"img1b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/blank260-150.png\" width=\"60vw\" height=\"30vh\">'\n        document.getElementById(\"demo1b\").innerHTML = \" \"\n    } else {\n        if ( Math.abs(x2) < 0.025 ) {\n            document.getElementById(\"img1b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/seta_verde.png\" width=\"60vw\" height=\"30vh\">'\n        } else if ( Math.abs(x2) < 0.045 ) {\n                document.getElementById(\"img1b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/seta_amarela.png\" width=\"60vw\" height=\"30vh\">'\n        } else if ( Math.abs(x2) < 0.090 ) {\n//                document.getElementById(\"img1b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/seta_atencao.png\" width=\"60vw\" height=\"30vh\">'\n//        } else if ( Math.abs(x2) < 0.180 ) {\n                document.getElementById(\"img1b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/seta_vermelha.png\" width=\"60vw\" height=\"30vh\">'\n        } else {\n                document.getElementById(\"img1b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/xis_vermelho.png\" width=\"60vw\" height=\"30vh\">'\n        }\n        document.getElementById(\"demo1b\").innerHTML = x2.toLocaleString('pt-Br',{style: \"percent\", minimumFractionDigits: 1, maximumFractionDigits: 1});\n    }\n\n    if ( Math.abs(x3) > 0.999 ) {\n        document.getElementById(\"img2b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/blank260-150.png\" width=\"60vw\" height=\"30vh\">'\n        document.getElementById(\"demo2b\").innerHTML = \" \"\n    } else {\n        if ( Math.abs(x3) < 0.015 ) {\n            document.getElementById(\"img2b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/seta_verde.png\" width=\"60vw\" height=\"30vh\">'\n        } else if ( Math.abs(x3) < 0.03 ) {\n                document.getElementById(\"img2b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/seta_amarela.png\" width=\"60vw\" height=\"30vh\">'\n        } else if ( Math.abs(x3) < 0.06 ) {\n//                document.getElementById(\"img2b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/seta_atencao.png\" width=\"60vw\" height=\"30vh\">'\n//        } else if ( Math.abs(x3) < 0.15 ) {\n                document.getElementById(\"img2b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/seta_vermelha.png\" width=\"60vw\" height=\"30vh\">'\n        } else {\n                document.getElementById(\"img2b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/xis_vermelho.png\" width=\"60vw\" height=\"30vh\">'\n        }\n        document.getElementById(\"demo2b\").innerHTML = x3.toLocaleString('pt-Br',{style: \"percent\", minimumFractionDigits: 1, maximumFractionDigits: 1});\n    }\n\n    if ( Math.abs(x4) > 0.999 ) {\n        document.getElementById(\"img3b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/blank260-150.png\" width=\"60vw\" height=\"30vh\">'\n        document.getElementById(\"demo3b\").innerHTML = \" \"\n    } else {\n        if ( Math.abs(x4) < 0.01 ) {\n            document.getElementById(\"img3b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/seta_verde.png\" width=\"60vw\" height=\"30vh\">'\n        } else if ( Math.abs(x4) < 0.02 ) {\n                document.getElementById(\"img3b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/seta_amarela.png\" width=\"60vw\" height=\"30vh\">'\n        } else if ( Math.abs(x4) < 0.04 ) {\n//                document.getElementById(\"img3b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/seta_atencao.png\" width=\"60vw\" height=\"30vh\">'\n//        } else if ( Math.abs(x4) < 0.09 ) {\n                document.getElementById(\"img3b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/seta_vermelha.png\" width=\"60vw\" height=\"30vh\">'\n        } else {\n                document.getElementById(\"img3b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/xis_vermelho.png\" width=\"60vw\" height=\"30vh\">'\n        }\n        document.getElementById(\"demo3b\").innerHTML = x4.toLocaleString('pt-Br',{style: \"percent\", minimumFractionDigits: 1, maximumFractionDigits: 1});\n    }\n\n</script>\n\n<div class=\"widget status-widget\">\n\n    <div style=\"text-align:center; padding: 1.5% 0% 1.5% 0%\" class=\"date\" id=\"arrows\">\n    </div>\n   \n    <section class=\"main\">\n        <table width=\"100%\">\n        \t<tr>\n        \t\t<td width=\"1%\">&nbsp;</td>\n        \t\t<td width=\"17%\">\n        \t\t    <div class=\"descricao\">Medição Usina</div><br>\n                    <div id=\"energyusina\" class=\"value\"></div>\n        \t\t</td>\n        \t\t<td width=\"10%\">\n                    <div id=\"img1b\" class=\"icone\"></div>\n                    <div class=\"espaco\">&nbsp;</div>\n                    <div id=\"demo1b\" class=\"percentage\"></div>\n        \t\t</td>\n        \t\t<td width=\"17%\">\n        \t\t    <div class=\"descricao\">Medição Distribuidora</div><br>\n                    <div id=\"energydistrib\" class=\"value\"></div>\n        \t\t</td>\n        \t\t<td width=\"10%\">\n                    <div id=\"img2b\" class=\"icone\"></div>\n                    <div class=\"espaco\">&nbsp;</div>\n                    <div id=\"demo2b\" class=\"percentage\"></div>\n        \t\t</td>\n        \t\t<td width=\"17%\">\n        \t\t    <div class=\"descricao\">Energia Injetada</div><br>\n                    <div id=\"energyinjet\" class=\"value\"></div>\n        \t\t</td>\n        \t\t<td width=\"10%\">\n                    <div id=\"img3b\" class=\"icone\"></div>\n                    <div class=\"espaco\">&nbsp;</div>\n                    <div id=\"demo3b\" class=\"percentage\"></div>\n        \t\t</td>\n        \t\t<td width=\"17%\">\n        \t\t    <div class=\"descricao\">Energia Creditada</div><br>\n                    <div id=\"energycredits\" class=\"value\"></div>\n        \t\t</td>\n        \t\t<td width=\"1%\">&nbsp;</td>\n        \t</tr>\n        </table>\n    </section>\n</div>\n\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.2vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .descricao {\n    display: inline-block;\n    font-family : Roboto Condensed;\n    font-weight : 600;\n    font-size : 1.8vh;\n    padding: 10px;\n    color: rgb(50,88,127);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    margin-left: 7px;\n    color: rgba(0,0,0,0.54);\n    font-size: 1.5vh;\n}\n\n.status-widget .espaco {\n    font-size: 1.5vh;\n}\n\n.date {\n    font-family: Arial;\n    font-size: 1.25vh;\n    color: darkslategray;\n}\n\n.tam_auto {\n  height: auto;\n  width: auto;\n  text-align: center;\n}\n"
            },
            "title" : "card_auditoria_mensal",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false,
            "displayTimewindow" : false
          },
          "id" : "646a33ae-44a9-4d48-7ec3-d88f228fd7f4",
          "typeFullFqn" : "tenant.teste.html_card_ts"
        },
        "b68ebacd-52c5-4900-ad0e-bc382a47882b" : {
          "type" : "timeseries",
          "sizeX" : 54,
          "sizeY" : 29,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pm_wh_produced_delta_month_sum",
                "type" : "timeseries",
                "label" : "Medição Usina",
                "color" : "rgb(50, 88, 127)",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : true,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack7",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 5,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.813433624309239,
                "postFuncBody" : "return Math.round(value);",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_energia_injetada",
                "type" : "timeseries",
                "label" : "Energia Injetada",
                "color" : "rgb(33, 150, 243)",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : true,
                  "stackId" : "Stack1",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 5,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.7112222408902025,
                "postFuncBody" : "return Math.round(value);",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_energia_creditada",
                "type" : "timeseries",
                "label" : "Créditos",
                "color" : "#04bd53",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 5,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.46766385383799847,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "fat_saldo_creditos_dif",
                "type" : "timeseries",
                "label" : "Delta Créditos",
                "color" : "#ffc107",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 5,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.44353171969496286,
                "postFuncBody" : "return Math.round(value);"
              } ]
            }, {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "13a3d106-d96a-c88d-0ba4-36ceaaa1cb66",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Active Energy_month_sum",
                "type" : "timeseries",
                "label" : "Medição Distribuidora",
                "color" : "rgb(27, 118, 177)",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : true,
                  "lineTension" : 0,
                  "dashedLine" : true,
                  "stackId" : "Stack6",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 5,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.6406337129559836,
                "postFuncBody" : "return Math.round(value);",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1633060799000,
                  "endTimeMs" : 1664596799000
                },
                "interval" : 63244800
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 50000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : false,
              "timeWindows" : [ "12M" ],
              "showLeftScale" : true,
              "leftScaleTicks" : "callback = function(value, index, values) {\nreturn value.toLocaleString('pt-BR', {\nstyle: 'decimal',\nmaximumFractionDigits: 1,\nminimumSignificantDigits: 2\n});\n}\nticks = {\nbeginAtZero: true,\ncallback: callback\n}\nreturn ticks",
              "initialTimeWindow" : "12M",
              "timeWindowsUnits" : "month, month",
              "tooltipSettings" : "var tooltip = {\n    intersect: true,\n    mode: 'index',\n    position: 'nearest',\n    itemSort: function(a, b, data) {\n        //data.datasets[a.datasetIndex].label\n    },\n    callbacks: {\n\n        afterTitle: function(tooltipItem, object) {\n            var total = 0;\n            for (var i = 0; i < tooltipItem\n                .length; i++) {\n                index = tooltipItem[i].datasetIndex\n                if (object.datasets[index].type ==\n                    'bar') {\n                    total = total + (tooltipItem[i]['yLabel'] || 0)\n                }\n            }\n            //total = tooltipItem.map(yLabel).reduce(sum).toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0, minimumFractionDigits: 0}); \n            total = total.toLocaleString('pt-BR', {\n                style: 'decimal',\n                maximumFractionDigits: 0,\n                minimumFractionDigits: 0\n            });\n            return \"Total: \" + total\n        },\n        label: function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            var value = tooltipItem.yLabel || 0\n            label += value\n                .toLocaleString('pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n    }\n}\n\nreturn tooltip",
              "stacked" : true,
              "sortLegendByLabel" : false,
              "roundToUnit" : true
            },
            "title" : "Compensação de Créditos",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "b68ebacd-52c5-4900-ad0e-bc382a47882b",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "6d6ae3c5-5b0a-064b-c671-d60a1acf01d5" : {
          "type" : "timeseries",
          "sizeX" : 44,
          "sizeY" : 9,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "45b30d3f-47a2-c3e3-9a8d-283631e64451",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "vee_validations",
                "type" : "timeseries",
                "label" : "Validações (VEE)",
                "color" : "#2196f3",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : true,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.6591472639786777,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "rollup_jobs_total",
                "type" : "timeseries",
                "label" : "Agregações",
                "color" : "#4caf50",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : true,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.9542607539315917,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "invoices_parsed",
                "type" : "timeseries",
                "label" : "Invoices Parsed",
                "color" : "#f44336",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : true,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : true,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.9098615786817983,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "parser_files_parsed",
                "type" : "timeseries",
                "label" : "Files parsed",
                "color" : "#607d8b",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : true,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : true,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.8694137215238298,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "alarms_execution_time",
                "type" : "timeseries",
                "label" : "Alarm exec time",
                "color" : "#9c27b0",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : true,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.09171918431694404,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "alarms_created",
                "type" : "timeseries",
                "label" : "Alarms created",
                "color" : "#8bc34a",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : true,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.46821503599443526,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "alarms_cleared",
                "type" : "timeseries",
                "label" : "Alarms cleared",
                "color" : "#3f51b5",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : true,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.7165455505785641,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "openapi_hit",
                "type" : "timeseries",
                "label" : "Open API Hits",
                "color" : "#e91e63",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : true,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : true,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.5957786103184626,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "etl_wimd_tb_data_points_interval_left",
                "type" : "timeseries",
                "label" : "ETL Interval rows left",
                "color" : "#ffeb3b",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : true,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : true,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.5316517163956347,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "etl_wimd_tb_data_points_rollup_left",
                "type" : "timeseries",
                "label" : "ETL rollup rows left",
                "color" : "#03a9f4",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : true,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : true,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.4840750734564505,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "task-va-energy",
                "type" : "timeseries",
                "label" : "Vertical Aggregations",
                "color" : "#ff9800",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : true,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : true,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.08195138861230788,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "task-table-size",
                "type" : "timeseries",
                "label" : "Task table size",
                "color" : "#673ab7",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : true,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : true,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.9084257466430362,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "replay_byte_count",
                "type" : "timeseries",
                "label" : "Replay Bytes",
                "color" : "#cddc39",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : true,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.5354268734279162,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : null
              }, {
                "name" : "replay_file_count",
                "type" : "timeseries",
                "label" : "Replay Files",
                "color" : "#009688",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : true,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.986696518413722,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "telemetry_rtt",
                "type" : "timeseries",
                "label" : "Telemetry RTT",
                "color" : "#795548",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : true,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.36577356989180965,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "mqtt-coiote-on-message",
                "type" : "timeseries",
                "label" : "MQTT coIoTe messages",
                "color" : "#795548",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : true,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.9666118225741795,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "timewindowMs" : 3600000,
                "quickInterval" : "CURRENT_DAY",
                "interval" : 120000
              },
              "aggregation" : {
                "type" : "MAX",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454",
                "tickDecimals" : 0,
                "min" : 0
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "timeForComparison" : "days",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "comparisonEnabled" : false,
              "smoothLines" : true,
              "tooltipCumulative" : false,
              "hideZeros" : false,
              "showTooltip" : true,
              "customLegendEnabled" : false,
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "column",
                "position" : "right",
                "sortDataKeys" : null,
                "showMin" : false,
                "showMax" : true,
                "showAvg" : true,
                "showTotal" : true
              }
            },
            "title" : "System performance counters",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : true,
            "actions" : { },
            "decimals" : 0
          },
          "id" : "6d6ae3c5-5b0a-064b-c671-d60a1acf01d5",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "e752fd81-fb16-102a-cde3-5963f8c42f55" : {
          "type" : "timeseries",
          "sizeX" : 13,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "new_bill_event",
                "type" : "timeseries",
                "label" : "Data",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.724668508323381,
                "postFuncBody" : "return moment.unix(value).format('YYYY-MM-DD HH:mm');"
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            } ],
            "timewindow" : {
              "history" : {
                "interval" : 1000,
                "timewindowMs" : 86400060000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              },
              "hideInterval" : true,
              "hideAggregation" : true,
              "hideAggInterval" : true
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : false,
              "defaultPageSize" : 24,
              "enableSearch" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Fechamentos Fatura",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "18px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : {
              "actionCellButton" : [ {
                "name" : "Simulação",
                "icon" : "visibility",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxfxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <mat-spinner [fxShow]=\"loading\" class=\"spinner_container\"></mat-spinner>\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"20px\">\n        <mat-form-field layout-fill>\n            <mat-label>Subgrupo</mat-label>\n            <mat-select name=\"classe_tensao\" [(ngModel)]=\"attributes.classe_tensao\" (ngModelChange)=\"change()\">\n              <mat-option value=\"A4\">A4</mat-option>\n              <mat-option value=\"A3a\">A3a</mat-option>\n              <mat-option value=\"A3\">A3</mat-option>\n              <mat-option value=\"A2\">A2</mat-option>\n              <mat-option value=\"A1\">A1</mat-option>\n            </mat-select><br>\n        </mat-form-field>\n        \n        <mat-form-field fxFlex class=\"mat-block\">\n            <mat-label>Modalidade tarifária</mat-label>\n            <mat-select name=\"modalidade\" [(ngModel)]=\"attributes.enq_tarifario\" (ngModelChange)=\"change()\">\n              <mat-option value=\"verde\">Verde</mat-option>\n              <mat-option value=\"azul\">Azul</mat-option>\n              <mat-option value=\"convencional\">Convencional</mat-option>\n              <mat-option value=\"branca\">Branca</mat-option>\n            </mat-select><br>\n        </mat-form-field>\n        \n        <mat-form-field fxFlex class=\"mat-block\">\n            <mat-label>Amb. contratação</mat-label>\n            <mat-select name=\"ambiente\" [(ngModel)]=\"attributes.status_cliente\" (ngModelChange)=\"change()\">\n              <mat-option value=\"cativo\">Cativo</mat-option>\n              <mat-option value=\"livre\">Livre</mat-option>\n            </mat-select><br>\n        </mat-form-field>\n    </div>\n    \n     <div fxLayout=\"column\" fxLayout.gt-sm=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"20px\">\n         \n\n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"0\" fxFlexOrder.gt-sm=\"0\">\n          <mat-label>Data Inicial</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"sdStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n        \n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"1\" fxFlexOrder.gt-sm=\"1\">\n          <mat-label>Data Final</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"edStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n\n    </div>\n    \n    <div fxLayout=\"column\" ngShow=\"attributes.ambiente == 2\" fxLayoutGap=\"30px\">\n        <mat-checkbox [(ngModel)]=\"energia_cliente_livre\" (ngModelChange)=\"change()\">\n            Calcular custo da energia (TE)\n        </mat-checkbox>\n        \n         <mat-checkbox [(ngModel)]=\"ICMS_energia_cliente_livre\" [disabled]=\"energia_cliente_livre\" (ngModelChange)=\"change()\">\n            Cobrar ICMS/PIS/COFINS da energia do mercado livre<br>na conta da distribuidora\n        </mat-checkbox>                           \n    </div>\n    \n    <br><div [fxShow]=\"!OK\" fxLayoutGap=\"20px\" style=\"color: red; font-weight: bold;\">ATENÇÃO: {{ errorMessage }}</div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(!OK || (isLoading$ | async))\">\n        Enviar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>\n\n",
                "customCss" : ".spinner_container {\n    border-radius: 10px;\n    height: 70px;\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    transform: translate(-50%,-50%);\n    width: 70px;\n    z-index: 3;\n    opacity: 0.5;\n}",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap\n    .get('customDialog'));\nlet attributeService = $injector.get(widgetContext\n    .servicesMap.get('attributeService'));\nlet deviceService = $injector.get(widgetContext.servicesMap\n    .get('deviceService'));\n\nparams = widgetContext.stateController.getStateParams()\nrtu = params.Curr_Site.entityId\n\nfunction getPreviousReading(ts){\n    for (var i=widgetContext.data[0].data.length-1; i>=0; i--) {\n        if (ts > widgetContext.data[0].data[i][0]) {\n            return widgetContext.data[0].data[i][0] + 15*60*1000\n        }\n    }\n    return null\n}\n\nvar r = deviceService.getDevice(rtu.id);\nr.subscribe((r) => {\n    deviceName = r.name\n})\n\ndict = {\n    status_cliente: {\n        0: \"Não definido\",\n        1: \"cativo\",\n        2: \"livre\"\n    },\n    enq_tarifario: {\n        0: \"Não definida\",\n        1: \"azul\",\n        2: \"verde\",\n        3: \"convencional\",\n        4: \"branca\"\n    },\n    classe_tensao: {\n        0: \"Não definida\",\n        1: \"A1\",\n        2: \"A2\",\n        3: \"A3\",\n        4: \"A3a\",\n        5: \"A4\",\n        6: \"AS\",\n        7: \"B1\",\n        8: \"B2\",\n        9: \"B3\"\n    }\n}\n\nvar locale = window.navigator.userLanguage || window\n    .navigator.language;\nmoment.locale(locale);\nwidgetContext.date.locale = locale\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate,\n        InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;\n\n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Simulação de fatura';\n    vm.loading = false\n\n    vm.diffAttrs=['status_cliente','classe_tensao','enq_tarifario']\n    if (vm.diffAttrs.length > 0) {\n\n        var response = attributeService.getEntityAttributes(\n            rtu, 'SERVER_SCOPE', vm.diffAttrs);\n        response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = dict[r[i].key][r[i].value]\n                vm.attributes[r[i].key] = x\n            }\n        })\n\n    }\n\n\n    vm.ed = moment(additionalParams[0],'x')\n    sd_candidate = getPreviousReading(additionalParams[0])\n    if (sd_candidate == null) {\n        vm.sd = moment(vm.ed).subtract(30, 'day')\n    } else {\n        vm.sd = moment(sd_candidate,'x')\n    }  \n\n    vm.sdStr = moment(vm.sd).format('DD/MM/YYYY HH:mm');\n    vm.edStr = moment(vm.ed).format('DD/MM/YYYY HH:mm');\n    \n    vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY HH:mm')\n    vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY HH:mm')\n\n    vm.energia_cliente_livre = true;\n    vm.ICMS_energia_cliente_livre = true;\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.change = function() {\n\n        vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY HH:mm')\n        vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY HH:mm')\n        \n        var days = moment(vm.ed).diff(moment(vm.sd),\n            'days');\n            \n        if (!vm.sd._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data inicial inválida\"\n            return\n        }\n        \n        if (!vm.ed._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data final inválida\"\n            return\n        }\n\n        if (vm.attributes.status_cliente == 'cativo') {\n            vm.energia_cliente_livre = true;\n            vm.ICMS_energia_cliente_livre = true;\n        }\n\n        if (vm.energia_cliente_livre) {\n            vm.ICMS_energia_cliente_livre = true;\n        }\n\n        //check start date greater than end date\n        if (days < 0) {\n            vm.OK = false;\n            vm.errorMessage =\n                \"Data inicial maior que data final\";\n            return;\n        }\n\n        //check timewindow days\n        //if (days > 33 || days < 27) {\n        //    vm.OK = false\n        //    vm.errorMessage = \"Simulação deve ter entre 27 e 33 dias.\"\n        //    return\n        //}\n\n        vm.OK = true;\n    }\n\n\n    vm.send = function() {\n\n        sdSend = vm.sd.toISOString().substring(0, 19)\n        edSend = vm.ed.toISOString().substring(0, 19)\n\n        if (vm.attributes.status_cliente == 'cativo') {\n            ambiente = '';\n        } else {\n            ambiente = '&livre';\n        }\n\n        url =\n            `https://solarhub.engecomp.io/fatura_simulada_ws/ca92ecde-2ffb-4ffa-8285-6f0ca2831e42?device=${deviceName}&sd=${sdSend}&ed=${edSend}&classe=${vm.attributes.classe_tensao}&modalidade=${vm.attributes.enq_tarifario}&energia_ml=${vm.energia_cliente_livre}&impostos_energia_ml=${vm.ICMS_energia_cliente_livre}&of=fine${ambiente}&exact_dates`;\n        \n        vm.loading = true\n        fetch(url, {\n            method: \"GET\"\n        }).then(function(r) {\n            html = r.text().then(function(\n            data) {\n                vm.loading = false\n                var win = window.open(\n                    \"\", \"_blank\");\n                win.name = \"Simulação\";\n                win.document.body\n                    .innerHTML = data;\n            })\n        })\n    }\n\n}\n",
                "customResources" : [ ],
                "id" : "4d11ff44-04ce-9d82-d780-7d86d9eef0eb"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "displayTimewindow" : false
          },
          "id" : "e752fd81-fb16-102a-cde3-5963f8c42f55",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "7844f128-c034-aca3-7068-3dafaf6661e2" : {
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "padrinho",
                "type" : "attribute",
                "label" : "Padrinho",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.8954044961787657,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Padrinho"
            },
            "title" : "New Update server string attribute",
            "dropShadow" : true,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "7844f128-c034-aca3-7068-3dafaf6661e2",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "e43be8a9-fbf3-43e9-8dff-389c726b39cd" : {
          "type" : "timeseries",
          "sizeX" : 54,
          "sizeY" : 35,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "temp",
                "type" : "timeseries",
                "label" : "Temperatura",
                "color" : "#3d2f2e",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack47",
                  "aggUnit" : [ "minute" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.21372140897228342
              }, {
                "name" : "temp_s1",
                "type" : "timeseries",
                "label" : "F1",
                "color" : "#4caf50",
                "settings" : {
                  "datasetHidden" : true,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.8598398414350386,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "temp_s2",
                "type" : "timeseries",
                "label" : "F2",
                "color" : "#f44336",
                "settings" : {
                  "datasetHidden" : true,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.8212795186108999,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "temp_s3",
                "type" : "timeseries",
                "label" : "F3",
                "color" : "#ffc107",
                "settings" : {
                  "datasetHidden" : true,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.6320697888413429,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1659150899000,
                  "endTimeMs" : 1659755699000
                },
                "interval" : 5184000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 50000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "realtimeChart" : true,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : true,
              "timeWindows" : [ "Hoje", "7D" ],
              "showLeftScale" : true,
              "leftScaleTicks" : "callback = function(value, index, values) {\nreturn value.toLocaleString('pt-BR', {\nstyle: 'decimal',\nmaximumFractionDigits: 1,\nminimumSignificantDigits: 2\n});\n}\nticks = {\nbeginAtZero: true,\ncallback: callback\n}\nreturn ticks",
              "initialTimeWindow" : "7D",
              "timeWindowsUnits" : "minute,minute",
              "tooltipSettings" : "var tooltip = {\n    intersect: true,\n    mode: 'index',\n    position: 'nearest',\n    itemSort: function(a, b, data) {\n        //data.datasets[a.datasetIndex].label\n    },\n    callbacks: {\n\n        afterTitle: function(tooltipItem, object) {\n            var total = 0;\n            for (var i = 0; i < tooltipItem\n                .length; i++) {\n                index = tooltipItem[i].datasetIndex\n                if (object.datasets[index].type ==\n                    'bar') {\n                    total = total + (tooltipItem[i]['yLabel'] || 0)\n                }\n            }\n            //total = tooltipItem.map(yLabel).reduce(sum).toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0, minimumFractionDigits: 0}); \n            total = total.toLocaleString('pt-BR', {\n                style: 'decimal',\n                maximumFractionDigits: 0,\n                minimumFractionDigits: 0\n            });\n//            return \"Total: \" + total\n        },\n        label: function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            var value = tooltipItem.yLabel || 0\n            label += value\n                .toLocaleString('pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n    }\n}\n\nreturn tooltip",
              "stacked" : true,
              "sortLegendByLabel" : true,
              "roundToUnit" : true,
              "rightScaleTicks" : "callback = function(value, index, values) {\nreturn value.toLocaleString('pt-BR', {\nstyle: 'decimal',\nmaximumFractionDigits: 1,\nminimumSignificantDigits: 2\n});\n}\nticks = {\nbeginAtZero: true,\ncallback: callback\n}\nreturn ticks",
              "showContractedDemandCurves" : false,
              "showOverFlowInRed" : false,
              "roundingMethod" : "same",
              "showRightScale" : false,
              "showRightScale2" : false
            },
            "title" : "Temperatura do Transformador (.C)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "e43be8a9-fbf3-43e9-8dff-389c726b39cd",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "71bfcfab-3e90-4252-9606-1cb627234944" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "energy_average_year_rtu",
                "type" : "timeseries",
                "label" : "valor",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.33601941569179883,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return value.toLocaleString('pt-BR', {style: 'decimal', maximumFractionDigits: 0})+' kWh'; "
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#ffffff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <div layout=\"column\" class=\"main\">\n        <div class=\"value\">${valor}</div>\n    </div>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Consumo Anual (est.)",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "71bfcfab-3e90-4252-9606-1cb627234944",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "fbd14d19-c2c1-42d6-ac9a-efab190d064d" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_saldo_creditos",
                "type" : "timeseries",
                "label" : "fat_saldo_creditos",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.504811130279313,
                "postFuncBody" : "return value.toLocaleString('pt-BR', {style: 'decimal', maximumFractionDigits: 0})+' kWh'; "
              } ],
              "entityAliasId" : "9372d9cb-e9ba-c2a0-1b4c-4316d7a28718"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#ffffff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <div layout=\"column\" class=\"main\">\n        <div class=\"value\">${fat_saldo_creditos}</div>\n    </div>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Saldo de Créditos",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "fbd14d19-c2c1-42d6-ac9a-efab190d064d",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "f9a6a10f-5850-4ec1-ad09-471e77e50b01" : {
          "type" : "timeseries",
          "sizeX" : 54,
          "sizeY" : 29,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "9372d9cb-e9ba-c2a0-1b4c-4316d7a28718",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "Consumo",
                "color" : "#f44336",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 5,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.028088852031393108,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "fat_energia_creditada",
                "type" : "timeseries",
                "label" : "Créditos",
                "color" : "#04bd53",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 5,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.46766385383799847,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "fat_saldo_creditos",
                "type" : "timeseries",
                "label" : "Saldo de Créditos",
                "color" : "#ffc107",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 5,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.44353171969496286,
                "postFuncBody" : "return Math.round(value);"
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1625108399000,
                  "endTimeMs" : 1656644399000
                },
                "interval" : 63244800
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 50000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : false,
              "timeWindows" : [ "12M" ],
              "showLeftScale" : true,
              "leftScaleTicks" : "callback = function(value, index, values) {\nreturn value.toLocaleString('pt-BR', {\nstyle: 'decimal',\nmaximumFractionDigits: 1,\nminimumSignificantDigits: 2\n});\n}\nticks = {\nbeginAtZero: true,\ncallback: callback\n}\nreturn ticks",
              "initialTimeWindow" : "12M",
              "timeWindowsUnits" : "month, month",
              "tooltipSettings" : "var tooltip = {\n    intersect: true,\n    mode: 'index',\n    position: 'nearest',\n    itemSort: function(a, b, data) {\n        //data.datasets[a.datasetIndex].label\n    },\n    callbacks: {\n\n        label: function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            var value = tooltipItem.yLabel || 0\n            label += value\n                .toLocaleString('pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n    }\n}\n\nreturn tooltip",
              "stacked" : false,
              "sortLegendByLabel" : false,
              "roundToUnit" : true,
              "showContractedDemandCurves" : false,
              "showOverFlowInRed" : false,
              "roundingMethod" : "same",
              "showRightScale" : false,
              "showRightScale2" : false
            },
            "title" : "Balanço Consumo x Créditos (kWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "f9a6a10f-5850-4ec1-ad09-471e77e50b01",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "8e6648d9-38d6-482d-8f88-52e3bfeeacce" : {
          "type" : "latest",
          "sizeX" : 36,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Consumidor",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "entitiesTitle" : "Pontos de Consumo",
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Tabela de Pontos de Consumo",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "235f5d6f-8756-0b73-eb1a-db05c643abcf",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "last_telemetry",
                "type" : "attribute",
                "label" : "Status",
                "color" : "#e91e63",
                "settings" : {
                  "columnWidth" : "7%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var html = {\n    0: '<html>&nbsp;</html>',\n    1: '<html><img title=\"Online\" src=\"https://solarhub.engecomp.io/res/ok.png\" width=\"20\" height=\"20\"></html>',\n    2: '<html><img title=\"Offline\" src=\"https://solarhub.engecomp.io/res/nok.png\" width=\"20\" height=\"20\"></html>',\n    3: '<html><img title=\"Alarme\" src=\"https://solarhub.engecomp.io/res/attention6.png\" width=\"20\" height=\"20\"></html>'\n};\n\nreturn html[value];"
                },
                "_hash" : 0.3319542789910914,
                "postFuncBody" : "x = parseInt(moment.utc().format('x'))\nvar horas = ((x - value) / 3600000);\n\nvar tolerancia = 3;\n\n// calcula se tá online ou offline\nif (horas > tolerancia) { \n    return 2;     // vermelho NotOk \n}\n\nreturn 1;         // verde OK"
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "Consumidor",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "20%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.7759033120837209,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~SEM NOME\"    \n}\nreturn nome;"
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "ID",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "10%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.46047340608980813
              }, {
                "name" : "last_telemetry",
                "type" : "attribute",
                "label" : "Ult Conexão",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "15%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return moment.unix(value/1000).format('DD-MMM HH:mm');"
                },
                "_hash" : 0.9704030085750541
              }, {
                "name" : "consumo_projetado_kwh",
                "type" : "attribute",
                "label" : "MWh Proj",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "12%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value === null) {\n    return \"\";\n} else {\n    return value.toLocaleString('pt-br',{minimumSignificanDigits: 3, minimumFractionDigits:0, maximumFractionDigits:1});\n}"
                },
                "_hash" : 0.628657354055727,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    return value/1000;\n    \n}\nreturn \" \";"
              }, {
                "name" : "consumo_projetado_mwm",
                "type" : "attribute",
                "label" : "MWm Proj",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "12%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value === null) {\n    return \"\";\n} else {\n    return value.toLocaleString('pt-br',{minimumSignificanDigits: 3, minimumFractionDigits:1, maximumFractionDigits:2});\n}"
                },
                "_hash" : 0.11338644952117138,
                "decimals" : 3,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value < 0) {\n        return 0;\n    }\n    return Math.round(value*1000,0)/1000;\n\n}\nreturn \" \";"
              }, {
                "name" : "ufer",
                "type" : "attribute",
                "label" : "UFER",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "12%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value === null) {\n    return \"\";\n} else {\n    return value.toLocaleString('pt-br',{minimumSignificanDigits: 3, minimumFractionDigits:0, maximumFractionDigits:0});\n}"
                },
                "_hash" : 0.6483828682273942,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value < 0) {\n        return 0;\n    }\n    return Math.round(value,0);\n\n}\nreturn \" \";"
              } ]
            } ],
            "enableDataExport" : true,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "name" : "change entity",
                "icon" : "more_horiz",
                "type" : "custom",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\nvar params = widgetContext.stateController.getStateParams()\n\nif (!params[\"Curr_Site\"]) {\n    params[\"Curr_Site\"] = {};\n}\nparams[\"Curr_Site\"] = {entityId: entityId};\n\n$injector.get(widgetContext.servicesMap.get('deviceService')).getDevice(entityId.id).subscribe((device) => {\n    if (device.type == 'UC') {\n        destination = \"ssu_geral_uc\";\n    } else {\n        destination = \"ssu_site\";\n    }\n    widgetContext.stateController.updateState(destination, params, false);\n});",
                "id" : "1633b5ed-8873-48b9-0ea8-055d147a9ffe"
              } ],
              "headerButton" : [ {
                "id" : "db077380-0a48-5ce3-02d0-57ad29e95ca8",
                "name" : "Alarmes",
                "icon" : "warning",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "ssu_alarmes",
                "setEntityId" : false
              }, {
                "id" : "8488c5bc-f7e7-9230-6ab8-faefed25d39d",
                "name" : "Exportação de Dados",
                "icon" : "file_download",
                "type" : "customPretty",
                "customHtml" : "<!DOCTYPE html>\n<head>\n    <style>\n    </style>\n</head>\n<html ng-strict-di>\n    <body>\n        <md-dialog aria-label=\"{{ vm.importTitle | translate }}\">\n            <form name=\"dialog.theForm\">\n                <md-toolbar>\n                    <div class=\"md-toolbar-tools\">\n                        <h2 translate>{{ vm.importTitle }}</h2>\n                        <span flex></span>\n                        <md-button class=\"md-icon-button\" ng-click=\"vm.cancel()\">\n                            <ng-md-icon icon=\"close\" aria-label=\"{{ \\'dialog.close\\' | translate }}\"></ng-md-icon>\n                        </md-button>\n                    </div>\n                </md-toolbar>\n                <md-progress-linear class=\"md-warn\" md-mode=\"indeterminate\" ng-disabled=\"!$root.loading\" ng-show=\"$root.loading\\\"></md-progress-linear>\n                <span style=\"min-height: 5px;\" flex=\"\" ng-show=\"!$root.loading\"></span>\n                <md-dialog-content style=\"padding: 20px 20px 20px 20px;\" ng-cloak=\"\">\n\n                            <md-input-container layout-fill>\n                                <label>Layout</label>\n                                <md-select name=\"layout\" ng-model=\"vm.layout\">\n                                  <md-option value=\"completo\">Completo</md-option>\n                                  <md-option ng-disabled=\"vm.integracao != 'all'\" value=\"simplificado\">Simplificado</md-option>\n                                </md-select><br>\n                            </md-input-container>\n\n                            <md-input-container layout-fill>\n                                <label>Integração</label>\n                                <md-select name=\"integracao\" ng-model=\"vm.integracao\" ng-change=\"vm.change()\">\n                                  <md-option value=\"all\">15 minutos</md-option>\n                                  <md-option ng-disabled=\"vm.layout == 'simplificado'\" value=\"hour\">1 hora</md-option>\n                                  <md-option ng-disabled=\"vm.layout == 'simplificado'\" value=\"day\">1 dia</md-option>\n                                  <md-option ng-disabled=\"vm.layout == 'simplificado'\" value=\"month\">1 mês</md-option>\n                                </md-select><br>\n                            </md-input-container>\n                            \n                            <md-input-container layout-fill>\n                                <label>Formato</label>\n                                <md-select name=\"format\" ng-model=\"vm.format\">\n                                  <md-option value=\"xls\">xls</md-option>\n                                  <md-option value=\"csv\">csv</md-option>\n                                </md-select><br>\n                            </md-input-container>\n\n                             <div layout=\"column\" layout-gt-sm=\"row\" layout-padding ng-cloak>\n                                <div layout=\"column\" flex-order=\"1\" flex-order-gt-sm=\"0\">\n                                    <md-subheader>Start Date</md-subheader>\n                                    <input type=\"date\" ng-model=\"vm.sd\" ng-change=\"vm.change()\">\n                                </div>\n                                \n                                <div layout=\"column\" flex-order=\"1\" flex-order-gt-sm=\"1\">\n                                    <md-subheader>End Date</md-subheader>\n                                    <input type=\"date\" ng-model=\"vm.ed\" ng-change=\"vm.change()\">\n                                </div>\n                                <div layout=\"column\" flex-order=\"0\" flex-order-gt-sm=\"2\">\n                                    <md-subheader>Dates</md-subheader>\n                                    <div>\n                                        <label style=\"font-size: x-small;\">Start</label>\n                                        <div>{{vm.sd | date:shortDate}}</div>\n                                    </div>\n                                    <div>\n                                        <label style=\"font-size: x-small;\">End</label>\n                                        <div>{{vm.ed | date:shortDate}}</div>\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            \n                            <label>\n                                Tamanho estimado: {{ vm.linhas }} linhas<br><br>\n                            </label>\n                            \n                            <label>\n                                <input type=\"checkbox\" ng-model=\"vm.async\"> Envio por email (recomendado)\n                            </label>\n                            \n                            <div id=\"form\"></div>\n\n                </md-dialog-content>\n                <md-dialog-actions layout=\"row\">\n                    <span flex></span>\n                    <md-button ng-click= \"vm.send()\" type=\"submit\" class=\"md-raised md-primary\">ENVIAR</md-button>\n                    <md-button ng-disabled=\"$root.loading\" ng-click=\"vm.cancel()\" style=\"margin-right:20px;\">CANCELAR</md-button>\n                </md-dialog-actions>\n            </form>\n        </md-dialog>\n    </body>\n</html>",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\nvar\n    $mdDialog = $injector.get('$mdDialog'),\n    $mdToast = $injector.get('$mdToast'),\n    $document = $injector.get('$document');\n    userService = $injector.get('userService');\n\nvar user = userService.getCurrentUser();\nvar userMail = user.sub\n\n//var url = 'https://solarhub.engecomp.io/data_export_form'\nvar url = 'https://solarhub.engecomp.io/be/data_export/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\n\npayload = createJSON();\n\nshowInfoDialog()\n\nfunction createJSON() {\n    var payload = {};\n    payload.devices = [];\n    payload.email = userMail\n\n    \n    for (var i = 0; i < widgetContext.data.length; i++) {\n        var item = {};\n        if (widgetContext.data[i].dataKey.name == 'description') {\n            item.id = widgetContext.data[i].datasource.name\n            \n            if (typeof widgetContext.data[i].data[0] === 'undefined') {\n                item.name = \"\"\n            } else {\n                item.name = widgetContext.data[i].data[0][1]\n            }\n            \n            payload.devices.push(item)\n        }\n    }\n    return payload\n}\n\n\nfunction showInfoDialog() {\n    \n\n    $mdDialog.show({\n        controller: ['$mdDialog',\n            InfoDialogController\n        ],\n        controllerAs: 'vm',\n        scope: widgetContext.$scope,\n        preserveScope: true,\n        template: htmlTemplate,\n        parent: angular.element($document[0].body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        fullscreen: true\n    })\n}\n\n\n\nfunction InfoDialogController($mdDialog) {\n    let vm = this;\n    vm.importTitle = 'Exportação de dados'\n\n    vm.ed = moment.utc().startOf('day').toDate();\n    vm.sd = moment(vm.ed).subtract(1, 'month').toDate();\n    vm.integracao = \"all\"\n    vm.format = \"xls\"\n    vm.layout = \"simplificado\"\n    vm.async = true \n\n    vm.cancel = () => {\n        $mdDialog.cancel();\n    }\n\n    vm.change = () => {\n        \n        var diffTime = Math.abs(vm.ed - vm.sd);\n        var diffMonths = diffTime / (1000 * 60 * 60 * 24 * 30)\n        var linhasPorMes = 0\n        \n        /*\n        if (vm.layout == \"simplificado\") {\n            vm.integracao = \"all\"\n        }\n        \n        if (vm.integracao != \"all\") {\n            vm.layout = \"completo\"\n        }*/\n        \n        switch(vm.integracao){\n            case \"all\": \n                linhasPorMes = 24*4*30\n                break;\n            case \"hour\":\n                linhasPorMes = 24*30\n                break;\n            case \"day\":\n                linhasPorMes = 30\n                break;\n            case \"month\":\n                linhasPorMes = 1\n                break;   \n        }\n        \n        vm.linhas = Math.ceil(linhasPorMes * diffMonths * payload.devices.length)\n        \n        if (vm.linhas < 5000) {\n            vm.async = false\n        } else {\n            vm.async = true\n        }\n        \n    }\n    \n    vm.change()\n\n\n    vm.send = () => {\n\n        let formData = new FormData();\n        \n        sd = moment(vm.sd).format('YYYY-MM-DD');\n        ed = moment(vm.ed).format('YYYY-MM-DD');\n        \n        payload.start_date = sd\n        payload.end_date = ed\n        payload.interval = vm.integracao\n        payload.output_format = vm.format\n        payload.layout = vm.layout\n        payload.getnow = !vm.async\n        payload.offset = (new Date().getTimezoneOffset()) / -15\n        \n        formData.append(\"payload\", JSON.stringify( payload ))\n\n        var fetchParams = { method: \"POST\", body: formData }\n        \n        fetch(url, fetchParams).then(function(r) {\n            if (r.status == 200) {\n\n                return r.json().then(\n                    function(data) {\n                        if (data.link && data.link.length > 0) {\n                            window.open(data.link,'_blank');\n                        }\n                        else {\n                            $mdToast.show(\n                                $mdToast.simple()\n                                .textContent('Sucesso. Um link será enviado para o seu e-mail')\n                                .position(\"top left\")\n                                .hideDelay(3000)\n                            )\n                        }\n                    })\n            }\n            else {\n                $mdToast.show(\n                    $mdToast.simple()\n                    .textContent('Erro. Por favor contacte a Engecomp.')\n                    .position(\"top left\")\n                    .hideDelay(3000)\n                )\n            }\n            \n        }); \n        \n\n        \n        vm.cancel();  \n        \n    }\n\n\n}\n\n\ntoastHTML = `\n<md-toast>\n  <span class=\"md-toast-text\" flex>Sucesso. Um link será enviado para o seu e-mail.</span>\n  <md-button class=\"md-highlight\" ng-click=\"openMoreInfo($event)\">\n    More info\n  </md-button>\n  <md-button ng-click=\"closeToast()\">\n    Close\n  </md-button>\n</md-toast>\n`\n\n"
              }, {
                "id" : "9ee7c44d-c767-c103-530e-38a880cf4e2a",
                "name" : "Adicionar UC",
                "icon" : "cloud_upload",
                "type" : "custom",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\nvar\n    $mdDialog = $injector.get('$mdDialog'),\n    $document = $injector.get('$document');\n    userService = $injector.get('userService');\n    \nvar url = 'https://solarhub.engecomp.io/invoices'\n//var url = 'https://solarhub.engecomp.io/'\n//var url = 'http://127.0.0.1:5000/'\nvar user = userService.getCurrentUser();\nvar userMail = user.sub\nvar parent_id = widgetContext.stateController.getEntityId('Curr_customer')\ndebugger;\n\nvar infoDialogTemplate = '<md-dialog aria-label=\\\"{{ vm.importTitle | translate }}\\\">'+\n'    <form name=\\\"theForm\\\">'+\n'        <md-toolbar>'+\n'            <div class=\\\"md-toolbar-tools\\\">'+\n'                <h2 translate>{{ vm.importTitle }}</h2>'+\n'                <span flex></span>'+\n'                <md-button class=\\\"md-icon-button\\\" ng-click=\\\"vm.cancel()\\\">'+\n'                    <ng-md-icon icon=\\\"close\\\" aria-label=\\\"{{ \\'dialog.close\\' | translate }}\\\"></ng-md-icon>'+\n'                </md-button>'+\n'            </div>'+\n'        </md-toolbar>'+\n'        <md-progress-linear class=\\\"md-warn\\\" md-mode=\\\"indeterminate\\\" ng-disabled=\\\"!$root.loading\\\" ng-show=\\\"$root.loading\\\"></md-progress-linear>'+\n'        <span style=\\\"min-height: 5px;\\\" flex=\\\"\\\" ng-show=\\\"!$root.loading\\\"></span>'+\n'        <md-dialog-content>'+\n'            <div class=\\\"md-dialog-content\\\">'+\n'               <div layout=\\\"column\\\" layout-sm=\\\"column\\\" layout-align=\\\"space-around\\\" ng-disabled=\\\"!vm.loadingFiles\\\" ng-show=\\\"vm.loadingFiles\\\"\">'+\n'                   <div layout=\\\"row\\\" layout-sm=\\\"column\\\" layout-align=\\\"space-around\\\">'+\n'                       <md-progress-circular md-mode=\\\"determinate\\\" ng-value=\\\"{{ vm.progress }}\\\" md-diameter=\\\"100\\\"></md-progress-circular>'+\n'                   </div>'+\n'                   <div layout=\\\"row\\\" layout-sm=\\\"column\\\" layout-align=\\\"space-around\\\">'+\n'                       <div>Aguarde...</div>'+\n'                   </div>'+\n'               </div>'+\n'                <fieldset ng-disabled=\\\"$root.loading\\\">'+\n'                    <div layout=\\\"column\\\" layout-padding>'+\n'                        <div class=\\\"tb-container\\\">'+\n'                            <label class=\\\"tb-label\\\" translate>{{ vm.importFileLabel }}</label>'+\n'                            <div flow-init=\\\"{singleFile:false}\\\"'+\n'                                 flow-file-added=\\\"vm.fileAdded( $file )\\\" class=\\\"tb-file-select-container\\\">'+\n'                                <div class=\\\"tb-file-clear-container\\\">'+\n'                                    <md-button ng-click=\\\"vm.clearFile()\\\"'+\n'                                               class=\\\"tb-file-clear-btn md-icon-button md-primary\\\" aria-label=\\\"{{ \\'action.remove\\' | translate }}\\\">'+\n'                                        <md-tooltip md-direction=\\\"top\\\">'+\n'                                            {{ \\'action.remove\\' | translate }}'+\n'                                        </md-tooltip>'+\n'                                        <md-icon aria-label=\\\"{{ \\'action.remove\\' | translate }}\\\" class=\\\"material-icons\\\">'+\n'                                            close'+\n'                                        </md-icon>'+\n'                                    </md-button>'+\n'                                </div>'+\n'                                <div class=\\\"alert tb-flow-drop\\\" flow-drop>'+\n'                                    <label for=\\\"select\\\" translate>Arraste o arquivo ou clique aqui para selecionar</label>'+\n'                                    <input class=\\\"file-input\\\" type=\\\"file\\\" flow-btn flow-attrs=\\\"{accept:\\'.pdf\\'}\\\" id=\\\"select\\\">'+\n'                                </div>'+\n'                            </div>'+\n'                        </div>'+\n'                        <div>'+\n'                            <div ng-show=\\\"!vm.fileName\\\" translate>import.no-file</div>'+\n'                            <div ng-show=\\\"vm.fileName\\\">{{ vm.fileName }}</div>'+\n'                        </div>'+\n'                    </div>'+\n'                </fieldset>'+\n'            </div>'+\n'        </md-dialog-content>'+\n'        <md-dialog-actions layout=\\\"row\\\">'+\n'            <span flex></span>'+\n'            <md-button ng-click= \\\"vm.send()\\\" ng-disabled=\\\"$root.loading || !vm.fileName\\\" type=\\\"submit\\\" class=\\\"md-raised md-primary\\\">'+\n'                {{ \\'action.import\\' | translate }}'+\n'            </md-button>'+\n'            <md-button ng-disabled=\\\"$root.loading\\\" ng-click=\\\"vm.cancel()\\\" style=\\\"margin-right:20px;\\\">{{ \\'action.cancel\\' | translate }}</md-button>'+\n'        </md-dialog-actions>'+\n'    </form>'+\n'</md-dialog>'\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    $mdDialog.show({\n        controller: ['$mdDialog', InfoDialogController],\n        controllerAs: 'vm',\n        template: infoDialogTemplate,\n        parent: angular.element($document[0].body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        fullscreen: true\n    })\n}\n\n\n\nfunction InfoDialogController($mdDialog) {\n    let vm = this;\n    vm.importTitle = 'Importar contas em PDF'\n    vm.importFileLabel = 'Arquivos PDF originais da concessionária'\n    vm.fileName = ''\n    vm.loadingFiles = false\n\n    widgetContext.$scope.file = []\n\n    vm.cancel = () =>\n    {\n        $mdDialog.cancel();\n    }\n    \n    vm.clearFile = () => \n    {\n        vm.fileName = '';\n        widgetContext.$scope.file = []\n    }\n    \n    vm.fileAdded = ($file) => \n    {\n        if ($file.getExtension() === 'pdf') {\n            vm.fileName = vm.fileName+$file.name+' // ';\n            widgetContext.$scope.file.push($file)\n        } else {\n            window.alert(\"Extensão inválida\")\n        }\n    }\n    \n        vm.send = () => \n    {\n        vm.loadingFiles = true;\n        debugger;\n        for(var i=0; i < widgetContext.$scope.file.length; i++) {\n            vm.progress = Math.round((i+1) / widgetContext.$scope.file.length * 100)\n            let req = new XMLHttpRequest();\n            let formData = new FormData();\n            \n            var instructions = {\n                url: \"http://localhost:5000/gd\",\n                parent_id: parent_id,\n                tenant: 'bt',\n                usage: 1,\n                user: userMail\n            };\n            \n            formData.append(\"invoice\", widgetContext.$scope.file[i].file);\n            formData.append(\"instructions\", JSON.stringify( instructions ))\n            debugger;\n            fetch(url, {method: \"POST\", body: formData}).then(function(r) {\n                \n            }\n            ); \n            \n            //try {\n            //    let r = await fetch(url, {method: \"POST\", body: formData}); \n            //}\n            //catch(error) {\n            //    vm.loadingFiles = false;\n            //    alert(\"Ocorreu um erro no envio do arquivo.\")\n            //}\n        }\n        vm.loadingFiles = false;\n        vm.cancel();\n    }\n    \n\n}"
              } ],
              "actionCellButton" : [ ],
              "rowDoubleClick" : [ ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "8e6648d9-38d6-482d-8f88-52e3bfeeacce",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "951160da-a2a8-4feb-b646-d59dce803ac7" : {
          "type" : "static",
          "sizeX" : 54,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Visão Consolidada do Cliente</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 30px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "label Clientes",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "951160da-a2a8-4feb-b646-d59dce803ac7",
          "typeFullFqn" : "system.cards.html_card"
        },
        "af59e6e6-05bc-49d2-9474-117ff24720ce" : {
          "type" : "timeseries",
          "sizeX" : 29,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy_month_max",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ "month" ]
                },
                "_hash" : 0.09957695826280699,
                "postFuncBody" : "return value*4;"
              } ],
              "entityAliasId" : "537cefd0-9672-24ca-46cd-d952c3f0a036"
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1588301999000,
                  "endTimeMs" : 1619837999000
                },
                "interval" : 63244800
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : true,
              "timeWindows" : [ "12M", "Ano" ],
              "timeWindowsUnits" : "month,month",
              "initialTimeWindow" : "12M",
              "showContractedDemandCurves" : false,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "showRightScale" : false,
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: false,\n    callback: callback\n}\n\nreturn ticks",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            label += tooltipItem.yLabel.toLocaleString(\n                'pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n        \nfilter = function (tooltipItem, data) {return tooltipItem.value != \"NaN\"}\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n\n    }\n}\n\nreturn tooltip",
              "stacked" : true,
              "roundToUnit" : true
            },
            "title" : "Demanda Máxima (kW)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            }
          },
          "id" : "af59e6e6-05bc-49d2-9474-117ff24720ce",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "86428676-8803-ede1-bd6c-36c0698fc46f" : {
          "type" : "timeseries",
          "sizeX" : 54,
          "sizeY" : 29,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy_month_max",
                "type" : "timeseries",
                "label" : "Demanda Atual",
                "color" : "#2196f3",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true,
                    "comparisonValuesLabel" : "Demanda Anterior",
                    "color" : "rgba(33, 150, 243, 0.5)"
                  }
                },
                "_hash" : 0.18569100560236795,
                "units" : "kW",
                "postFuncBody" : "return Math.round(value*4);"
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 33696000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "timeForComparison" : "years",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : false
              },
              "comparisonEnabled" : true,
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "column",
                "position" : "right",
                "showMin" : false,
                "showMax" : false,
                "showAvg" : false,
                "showTotal" : false
              }
            },
            "title" : "Demanda (kW) x Ano Anterior",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "0.4%",
              "padding-left" : "0.4%"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : true,
            "actions" : { }
          },
          "id" : "86428676-8803-ede1-bd6c-36c0698fc46f",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "28caf0e0-2243-403a-9f22-9db3806da110" : {
          "type" : "timeseries",
          "sizeX" : 54,
          "sizeY" : 29,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy_month_sum",
                "type" : "timeseries",
                "label" : "Consumo Atual",
                "color" : "#2196f3",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true,
                    "comparisonValuesLabel" : "Consumo Anterior",
                    "color" : "rgba(33, 150, 243, 0.5)"
                  }
                },
                "_hash" : 0.18569100560236795,
                "units" : "kWh",
                "postFuncBody" : "return Math.round(value);"
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 33696000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "timeForComparison" : "years",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : false
              },
              "comparisonEnabled" : true,
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "column",
                "position" : "right",
                "showMin" : false,
                "showMax" : false,
                "showAvg" : false,
                "showTotal" : false
              }
            },
            "title" : "Consumo (kWh) x Ano Anterior",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "0.4%",
              "padding-left" : "0.4%"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : true,
            "actions" : { }
          },
          "id" : "28caf0e0-2243-403a-9f22-9db3806da110",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "fbd24681-e944-c308-6073-1b5fd615e93b" : {
          "type" : "timeseries",
          "sizeX" : 8,
          "sizeY" : 5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Active Energy_month_max",
                "type" : "timeseries",
                "label" : "Demanda",
                "color" : "#2196f3",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true,
                    "comparisonValuesLabel" : "Ano Anterior",
                    "color" : "#48953e"
                  }
                },
                "_hash" : 0.09421565554513855,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return Math.round(value*4);"
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "timewindowMs" : 33696000000,
                "quickInterval" : "CURRENT_DAY",
                "interval" : 86400000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : false,
                "color" : "#545454"
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "timeForComparison" : "years",
              "xaxisSecond" : {
                "axisPosition" : "bottom",
                "showLabels" : true
              },
              "comparisonEnabled" : true,
              "customLegendEnabled" : false,
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "column",
                "position" : "right",
                "sortDataKeys" : false,
                "showMin" : false,
                "showMax" : false,
                "showAvg" : false,
                "showTotal" : false
              }
            },
            "title" : "New Timeseries Line Chart",
            "dropShadow" : true,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : true,
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { }
          },
          "row" : 0,
          "col" : 0,
          "id" : "fbd24681-e944-c308-6073-1b5fd615e93b",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "dd800e2a-1f3d-1f05-3252-7ccf57866d07" : {
          "type" : "timeseries",
          "sizeX" : 44,
          "sizeY" : 9,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "45b30d3f-47a2-c3e3-9a8d-283631e64451",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "etl_wimd_raspi_tb_rollup_data_points",
                "type" : "timeseries",
                "label" : "RPi Rollup",
                "color" : "#2196f3",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.7724699247169718,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "etl_wimd_raspi_tb_interval_data_points",
                "type" : "timeseries",
                "label" : "RPi interval",
                "color" : "#4caf50",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.26817083847207357,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "etl_wimd_tb_data_points_interval",
                "type" : "timeseries",
                "label" : "RTU Interval",
                "color" : "#f44336",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.23142697045444205,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "etl_wimd_tb_data_points_rollup",
                "type" : "timeseries",
                "label" : "RTU Rollup",
                "color" : "#ffc107",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.1509782294804285,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "task_va_energy_data_points",
                "type" : "timeseries",
                "label" : "Agregação Vertical",
                "color" : "#607d8b",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.001361935278608728,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "persist_hierarchy_average_year_data_points",
                "type" : "timeseries",
                "label" : "Média anual",
                "color" : "#9c27b0",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.6873141076728848,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "virtual_v2_new_data_points",
                "type" : "timeseries",
                "label" : "Virtual V2",
                "color" : "#8bc34a",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : true,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : true,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.023521851839702013,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 60000,
                "timewindowMs" : 3600000
              },
              "aggregation" : {
                "type" : "SUM",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454",
                "tickDecimals" : 0
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : true,
              "tooltipIndividual" : false,
              "timeForComparison" : "days",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "comparisonEnabled" : false,
              "smoothLines" : true,
              "tooltipCumulative" : true,
              "hideZeros" : false,
              "showTooltip" : true,
              "customLegendEnabled" : false,
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "column",
                "position" : "right",
                "sortDataKeys" : null,
                "showMin" : false,
                "showMax" : true,
                "showAvg" : true,
                "showTotal" : true
              }
            },
            "title" : "Data Ingestion",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : true,
            "actions" : { },
            "decimals" : 0
          },
          "id" : "dd800e2a-1f3d-1f05-3252-7ccf57866d07",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "3c426279-79db-4259-a968-ce84186af4ad" : {
          "type" : "latest",
          "sizeX" : 34,
          "sizeY" : 9,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "status_cliente",
                "type" : "attribute",
                "label" : "status_cliente",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.6175208250947213,
                "postFuncBody" : "var dict = {\n    0: \"Não definido\",\n    1:\"Cativo\",\n    2:\"Livre\"\n};\n\nreturn dict[value];"
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "utility",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5761914043089083,
                "postFuncBody" : "url = 'https://solarhub.engecomp.io/res/utility_list.json?'+moment().format('MMDD')\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nvar obj = JSON.parse(Get(url));\nreturn obj[value]\n\n\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "classe_tensao",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.9058048624834416,
                "postFuncBody" : "var dict = {\n    0:\"Não definida\",\n    1:\"A1 (>=230 kV)\",\n    2:\"A2 (88-138 kV)\",\n    3:\"A3 (69 kV)\",\n    4:\"A3a (30-44 kV)\",\n    5:\"A4 (2,3-25 kV)\",\n    6:\"AS (<2,3 kV)\",\n    7:\"B1 (Residencial)\",\n    8:\"B2 (Rural)\",\n    9:\"B3 (Demais classes)\"\n};\n\nreturn dict[value];"
              }, {
                "name" : "enq_tarifario",
                "type" : "attribute",
                "label" : "enq_tarifario",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.7468946926962012,
                "postFuncBody" : "var dict = {\n    0:\"Não definida\",\n    1:\"Azul\",\n    2:\"Verde\",\n    3:\"Convencional\",\n    4:\"Branca\"\n};\n\nreturn dict[value];"
              }, {
                "name" : "numeroUC",
                "type" : "attribute",
                "label" : "num_uc",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.7542851687437007,
                "postFuncBody" : "return \"UC: \"+value;"
              }, {
                "name" : "dados_contrato",
                "type" : "attribute",
                "label" : "demanda_fp",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.8987603896416565,
                "postFuncBody" : "try {\n    contrato = JSON.parse(value);\n    \n    var x = 0;\n    if (contrato.length > 0) {\n        var indexVigente = contrato.length-1\n        x = contrato[indexVigente].demanda_fp\n    }\n    \n    \n    return x.toLocaleString('pt-BR', {style: \"decimal\", maxFractionDigits: 0})+\" kW\";\n}\ncatch(err) {\n    return \"\"\n}",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "dados_contrato",
                "type" : "attribute",
                "label" : "demanda_p",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.23003460370525985,
                "postFuncBody" : "try {\n    contrato = JSON.parse(value);\n    \n    var x = 0;\n    if (contrato.length > 0) {\n        var indexVigente = contrato.length-1\n        x = contrato[indexVigente].demanda_p\n    }\n    \n    \n    return x.toLocaleString('pt-BR', {style: \"decimal\", maxFractionDigits: 0})+\" kW\";\n}\ncatch(err) {\n    return \"\"\n}",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "meta_consumo_mwmed",
                "type" : "attribute",
                "label" : "meta_consumo_mwmed",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.06296616678589739,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 3, minimumFractionDigits: 3})+\" MWmed\"; "
              }, {
                "name" : "dados_contrato",
                "type" : "attribute",
                "label" : "ke",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.20006638812575872,
                "postFuncBody" : "try {\n    contrato = JSON.parse(value);\n    \n    var ke = \"Não definido\"\n    for (var i=contrato.length-1; i >=0; i--) {\n        if (contrato[i].ke > 0) {\n            ke = Math.round(parseFloat(contrato[i].ke) * 1000) / 1000;\n            break; \n        }\n    }\n    \n    return ke.toLocaleString('pt-BR', {style: \"decimal\", maxFractionDigits: 3, minFractionDigits: 3})+\" \";\n}\ncatch(err) {\n    return \"\"\n}",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "desc_tusd",
                "type" : "attribute",
                "label" : "desc_tusd",
                "color" : "#03a9f4",
                "settings" : { },
                "_hash" : 0.3641316285963003,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0, minimumFractionDigits: 0})+'%'; "
              } ]
            }, {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "9372d9cb-e9ba-c2a0-1b4c-4316d7a28718",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.7307811697329023,
                "postFuncBody" : "return \"UC: \"+value;"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardHtml" : "<script>\n\n    fetch('https://solarhub.engecomp.io/res/utility_list.json').then((response) => response.text().then(function yourCallback( retrievedText ) {\n        utiliyList = JSON.parse(retrievedText);\n        utility = utiliyList[${utility}]\n        if (typeof utility === 'undefined') {\n            utility = 'Não definida'\n        }\n        document.getElementById(\"concessionaria\").innerHTML = utility\n    } ));\n    //document.getElementById(\"concessionaria\").innerHTML = \"teste\"\n\n</script>\n<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"48\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Status:</style><br><style class=\"value\">${status_cliente}</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"title\">Concessionária:</style><br><style id=\"concessionaria\" class=\"value\">${utility}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"48\">\n                <td width=\"40%\" align=\"left\"><style class=\"title\">Classe Tensão:</style><br><style class=\"value\">${classe_tensao}</style></td>\n                <td width=\"55%\" align=\"left\"><style class=\"title\">Tarifa:</style><br><style class=\"value\">${enq_tarifario}</style></td>\n            </tr>\n        </table>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 11px;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 16px;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "display_dados_contrato_energia",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.3rem",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n        style=\"min-width: 800px; padding: 20px\">\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\" fxLayoutGap=\"20px\">\n            \n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Concessionária</mat-label>\n                <mat-select name=\"utility\"\n                    [(ngModel)]=\"attributes.utility\">\n                    <mat-option\n                        *ngFor=\"let item of utility_list\"\n                        [value]=\"item[1]\">\n                        {{item[0]}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            \n        </div>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-around left\" fxLayoutGap=\"20px\">\n            <mat-form-field fxFlex=\"50\" class=\"mat-block\">\n                <mat-label>Classe Tensão</mat-label>\n                <mat-select name=\"classe_tensao\" [(ngModel)]=\"attributes.classe_tensao\">\n                    <mat-option [value]=\"0\">Não definida</mat-option>\n                    <mat-option [value]=\"1\">A1 (>=230 kV)</mat-option>\n                    <mat-option [value]=\"2\">A2 (88-138 kV)</mat-option>\n                    <mat-option [value]=\"3\">A3 (69 kV)</mat-option>\n                    <mat-option [value]=\"4\">A3a (30-44 kV)</mat-option>\n                    <mat-option [value]=\"5\">A4 (2,3-25 kV)</mat-option>\n                    <mat-option [value]=\"6\">AS (&lt;2,3 kV)</mat-option>\n                    <mat-option [value]=\"7\">B1 (Residencial)</mat-option>\n                    <mat-option [value]=\"8\">B2 (Rural)</mat-option>\n                    <mat-option [value]=\"9\">B3 (Demais classes)</mat-option>\n                   \n                    \n                </mat-select><br>\n            </mat-form-field>\n            <mat-form-field fxFlex=\"50\" class=\"mat-block\">\n                <mat-label>Tarifa</mat-label>\n                <mat-select type=\"text\"\n                    [(ngModel)]=\"attributes.enq_tarifario\">\n                    <mat-option [value]=\"0\">Não definida</mat-option>\n                    <mat-option [value]=\"1\">Azul</mat-option>\n                    <mat-option [value]=\"2\">Verde</mat-option>\n                    <mat-option [value]=\"3\">Convencional</mat-option>\n                    <mat-option [value]=\"4\">Branca</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-around left\" fxLayoutGap=\"20px\">\n            <mat-form-field fxFlex=\"50\" class=\"mat-block\">\n                <mat-label>Status</mat-label>\n                <mat-select type=\"text\"\n                    [(ngModel)]=\"attributes.status_cliente\">\n                <mat-option [value]=\"0\">Não definido</mat-option>\n                <mat-option [value]=\"1\">Cativo</mat-option>\n                <mat-option [value]=\"2\">Livre</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field fxFlex=\"50\" class=\"mat-block\">\n                <mat-label>Desconto TUSD (%)</mat-label>\n                <input matInput type=\"number\" min=\"0\" max=\"100\"\n                    [(ngModel)]=\"attributes.desc_tusd\">\n            </mat-form-field>\n        </div>\n        \n         \n\n        <div [fxShow]=\"warning\" style=\"color: red; font-weight: bold;\">{{ errorMessage }}</div>\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "body {color: purple; background-color: #d8da3d }\n\ninput {\n\tposition: relative;\n\twidth: 150px; height: 25px;\n\tcolor: white;\n}\n\ninput:before {\n\tposition: absolute;\n\ttop: 3px; left: 3px;\n\tcontent: attr(data-date);\n\tdisplay: inline-block;\n\tcolor: black;\n}\n\ninput::-webkit-datetime-edit, input::-webkit-inner-spin-button, input::-webkit-clear-button {\n\tdisplay: none;\n}\n\ninput::-webkit-calendar-picker-indicator {\n\tposition: absolute;\n\ttop: 3px;\n\tright: 0;\n\tcolor: black;\n\topacity: 1;\n}",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\nstring = moment().format('YYYYMMDD')\nurl = 'https://solarhub.engecomp.io/res/utility_list.json'+'?'+string;\nwidgetContext.utility_list = sortByValue(JSON.parse(Get(url)))\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction sortByValue(jsObj){\n    var sortedArray = [];\n    for(var i in jsObj)\n    {\n        sortedArray.push([jsObj[i], i]);\n    }\n    return sortedArray.sort();\n}\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nfunction contrato(dados_contrato) {\n    let contrato = JSON.parse(dados_contrato);\n    var data = {}\n    if (contrato.length > 0) {\n        var indexVigente = contrato.length-1\n        data = {\n            demanda_fp: contrato[indexVigente].demanda_fp,\n            demanda_p: contrato[indexVigente].demanda_p,\n            ke: contrato[indexVigente].ke,\n            vigencia: new Date(contrato[indexVigente].ts+'Z')\n        }\n    }\n    \n    return data\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Editar dados do contrato'\n    vm.utility_list = widgetContext.utility_list\n    \n    vm.diffAttrs=['utility','classe_tensao','enq_tarifario','status_cliente']\n    vm.diffAttrs_client = ['dados_contrato']\n    if (vm.diffAttrs.length > 0) {\n        \n        var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n        var response_client = attributeService.getEntityAttributes(entityId, 'CLIENT_SCOPE', vm.diffAttrs_client);\n         widgetContext.rxjs.forkJoin([response,response_client]).subscribe((groups) => {\n            for (j=0; j < groups.length; j++) {\n                for (var i = 0; i < groups[j].length; i++) {\n                    var x = groups[j][i].value\n                    vm.attributes[groups[j][i].key] = x\n                }\n            }\n            vm.attributes.utility = vm.attributes.utility.toString() || null\n            vm.attributes.classe_tensao = parseInt(vm.attributes.classe_tensao) || null\n            vm.attributes.enq_tarifario = parseInt(vm.attributes.enq_tarifario) || null\n            vm.attributes.status_cliente = parseInt(vm.attributes.status_cliente) || null\n            Object.assign(vm.attributes, contrato(vm.attributes.dados_contrato))\n         })\n    }\n\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n\n        var attributesToSave = ['utility','enq_tarifario','status_cliente']\n        for (var key in attributesToSave) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n \n        vm.cancel()\n    }\n}",
                "customResources" : [ ],
                "id" : "cd89a04e-7499-77a2-5d44-83d8242e2a4d"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "3c426279-79db-4259-a968-ce84186af4ad",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "c6a6526c-4e0d-4c97-ae6a-49a363bc9ad3" : {
          "type" : "latest",
          "sizeX" : 54,
          "sizeY" : 10,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "0b4da799-9c06-9418-2fa4-bf9afe91cc2e",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.6581887544732115,
                "postFuncBody" : "return \"UC: \"+ value;"
              }, {
                "name" : "ref_cliente",
                "type" : "attribute",
                "label" : "ref_cliente",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.314082626274236
              }, {
                "name" : "endereco",
                "type" : "attribute",
                "label" : "endereco",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.29428729276659693
              }, {
                "name" : "cep",
                "type" : "attribute",
                "label" : "cep",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.5714814111075266
              }, {
                "name" : "bairro",
                "type" : "attribute",
                "label" : "bairro",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.1792060085480156
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.6039520675261614
              }, {
                "name" : "estado",
                "type" : "attribute",
                "label" : "estado",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.255617971554996
              }, {
                "name" : "segmento",
                "type" : "attribute",
                "label" : "segmento",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.4438436825064902,
                "postFuncBody" : "string = moment().format('YYYYMMDD')\nurl = 'https://solarhub.engecomp.io/res/ramo_atividade.json'+'?'+string;\nvar ramo_atividade = JSON.parse(Get(url));\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nreturn ramo_atividade[value];\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "contato",
                "type" : "attribute",
                "label" : "contato",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.9172346110507434
              }, {
                "name" : "depto",
                "type" : "attribute",
                "label" : "depto",
                "color" : "#03a9f4",
                "settings" : { },
                "_hash" : 0.8789454918582487
              }, {
                "name" : "telefone",
                "type" : "attribute",
                "label" : "telefone",
                "color" : "#ff9800",
                "settings" : { },
                "_hash" : 0.5118181150391452
              }, {
                "name" : "email",
                "type" : "attribute",
                "label" : "email",
                "color" : "#673ab7",
                "settings" : { },
                "_hash" : 0.23050908419558058
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#cddc39",
                "settings" : { },
                "_hash" : 0.1704841555313179
              }, {
                "name" : "obs_cliente",
                "type" : "attribute",
                "label" : "obs_cliente",
                "color" : "#cddc39",
                "settings" : { },
                "_hash" : 0.3936841816165175
              }, {
                "name" : "icms",
                "type" : "attribute",
                "label" : "icms",
                "color" : "#009688",
                "settings" : { },
                "_hash" : 0.7603581145702347,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : 0,
                "funcBody" : null
              }, {
                "name" : "potencia_nominal",
                "type" : "attribute",
                "label" : "potencia_nominal",
                "color" : "#795548",
                "settings" : { },
                "_hash" : 0.4074777294112599,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "valor = value\nif (valor > 0) {\n    return valor + \" kW\";\n} else {\n    return \"\";\n}"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"25%\" align=\"left\"><style class=\"title\">ID:</style><br><style class=\"text\">${entityName}</style></td>\n                <td width=\"48%\" align=\"left\"><style class=\"title\">Identificação da Unidade:</style><br><style class=\"text\">${description}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Referência Cliente:</style><br><style class=\"text\">${ref_cliente}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"73%\" align=\"left\"><style class=\"title\">Endereço:</style><br><style class=\"text\">${endereco}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Bairro:</style><br><style class=\"text\">${bairro}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Cidade:</style><br><style class=\"text\">${cidade}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Estado:</style><br><style class=\"text\">${estado}</style></td>\n                <td width=\"23%\" align=\"left\"><style class=\"title\">CEP:</style><br><style class=\"text\">${cep}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Ramo de Atividade:</style><br><style class=\"text\">${segmento}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Responsável:</style><br><style class=\"text\">${contato}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Departamento:</style><br><style class=\"text\">${depto}</style></td>\n                <td width=\"23%\" align=\"left\"><style class=\"title\">Telefone:</style><br><style class=\"text\">${telefone}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">E-mail:</style><br><style class=\"text\">${email}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"50%\" align=\"left\"><style class=\"title\">Observações:</style><br><style class=\"text\">${obs_cliente}</style></td>\n                <td width=\"23%\" align=\"left\"><style class=\"title\">ICMS Diferenciado:</style><br><style class=\"text\">${icms}%</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Potência nominal:</style><br><style class=\"text\">${potencia_nominal}</style></td>\n            </tr>\n        </table>\n</div>\n\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}"
            },
            "title" : "Dados do Consumidor",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n        style=\"min-width: 800px; padding: 20px\">\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=\"66\" class=\"mat-block\">\n                <mat-label>Identificação da Unidade\n                </mat-label>\n                <input matInput type=\"text\"\n                    [(ngModel)]=\"attributes.description\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Referência Cliente\n                </mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.ref_cliente\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=\"66\" class=\"mat-block\">\n                <mat-label>Endereço</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.endereco\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Bairro</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.bairro\">\n            </mat-form-field>\n\n        </div>\n\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=\"33\" class=\"mat-block\">\n                <mat-label>Cidade</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.cidade\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"33\" class=\"mat-block\">\n                <mat-label>Estado</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.estado\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"33\" class=\"mat-block\">\n                <mat-label>CEP</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.cep\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Contato</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.contato\">\n            </mat-form-field>\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Depto</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.depto\">\n            </mat-form-field>\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Telefone</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.telefone\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Email</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.email\">\n            </mat-form-field>\n            \n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Potência Nominal\n                </mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.potencia_nominal\">\n            </mat-form-field>             \n\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Ramo de Atividade</mat-label>\n                <mat-select name=\"segmento\"\n                    [(ngModel)]=\"attributes.segmento\">\n                    <mat-option\n                        *ngFor=\"let item of ramo_atividade\"\n                        [value]=\"item[1]\">\n                        {{item[0]}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=\"66\" class=\"mat-block\">\n                <mat-label>Observações</mat-label>\n                <input matInput type=\"text\"\n                    [(ngModel)]=\"attributes.obs_cliente\">\n            </mat-form-field>\n            \n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>ICMS Diferenciado\n                </mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.icms\">\n            </mat-form-field>\n        </div>\n\n\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nstring = moment().format('YYYYMMDD')\nurl = 'https://solarhub.engecomp.io/res/ramo_atividade.json'+'?'+string;\nwidgetContext.ramo_atividade = sortByValue(JSON.parse(Get(url)))\n\n\nfunction sortByValue(jsObj){\n    var sortedArray = [];\n    for(var i in jsObj)\n    {\n        sortedArray.push([jsObj[i], i]);\n    }\n    return sortedArray.sort();\n}\n\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Editar dados do consumidor'\n    vm.ramo_atividade = widgetContext.ramo_atividade\n\n    vm.diffAttrs=['segmento','potencia_nominal']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n         })\n    }\n\n    for (var i=0; i<widgetContext.data.length; i++){\n        if (!vm.diffAttrs.includes(widgetContext.data[i].dataKey.name)) {\n            var x = widgetContext.data[i].data[0][1]\n            vm.attributes[widgetContext.data[i].dataKey.name] = x\n        }\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        debugger;\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()  \n    }\n}\n",
                "customResources" : [ ],
                "id" : "714386db-bd14-7aee-c92e-707569ee4835"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "c6a6526c-4e0d-4c97-ae6a-49a363bc9ad3",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "ecf12cf1-793b-4d23-a3f9-ba8928c711a4" : {
          "type" : "latest",
          "sizeX" : 20,
          "sizeY" : 5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "0b4da799-9c06-9418-2fa4-bf9afe91cc2e",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "latitude",
                "type" : "attribute",
                "label" : "latitude",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.12053059779723752,
                "decimals" : null,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 6, minimumFractionDigits: 6}); "
              }, {
                "name" : "longitude",
                "type" : "attribute",
                "label" : "longitude",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.7678419940529702,
                "decimals" : null,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 6, minimumFractionDigits: 6}); "
              }, {
                "name" : "weatherURL",
                "type" : "attribute",
                "label" : "weather",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.2189923541610701
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"90%\">\n            <tr height=\"38\">\n                <td width=\"45%\" align=\"left\"><style class=\"title\">Latitude:</style><br><style class=\"text\">${latitude}</style></td>\n                <td width=\"45%\" align=\"left\"><style class=\"title\">Longitude:</style><br><style class=\"text\">${longitude}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"90%\">\n            <tr height=\"38\">\n                <td width=\"90%\" align=\"left\"><style class=\"title\">Weather URL:</style><br><style class=\"text\">${weather}</style></td>\n            </tr>\n        </table>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}"
            },
            "title" : "Dados Coordenadas",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\">\n        <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Latitude</mat-label>\n                <input matInput type=\"number\" [(ngModel)]=\"attributes.latitude\" step=\"0.000001\">\n            </mat-form-field>\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Longitude</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.longitude\" step=\"0.000001\">\n            </mat-form-field>\n        </div>\n        <mat-form-field fxFlex class=\"mat-block\">\n            <mat-label>WeatherURL</mat-label>\n            <input matInput type=\"text\"\n                [(ngModel)]=\"attributes.weatherURL\">\n        </mat-form-field>\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\nattributes = {}\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.OK = true\n    vm.importTitle = 'Editar Coordenadas'\n\n    vm.attributes = {}\n    for (var i=0; i<widgetContext.data.length; i++){\n        var x = widgetContext.data[i].data[0][1]\n        vm.attributes[widgetContext.data[i].dataKey.name] = x\n    }\n    vm.attributes.latitude = parseFloat(vm.attributes.latitude.replace(',','.'))\n    vm.attributes.longitude = parseFloat(vm.attributes.longitude.replace(',','.'))\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()\n    }\n\n}",
                "customResources" : [ ],
                "id" : "a25e279b-4ed1-6374-614e-35d9e4e1ab6e"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "ecf12cf1-793b-4d23-a3f9-ba8928c711a4",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "93b22e6e-a3a2-4ef1-afb0-ad19ced6d66b" : {
          "type" : "latest",
          "sizeX" : 34,
          "sizeY" : 9,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "0b4da799-9c06-9418-2fa4-bf9afe91cc2e",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "status_cliente",
                "type" : "attribute",
                "label" : "status_cliente",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.6175208250947213,
                "postFuncBody" : "var dict = {\n    0: \"Não definido\",\n    1:\"Cativo\",\n    2:\"Livre\"\n};\n\nreturn dict[value];"
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "utility",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5761914043089083,
                "postFuncBody" : "url = 'https://solarhub.engecomp.io/res/utility_list.json?'+moment().format('MMDD')\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nvar obj = JSON.parse(Get(url));\nreturn obj[value]\n\n\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "classe_tensao",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.9058048624834416,
                "postFuncBody" : "var dict = {\n    0:\"Não definida\",\n    1:\"A1 (>=230 kV)\",\n    2:\"A2 (88-138 kV)\",\n    3:\"A3 (69 kV)\",\n    4:\"A3a (30-44 kV)\",\n    5:\"A4 (2,3-25 kV)\",\n    6:\"AS (<2,3 kV)\",\n    7:\"B1 (Residencial)\",\n    8:\"B2 (Rural)\",\n    9:\"B3 (Demais classes)\"\n};\n\nreturn dict[value];"
              }, {
                "name" : "enq_tarifario",
                "type" : "attribute",
                "label" : "enq_tarifario",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.7468946926962012,
                "postFuncBody" : "var dict = {\n    0:\"Não definida\",\n    1:\"Azul\",\n    2:\"Verde\",\n    3:\"Convencional\",\n    4:\"Branca\"\n};\n\nreturn dict[value];"
              }, {
                "name" : "numeroUC",
                "type" : "attribute",
                "label" : "num_uc",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.7542851687437007,
                "postFuncBody" : "return \"UC: \"+value;"
              }, {
                "name" : "dados_contrato",
                "type" : "attribute",
                "label" : "demanda_fp",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.8987603896416565,
                "postFuncBody" : "try {\n    contrato = JSON.parse(value);\n    \n    var x = 0;\n    if (contrato.length > 0) {\n        var indexVigente = contrato.length-1\n        x = contrato[indexVigente].demanda_fp\n    }\n    \n    \n    return x.toLocaleString('pt-BR', {style: \"decimal\", maxFractionDigits: 0})+\" kW\";\n}\ncatch(err) {\n    return \"\"\n}",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "dados_contrato",
                "type" : "attribute",
                "label" : "demanda_p",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.23003460370525985,
                "postFuncBody" : "try {\n    contrato = JSON.parse(value);\n    \n    var x = 0;\n    if (contrato.length > 0) {\n        var indexVigente = contrato.length-1\n        x = contrato[indexVigente].demanda_p\n    }\n    \n    \n    return x.toLocaleString('pt-BR', {style: \"decimal\", maxFractionDigits: 0})+\" kW\";\n}\ncatch(err) {\n    return \"\"\n}",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "meta_consumo_mwmed",
                "type" : "attribute",
                "label" : "meta_consumo_mwmed",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.06296616678589739,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 3, minimumFractionDigits: 3})+\" MWmed\"; "
              }, {
                "name" : "dados_contrato",
                "type" : "attribute",
                "label" : "ke",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.20006638812575872,
                "postFuncBody" : "try {\n    contrato = JSON.parse(value);\n    \n    var ke = \"Não definido\"\n    for (var i=contrato.length-1; i >=0; i--) {\n        if (contrato[i].ke > 0) {\n            ke = Math.round(parseFloat(contrato[i].ke) * 1000) / 1000;\n            break; \n        }\n    }\n    \n    return ke.toLocaleString('pt-BR', {style: \"decimal\", maxFractionDigits: 3, minFractionDigits: 3})+\" \";\n}\ncatch(err) {\n    return \"\"\n}",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "desc_tusd",
                "type" : "attribute",
                "label" : "desc_tusd",
                "color" : "#03a9f4",
                "settings" : { },
                "_hash" : 0.3641316285963003,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 0, minimumFractionDigits: 0})+'%'; "
              } ]
            }, {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "9372d9cb-e9ba-c2a0-1b4c-4316d7a28718",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.7307811697329023,
                "postFuncBody" : "return \"UC: \"+value;"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}",
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"38\">\n                <td width=\"30%\" align=\"left\"><style class=\"title\">Status:</style><br><style class=\"text\">${status_cliente}</style></td>\n                <td width=\"65%\" align=\"left\"><style class=\"title\">Concessionária:</style><br><style class=\"text\">${utility}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"38\">\n                <td width=\"30%\" align=\"left\"><style class=\"title\">Classe Tensão:</style><br><style class=\"text\">${classe_tensao}</style></td>\n                <td width=\"30%\" align=\"left\"><style class=\"title\">Tarifa:</style><br><style class=\"text\">${enq_tarifario}</style></td>\n                <td width=\"35%\" align=\"left\"><style class=\"title\">Unidade Consumidora:</style><br><style class=\"text\">${UC}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"38\">\n                <td width=\"30%\" align=\"left\"><style class=\"title\">Demanda Fora Ponta:</style><br><style class=\"text\">${demanda_fp}</style></td>\n                <td width=\"30%\" align=\"left\"><style class=\"title\">Demanda Ponta:</style><br><style class=\"text\">${demanda_p}</style></td>\n                <td width=\"35%\" align=\"left\"><style class=\"title\">Desconto TUSD (%):</style><br><style class=\"text\">${desc_tusd}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"38\">\n                <td width=\"30%\" align=\"left\"><style class=\"title\">Constante (kWh/pulso):</style><br><style class=\"text\">${ke}</style></td>\n                <td width=\"65%\" align=\"left\"><style class=\"title\">Meta de Consumo Mensal:</style><br><style class=\"text\">${meta_consumo_mwmed}</style></td>\n            </tr>\n        </table>\n</div>"
            },
            "title" : "display_dados_contrato_energia",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.3rem",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n        style=\"min-width: 800px; padding: 20px\">\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\" fxLayoutGap=\"20px\">\n            \n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Concessionária</mat-label>\n                <mat-select name=\"utility\"\n                    [(ngModel)]=\"attributes.utility\">\n                    <mat-option\n                        *ngFor=\"let item of utility_list\"\n                        [value]=\"item[1]\">\n                        {{item[0]}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            \n        </div>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-around left\" fxLayoutGap=\"20px\">\n            <mat-form-field fxFlex=\"50\" class=\"mat-block\">\n                <mat-label>Classe Tensão</mat-label>\n                <mat-select name=\"classe_tensao\" [(ngModel)]=\"attributes.classe_tensao\">\n                    <mat-option [value]=\"0\">Não definida</mat-option>\n                    <mat-option [value]=\"1\">A1 (>=230 kV)</mat-option>\n                    <mat-option [value]=\"2\">A2 (88-138 kV)</mat-option>\n                    <mat-option [value]=\"3\">A3 (69 kV)</mat-option>\n                    <mat-option [value]=\"4\">A3a (30-44 kV)</mat-option>\n                    <mat-option [value]=\"5\">A4 (2,3-25 kV)</mat-option>\n                    <mat-option [value]=\"6\">AS (&lt;2,3 kV)</mat-option>\n                </mat-select><br>\n            </mat-form-field>\n            <mat-form-field fxFlex=\"50\" class=\"mat-block\">\n                <mat-label>Tarifa</mat-label>\n                <mat-select type=\"text\"\n                    [(ngModel)]=\"attributes.enq_tarifario\">\n                    <mat-option [value]=\"0\">Não definida</mat-option>\n                    <mat-option [value]=\"1\">Azul</mat-option>\n                    <mat-option [value]=\"2\">Verde</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-around left\" fxLayoutGap=\"20px\">\n            <mat-form-field fxFlex=\"50\" class=\"mat-block\">\n                <mat-label>Status</mat-label>\n                <mat-select type=\"text\"\n                    [(ngModel)]=\"attributes.status_cliente\">\n                <mat-option [value]=\"0\">Não definido</mat-option>\n                <mat-option [value]=\"1\">Cativo</mat-option>\n                <mat-option [value]=\"2\">Livre</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field fxFlex=\"50\" class=\"mat-block\">\n                <mat-label>Desconto TUSD (%)</mat-label>\n                <input matInput type=\"number\" min=\"0\" max=\"100\"\n                    [(ngModel)]=\"attributes.desc_tusd\">\n            </mat-form-field>\n        </div>\n        \n        \n        <div fxLayout=\"row\" fxLayoutAlign=\"space-around left\" fxLayoutGap=\"20px\">\n            <mat-form-field fxFlex=\"50\" class=\"mat-block\">\n                <mat-label>Demanda Fora Ponta (kW)</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.demanda_fp\" (ngModelChange)=\"change()\"> \n            </mat-form-field>\n            <mat-form-field fxFlex=\"50\" class=\"mat-block\">\n                <mat-label>Demanda Ponta (kW)</mat-label>\n                <input matInput type=\"number\" \n                    [(ngModel)]=\"attributes.demanda_p\">\n            </mat-form-field>\n        </div>        \n        \n\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-around left\" fxLayoutGap=\"20px\">\n            <mat-form-field fxFlex=\"50\" class=\"mat-block\">\n                <mat-label>Constante de medição (kWh/pulso)</mat-label>\n                <input matInput type=\"number\" min=\"0\" step=\"0.001\"\n                    [(ngModel)]=\"attributes.ke\" (ngModelChange)=\"change()\">\n            </mat-form-field>\n            <mat-form-field fxFlex=\"50\" class=\"mat-block\">\n                <mat-label>Data Vigência</mat-label>\n                <input matInput type=\"text\"  [(ngModel)]=\"vigenciaStr\" (ngModelChange)=\"change()\" name=\"vigencia\">\n            </mat-form-field>\n\n                <!--<input matInput [matDatepicker]=\"picker\" (ngModelChange)=\"change()\" [(ngModel)]=\"attributes.vigencia\">-->\n                <!--<mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>-->\n                <!--<mat-datepicker #picker></mat-datepicker>-->\n\n        </div>                \n\n        <div [fxShow]=\"warning\" style=\"color: red; font-weight: bold;\">{{ errorMessage }}</div>\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async) || warning\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "body {color: purple; background-color: #d8da3d }\n\ninput {\n\tposition: relative;\n\twidth: 150px; height: 25px;\n\tcolor: white;\n}\n\ninput:before {\n\tposition: absolute;\n\ttop: 3px; left: 3px;\n\tcontent: attr(data-date);\n\tdisplay: inline-block;\n\tcolor: black;\n}\n\ninput::-webkit-datetime-edit, input::-webkit-inner-spin-button, input::-webkit-clear-button {\n\tdisplay: none;\n}\n\ninput::-webkit-calendar-picker-indicator {\n\tposition: absolute;\n\ttop: 3px;\n\tright: 0;\n\tcolor: black;\n\topacity: 1;\n}",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\nstring = moment().format('YYYYMMDD')\nurl = 'https://solarhub.engecomp.io/res/utility_list.json'+'?'+string;\nwidgetContext.utility_list = sortByValue(JSON.parse(Get(url)))\n\nvar user = widgetContext.currentUser;\nvar userMail = user.sub;\n\ndebugger\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction sortByValue(jsObj){\n    var sortedArray = [];\n    for(var i in jsObj)\n    {\n        sortedArray.push([jsObj[i], i]);\n    }\n    return sortedArray.sort();\n}\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nfunction contrato(dados_contrato) {\n    let contrato = JSON.parse(dados_contrato);\n    var data = {}\n    var indexVigente = validContract(contrato)\n    if (indexVigente >= 0) {\n        data = {\n            demanda_fp: contrato[indexVigente].demanda_fp,\n            demanda_p: contrato[indexVigente].demanda_p,\n            ke: contrato[indexVigente].ke,\n            vigencia: moment.utc(contrato[indexVigente].ts).add(1,'days').valueOf()\n        }\n    } else {\n        data.vigencia = moment.utc().subtract('years', 1).startOf('year').valueOf()\n    }\n    \n    return data\n}\n\nfunction validContract(contrato) {\n    for (i=0;i<contrato.length;i++) {\n        if (moment.utc(contrato[i].ts).valueOf() > moment.utc().valueOf()) {\n            break\n        }\n    }\n    return i-1\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    let formData = new FormData();\n    vm.attributes = {}\n    //vm.OK = true\n    vm.importTitle = 'Editar dados do contrato'\n    vm.utility_list = widgetContext.utility_list\n    \n\n    debugger\n    \n    vm.OK = false\n    vm.ke_change = false\n    vm.ts_change = false\n    vm.warning = false\n    vm.indexVigente = 0\n    vm.ke = null\n    vm.change\n    \n    vm.diffAttrs=['utility','classe_tensao','enq_tarifario','status_cliente','meta_consumo_mwmed']\n    vm.diffAttrs_client = ['dados_contrato']\n    if (vm.diffAttrs.length > 0) {\n        \n        var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n        var response_client = attributeService.getEntityAttributes(entityId, 'CLIENT_SCOPE', vm.diffAttrs_client);\n         widgetContext.rxjs.forkJoin([response,response_client]).subscribe((groups) => {\n            for (j=0; j < groups.length; j++) {\n                for (var i = 0; i < groups[j].length; i++) {\n                    var x = groups[j][i].value\n                    vm.attributes[groups[j][i].key] = x\n                }\n            }\n            vm.attributes.utility = ( vm.attributes.utility && vm.attributes.utility.toString() ) || null\n            Object.assign(vm.attributes, contrato(vm.attributes.dados_contrato))\n            vm.previousKe = vm.attributes.ke || 0\n            vm.previousDemandaP = vm.attributes.demanda_p\n            vm.previousDemandaFP = vm.attributes.demanda_fp\n            vm.previousUtility = vm.attributes.utility\n            vm.vigenciaStr = moment.utc(vm.attributes.vigencia).format('DD/MM/YYYY HH:mm')\n         })\n    }\n\n    for (var i=0; i<widgetContext.data.length; i++){\n        if (!vm.diffAttrs.includes(widgetContext.data[i].dataKey.name)) {\n            var x = widgetContext.data[i].data[0][1]\n            vm.attributes[widgetContext.data[i].dataKey.name] = x\n        }\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n    \n    vm.change = () => {\n        \n        debugger;\n        //vm.OK = true\n        vm.warning = false\n        \n        vm.ts = moment.utc(vm.vigenciaStr, 'DD/MM/YYYY HH:mm')\n        //vm.ts = moment.utc(vm.vigenciaStr,'DD/MMM/YYYY').format('YYYY-MM-DD HH:mm:ss')\n\n        if (!vm.ts._isValid) {\n            //vm.OK = false\n            vm.warning = true\n            vm.errorMessage = \"ATENÇÃO: data inválida\"\n            return\n        }\n                     \n        if ( isNaN(vm.attributes.ke) || vm.attributes.ke == null ) {\n            vm.attributes.ke = 0\n            vm.previousKe = 0\n        }    \n    }\n\n    vm.send = function() {\n        debugger;\n\n        if (vm.previousKe !== vm.attributes.ke) {\n            vm.ke_change = true\n            vm.ts_change = true\n        }\n        \n\n        if (vm.attributes.demanda_fp != vm.previousDemandaFP || vm.attributes.demanda_p != vm.previousDemandaFP || vm.attributes.utility != vm.previousUtility) {\n            vm.ts_change = true\n        }\n\n        var toSave = ['utility','enq_tarifario','status_cliente']\n        var attributesToSave = []\n        for (i=0;i<toSave.length;i++) {\n            attributesToSave.push({key: toSave[i], value: vm.attributes[toSave[i]]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        \n        if (vm.ts_change) {\n            var url = \"https://solarhub.engecomp.io/be/device/\"+entityName+\"/contrato/\"\n            vm.payload= {\n                ts: vm.ts.format('YYYY-MM-DD HH:mm:ss'), \n                ke: vm.attributes.ke, \n                ke_change: vm.ke_change,\n                demanda_fp: vm.attributes.demanda_fp, \n                demanda_p: vm.attributes.demanda_p, \n                meta_consumo_kwh: 0, \n                meta_consumo_mwm: 0,\n                user: userMail,\n                utility_id: vm.attributes.utility\n            }\n            formData.append(\"payload\", JSON.stringify( vm.payload ))\n            \n            var fetchParams = { method: \"POST\", \n                            body: formData, \n                            }\n                            \n            fetch(url, fetchParams).then(function(r) {\n                if (r.status == 200) {\n                    if (vm.ke_change) {\n                        widgetContext.showSuccessToast('Solicitação enviada. Pode demorar alguns minutos até que o processo esteja completo.', 3000)\n                    } else {\n                        widgetContext.showSuccessToast('Parêmtros alterados com sucesso', 3000)\n                    }\n                }\n                else {\n                    widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n                }\n            });                             \n        }\n        vm.cancel()\n    }\n}",
                "customResources" : [ ],
                "id" : "cd89a04e-7499-77a2-5d44-83d8242e2a4d"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "93b22e6e-a3a2-4ef1-afb0-ad19ced6d66b",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "23e24453-f6c4-4cbc-bea5-2c31d4607a53" : {
          "type" : "latest",
          "sizeX" : 20,
          "sizeY" : 5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "latitude",
                "type" : "attribute",
                "label" : "latitude",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.12053059779723752,
                "decimals" : null,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 6, minimumFractionDigits: 6}); "
              }, {
                "name" : "longitude",
                "type" : "attribute",
                "label" : "longitude",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.7678419940529702,
                "decimals" : null,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 6, minimumFractionDigits: 6}); "
              }, {
                "name" : "weatherURL",
                "type" : "attribute",
                "label" : "weather",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.2189923541610701
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"90%\">\n            <tr height=\"38\">\n                <td width=\"45%\" align=\"left\"><style class=\"title\">Latitude:</style><br><style class=\"text\">${latitude}</style></td>\n                <td width=\"45%\" align=\"left\"><style class=\"title\">Longitude:</style><br><style class=\"text\">${longitude}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"90%\">\n            <tr height=\"38\">\n                <td width=\"90%\" align=\"left\"><style class=\"title\">Weather URL:</style><br><style class=\"text\">${weather}</style></td>\n            </tr>\n        </table>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}"
            },
            "title" : "Dados Coordenadas",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\">\n        <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Latitude</mat-label>\n                <input matInput type=\"number\" [(ngModel)]=\"attributes.latitude\" step=\"0.000001\">\n            </mat-form-field>\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Longitude</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.longitude\" step=\"0.000001\">\n            </mat-form-field>\n        </div>\n        <mat-form-field fxFlex class=\"mat-block\">\n            <mat-label>WeatherURL</mat-label>\n            <input matInput type=\"text\"\n                [(ngModel)]=\"attributes.weatherURL\">\n        </mat-form-field>\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\nattributes = {}\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.OK = true\n    vm.importTitle = 'Editar Coordenadas'\n\n    vm.attributes = {}\n    for (var i=0; i<widgetContext.data.length; i++){\n        var x = widgetContext.data[i].data[0][1]\n        vm.attributes[widgetContext.data[i].dataKey.name] = x\n    }\n    vm.attributes.latitude = parseFloat(vm.attributes.latitude.replace(',','.'))\n    vm.attributes.longitude = parseFloat(vm.attributes.longitude.replace(',','.'))\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()\n    }\n\n}",
                "customResources" : [ ],
                "id" : "a25e279b-4ed1-6374-614e-35d9e4e1ab6e"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "23e24453-f6c4-4cbc-bea5-2c31d4607a53",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "5d81fc22-d446-4293-82b9-4d6e007c9fd8" : {
          "type" : "latest",
          "sizeX" : 34,
          "sizeY" : 4,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "usage",
                "type" : "attribute",
                "label" : "usage",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.4146637795120083,
                "postFuncBody" : "var dict = {\n    0:\"Não definido\",\n    1:\"Principal\",\n    2:\"Auxiliar\",\n    3:\"Submedição/Rateio\",\n    4:\"Geração\"\n};\n\nreturn dict[Math.floor(value)];"
              }, {
                "name" : "grandeza",
                "type" : "attribute",
                "label" : "grandeza",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5109883078849702,
                "postFuncBody" : "var dict = {\n    0:\"Não definida\",\n    1:\"Energia\",\n    2:\"Água\",\n    3:\"Água Reuso\",\n    4:\"Gás\"\n};\n\nreturn dict[Math.floor(value)];"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}",
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"38\">\n                <td width=\"46%\" align=\"left\"><style class=\"title\">Grandeza:</style><br><style class=\"text\">${grandeza}</style></td>\n                <td width=\"46%\" align=\"left\"><style class=\"title\">Uso:</style><br><style class=\"text\">${usage}</style></td>\n            </tr>\n        </table>\n</div>"
            },
            "title" : "Dados Medicao",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n    style=\"min-width: 500px; padding-top: 20px\">\n\n    <table width=\"95%\">\n        <tr height=\"3\">\n            <td width=\"2%\">&nbsp;</td>\n            <td width=\"46%\">&nbsp;</td>\n            <td width=\"2%\">&nbsp;</td>\n            <td width=\"48%\">&nbsp;</td>\n            <td width=\"2%\">&nbsp;</td>\n        </tr>\n        <tr>\n            <td>&nbsp;</td>\n            <td fxLayoutAlign=\"space-around left\">\n                <mat-form-field layout-fill>\n                    <mat-label>Grandeza</mat-label>\n                    <mat-select name=\"grandeza\"\n                        [(ngModel)]=\"attributes.grandeza\">\n                        <mat-option value=\"0\">Não definida\n                        </mat-option>\n                        <mat-option value=\"1\">Energia\n                        </mat-option>\n                        <mat-option value=\"2\">Água\n                        </mat-option>\n                        <mat-option value=\"3\">Água Reuso\n                        </mat-option>\n                        <mat-option value=\"4\">Gás\n                        </mat-option>\n                    </mat-select><br>\n                </mat-form-field>\n\n\n            </td>\n            <td>&nbsp;</td>\n            <td fxLayoutAlign=\"space-around left\">\n                <mat-form-field layout-fill>\n                    <mat-label>Uso</mat-label>\n                    <mat-select name=\"usage\"\n                        [(ngModel)]=\"attributes.usage\">\n                        <mat-option value=\"0\">Não definido\n                        </mat-option>\n                        <mat-option value=\"1\">Principal\n                        </mat-option>\n                        <mat-option value=\"2\">Auxiliar\n                        </mat-option>\n                        <mat-option value=\"3\">\n                            Submedição/Rateio</mat-option>\n                        <mat-option value=\"4\">Geração\n                        </mat-option>\n                    </mat-select><br>\n                </mat-form-field>\n            </td>\n            <td>&nbsp;</td>\n        </tr>\n\n    </table>\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Editar dados da medição'\n    \n    vm.diffAttrs = ['usage','grandeza']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n            vm.attributes.usage = vm.attributes.usage.toString() || null\n            vm.attributes.grandeza = vm.attributes.grandeza.toString() || null\n         })\n    }\n\n    debugger\n    for (var i=0; i<widgetContext.data.length; i++){\n        if (!vm.diffAttrs.includes(widgetContext.data[i].dataKey.name)) {\n            var x = widgetContext.data[i].data[0][1]\n            vm.attributes[widgetContext.data[i].dataKey.name] = x\n        }\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()\n    }\n\n}",
                "customResources" : [ ],
                "id" : "4ec49287-3b7d-82ac-fe3e-53a0f37b057e"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "5d81fc22-d446-4293-82b9-4d6e007c9fd8",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "553c7411-b0bb-44b6-9d94-39213211acc5" : {
          "type" : "latest",
          "sizeX" : 34,
          "sizeY" : 4,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "usage",
                "type" : "attribute",
                "label" : "usage",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.4146637795120083,
                "postFuncBody" : "var dict = {\n    0:\"Não definido\",\n    1:\"Principal\",\n    2:\"Auxiliar\",\n    3:\"Submedição/Rateio\",\n    4:\"Geração\"\n};\n\nreturn dict[Math.floor(value)];"
              }, {
                "name" : "grandeza",
                "type" : "attribute",
                "label" : "grandeza",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5109883078849702,
                "postFuncBody" : "var dict = {\n    0:\"Não definida\",\n    1:\"Energia\",\n    2:\"Água\",\n    3:\"Água Reuso\",\n    4:\"Gás\"\n};\n\nreturn dict[Math.floor(value)];"
              }, {
                "name" : "medidor_fabricante",
                "type" : "attribute",
                "label" : "medidor_fab",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.45807550678589526
              }, {
                "name" : "medidor_modelo",
                "type" : "attribute",
                "label" : "medidor_mod",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.3319759076146884
              }, {
                "name" : "tou_manual",
                "type" : "attribute",
                "label" : "tou_manual",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.5445181052522363,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "if (parseInt(value)) {\n    return \"Servidor\"\n} else {\n    return \"Medidor\";\n}\n"
              }, {
                "name" : "tou_p_delta_seconds",
                "type" : "attribute",
                "label" : "tou_p_delta_seconds",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.4243438338128602,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return value/60;"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}",
              "cardHtml" : "<script>\n\n    var defasagem = parseFloat(\"${tou_p_delta_seconds}\")\n    if (defasagem < 0) {\n        var type = \"adiantado\"\n    } else {\n        var type = \"atrasado\"\n    }\n\n    var x = document.getElementById(\"relogio\");\n    if (\"${tou_manual}\" == \"Medidor\" && Math.abs(defasagem) > 7.5 ) {\n        x.style.color = \"red\";\n        x.style.fontWeight = \"bold\"\n    } \n\n    var y = Math.abs(defasagem)\n    x.innerHTML = y.toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: 0, maximumFractionDigits: 0})+\" minutos \"+type;\n\n</script>\n\n\n<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"38\">\n                <td width=\"23%\" align=\"left\"><style class=\"title\">Grandeza:</style><br><style class=\"text\">${grandeza}</style></td>\n                <td width=\"23%\" align=\"left\"><style class=\"title\">Uso:</style><br><style class=\"text\">${usage}</style></td>\n                <td width=\"24%\" align=\"left\"><style class=\"title\">Fabricante:</style><br><style class=\"text\">${medidor_fab}</style></td>\n                <td width=\"24%\" align=\"left\"><style class=\"title\">Modelo:</style><br><style class=\"text\">${medidor_mod}</style></td>\n            </tr>\n        </table>\n        <br>\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"38\">\n                <td width=\"46%\" align=\"left\"><style class=\"title\">Origem postos tarifários:</style><br><style class=\"text\">${tou_manual}</style></td>\n                <td width=\"48%\" align=\"left\"><style class=\"title\">Defasagem medidor:</style><br><style id=\"relogio\" class=\"text\"></style></td>\n            </tr>            \n        </table>\n</div>"
            },
            "title" : "Dados Medicao",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n    style=\"min-width: 500px; padding-top: 20px\">\n\n    <table width=\"95%\">\n        <tr height=\"3\">\n            <td width=\"2%\">&nbsp;</td>\n            <td width=\"46%\">&nbsp;</td>\n            <td width=\"2%\">&nbsp;</td>\n            <td width=\"48%\">&nbsp;</td>\n            <td width=\"2%\">&nbsp;</td>\n        </tr>\n        <tr>\n            <td>&nbsp;</td>\n            <td fxLayoutAlign=\"space-around left\">\n                <mat-form-field layout-fill>\n                    <mat-label>Grandeza</mat-label>\n                    <mat-select name=\"grandeza\"\n                        [(ngModel)]=\"attributes.grandeza\">\n                        <mat-option value=\"0\">Não definida\n                        </mat-option>\n                        <mat-option value=\"1\">Energia\n                        </mat-option>\n                        <mat-option value=\"2\">Água\n                        </mat-option>\n                        <mat-option value=\"3\">Água Reuso\n                        </mat-option>\n                        <mat-option value=\"4\">Gás\n                        </mat-option>\n                    </mat-select><br>\n                </mat-form-field>\n\n\n            </td>\n            <td>&nbsp;</td>\n            <td fxLayoutAlign=\"space-around left\">\n                <mat-form-field layout-fill>\n                    <mat-label>Uso</mat-label>\n                    <mat-select name=\"usage\"\n                        [(ngModel)]=\"attributes.usage\">\n                        <mat-option value=\"0\">Não definido\n                        </mat-option>\n                        <mat-option value=\"1\">Principal\n                        </mat-option>\n                        <mat-option value=\"2\">Auxiliar\n                        </mat-option>\n                        <mat-option value=\"3\">\n                            Submedição/Rateio</mat-option>\n                        <mat-option value=\"4\">Geração\n                        </mat-option>\n                    </mat-select><br>\n                </mat-form-field>\n            </td>\n            <td>&nbsp;</td>\n        </tr>\n        <tr>\n            <td>&nbsp;</td>\n            <td fxLayoutAlign=\"space-around left\">\n                <mat-form-field class=\"mat-block\">\n                    <mat-label>Fabricante</mat-label>\n                    <input matInput type=\"text\"\n                        [(ngModel)]=\"attributes.medidor_fabricante\">\n                </mat-form-field>\n            </td>\n            <td>&nbsp;</td>\n            <td fxLayoutAlign=\"space-around left\">\n                <mat-form-field layout-fill>\n                    <mat-label>Modelo</mat-label>\n                    <input matInput type=\"text\" [(ngModel)]=\"attributes.medidor_modelo\">\n                </mat-form-field>\n            </td>\n            <td>&nbsp;</td>\n        </tr>\n    </table>\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Editar dados da medição'\n    \n    vm.diffAttrs = ['usage','grandeza']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n            vm.attributes.usage = vm.attributes.usage.toString() || null\n            vm.attributes.grandeza = vm.attributes.grandeza.toString() || null\n         })\n    }\n\n    debugger\n    for (var i=0; i<widgetContext.data.length; i++){\n        if (!vm.diffAttrs.includes(widgetContext.data[i].dataKey.name)) {\n            var x = widgetContext.data[i].data[0][1]\n            vm.attributes[widgetContext.data[i].dataKey.name] = x\n        }\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()\n    }\n\n}",
                "customResources" : [ ],
                "id" : "4ec49287-3b7d-82ac-fe3e-53a0f37b057e"
              }, {
                "name" : "Info medidor",
                "icon" : "info_outline",
                "type" : "customPretty",
                "customHtml" : "<form #f=\"ngForm\">\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\n        <h2>Ajuda</h2>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\"\n        *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\">\n    </div>\n\n    <div mat-dialog-content style=\"padding: 20px 20px 20px 20px;\"\n        ng-cloak=\"\">\n\n        <div layout-align=\"space-around left\"\n            style=\"min-width: 300px; max-width: 700px; padding-top: 20px\">\n\n            A <b>Origem dos Postos Tarifários</b> pode ser:\n            <br>\n            <ul>\n                <li><b>Medidor</b>: medidores com protocolo ABNT\n                que estejam corretamente configurados pela distribuidora\n                informam o posto tarifário de cada intervalo medido de 15 minutos\n                e o EnergyHub usa esta informação para sinalizar o posto nos gráficos.\n                Sempre que possível é recomendado que seu ponto de medição esteja\n                configurado assim. \n                <br>&nbsp;<br>\n                <li><b>Servidor</b>: o servidor do EnergyHub ignora o posto tarifário\n                proveniente do medidor e atribui o posto conforme horário da medição,\n                adotando o posto conforme tabela de horários definida pela distribuidora.\n                Casos em que se recomenda usar esta configuração: medidores que não\n                possuem divisão por posto (Schneider ION, por exemplo), ou convencionais\n                que não tenham a funcionalidade configurada.\n            </ul>\n            \n            Caso deseje trocar a configuração de seu ponto, escreva para\n            <a href=\"mailto:suporte@engecomp.com.br\">suporte@engecomp.com.br</a>.\n            <br>&nbsp;<br>\n\n            A <b>Defasagem do relógio do medidor</b> é uma estimativa de como está\n            o relógio interno do medidor, baseado na informação de troca de posto tarifário.\n            \n            <br>&nbsp;<br>\n            Como exemplo, um medidor na área da Enel SP deve mudar para posto tarifário Ponta\n            às 17h30, portanto o primeiro intervalo fechado em Ponta se encerra as 17h45.\n            Caso este primeiro intervalo se encerre às 17h36, estimaremos que o relógio do \n            medidor está 9 minutos adiantado.\n            \n            Ainda neste exemplo, o posto encerrado as 17h36 será mostrado no EnergyHub como\n            17h30, buscando o intervalo redondo de 15 minutos mais próximo.\n            \n            <b>IMPORTANTE</b>: A distribuidora tarifará o consumidor pelo posto informado pelo \n            medidor, por isso nossa recomendação de coletar o posto do medidor, sempre que\n            possível.\n            <br>&nbsp;<br>\n            Caso seu medidor apresente uma defasagem acima de 7 minutos, é conveniente confirmar\n            esta defasagem no mostrador do medidor (registro 000) e comunicar a distribuidora\n            para que tome as providências necessárias.\n            \n\n        </div>\n    </div>\n\n    <div mat-dialog-actions fxLayout=\"row\"\n        fxLayoutAlign=\"end center\">\n        <button mat-button color=\"primary\" type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n            Fechar\n        </button>\n    </div>\n</form>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenDialog();\n\nfunction openDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    let vm = instance;\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n}\n",
                "customResources" : [ ],
                "id" : "c6b0f315-fb07-dd23-7da4-2625d21695fc"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "553c7411-b0bb-44b6-9d94-39213211acc5",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "bf0f1767-142d-4d05-a599-65481851d0aa" : {
          "type" : "latest",
          "sizeX" : 34,
          "sizeY" : 4,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "0b4da799-9c06-9418-2fa4-bf9afe91cc2e",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "usage",
                "type" : "attribute",
                "label" : "usage",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.4146637795120083,
                "postFuncBody" : "var dict = {\n    0:\"Não definido\",\n    1:\"Principal\",\n    2:\"Auxiliar\",\n    3:\"Submedição/Rateio\",\n    4:\"Geração\"\n};\n\nreturn dict[Math.floor(value)];"
              }, {
                "name" : "grandeza",
                "type" : "attribute",
                "label" : "grandeza",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5109883078849702,
                "postFuncBody" : "var dict = {\n    0:\"Não definida\",\n    1:\"Energia\",\n    2:\"Água\",\n    3:\"Água Reuso\",\n    4:\"Gás\"\n};\n\nreturn dict[Math.floor(value)];"
              }, {
                "name" : "medidor_fabricante",
                "type" : "attribute",
                "label" : "medidor_fab",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.45807550678589526
              }, {
                "name" : "medidor_modelo",
                "type" : "attribute",
                "label" : "medidor_mod",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.3319759076146884
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}",
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"38\">\n                <td width=\"23%\" align=\"left\"><style class=\"title\">Grandeza:</style><br><style class=\"text\">${grandeza}</style></td>\n                <td width=\"23%\" align=\"left\"><style class=\"title\">Uso:</style><br><style class=\"text\">${usage}</style></td>\n                <td width=\"24%\" align=\"left\"><style class=\"title\">Fabricante:</style><br><style class=\"text\">${medidor_fab}</style></td>\n                <td width=\"24%\" align=\"left\"><style class=\"title\">Modelo:</style><br><style class=\"text\">${medidor_mod}</style></td>\n            </tr>\n        </table>\n</div>"
            },
            "title" : "Dados Medicao",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n    style=\"min-width: 500px; padding-top: 20px\">\n\n    <table width=\"95%\">\n        <tr height=\"3\">\n            <td width=\"2%\">&nbsp;</td>\n            <td width=\"46%\">&nbsp;</td>\n            <td width=\"2%\">&nbsp;</td>\n            <td width=\"48%\">&nbsp;</td>\n            <td width=\"2%\">&nbsp;</td>\n        </tr>\n        <tr>\n            <td>&nbsp;</td>\n            <td fxLayoutAlign=\"space-around left\">\n                <mat-form-field layout-fill>\n                    <mat-label>Grandeza</mat-label>\n                    <mat-select name=\"grandeza\"\n                        [(ngModel)]=\"attributes.grandeza\">\n                        <mat-option value=\"0\">Não definida\n                        </mat-option>\n                        <mat-option value=\"1\">Energia\n                        </mat-option>\n                        <mat-option value=\"2\">Água\n                        </mat-option>\n                        <mat-option value=\"3\">Água Reuso\n                        </mat-option>\n                        <mat-option value=\"4\">Gás\n                        </mat-option>\n                    </mat-select><br>\n                </mat-form-field>\n\n\n            </td>\n            <td>&nbsp;</td>\n            <td fxLayoutAlign=\"space-around left\">\n                <mat-form-field layout-fill>\n                    <mat-label>Uso</mat-label>\n                    <mat-select name=\"usage\"\n                        [(ngModel)]=\"attributes.usage\">\n                        <mat-option value=\"0\">Não definido\n                        </mat-option>\n                        <mat-option value=\"1\">Principal\n                        </mat-option>\n                        <mat-option value=\"2\">Auxiliar\n                        </mat-option>\n                        <mat-option value=\"3\">\n                            Submedição/Rateio</mat-option>\n                        <mat-option value=\"4\">Geração\n                        </mat-option>\n                    </mat-select><br>\n                </mat-form-field>\n            </td>\n            <td>&nbsp;</td>\n        </tr>\n        <tr>\n            <td>&nbsp;</td>\n            <td fxLayoutAlign=\"space-around left\">\n                <mat-form-field class=\"mat-block\">\n                    <mat-label>Fabricante</mat-label>\n                    <input matInput type=\"text\"\n                        [(ngModel)]=\"attributes.medidor_fabricante\">\n                </mat-form-field>\n            </td>\n            <td>&nbsp;</td>\n            <td fxLayoutAlign=\"space-around left\">\n                <mat-form-field layout-fill>\n                    <mat-label>Modelo</mat-label>\n                    <input matInput type=\"text\" [(ngModel)]=\"attributes.medidor_modelo\">\n                </mat-form-field>\n            </td>\n            <td>&nbsp;</td>\n        </tr>\n    </table>\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Editar dados da medição'\n    \n    vm.diffAttrs = ['usage','grandeza']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n            vm.attributes.usage = vm.attributes.usage.toString() || null\n            vm.attributes.grandeza = vm.attributes.grandeza.toString() || null\n         })\n    }\n\n    debugger\n    for (var i=0; i<widgetContext.data.length; i++){\n        if (!vm.diffAttrs.includes(widgetContext.data[i].dataKey.name)) {\n            var x = widgetContext.data[i].data[0][1]\n            vm.attributes[widgetContext.data[i].dataKey.name] = x\n        }\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()\n    }\n\n}",
                "customResources" : [ ],
                "id" : "4ec49287-3b7d-82ac-fe3e-53a0f37b057e"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "bf0f1767-142d-4d05-a599-65481851d0aa",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "35d9be0b-6655-48d7-8384-0008702b71e9" : {
          "type" : "timeseries",
          "sizeX" : 54,
          "sizeY" : 35,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "p_1",
                "type" : "timeseries",
                "label" : "p_1",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_1",
                "type" : "timeseries",
                "label" : "t_1",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_1",
                "type" : "timeseries",
                "label" : "m_1",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_2",
                "type" : "timeseries",
                "label" : "p_2",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_2",
                "type" : "timeseries",
                "label" : "t_2",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_2",
                "type" : "timeseries",
                "label" : "m_2",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_3",
                "type" : "timeseries",
                "label" : "p_3",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_3",
                "type" : "timeseries",
                "label" : "t_3",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_3",
                "type" : "timeseries",
                "label" : "m_3",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_4",
                "type" : "timeseries",
                "label" : "p_4",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_4",
                "type" : "timeseries",
                "label" : "t_4",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_4",
                "type" : "timeseries",
                "label" : "m_4",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_5",
                "type" : "timeseries",
                "label" : "p_5",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_5",
                "type" : "timeseries",
                "label" : "t_5",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_5",
                "type" : "timeseries",
                "label" : "m_5",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_6",
                "type" : "timeseries",
                "label" : "p_6",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_6",
                "type" : "timeseries",
                "label" : "t_6",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_6",
                "type" : "timeseries",
                "label" : "m_6",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_7",
                "type" : "timeseries",
                "label" : "p_7",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_7",
                "type" : "timeseries",
                "label" : "t_7",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_7",
                "type" : "timeseries",
                "label" : "m_7",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_8",
                "type" : "timeseries",
                "label" : "p_8",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_8",
                "type" : "timeseries",
                "label" : "t_8",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_8",
                "type" : "timeseries",
                "label" : "m_8",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_9",
                "type" : "timeseries",
                "label" : "p_9",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_9",
                "type" : "timeseries",
                "label" : "t_9",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_9",
                "type" : "timeseries",
                "label" : "m_9",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_10",
                "type" : "timeseries",
                "label" : "p_10",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_10",
                "type" : "timeseries",
                "label" : "t_10",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_10",
                "type" : "timeseries",
                "label" : "m_10",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_11",
                "type" : "timeseries",
                "label" : "p_11",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_11",
                "type" : "timeseries",
                "label" : "t_11",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_11",
                "type" : "timeseries",
                "label" : "m_11",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_12",
                "type" : "timeseries",
                "label" : "p_12",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_12",
                "type" : "timeseries",
                "label" : "t_12",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_12",
                "type" : "timeseries",
                "label" : "m_12",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_13",
                "type" : "timeseries",
                "label" : "p_13",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_13",
                "type" : "timeseries",
                "label" : "t_13",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_13",
                "type" : "timeseries",
                "label" : "m_13",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_14",
                "type" : "timeseries",
                "label" : "p_14",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_14",
                "type" : "timeseries",
                "label" : "t_14",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_14",
                "type" : "timeseries",
                "label" : "m_14",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_15",
                "type" : "timeseries",
                "label" : "p_15",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_15",
                "type" : "timeseries",
                "label" : "t_15",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_15",
                "type" : "timeseries",
                "label" : "m_15",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_16",
                "type" : "timeseries",
                "label" : "p_16",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_16",
                "type" : "timeseries",
                "label" : "t_16",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_16",
                "type" : "timeseries",
                "label" : "m_16",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_17",
                "type" : "timeseries",
                "label" : "p_17",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_17",
                "type" : "timeseries",
                "label" : "t_17",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_17",
                "type" : "timeseries",
                "label" : "m_17",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_18",
                "type" : "timeseries",
                "label" : "p_18",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_18",
                "type" : "timeseries",
                "label" : "t_18",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_18",
                "type" : "timeseries",
                "label" : "m_18",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_19",
                "type" : "timeseries",
                "label" : "p_19",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_19",
                "type" : "timeseries",
                "label" : "t_19",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_19",
                "type" : "timeseries",
                "label" : "m_19",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_20",
                "type" : "timeseries",
                "label" : "p_20",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_20",
                "type" : "timeseries",
                "label" : "t_20",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_20",
                "type" : "timeseries",
                "label" : "m_20",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_21",
                "type" : "timeseries",
                "label" : "p_21",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_21",
                "type" : "timeseries",
                "label" : "t_21",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_21",
                "type" : "timeseries",
                "label" : "m_21",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_22",
                "type" : "timeseries",
                "label" : "p_22",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_22",
                "type" : "timeseries",
                "label" : "t_22",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_22",
                "type" : "timeseries",
                "label" : "m_22",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_23",
                "type" : "timeseries",
                "label" : "p_23",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_23",
                "type" : "timeseries",
                "label" : "t_23",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_23",
                "type" : "timeseries",
                "label" : "m_23",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_24",
                "type" : "timeseries",
                "label" : "p_24",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_24",
                "type" : "timeseries",
                "label" : "t_24",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_24",
                "type" : "timeseries",
                "label" : "m_24",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_25",
                "type" : "timeseries",
                "label" : "p_25",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_25",
                "type" : "timeseries",
                "label" : "t_25",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_25",
                "type" : "timeseries",
                "label" : "m_25",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_26",
                "type" : "timeseries",
                "label" : "p_26",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_26",
                "type" : "timeseries",
                "label" : "t_26",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_26",
                "type" : "timeseries",
                "label" : "m_26",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_27",
                "type" : "timeseries",
                "label" : "p_27",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_27",
                "type" : "timeseries",
                "label" : "t_27",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_27",
                "type" : "timeseries",
                "label" : "m_27",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_28",
                "type" : "timeseries",
                "label" : "p_28",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_28",
                "type" : "timeseries",
                "label" : "t_28",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_28",
                "type" : "timeseries",
                "label" : "m_28",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_29",
                "type" : "timeseries",
                "label" : "p_29",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_29",
                "type" : "timeseries",
                "label" : "t_29",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_29",
                "type" : "timeseries",
                "label" : "m_29",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_30",
                "type" : "timeseries",
                "label" : "p_30",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_30",
                "type" : "timeseries",
                "label" : "t_30",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_30",
                "type" : "timeseries",
                "label" : "m_30",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_31",
                "type" : "timeseries",
                "label" : "p_31",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_31",
                "type" : "timeseries",
                "label" : "t_31",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_31",
                "type" : "timeseries",
                "label" : "m_31",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_32",
                "type" : "timeseries",
                "label" : "p_32",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_32",
                "type" : "timeseries",
                "label" : "t_32",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_32",
                "type" : "timeseries",
                "label" : "m_32",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_33",
                "type" : "timeseries",
                "label" : "p_33",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_33",
                "type" : "timeseries",
                "label" : "t_33",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_33",
                "type" : "timeseries",
                "label" : "m_33",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_34",
                "type" : "timeseries",
                "label" : "p_34",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_34",
                "type" : "timeseries",
                "label" : "t_34",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_34",
                "type" : "timeseries",
                "label" : "m_34",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_35",
                "type" : "timeseries",
                "label" : "p_35",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_35",
                "type" : "timeseries",
                "label" : "t_35",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_35",
                "type" : "timeseries",
                "label" : "m_35",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_36",
                "type" : "timeseries",
                "label" : "p_36",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_36",
                "type" : "timeseries",
                "label" : "t_36",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_36",
                "type" : "timeseries",
                "label" : "m_36",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_37",
                "type" : "timeseries",
                "label" : "p_37",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_37",
                "type" : "timeseries",
                "label" : "t_37",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_37",
                "type" : "timeseries",
                "label" : "m_37",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_38",
                "type" : "timeseries",
                "label" : "p_38",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_38",
                "type" : "timeseries",
                "label" : "t_38",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_38",
                "type" : "timeseries",
                "label" : "m_38",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_39",
                "type" : "timeseries",
                "label" : "p_39",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_39",
                "type" : "timeseries",
                "label" : "t_39",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_39",
                "type" : "timeseries",
                "label" : "m_39",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_40",
                "type" : "timeseries",
                "label" : "p_40",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_40",
                "type" : "timeseries",
                "label" : "t_40",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_40",
                "type" : "timeseries",
                "label" : "m_40",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_41",
                "type" : "timeseries",
                "label" : "p_41",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_41",
                "type" : "timeseries",
                "label" : "t_41",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_41",
                "type" : "timeseries",
                "label" : "m_41",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_42",
                "type" : "timeseries",
                "label" : "p_42",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_42",
                "type" : "timeseries",
                "label" : "t_42",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_42",
                "type" : "timeseries",
                "label" : "m_42",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_43",
                "type" : "timeseries",
                "label" : "p_43",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_43",
                "type" : "timeseries",
                "label" : "t_43",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_43",
                "type" : "timeseries",
                "label" : "m_43",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_44",
                "type" : "timeseries",
                "label" : "p_44",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_44",
                "type" : "timeseries",
                "label" : "t_44",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_44",
                "type" : "timeseries",
                "label" : "m_44",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_45",
                "type" : "timeseries",
                "label" : "p_45",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_45",
                "type" : "timeseries",
                "label" : "t_45",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_45",
                "type" : "timeseries",
                "label" : "m_45",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_46",
                "type" : "timeseries",
                "label" : "p_46",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_46",
                "type" : "timeseries",
                "label" : "t_46",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_46",
                "type" : "timeseries",
                "label" : "m_46",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_47",
                "type" : "timeseries",
                "label" : "p_47",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_47",
                "type" : "timeseries",
                "label" : "t_47",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_47",
                "type" : "timeseries",
                "label" : "m_47",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_48",
                "type" : "timeseries",
                "label" : "p_48",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_48",
                "type" : "timeseries",
                "label" : "t_48",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_48",
                "type" : "timeseries",
                "label" : "m_48",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_49",
                "type" : "timeseries",
                "label" : "p_49",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_49",
                "type" : "timeseries",
                "label" : "t_49",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_49",
                "type" : "timeseries",
                "label" : "m_49",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_50",
                "type" : "timeseries",
                "label" : "p_50",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_50",
                "type" : "timeseries",
                "label" : "t_50",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_50",
                "type" : "timeseries",
                "label" : "m_50",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_51",
                "type" : "timeseries",
                "label" : "p_51",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_51",
                "type" : "timeseries",
                "label" : "t_51",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_51",
                "type" : "timeseries",
                "label" : "m_51",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_52",
                "type" : "timeseries",
                "label" : "p_52",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_52",
                "type" : "timeseries",
                "label" : "t_52",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_52",
                "type" : "timeseries",
                "label" : "m_52",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_53",
                "type" : "timeseries",
                "label" : "p_53",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_53",
                "type" : "timeseries",
                "label" : "t_53",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_53",
                "type" : "timeseries",
                "label" : "m_53",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_54",
                "type" : "timeseries",
                "label" : "p_54",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_54",
                "type" : "timeseries",
                "label" : "t_54",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_54",
                "type" : "timeseries",
                "label" : "m_54",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_55",
                "type" : "timeseries",
                "label" : "p_55",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_55",
                "type" : "timeseries",
                "label" : "t_55",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_55",
                "type" : "timeseries",
                "label" : "m_55",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_56",
                "type" : "timeseries",
                "label" : "p_56",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_56",
                "type" : "timeseries",
                "label" : "t_56",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_56",
                "type" : "timeseries",
                "label" : "m_56",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_57",
                "type" : "timeseries",
                "label" : "p_57",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_57",
                "type" : "timeseries",
                "label" : "t_57",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_57",
                "type" : "timeseries",
                "label" : "m_57",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_58",
                "type" : "timeseries",
                "label" : "p_58",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_58",
                "type" : "timeseries",
                "label" : "t_58",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_58",
                "type" : "timeseries",
                "label" : "m_58",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_59",
                "type" : "timeseries",
                "label" : "p_59",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_59",
                "type" : "timeseries",
                "label" : "t_59",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_59",
                "type" : "timeseries",
                "label" : "m_59",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_60",
                "type" : "timeseries",
                "label" : "p_60",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_60",
                "type" : "timeseries",
                "label" : "t_60",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_60",
                "type" : "timeseries",
                "label" : "m_60",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_61",
                "type" : "timeseries",
                "label" : "p_61",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_61",
                "type" : "timeseries",
                "label" : "t_61",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_61",
                "type" : "timeseries",
                "label" : "m_61",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_62",
                "type" : "timeseries",
                "label" : "p_62",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_62",
                "type" : "timeseries",
                "label" : "t_62",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_62",
                "type" : "timeseries",
                "label" : "m_62",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_63",
                "type" : "timeseries",
                "label" : "p_63",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_63",
                "type" : "timeseries",
                "label" : "t_63",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_63",
                "type" : "timeseries",
                "label" : "m_63",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_64",
                "type" : "timeseries",
                "label" : "p_64",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_64",
                "type" : "timeseries",
                "label" : "t_64",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_64",
                "type" : "timeseries",
                "label" : "m_64",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_65",
                "type" : "timeseries",
                "label" : "p_65",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_65",
                "type" : "timeseries",
                "label" : "t_65",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_65",
                "type" : "timeseries",
                "label" : "m_65",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_66",
                "type" : "timeseries",
                "label" : "p_66",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_66",
                "type" : "timeseries",
                "label" : "t_66",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_66",
                "type" : "timeseries",
                "label" : "m_66",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_67",
                "type" : "timeseries",
                "label" : "p_67",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_67",
                "type" : "timeseries",
                "label" : "t_67",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_67",
                "type" : "timeseries",
                "label" : "m_67",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_68",
                "type" : "timeseries",
                "label" : "p_68",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_68",
                "type" : "timeseries",
                "label" : "t_68",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_68",
                "type" : "timeseries",
                "label" : "m_68",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_69",
                "type" : "timeseries",
                "label" : "p_69",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_69",
                "type" : "timeseries",
                "label" : "t_69",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_69",
                "type" : "timeseries",
                "label" : "m_69",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_70",
                "type" : "timeseries",
                "label" : "p_70",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_70",
                "type" : "timeseries",
                "label" : "t_70",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_70",
                "type" : "timeseries",
                "label" : "m_70",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_71",
                "type" : "timeseries",
                "label" : "p_71",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_71",
                "type" : "timeseries",
                "label" : "t_71",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_71",
                "type" : "timeseries",
                "label" : "m_71",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_72",
                "type" : "timeseries",
                "label" : "p_72",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_72",
                "type" : "timeseries",
                "label" : "t_72",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_72",
                "type" : "timeseries",
                "label" : "m_72",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_73",
                "type" : "timeseries",
                "label" : "p_73",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_73",
                "type" : "timeseries",
                "label" : "t_73",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_73",
                "type" : "timeseries",
                "label" : "m_73",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_74",
                "type" : "timeseries",
                "label" : "p_74",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_74",
                "type" : "timeseries",
                "label" : "t_74",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_74",
                "type" : "timeseries",
                "label" : "m_74",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_75",
                "type" : "timeseries",
                "label" : "p_75",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_75",
                "type" : "timeseries",
                "label" : "t_75",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_75",
                "type" : "timeseries",
                "label" : "m_75",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_76",
                "type" : "timeseries",
                "label" : "p_76",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_76",
                "type" : "timeseries",
                "label" : "t_76",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_76",
                "type" : "timeseries",
                "label" : "m_76",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_77",
                "type" : "timeseries",
                "label" : "p_77",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_77",
                "type" : "timeseries",
                "label" : "t_77",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_77",
                "type" : "timeseries",
                "label" : "m_77",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_78",
                "type" : "timeseries",
                "label" : "p_78",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_78",
                "type" : "timeseries",
                "label" : "t_78",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_78",
                "type" : "timeseries",
                "label" : "m_78",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_79",
                "type" : "timeseries",
                "label" : "p_79",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_79",
                "type" : "timeseries",
                "label" : "t_79",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_79",
                "type" : "timeseries",
                "label" : "m_79",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_80",
                "type" : "timeseries",
                "label" : "p_80",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_80",
                "type" : "timeseries",
                "label" : "t_80",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_80",
                "type" : "timeseries",
                "label" : "m_80",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_81",
                "type" : "timeseries",
                "label" : "p_81",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_81",
                "type" : "timeseries",
                "label" : "t_81",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_81",
                "type" : "timeseries",
                "label" : "m_81",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_82",
                "type" : "timeseries",
                "label" : "p_82",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_82",
                "type" : "timeseries",
                "label" : "t_82",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_82",
                "type" : "timeseries",
                "label" : "m_82",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_83",
                "type" : "timeseries",
                "label" : "p_83",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_83",
                "type" : "timeseries",
                "label" : "t_83",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_83",
                "type" : "timeseries",
                "label" : "m_83",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_84",
                "type" : "timeseries",
                "label" : "p_84",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_84",
                "type" : "timeseries",
                "label" : "t_84",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_84",
                "type" : "timeseries",
                "label" : "m_84",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_85",
                "type" : "timeseries",
                "label" : "p_85",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_85",
                "type" : "timeseries",
                "label" : "t_85",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_85",
                "type" : "timeseries",
                "label" : "m_85",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_86",
                "type" : "timeseries",
                "label" : "p_86",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_86",
                "type" : "timeseries",
                "label" : "t_86",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_86",
                "type" : "timeseries",
                "label" : "m_86",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_87",
                "type" : "timeseries",
                "label" : "p_87",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_87",
                "type" : "timeseries",
                "label" : "t_87",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_87",
                "type" : "timeseries",
                "label" : "m_87",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_88",
                "type" : "timeseries",
                "label" : "p_88",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_88",
                "type" : "timeseries",
                "label" : "t_88",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_88",
                "type" : "timeseries",
                "label" : "m_88",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_89",
                "type" : "timeseries",
                "label" : "p_89",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_89",
                "type" : "timeseries",
                "label" : "t_89",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_89",
                "type" : "timeseries",
                "label" : "m_89",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_90",
                "type" : "timeseries",
                "label" : "p_90",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_90",
                "type" : "timeseries",
                "label" : "t_90",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_90",
                "type" : "timeseries",
                "label" : "m_90",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_91",
                "type" : "timeseries",
                "label" : "p_91",
                "color" : "#37474f",
                "settings" : { },
                "_hash" : 0.9473217921280856
              }, {
                "name" : "t_91",
                "type" : "timeseries",
                "label" : "t_91",
                "color" : "#6a1b9a",
                "settings" : { },
                "_hash" : 0.6676496575677884
              }, {
                "name" : "m_91",
                "type" : "timeseries",
                "label" : "m_91",
                "color" : "#558b2f",
                "settings" : { },
                "_hash" : 0.6263205968973524
              }, {
                "name" : "p_92",
                "type" : "timeseries",
                "label" : "p_92",
                "color" : "#283593",
                "settings" : { },
                "_hash" : 0.8745145599199848
              }, {
                "name" : "t_92",
                "type" : "timeseries",
                "label" : "t_92",
                "color" : "#ad1457",
                "settings" : { },
                "_hash" : 0.8466851298994766
              }, {
                "name" : "m_92",
                "type" : "timeseries",
                "label" : "m_92",
                "color" : "#f9a825",
                "settings" : { },
                "_hash" : 0.9421975566432128
              } ]
            } ],
            "timewindow" : {
              "history" : {
                "interval" : 1000,
                "timewindowMs" : 604800000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              },
              "hideInterval" : true,
              "hideAggregation" : true,
              "hideAggInterval" : true
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "id" : "tracker-left"
            },
            "title" : "Slaves 1 a 92",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : false
          },
          "id" : "35d9be0b-6655-48d7-8384-0008702b71e9",
          "typeFullFqn" : "tenant.teste.tracker"
        },
        "f59bb207-5b41-41f5-8b9d-b816af70e76b" : {
          "type" : "timeseries",
          "sizeX" : 54,
          "sizeY" : 35,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "p_93",
                "type" : "timeseries",
                "label" : "p_93",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_93",
                "type" : "timeseries",
                "label" : "t_93",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_93",
                "type" : "timeseries",
                "label" : "m_93",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_94",
                "type" : "timeseries",
                "label" : "p_94",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_94",
                "type" : "timeseries",
                "label" : "t_94",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_94",
                "type" : "timeseries",
                "label" : "m_94",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_95",
                "type" : "timeseries",
                "label" : "p_95",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_95",
                "type" : "timeseries",
                "label" : "t_95",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_95",
                "type" : "timeseries",
                "label" : "m_95",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_96",
                "type" : "timeseries",
                "label" : "p_96",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_96",
                "type" : "timeseries",
                "label" : "t_96",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_96",
                "type" : "timeseries",
                "label" : "m_96",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_97",
                "type" : "timeseries",
                "label" : "p_97",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_97",
                "type" : "timeseries",
                "label" : "t_97",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_97",
                "type" : "timeseries",
                "label" : "m_97",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_98",
                "type" : "timeseries",
                "label" : "p_98",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_98",
                "type" : "timeseries",
                "label" : "t_98",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_98",
                "type" : "timeseries",
                "label" : "m_98",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_99",
                "type" : "timeseries",
                "label" : "p_99",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_99",
                "type" : "timeseries",
                "label" : "t_99",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_99",
                "type" : "timeseries",
                "label" : "m_99",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_100",
                "type" : "timeseries",
                "label" : "p_100",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_100",
                "type" : "timeseries",
                "label" : "t_100",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_100",
                "type" : "timeseries",
                "label" : "m_100",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_101",
                "type" : "timeseries",
                "label" : "p_101",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_101",
                "type" : "timeseries",
                "label" : "t_101",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_101",
                "type" : "timeseries",
                "label" : "m_101",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_102",
                "type" : "timeseries",
                "label" : "p_102",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_102",
                "type" : "timeseries",
                "label" : "t_102",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_102",
                "type" : "timeseries",
                "label" : "m_102",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_103",
                "type" : "timeseries",
                "label" : "p_103",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_103",
                "type" : "timeseries",
                "label" : "t_103",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_103",
                "type" : "timeseries",
                "label" : "m_103",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_104",
                "type" : "timeseries",
                "label" : "p_104",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_104",
                "type" : "timeseries",
                "label" : "t_104",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_104",
                "type" : "timeseries",
                "label" : "m_104",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_105",
                "type" : "timeseries",
                "label" : "p_105",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_105",
                "type" : "timeseries",
                "label" : "t_105",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_105",
                "type" : "timeseries",
                "label" : "m_105",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_106",
                "type" : "timeseries",
                "label" : "p_106",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_106",
                "type" : "timeseries",
                "label" : "t_106",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_106",
                "type" : "timeseries",
                "label" : "m_106",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_107",
                "type" : "timeseries",
                "label" : "p_107",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_107",
                "type" : "timeseries",
                "label" : "t_107",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_107",
                "type" : "timeseries",
                "label" : "m_107",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_108",
                "type" : "timeseries",
                "label" : "p_108",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_108",
                "type" : "timeseries",
                "label" : "t_108",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_108",
                "type" : "timeseries",
                "label" : "m_108",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_109",
                "type" : "timeseries",
                "label" : "p_109",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_109",
                "type" : "timeseries",
                "label" : "t_109",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_109",
                "type" : "timeseries",
                "label" : "m_109",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_110",
                "type" : "timeseries",
                "label" : "p_110",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_110",
                "type" : "timeseries",
                "label" : "t_110",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_110",
                "type" : "timeseries",
                "label" : "m_110",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_111",
                "type" : "timeseries",
                "label" : "p_111",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_111",
                "type" : "timeseries",
                "label" : "t_111",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_111",
                "type" : "timeseries",
                "label" : "m_111",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_112",
                "type" : "timeseries",
                "label" : "p_112",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_112",
                "type" : "timeseries",
                "label" : "t_112",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_112",
                "type" : "timeseries",
                "label" : "m_112",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_113",
                "type" : "timeseries",
                "label" : "p_113",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_113",
                "type" : "timeseries",
                "label" : "t_113",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_113",
                "type" : "timeseries",
                "label" : "m_113",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_114",
                "type" : "timeseries",
                "label" : "p_114",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_114",
                "type" : "timeseries",
                "label" : "t_114",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_114",
                "type" : "timeseries",
                "label" : "m_114",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_115",
                "type" : "timeseries",
                "label" : "p_115",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_115",
                "type" : "timeseries",
                "label" : "t_115",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_115",
                "type" : "timeseries",
                "label" : "m_115",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_116",
                "type" : "timeseries",
                "label" : "p_116",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_116",
                "type" : "timeseries",
                "label" : "t_116",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_116",
                "type" : "timeseries",
                "label" : "m_116",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_117",
                "type" : "timeseries",
                "label" : "p_117",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_117",
                "type" : "timeseries",
                "label" : "t_117",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_117",
                "type" : "timeseries",
                "label" : "m_117",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_118",
                "type" : "timeseries",
                "label" : "p_118",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_118",
                "type" : "timeseries",
                "label" : "t_118",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_118",
                "type" : "timeseries",
                "label" : "m_118",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_119",
                "type" : "timeseries",
                "label" : "p_119",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_119",
                "type" : "timeseries",
                "label" : "t_119",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_119",
                "type" : "timeseries",
                "label" : "m_119",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_120",
                "type" : "timeseries",
                "label" : "p_120",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_120",
                "type" : "timeseries",
                "label" : "t_120",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_120",
                "type" : "timeseries",
                "label" : "m_120",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_121",
                "type" : "timeseries",
                "label" : "p_121",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_121",
                "type" : "timeseries",
                "label" : "t_121",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_121",
                "type" : "timeseries",
                "label" : "m_121",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_122",
                "type" : "timeseries",
                "label" : "p_122",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_122",
                "type" : "timeseries",
                "label" : "t_122",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_122",
                "type" : "timeseries",
                "label" : "m_122",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_123",
                "type" : "timeseries",
                "label" : "p_123",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_123",
                "type" : "timeseries",
                "label" : "t_123",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_123",
                "type" : "timeseries",
                "label" : "m_123",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_124",
                "type" : "timeseries",
                "label" : "p_124",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_124",
                "type" : "timeseries",
                "label" : "t_124",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_124",
                "type" : "timeseries",
                "label" : "m_124",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_125",
                "type" : "timeseries",
                "label" : "p_125",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_125",
                "type" : "timeseries",
                "label" : "t_125",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_125",
                "type" : "timeseries",
                "label" : "m_125",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_126",
                "type" : "timeseries",
                "label" : "p_126",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_126",
                "type" : "timeseries",
                "label" : "t_126",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_126",
                "type" : "timeseries",
                "label" : "m_126",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_127",
                "type" : "timeseries",
                "label" : "p_127",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_127",
                "type" : "timeseries",
                "label" : "t_127",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_127",
                "type" : "timeseries",
                "label" : "m_127",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_128",
                "type" : "timeseries",
                "label" : "p_128",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_128",
                "type" : "timeseries",
                "label" : "t_128",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_128",
                "type" : "timeseries",
                "label" : "m_128",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_129",
                "type" : "timeseries",
                "label" : "p_129",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_129",
                "type" : "timeseries",
                "label" : "t_129",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_129",
                "type" : "timeseries",
                "label" : "m_129",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_130",
                "type" : "timeseries",
                "label" : "p_130",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_130",
                "type" : "timeseries",
                "label" : "t_130",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_130",
                "type" : "timeseries",
                "label" : "m_130",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_131",
                "type" : "timeseries",
                "label" : "p_131",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_131",
                "type" : "timeseries",
                "label" : "t_131",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_131",
                "type" : "timeseries",
                "label" : "m_131",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_132",
                "type" : "timeseries",
                "label" : "p_132",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_132",
                "type" : "timeseries",
                "label" : "t_132",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_132",
                "type" : "timeseries",
                "label" : "m_132",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_133",
                "type" : "timeseries",
                "label" : "p_133",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_133",
                "type" : "timeseries",
                "label" : "t_133",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_133",
                "type" : "timeseries",
                "label" : "m_133",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_134",
                "type" : "timeseries",
                "label" : "p_134",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_134",
                "type" : "timeseries",
                "label" : "t_134",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_134",
                "type" : "timeseries",
                "label" : "m_134",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_135",
                "type" : "timeseries",
                "label" : "p_135",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_135",
                "type" : "timeseries",
                "label" : "t_135",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_135",
                "type" : "timeseries",
                "label" : "m_135",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_136",
                "type" : "timeseries",
                "label" : "p_136",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_136",
                "type" : "timeseries",
                "label" : "t_136",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_136",
                "type" : "timeseries",
                "label" : "m_136",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_137",
                "type" : "timeseries",
                "label" : "p_137",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_137",
                "type" : "timeseries",
                "label" : "t_137",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_137",
                "type" : "timeseries",
                "label" : "m_137",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_138",
                "type" : "timeseries",
                "label" : "p_138",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_138",
                "type" : "timeseries",
                "label" : "t_138",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_138",
                "type" : "timeseries",
                "label" : "m_138",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_139",
                "type" : "timeseries",
                "label" : "p_139",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_139",
                "type" : "timeseries",
                "label" : "t_139",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_139",
                "type" : "timeseries",
                "label" : "m_139",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_140",
                "type" : "timeseries",
                "label" : "p_140",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_140",
                "type" : "timeseries",
                "label" : "t_140",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_140",
                "type" : "timeseries",
                "label" : "m_140",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_141",
                "type" : "timeseries",
                "label" : "p_141",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_141",
                "type" : "timeseries",
                "label" : "t_141",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_141",
                "type" : "timeseries",
                "label" : "m_141",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_142",
                "type" : "timeseries",
                "label" : "p_142",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_142",
                "type" : "timeseries",
                "label" : "t_142",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_142",
                "type" : "timeseries",
                "label" : "m_142",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_143",
                "type" : "timeseries",
                "label" : "p_143",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_143",
                "type" : "timeseries",
                "label" : "t_143",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_143",
                "type" : "timeseries",
                "label" : "m_143",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_144",
                "type" : "timeseries",
                "label" : "p_144",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_144",
                "type" : "timeseries",
                "label" : "t_144",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_144",
                "type" : "timeseries",
                "label" : "m_144",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_145",
                "type" : "timeseries",
                "label" : "p_145",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_145",
                "type" : "timeseries",
                "label" : "t_145",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_145",
                "type" : "timeseries",
                "label" : "m_145",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_146",
                "type" : "timeseries",
                "label" : "p_146",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_146",
                "type" : "timeseries",
                "label" : "t_146",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_146",
                "type" : "timeseries",
                "label" : "m_146",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_147",
                "type" : "timeseries",
                "label" : "p_147",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_147",
                "type" : "timeseries",
                "label" : "t_147",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_147",
                "type" : "timeseries",
                "label" : "m_147",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_148",
                "type" : "timeseries",
                "label" : "p_148",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_148",
                "type" : "timeseries",
                "label" : "t_148",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_148",
                "type" : "timeseries",
                "label" : "m_148",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_149",
                "type" : "timeseries",
                "label" : "p_149",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_149",
                "type" : "timeseries",
                "label" : "t_149",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_149",
                "type" : "timeseries",
                "label" : "m_149",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_150",
                "type" : "timeseries",
                "label" : "p_150",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_150",
                "type" : "timeseries",
                "label" : "t_150",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_150",
                "type" : "timeseries",
                "label" : "m_150",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_151",
                "type" : "timeseries",
                "label" : "p_151",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_151",
                "type" : "timeseries",
                "label" : "t_151",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_151",
                "type" : "timeseries",
                "label" : "m_151",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_152",
                "type" : "timeseries",
                "label" : "p_152",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_152",
                "type" : "timeseries",
                "label" : "t_152",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_152",
                "type" : "timeseries",
                "label" : "m_152",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_153",
                "type" : "timeseries",
                "label" : "p_153",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_153",
                "type" : "timeseries",
                "label" : "t_153",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_153",
                "type" : "timeseries",
                "label" : "m_153",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_154",
                "type" : "timeseries",
                "label" : "p_154",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_154",
                "type" : "timeseries",
                "label" : "t_154",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_154",
                "type" : "timeseries",
                "label" : "m_154",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_155",
                "type" : "timeseries",
                "label" : "p_155",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_155",
                "type" : "timeseries",
                "label" : "t_155",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_155",
                "type" : "timeseries",
                "label" : "m_155",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_156",
                "type" : "timeseries",
                "label" : "p_156",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_156",
                "type" : "timeseries",
                "label" : "t_156",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_156",
                "type" : "timeseries",
                "label" : "m_156",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_157",
                "type" : "timeseries",
                "label" : "p_157",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_157",
                "type" : "timeseries",
                "label" : "t_157",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_157",
                "type" : "timeseries",
                "label" : "m_157",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_158",
                "type" : "timeseries",
                "label" : "p_158",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_158",
                "type" : "timeseries",
                "label" : "t_158",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_158",
                "type" : "timeseries",
                "label" : "m_158",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_159",
                "type" : "timeseries",
                "label" : "p_159",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_159",
                "type" : "timeseries",
                "label" : "t_159",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_159",
                "type" : "timeseries",
                "label" : "m_159",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_160",
                "type" : "timeseries",
                "label" : "p_160",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_160",
                "type" : "timeseries",
                "label" : "t_160",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_160",
                "type" : "timeseries",
                "label" : "m_160",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_161",
                "type" : "timeseries",
                "label" : "p_161",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_161",
                "type" : "timeseries",
                "label" : "t_161",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_161",
                "type" : "timeseries",
                "label" : "m_161",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_162",
                "type" : "timeseries",
                "label" : "p_162",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_162",
                "type" : "timeseries",
                "label" : "t_162",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_162",
                "type" : "timeseries",
                "label" : "m_162",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_163",
                "type" : "timeseries",
                "label" : "p_163",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_163",
                "type" : "timeseries",
                "label" : "t_163",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_163",
                "type" : "timeseries",
                "label" : "m_163",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_164",
                "type" : "timeseries",
                "label" : "p_164",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_164",
                "type" : "timeseries",
                "label" : "t_164",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_164",
                "type" : "timeseries",
                "label" : "m_164",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_165",
                "type" : "timeseries",
                "label" : "p_165",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_165",
                "type" : "timeseries",
                "label" : "t_165",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_165",
                "type" : "timeseries",
                "label" : "m_165",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_166",
                "type" : "timeseries",
                "label" : "p_166",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_166",
                "type" : "timeseries",
                "label" : "t_166",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_166",
                "type" : "timeseries",
                "label" : "m_166",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_167",
                "type" : "timeseries",
                "label" : "p_167",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_167",
                "type" : "timeseries",
                "label" : "t_167",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_167",
                "type" : "timeseries",
                "label" : "m_167",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_168",
                "type" : "timeseries",
                "label" : "p_168",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_168",
                "type" : "timeseries",
                "label" : "t_168",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_168",
                "type" : "timeseries",
                "label" : "m_168",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_169",
                "type" : "timeseries",
                "label" : "p_169",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_169",
                "type" : "timeseries",
                "label" : "t_169",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_169",
                "type" : "timeseries",
                "label" : "m_169",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_170",
                "type" : "timeseries",
                "label" : "p_170",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_170",
                "type" : "timeseries",
                "label" : "t_170",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_170",
                "type" : "timeseries",
                "label" : "m_170",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_171",
                "type" : "timeseries",
                "label" : "p_171",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_171",
                "type" : "timeseries",
                "label" : "t_171",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_171",
                "type" : "timeseries",
                "label" : "m_171",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_172",
                "type" : "timeseries",
                "label" : "p_172",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_172",
                "type" : "timeseries",
                "label" : "t_172",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_172",
                "type" : "timeseries",
                "label" : "m_172",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_173",
                "type" : "timeseries",
                "label" : "p_173",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_173",
                "type" : "timeseries",
                "label" : "t_173",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_173",
                "type" : "timeseries",
                "label" : "m_173",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_174",
                "type" : "timeseries",
                "label" : "p_174",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_174",
                "type" : "timeseries",
                "label" : "t_174",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_174",
                "type" : "timeseries",
                "label" : "m_174",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_175",
                "type" : "timeseries",
                "label" : "p_175",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_175",
                "type" : "timeseries",
                "label" : "t_175",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_175",
                "type" : "timeseries",
                "label" : "m_175",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_176",
                "type" : "timeseries",
                "label" : "p_176",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_176",
                "type" : "timeseries",
                "label" : "t_176",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_176",
                "type" : "timeseries",
                "label" : "m_176",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_177",
                "type" : "timeseries",
                "label" : "p_177",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_177",
                "type" : "timeseries",
                "label" : "t_177",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_177",
                "type" : "timeseries",
                "label" : "m_177",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_178",
                "type" : "timeseries",
                "label" : "p_178",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_178",
                "type" : "timeseries",
                "label" : "t_178",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_178",
                "type" : "timeseries",
                "label" : "m_178",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_179",
                "type" : "timeseries",
                "label" : "p_179",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_179",
                "type" : "timeseries",
                "label" : "t_179",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_179",
                "type" : "timeseries",
                "label" : "m_179",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_180",
                "type" : "timeseries",
                "label" : "p_180",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_180",
                "type" : "timeseries",
                "label" : "t_180",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_180",
                "type" : "timeseries",
                "label" : "m_180",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_181",
                "type" : "timeseries",
                "label" : "p_181",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_181",
                "type" : "timeseries",
                "label" : "t_181",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_181",
                "type" : "timeseries",
                "label" : "m_181",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_182",
                "type" : "timeseries",
                "label" : "p_182",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.05287782993275769
              }, {
                "name" : "t_182",
                "type" : "timeseries",
                "label" : "t_182",
                "color" : "#00bfa5",
                "settings" : { },
                "_hash" : 0.0022319476689616202
              }, {
                "name" : "m_182",
                "type" : "timeseries",
                "label" : "m_182",
                "color" : "#5d4037",
                "settings" : { },
                "_hash" : 0.4568533273112747
              }, {
                "name" : "p_183",
                "type" : "timeseries",
                "label" : "p_183",
                "color" : "#37474f",
                "settings" : { },
                "_hash" : 0.9473217921280856
              }, {
                "name" : "t_183",
                "type" : "timeseries",
                "label" : "t_183",
                "color" : "#6a1b9a",
                "settings" : { },
                "_hash" : 0.6676496575677884
              }, {
                "name" : "m_183",
                "type" : "timeseries",
                "label" : "m_183",
                "color" : "#558b2f",
                "settings" : { },
                "_hash" : 0.6263205968973524
              }, {
                "name" : "p_184",
                "type" : "timeseries",
                "label" : "p_184",
                "color" : "#283593",
                "settings" : { },
                "_hash" : 0.8745145599199848
              }, {
                "name" : "t_184",
                "type" : "timeseries",
                "label" : "t_184",
                "color" : "#ad1457",
                "settings" : { },
                "_hash" : 0.8466851298994766
              }, {
                "name" : "m_184",
                "type" : "timeseries",
                "label" : "m_184",
                "color" : "#f9a825",
                "settings" : { },
                "_hash" : 0.9421975566432128
              } ]
            } ],
            "timewindow" : {
              "history" : {
                "interval" : 1000,
                "timewindowMs" : 604800000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              },
              "hideInterval" : true,
              "hideAggregation" : true,
              "hideAggInterval" : true
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "id" : "tracker-right"
            },
            "title" : "Slaves 93 a 184",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : false
          },
          "id" : "f59bb207-5b41-41f5-8b9d-b816af70e76b",
          "typeFullFqn" : "tenant.teste.tracker"
        },
        "49a1af83-86fc-4419-b33b-e6f44987055f" : {
          "type" : "latest",
          "sizeX" : 51,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Ponto",
              "displayEntityName" : true,
              "displayEntityType" : false,
              "enableSelectColumnDisplay" : true,
              "displayEntityLabel" : false
            },
            "title" : "Tabela de Pontos",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "Ponto",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "columnWidth" : "0px"
                },
                "_hash" : 0.22263768340744194,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~~ SEM NOME ~~\"    \n}\nreturn nome;"
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "Remota",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.8321127602164051
              }, {
                "name" : "firmware_version",
                "type" : "attribute",
                "label" : "Versão",
                "color" : "#ffc107",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('en-US', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2})"
                },
                "_hash" : 0.16741055228436275
              }, {
                "name" : "csq",
                "type" : "attribute",
                "label" : "Sinal",
                "color" : "#607d8b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.8544024770464009,
                "decimals" : null
              }, {
                "name" : "last_telemetry",
                "type" : "attribute",
                "label" : "Ult Conexão",
                "color" : "#e91e63",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.5415469805063744,
                "postFuncBody" : "return moment.unix(value/1000).format('DD-MMM HH:mm');"
              }, {
                "name" : "active",
                "type" : "attribute",
                "label" : "Status",
                "color" : "#ffeb3b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.3882020607307275,
                "postFuncBody" : "if (value == \"true\") { return \"Online\"; }\nreturn \"Offline\";"
              }, {
                "name" : "apn",
                "type" : "attribute",
                "label" : "Operadora",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.20532911344910554
              }, {
                "name" : "ccid",
                "type" : "attribute",
                "label" : "Simcard",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.02915241040114447
              }, {
                "name" : "imei",
                "type" : "attribute",
                "label" : "IMEI",
                "color" : "#e91e63",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.7620483566779137
              }, {
                "name" : "ke",
                "type" : "attribute",
                "label" : "Cte",
                "color" : "#ffeb3b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.10545936164417147,
                "decimals" : 4
              }, {
                "name" : "up_time",
                "type" : "attribute",
                "label" : "Uptime",
                "color" : "#03a9f4",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.5424368930811185
              } ],
              "entityAliasId" : "ffaddc2f-20f2-387e-9b2a-e84653802171"
            } ],
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "id" : "abb075ef-2aee-1ec4-85f8-0b6da17e4647",
                "name" : "change entity",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "adm_remota_ssu",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Site"
              } ],
              "headerButton" : [ ]
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "49a1af83-86fc-4419-b33b-e6f44987055f",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "42a248b5-d8c3-450d-8ff1-ab7b89d74a0c" : {
          "type" : "static",
          "sizeX" : 54,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Remotas por cliente</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 30px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "label Clientes",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "42a248b5-d8c3-450d-8ff1-ab7b89d74a0c",
          "typeFullFqn" : "system.cards.html_card"
        },
        "be1d381d-2017-46d6-860d-aab50639080e" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh_average_year",
                "type" : "timeseries",
                "label" : "fat_consumo_kwh_average_year",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5281624838614358
              }, {
                "name" : "fat_saldo_creditos",
                "type" : "timeseries",
                "label" : "fat_saldo_creditos",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.816171105093175,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#ffffff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<script>\n\n    var val_creditos = \"${fat_saldo_creditos}\";\n    var val_consumo_ano = \"${fat_consumo_kwh_average_year}\";\n\n    val_creditos = parseFloat(val_creditos) || 0\n    val_consumo_ano = parseFloat(val_consumo_ano) || 0\n\n    var unit = \" kWh\";\n    var fraction_digits = 0;\n    document.getElementById(\"val_creditos\").innerHTML = \"0\" + unit;\n    document.getElementById(\"meses_cred_usina2\").innerHTML = \"\";\n\n    if (val_creditos > 0 ) {\n        if (val_consumo_ano > 0 ) {\n            document.getElementById(\"meses_cred_usina2\").innerHTML = (val_creditos/val_consumo_ano*12).toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: 1, maximumFractionDigits: 1}) + \" meses\";\n        } else {\n            document.getElementById(\"meses_cred_usina2\").innerHTML = \"\";\n        }\n        if (val_creditos > 10000 ) {\n            unit = \" MWh\";\n            val_creditos = val_creditos / 1000;\n            fraction_digits = 2;\n        }\n        document.getElementById(\"val_creditos\").innerHTML = val_creditos.toLocaleString('pt-BR', {style: 'decimal', maximumFractionDigits: fraction_digits}) + unit;\n    }\n\n</script>\n\n<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div id=\"val_creditos\" class=\"value\"></div><br>\n        <footer>\n            <div id=\"meses_cred_usina2\" class=\"additional-info\"></div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Saldo de Créditos",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Rateio Otimizado",
                "icon" : "cloud_download",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "custom",
                "customFunction" : "// let $injector = widgetContext.$scope.$injector;\n// let customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nlet user = widgetContext.currentUser;\nlet userMail = user.sub\nlet url = 'https://solarhub.engecomp.io/openapi/report'\n\ndebugger\nvar stateParams = widgetContext.stateController.getStateParams();\nvar now = moment.utc().startOf('month')\nvar start = now.clone().subtract(12,'months').unix()*1000\nvar end = now.clone().endOf('month').add(12,'months').unix()*1000\n\nvar params = {\n    use_case: \"uc\",\n    start_date: start,\n    end_date: end,\n    entity_name: entityId.id,\n    customer_name: stateParams.Curr_customer.entityName,\n    input_localtime: false,\n    output_localtime: true,\n    output_iso_8601: false,\n    template_url: \"https://solarhub.engecomp.io/res/relatorio_rateio_v3.xlsx\",\n    email_to: userMail ,\n    api_version: 3,\n    render_pdf: 0\n}\n\nsend(url+buildParams(params))\n\nfunction buildParams(params) {\n    var url = \"\"\n    for (var key in params) {\n        url = url+'&'+key+'='+params[key]\n    }\n    return url.replace(\"\\&\", \"?\")\n}\n\nfunction send(url) {\n\n    var settings = {\n      \"url\": url,\n      \"method\": \"GET\",\n      \"timeout\": 0,\n      \"processData\": false,\n      \"contentType\": false,\n      \"headers\": {\n        \"token\": localStorage[\"jwt_token\"]\n      },\n      \"success\": function(data) {\n        if (data.link && data.link.length > 0) {\n            window.open(data.link,'_blank');\n        } \n        console.log(JSON.stringify(data))\n      },\n      \"error\": function(data) {\n        var message = 'Erro. Por favor contacte a Engecomp.'\n        widgetContext.showErrorToast(message, 3000)\n      }\n    };\n    \n    $.ajax(settings)\n\n}\n",
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "7a4ac79f-877e-4616-e39b-332a45f0e832"
              }, {
                "name" : "Cadastro rateios",
                "icon" : "cloud_upload",
                "type" : "customPretty",
                "customHtml" : "\t<form #editDeviceForm=\"ngForm\" [formGroup] = 'fileAdd'\n      (ngSubmit)=\"send()\" style=\"width: 650px;\" >\n  <mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>Importar dados de produção</h2>\n    <span fxFlex></span>\n    <button mat-button mat-icon-button\n            (click)=\"cancel()\"\n            type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n\n    <mat-spinner [fxShow]=\"loading\" class=\"spinner_container\"></mat-spinner>\n\n    <div class=\"tb-container\">\n      <label class=\"action-title\">Arquivo Excel conforme acordado</label>\n        <div class=\"action-file-select-container \">\n              <div class=\"action-file-clear-container\">\n                <button mat-button mat-icon-button color=\"primary\"\n                        type=\"button\"\n                        (click)=\"clearFile()\"\n                        class=\"action-file-clear-btn\"\n                        matTooltip=\"{{ 'action.remove' | translate }}\"\n                        matTooltipPosition=\"above\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </div>\n            <div class=\"drop-area action-flow-drop\">\n                <label for=\"file-input\">Arraste o arquivo ou clique aqui para selecionar</label>\n                <input class=\"file-input\" type=\"file\" id=\"file-input\" formControlName = 'controlInputField' (change)=\"fileAdded($event.target.files)\">\n              </div>\n        </div>\n    </div>\n    <div class = 'file-info'>\n      <div *ngIf=\"!fileName\" class=\"cut-text\">Nenhum arquivo selecionado</div>\n      <div *ngIf=\"fileName\" class=\"cut-text\">{{ fileName }}</div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\">\n    <span fxFlex></span>\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button mat-raised-button color=\"primary\"\n            style=\"margin-right: 20px;\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || fileAdd.invalid\">\n      Import\n    </button>\n  </div>\n</form>",
                "customCss" : "\n.file-input{\n       display: none;\n}\n\n.action-flow-drop{\n     position: relative;\n    height: 100%;\n    overflow: hidden;\n    border: dashed 2px;\n    margin-left: 15px;\n}\n\n.action-flow-drop label{\n    display: flex;\n      flex-direction: column;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      font-size: 16px;\n      text-align: center;\n}\n\n.action-title{\n    display: block;\n    padding-bottom: 8px;\n    margin-left: 15px;\n    color: #8E8E8E;\n    font-size:12px;\n}\n\n.action-file-select-container{\n    position: relative;\n    width: 100%;\n    height: 100px;\n}\n\n.action-file-clear-container{\n    position: relative;\n    float: right;\n    width: 48px;\n    height: 100%;\n}\n\n.action-file-clear-btn{\n    top: 50%;\n    transform: translate(0%, -50%) !important;\n}\n\n.file-info{\n    margin-left: 15px;\n    margin-right: 15px;\n}\n\n.loading{\n    margin-top: 5px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    text-align: center;\n}\n\n.action-flow-drop label{\n    font-size: 25px;\n}\n\n.spinner_container {\n    border-radius: 10px;\n    height: 70px;\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    transform: translate(-50%,-50%);\n    width: 70px;\n    z-index: 3;\n    opacity: 0.5;\n}",
                "customFunction" : "\nlet $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenEditDeviceDialog();\n\nsearch = {\n    entityFilter:    {\n      \"type\": \"deviceSearchQuery\",\n      \"resolveMultiple\": true,\n      \"rootStateEntity\": true,\n      \"stateEntityParamName\": \"Curr_Usina\",\n      \"defaultStateEntity\": null,\n      \"rootEntity\": entityId,\n      \"direction\": \"FROM\",\n      \"maxLevel\": 1,\n      \"relationType\": \"Contains\",\n      \"deviceTypes\": [\"UC\"]\n    },\n    pageLink: {\n        page: 0,\n        pageSize: 1000,\n        textSearch: null,\n        dynamic: false,\n        sortOrder: {\n          key: {\n            key: \"name\",\n            type: \"ENTITY_FIELD\"\n          },\n          direction: \"ASC\"\n        }\n      },\n    entityFields: [\n        {\n          key: \"name\",\n          type: \"ENTITY_FIELD\"\n        }\n      ],\n    latestValues: [\n        {\n          key: \"description\",\n          type: \"ATTRIBUTE\"\n        }\n      ]\n}\n\n\nfunction openEditDeviceDialog() {\n    customDialog.customDialog(htmlTemplate, EditDeviceDialogController).subscribe();\n}\n\nfunction EditDeviceDialogController(instance) {\n    let vm = instance;\n    vm.fileName = '';\n    vm.loading = false;\n    let url = 'https://solarhub.engecomp.io/openapi/file_upload'\n    let user = widgetContext.currentUser;\n    let userMail = user.sub\n    //let parent_id = widgetContext.stateController.getEntityId('Curr_Client')\n    \n     $( document ).ready(function() {\n        let form = $('.drop-area');\n        form.on('drag dragstart dragend dragover dragenter dragleave drop', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n        }).on('drop', function(e) {\n            vm.fileAdded(e.originalEvent.dataTransfer.files);\n        });\n    });\n    \n    vm.fileAdd = vm.fb.group({\n        file:[[], [vm.validators.required]],\n        controlInputField:''\n    });\n\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n    vm.clearFile = () => {\n        $(\".file-input\").value = \"\";\n        vm.fileName = '';\n        vm.fileAdd.patchValue({file: []})\n    }\n\n    vm.fileAdded = (files)=> {\n        for(let i = 0; i < files.length; i++){\n            let filetype=files[i].name.split('.').pop();\n            let filesize=files[i].size\n            if ((filetype.toLowerCase() === 'xls' || filetype.toLowerCase() === 'xlsx') && filesize < 1024*1024*20) {\n                let newFiles = vm.fileAdd.get('file').value\n                if(vm.fileAdd.get('file').value.length !== 0){\n                    vm.fileName += ' // ';\n                }\n                newFiles.push(files.item(i))\n                vm.fileAdd.patchValue({file: newFiles})\n                vm.fileName += files.item(i).name;\n            } else {\n                if (filetype.toLowerCase() !== 'xls' && filetype.toLowerCase() !== 'xlsx') {\n                    alert(files[i].name + \" tem extensão inválida\");\n                } else {\n                    alert(files[i].name + \" excede 20MB\");\n                }\n                \n            }\n        }\n        vm.fileAdd.get('controlInputField').patchValue('', {emitEvent: false});\n    }\n\n\n    vm.send = () =>\n    {\n        vm.loading = true;\n        \n        var form = new FormData();\n        form.append(\"file\", vm.fileAdd.get('file').value[0]);\n        form.append(\"file_type\", \"novos_rateios\");\n        form.append(\"search\", JSON.stringify(search));\n        form.append(\"token\", localStorage[\"jwt_token\"])\n        form.append(\"email\", userMail)\n        \n        var settings = {\n          \"url\": url,\n          \"method\": \"POST\",\n          \"timeout\": 0,\n          \"processData\": false,\n          \"mimeType\": \"multipart/form-data\",\n          \"contentType\": false,\n          \"data\": form,\n          \"success\": function(data) {\n              vm.loading = false\n              widgetContext.showSuccessToast('Arquivo enviado com sucesso.', 3000)\n              vm.cancel();\n          },\n          \"error\": function(data) {\n            vm.loading = false\n            response = JSON.parse(data.responseText)\n            if (response.hasOwnProperty('detail')) {\n                message = response.detail\n            } else {\n                message = 'Erro. Por favor contacte a Engecomp.'\n            }\n            widgetContext.showErrorToast(message, 3000)\n            vm.cancel();\n          }\n        };\n        \n        $.ajax(settings)\n\n    }\n}\n\n\n",
                "customResources" : [ ],
                "id" : "b79dc7b6-2f0d-e6a0-7eff-338c03a6ed8b"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "be1d381d-2017-46d6-860d-aab50639080e",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "c0b1cd16-b307-4238-8012-1549e1cd81f4" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.2371823133874449
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 24px;\n    color: rgba(0, 0, 0, 0.87);\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}\n",
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Sazonalidade</div>"
            },
            "title" : "label config sazonalidade",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<head>\n    <style type=\"text/css\">\n        body {\n            color: purple;\n            background-color: #d8da3d\n        }\n    </style>\n</head>\n<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\" fxLayoutGap=\"10px\"\n        style=\"min-width: 700px\">\n\n        <div fxLayout=\"row\" fxLayoutAlign=\" center\" fxLayoutGap=\"0px\">\n           <div fxLayoutAlign=\"space-around left\">&nbsp;</div>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=50 fxFill>\n                <mat-label>Possui benefício da sazonalidade?</mat-label>\n                <mat-select name=\"sazonal_on\"\n                    [(ngModel)]=\"attributes.sazonal_on\"\n                    ng-change=\"change()\">\n                    <mat-option value=\"0\">Não\n                    </mat-option>\n                    <mat-option value=\"1\">Sim\n                    </mat-option>\n                </mat-select><br>\n            </mat-form-field>\n\n            <mat-form-field fxFlex=50 fxFill>\n                <mat-label>Data de vigência</mat-label>\n                <input matInput type=\"date\"\n                    [(ngModel)]=\"attributes.sazonal_date\">\n            </mat-form-field>\n\n        </div>\n\n    </div>\n</div>\n\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Configurar Benefício da Sazonalidade'\n    \n    vm.diffAttrs=['sazonal_on', 'sazonal_date']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n         })\n    }\n\n    for (var i=0; i<widgetContext.data.length; i++){\n        if (!vm.diffAttrs.includes(widgetContext.data[i].dataKey.name)) {\n            var x = widgetContext.data[i].data[0][1]\n            vm.attributes[widgetContext.data[i].dataKey.name] = x\n        }\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        debugger\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()\n    }\n\n}\n",
                "customResources" : [ ],
                "id" : "f58dccac-b906-31bd-b8bd-f46024ee38bb"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "c0b1cd16-b307-4238-8012-1549e1cd81f4",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "8ae5fbea-33de-f027-7ff7-f4ccc8761fc3" : {
          "type" : "timeseries",
          "sizeX" : 8,
          "sizeY" : 5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "ea337dd3-3e20-573c-3268-117e79aee26d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh_production_units",
                "type" : "timeseries",
                "label" : "kWh/Kg",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.3498718125652267,
                "units" : "{ \"seq\":4,   \"align\": \"right\",   \"formatter\": \"money\",   \"formatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 2   } }",
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_production_units",
                "type" : "timeseries",
                "label" : "Produção (Kg)",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.3871162383831781,
                "units" : "{ \"seq\":3,  \"bottomCalc\": \"sum\",   \"bottomCalcFormatter\": \"money\",   \"bottomCalcFormatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 0   },   \"align\": \"right\",   \"formatter\": \"money\",   \"formatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 1   } }",
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "Cons. medido (kWh)",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.8488782641087826,
                "units" : "{ \"seq\":2,  \"bottomCalc\": \"sum\",   \"bottomCalcFormatter\": \"money\",   \"bottomCalcFormatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 0   },   \"align\": \"right\",   \"formatter\": \"money\",   \"formatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 0   } }",
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_consumo_kwh_m2",
                "type" : "timeseries",
                "label" : "kWh/m2",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.3324964976256415,
                "units" : "{ \"seq\": 7,   \"align\": \"right\",   \"formatter\": \"money\",   \"formatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 2   } }",
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1622516400000,
                  "endTimeMs" : 1625108399000
                },
                "interval" : 18000000
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 50000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "root_state" : "Curr_SubClient",
              "attributeSettings" : "var toNumber = function(value,data) {\n    var f = parseFloat(value) \n    return f\n}\n\nhtml = {\n    1: '<html><img src=\"https://solarhub.engecomp.io/res/ee_g.png\" width=\"auto\" height=\"22em\"></html>',\n    2: '<html><img src=\"https://solarhub.engecomp.io/res/ee_f.png\" width=\"auto\" height=\"22em\"></html>',\n    3: '<html><img src=\"https://solarhub.engecomp.io/res/ee_e.png\" width=\"auto\" height=\"22em\"></html>',\n    4: '<html><img src=\"https://solarhub.engecomp.io/res/ee_d.png\" width=\"auto\" height=\"22em\"></html>',\n    5: '<html><img src=\"https://solarhub.engecomp.io/res/ee_c.png\" width=\"auto\" height=\"22em\"></html>',\n    6: '<html><img src=\"https://solarhub.engecomp.io/res/ee_b.png\" width=\"auto\" height=\"22em\"></html>',\n    7: '<html><img src=\"https://solarhub.engecomp.io/res/ee_a.png\" width=\"auto\" height=\"22em\"></html>'\n};\n\n\nvar ABCdesc = function(cell, formatterParams, onRendered){ //plain text value\n    //value=Math.ceil(cell.getValue()*7,1)\n    value=cell.getValue()\n    return html[value];\n};\n\nvar ABCasc = function(cell, formatterParams, onRendered){ //plain text value\n    value=cell.getValue()\n    value=7-value+1\n    return html[value];\n};\n\nattributeParams = [\n    {seq:0, title: \"UC\", field: \"UC\", fixed: true, frozen: true,  headerMenu: \"headerMenu\", bottomCalc: \"count\", \"hozAlign\": \"right\", bottomCalcFormatter: \"money\",   bottomCalcFormatterParams: {decimal: \",\", thousand: \".\", precision: 0}, download:true},\n    {seq:1, title: \"Nome\", field: \"description\", frozen: true, download:true},\n    {seq:6, title: \"Área\", field: \"bench_area\", download:true, \"bottomCalc\":\"sum\",\"bottomCalcFormatter\":\"money\",\"bottomCalcFormatterParams\":{\"decimal\":\",\",\"thousand\":\".\",\"precision\":0},\"align\":\"right\",\"formatter\":\"money\",\"formatterParams\":{\"decimal\":\",\",\"thousand\":\".\",\"precision\":1}},\n    {seq: 8, title: \"Score área\", field: \"fat_consumo_kwh_m2_bench\", \"hozAlign\": \"right\", formatter:ABCasc , download:true},\n    {seq: 5, title: \"Score produção\", field: \"fat_consumo_kwh_production_units_bench\", \"hozAlign\": \"right\", formatter:ABCasc , download:true}\n]\n    \nreturn attributeParams    ",
              "fields_to_bench" : "fat_consumo_kwh_production_units,fat_consumo_kwh_m2"
            },
            "title" : "Benchmarking",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false,
            "widgetStyle" : { },
            "showLegend" : false
          },
          "row" : 0,
          "col" : 0,
          "id" : "8ae5fbea-33de-f027-7ff7-f4ccc8761fc3",
          "typeFullFqn" : "tenant.teste.tabulator"
        },
        "6bdbd873-c0a8-46e5-a9d5-1219a11f7e1f" : {
          "type" : "latest",
          "sizeX" : 13,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "c887f65b-386b-db62-7d93-8ff5fe5ecdcd",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh_average_year",
                "type" : "timeseries",
                "label" : "fat_consumo_kwh_average_year",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.8912532591905218,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function formattedNumber(x) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}); \n}\n\nreturn formattedNumber(value/1000)+' MWh';"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${fat_consumo_kwh_average_year}</div><br>\n    </section>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Consumo Anual",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Benchmarking",
                "icon" : "iso",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "faturas_benchmarking",
                "setEntityId" : false,
                "stateEntityParamName" : null,
                "openRightLayout" : false,
                "id" : "4d49f0c3-8555-f9c7-4900-9e3a0d412509"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "6bdbd873-c0a8-46e5-a9d5-1219a11f7e1f",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "ee6f888d-ed45-4488-a99d-c7e3809c2944" : {
          "type" : "latest",
          "sizeX" : 13,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh_production_units",
                "type" : "timeseries",
                "label" : "valor",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.6095768827477179,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nreturn formattedNumber(value, 2, 2) + \" kWh/prod\";"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Consumo Específico",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false,
            "displayTimewindow" : true
          },
          "id" : "ee6f888d-ed45-4488-a99d-c7e3809c2944",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "492da479-3909-4ae9-9869-dc6cafe75588" : {
          "type" : "timeseries",
          "sizeX" : 29,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "Consumo",
                "color" : "#3c9ad8",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  },
                  "tooltipValueFormatter" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nreturn formattedNumber(Math.round(value, 0), 0, 0) + \" kWh\";"
                },
                "_hash" : 0.014741995900187543,
                "decimals" : 0,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_temp_media",
                "type" : "timeseries",
                "label" : "Temp Média",
                "color" : "#ebab54",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : true,
                  "axisPosition" : "right",
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  },
                  "axisMin" : 0,
                  "axisMax" : 30,
                  "tooltipValueFormatter" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nreturn formattedNumber(value, 1, 1) + \" .C\";"
                },
                "_hash" : 0.22462590013310169
              }, {
                "name" : "fat_consumo_kwh_production_units",
                "type" : "timeseries",
                "label" : "Consumo/Produção",
                "color" : "#9c27b0",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : true,
                  "axisPosition" : "right",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.9558991756636938,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "timewindowMs" : 64800000000,
                "quickInterval" : "CURRENT_DAY",
                "interval" : 86400000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 20000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "row",
                "position" : "bottom",
                "showMin" : false,
                "showMax" : false,
                "showAvg" : false,
                "showTotal" : false
              }
            },
            "title" : "Consumo e Temperatura (kWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "actions" : {
              "headerButton" : [ ]
            }
          },
          "id" : "492da479-3909-4ae9-9869-dc6cafe75588",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "dff08c85-7f23-492f-97a2-9ab277d43ee5" : {
          "type" : "timeseries",
          "sizeX" : 25,
          "sizeY" : 18,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "uc_url_conta",
                "type" : "timeseries",
                "label" : "Leitura",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "function timeConverter(UNIX_timestamp) {\n    var a = new Date(UNIX_timestamp);\n    var months = ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun',\n        'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'\n    ];\n    var year = a.getFullYear() - 2000;\n    var month = months[a.getMonth()];\n    var day = a.getDate()\n    var time = day + \"-\" + month + '-' + year;\n    return time;\n}\n\nvar html = timeConverter(rowData['Timestamp'])\nif (value !== undefined) {\n    html = '' +\n        '<html>' + timeConverter(rowData['Timestamp']) +\n        '</html>'\n}\nreturn html;"
                },
                "_hash" : 0.7821151291852728,
                "postFuncBody" : "return value;",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "Consumo",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return (Math.round(value)).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.5349386412549832,
                "decimals" : null,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_production_units",
                "type" : "timeseries",
                "label" : "Produção",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.9990272823573612,
                "decimals" : 2,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_consumo_kwh_production_units",
                "type" : "timeseries",
                "label" : "Cons/Prod",
                "color" : "#ffc107",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.0036185873837042415,
                "units" : null,
                "decimals" : 2,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 630720000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 20000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : false,
              "defaultPageSize" : 15,
              "enableSearch" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Consumo x Produção",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : {
              "headerButton" : [ {
                "id" : "1c2bf03f-f432-65ca-0040-abc2972ea2d1",
                "name" : "Detalhes das faturas",
                "icon" : "grid_on",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "faturas_rel_fats",
                "setEntityId" : true,
                "stateEntityParamName" : ""
              } ]
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : false
          },
          "id" : "dff08c85-7f23-492f-97a2-9ab277d43ee5",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "3bfed2fd-4282-4dfb-b45b-36a98a6f7a11" : {
          "type" : "latest",
          "sizeX" : 13,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_production_units",
                "type" : "timeseries",
                "label" : "valor",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.6095768827477179,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nreturn formattedNumber(value, 0, 0) + \" kg\";"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}",
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>"
            },
            "title" : "Produção",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false,
            "displayTimewindow" : true
          },
          "id" : "3bfed2fd-4282-4dfb-b45b-36a98a6f7a11",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "17351522-0953-442f-b8a7-3c26a9258d42" : {
          "type" : "latest",
          "sizeX" : 54,
          "sizeY" : 10,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "ref_cliente",
                "type" : "attribute",
                "label" : "ref_cliente",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.314082626274236
              }, {
                "name" : "endereco",
                "type" : "attribute",
                "label" : "endereco",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.29428729276659693
              }, {
                "name" : "cep",
                "type" : "attribute",
                "label" : "cep",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.5714814111075266
              }, {
                "name" : "bairro",
                "type" : "attribute",
                "label" : "bairro",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.1792060085480156
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.6039520675261614
              }, {
                "name" : "estado",
                "type" : "attribute",
                "label" : "estado",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.255617971554996
              }, {
                "name" : "segmento",
                "type" : "attribute",
                "label" : "segmento",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.4438436825064902,
                "postFuncBody" : "string = moment().format('YYYYMMDD')\nurl = 'https://solarhub.engecomp.io/res/ramo_atividade.json'+'?'+string;\nvar ramo_atividade = JSON.parse(Get(url));\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nreturn ramo_atividade[value];\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "contato",
                "type" : "attribute",
                "label" : "contato",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.9172346110507434
              }, {
                "name" : "depto",
                "type" : "attribute",
                "label" : "depto",
                "color" : "#03a9f4",
                "settings" : { },
                "_hash" : 0.8789454918582487
              }, {
                "name" : "telefone",
                "type" : "attribute",
                "label" : "telefone",
                "color" : "#ff9800",
                "settings" : { },
                "_hash" : 0.5118181150391452
              }, {
                "name" : "email",
                "type" : "attribute",
                "label" : "email",
                "color" : "#673ab7",
                "settings" : { },
                "_hash" : 0.23050908419558058
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#cddc39",
                "settings" : { },
                "_hash" : 0.1704841555313179
              }, {
                "name" : "obs_cliente",
                "type" : "attribute",
                "label" : "obs_cliente",
                "color" : "#cddc39",
                "settings" : { },
                "_hash" : 0.3936841816165175
              }, {
                "name" : "icms",
                "type" : "attribute",
                "label" : "icms",
                "color" : "#009688",
                "settings" : { },
                "_hash" : 0.7603581145702347,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : 0,
                "funcBody" : null
              }, {
                "name" : "bench_area",
                "type" : "attribute",
                "label" : "area",
                "color" : "#009688",
                "settings" : { },
                "_hash" : 0.4688787383084847,
                "units" : "m2",
                "decimals" : 0,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"25%\" align=\"left\"><style class=\"title\">ID:</style><br><style class=\"text\">${entityName}</style></td>\n                <td width=\"48%\" align=\"left\"><style class=\"title\">Identificação da Unidade:</style><br><style class=\"text\">${description}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Referência Cliente:</style><br><style class=\"text\">${ref_cliente}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"73%\" align=\"left\"><style class=\"title\">Endereço:</style><br><style class=\"text\">${endereco}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Bairro:</style><br><style class=\"text\">${bairro}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Cidade:</style><br><style class=\"text\">${cidade}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Estado:</style><br><style class=\"text\">${estado}</style></td>\n                <td width=\"23%\" align=\"left\"><style class=\"title\">CEP:</style><br><style class=\"text\">${cep}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Ramo de Atividade:</style><br><style class=\"text\">${segmento}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Responsável:</style><br><style class=\"text\">${contato}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Departamento:</style><br><style class=\"text\">${depto}</style></td>\n                <td width=\"23%\" align=\"left\"><style class=\"title\">Telefone:</style><br><style class=\"text\">${telefone}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">E-mail:</style><br><style class=\"text\">${email}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"50%\" align=\"left\"><style class=\"title\">Observações:</style><br><style class=\"text\">${obs_cliente}</style></td>\n                <td width=\"23%\" align=\"left\"><style class=\"title\">Area:</style><br><style class=\"text\">${area}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">ICMS Diferenciado:</style><br><style class=\"text\">${icms}%</style></td>\n            </tr>\n        </table>\n</div>\n\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}"
            },
            "title" : "Dados do Consumidor",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n        style=\"min-width: 800px; padding: 20px\">\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=\"66\" class=\"mat-block\">\n                <mat-label>Identificação da Unidade\n                </mat-label>\n                <input matInput type=\"text\"\n                    [(ngModel)]=\"attributes.description\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Referência Cliente\n                </mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.ref_cliente\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=\"66\" class=\"mat-block\">\n                <mat-label>Endereço</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.endereco\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Bairro</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.bairro\">\n            </mat-form-field>\n\n        </div>\n\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=\"33\" class=\"mat-block\">\n                <mat-label>Cidade</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.cidade\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"33\" class=\"mat-block\">\n                <mat-label>Estado</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.estado\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"33\" class=\"mat-block\">\n                <mat-label>CEP</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.cep\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Contato</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.contato\">\n            </mat-form-field>\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Depto</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.depto\">\n            </mat-form-field>\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Telefone</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.telefone\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=\"100\" class=\"mat-block\">\n                <mat-label>Email</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.email\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=\"33\" class=\"mat-block\">\n                <mat-label>Ramo de Atividade</mat-label>\n                <mat-select name=\"segmento\"\n                    [(ngModel)]=\"attributes.segmento\">\n                    <mat-option\n                        *ngFor=\"let item of ramo_atividade\"\n                        [value]=\"item[1]\">\n                        {{item[0]}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field fxFlex=\"33\" class=\"mat-block\">\n                <mat-label>Area</mat-label>\n                <input matInput type=\"text\"\n                    [(ngModel)]=\"attributes.bench_area\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"33\" class=\"mat-block\">\n                <mat-label>ICMS Diferenciado\n                </mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.icms\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Observações</mat-label>\n                <input matInput type=\"text\"\n                    [(ngModel)]=\"attributes.obs_cliente\">\n            </mat-form-field>\n        </div>\n\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nstring = moment().format('YYYYMMDD')\nurl = 'https://solarhub.engecomp.io/res/ramo_atividade.json'+'?'+string;\nwidgetContext.ramo_atividade = sortByValue(JSON.parse(Get(url)))\n\n\nfunction sortByValue(jsObj){\n    var sortedArray = [];\n    for(var i in jsObj)\n    {\n        sortedArray.push([jsObj[i], i]);\n    }\n    return sortedArray.sort();\n}\n\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Editar dados do consumidor'\n    vm.ramo_atividade = widgetContext.ramo_atividade\n\n    vm.diffAttrs=['segmento']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n         })\n    }\n\n    for (var i=0; i<widgetContext.data.length; i++){\n        if (!vm.diffAttrs.includes(widgetContext.data[i].dataKey.name)) {\n            var x = widgetContext.data[i].data[0][1]\n            vm.attributes[widgetContext.data[i].dataKey.name] = x\n        }\n    }\n    delete vm.attributes.UC\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        debugger;\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()  \n    }\n}\n",
                "customResources" : [ ],
                "id" : "714386db-bd14-7aee-c92e-707569ee4835"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "17351522-0953-442f-b8a7-3c26a9258d42",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "d2e553da-add5-4eee-8399-9dd2854d1ad4" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_economia_kwh",
                "type" : "attribute",
                "label" : "valor",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.6778318759429307,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nreturn formattedNumber(value, 0, 0)+ \" kWh\";"
              } ],
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n        <footer>\n            <div class=\"additional-info\">${variacao}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Economia Último Mês",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false,
            "displayTimewindow" : true
          },
          "id" : "d2e553da-add5-4eee-8399-9dd2854d1ad4",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "3933f778-0b3b-4539-951f-2d4dc5757533" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_economia_brl",
                "type" : "attribute",
                "label" : "valor",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.6422947229897975,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nreturn \"R$ \" + formattedNumber(value, 2, 2);"
              } ],
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n        <footer>\n            <div class=\"additional-info\">${variacao}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Economia Último Mês",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false,
            "displayTimewindow" : true,
            "mobileOrder" : 13,
            "mobileHeight" : 2
          },
          "id" : "3933f778-0b3b-4539-951f-2d4dc5757533",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "c3ad00a0-8fa0-43e2-9749-593966767654" : {
          "type" : "timeseries",
          "sizeX" : 29,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_esperado_kwh",
                "type" : "timeseries",
                "label" : "Consumo Esperado",
                "color" : "#e34844",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  },
                  "tooltipValueFormatter" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nreturn formattedNumber(Math.round(value, 0), 0, 0) + \" kWh\";"
                },
                "_hash" : 0.9282380692633563,
                "decimals" : 0,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_temp_media",
                "type" : "timeseries",
                "label" : "Temp Média",
                "color" : "#ebab54",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : true,
                  "axisPosition" : "right",
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  },
                  "axisMin" : 0,
                  "axisMax" : 30,
                  "tooltipValueFormatter" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nreturn formattedNumber(value, 1, 1) + \" .C\";"
                },
                "_hash" : 0.22462590013310169
              }, {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "Consumo Medido",
                "color" : "#3c9ad8",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  },
                  "tooltipValueFormatter" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nreturn formattedNumber(Math.round(value, 0), 0, 0) + \" kWh\";"
                },
                "_hash" : 0.014741995900187543,
                "decimals" : 0,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 86400000,
                "timewindowMs" : 73440000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 20000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "row",
                "position" : "bottom",
                "showMin" : false,
                "showMax" : false,
                "showAvg" : false,
                "showTotal" : false
              }
            },
            "title" : "Consumo Medido x Esperado (kWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "actions" : {
              "headerButton" : [ ]
            }
          },
          "id" : "c3ad00a0-8fa0-43e2-9749-593966767654",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "ed8a5501-2913-4b24-9efe-3230517a72d6" : {
          "type" : "timeseries",
          "sizeX" : 25,
          "sizeY" : 11,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "fat_economia_brl",
                "type" : "timeseries",
                "label" : "Economia mensal",
                "color" : "rgb(58, 123, 182)",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : false,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  },
                  "tooltipValueFormatter" : "return \"R$ \"+ value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.0984805721680111,
                "decimals" : 2
              } ],
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 604800000,
                "timewindowMs" : 44928000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 2000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "defaultBarWidth" : 1944000000,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "barAlignment" : "left",
              "showLegend" : false,
              "legendConfig" : {
                "direction" : "column",
                "position" : "bottom",
                "sortDataKeys" : false,
                "showMin" : false,
                "showMax" : false,
                "showAvg" : true,
                "showTotal" : false,
                "showLatest" : false
              }
            },
            "title" : "Economia Mensal (R$)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "displayTimewindow" : false
          },
          "id" : "ed8a5501-2913-4b24-9efe-3230517a72d6",
          "typeFullFqn" : "system.charts.timeseries_bars_flot"
        },
        "b9c27276-e775-4d51-9729-bbc228044c6c" : {
          "type" : "latest",
          "sizeX" : 18,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_esperado_kwh",
                "type" : "attribute",
                "label" : "valor",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.3934882063636649,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nreturn formattedNumber(value, 0, 0) + \" kWh\";",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Consumo Esperado",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "b9c27276-e775-4d51-9729-bbc228044c6c",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "1f048c02-a2d8-2ebc-a53d-6af7068f1e7c" : {
          "type" : "latest",
          "sizeX" : 64,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "-%",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "entitiesTitle" : "Potenciais de Economia por Consumidor",
              "enableSelectColumnDisplay" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "true",
              "displayEntityLabel" : false,
              "useRowStyleFunction" : false
            },
            "title" : "Potencial Economia Consolidado",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "ea337dd3-3e20-573c-3268-117e79aee26d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "id_ref_cliente",
                "type" : "attribute",
                "label" : "ID",
                "color" : "#2962ff",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return value.toString();"
                },
                "_hash" : 0.4956853778845989,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#9e9e9e",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "always"
                },
                "_hash" : 0.019975126114655684,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "Nome da Loja",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.3986992590260452,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~SEM NOME\"    \n}\nreturn nome;",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "Concessionária",
                "color" : "#f44336",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var url = 'https://solarhub.engecomp.io/res/utility_list.json?'+moment().format('MMDD');\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nvar obj = JSON.parse(Get(url));\n\nif (value == \"\") {\n    return \"Não definida\";\n}\nreturn obj[Math.floor(value)];",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.446269960471678,
                "postFuncBody" : "",
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "aggregationType" : null
              }, {
                "name" : "pe_contrato_demanda",
                "type" : "attribute",
                "label" : "Demanda",
                "color" : "#ffc107",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Math.round(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n"
                },
                "_hash" : 0.31650662019480813
              }, {
                "name" : "pe_tarifacao",
                "type" : "attribute",
                "label" : "Tarifação",
                "color" : "#607d8b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Math.round(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n"
                },
                "_hash" : 0.6520373252348499
              }, {
                "name" : "pe_mercado_livre",
                "type" : "attribute",
                "label" : "Merc Livre",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Math.round(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n"
                },
                "_hash" : 0.42491180969595654
              }, {
                "name" : "pe_fator_potencia",
                "type" : "attribute",
                "label" : "F Potência",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Math.round(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n"
                },
                "_hash" : 0.39004464911247094
              }, {
                "name" : "pe_geracao_ponta",
                "type" : "attribute",
                "label" : "Ger Ponta",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Math.round(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n"
                },
                "_hash" : 0.9492119540836372
              }, {
                "name" : "pe_geracao_solar",
                "type" : "attribute",
                "label" : "Ger Solar",
                "color" : "#e91e63",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Math.round(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n"
                },
                "_hash" : 0.5383075591684316
              }, {
                "name" : "pe_total",
                "type" : "attribute",
                "label" : "Total",
                "color" : "#e91e63",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Math.round(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n"
                },
                "_hash" : 0.45033175711952533,
                "postFuncBody" : "return Math.max(value,0);"
              }, {
                "name" : "pe_total_percentual",
                "type" : "attribute",
                "label" : "%",
                "color" : "#ffeb3b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value <= 0) {\n    return 0;\n}\nreturn (Math.round(value*10)/10).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1});\n"
                },
                "_hash" : 0.24187879904606735,
                "postFuncBody" : "return Math.max(value,0);"
              }, {
                "name" : "pe_total_percentual",
                "type" : "attribute",
                "label" : "Status",
                "color" : "#ff9800",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var dict = {\n    0: 1,\n    1: 1,\n    2: 1,\n    3: 1,\n    4: 1,\n    5: 2,\n    6: 2,\n    7: 2,\n    8: 3,\n    9: 3,\n    10: 3,\n    11: 4,\n    12: 4,\n    13: 4,\n    14: 5,\n    15: 5,\n    16: 5,\n    17: 6,\n    18: 6,\n    19: 6,\n    20: 7,\n    21: 7\n};\n\nvar html = {\n    0: '<html>&nbsp;</html>',\n    1: '<html><img src=\"https://solarhub.engecomp.io/res/pe_a.png\" width=\"auto\" height=\"22em\"></html>',\n    2: '<html><img src=\"https://solarhub.engecomp.io/res/pe_b.png\" width=\"auto\" height=\"22em\"></html>',\n    3: '<html><img src=\"https://solarhub.engecomp.io/res/pe_c.png\" width=\"auto\" height=\"22em\"></html>',\n    4: '<html><img src=\"https://solarhub.engecomp.io/res/pe_d.png\" width=\"auto\" height=\"22em\"></html>',\n    5: '<html><img src=\"https://solarhub.engecomp.io/res/pe_e.png\" width=\"auto\" height=\"22em\"></html>',\n    6: '<html><img src=\"https://solarhub.engecomp.io/res/pe_f.png\" width=\"auto\" height=\"22em\"></html>',\n    7: '<html><img src=\"https://solarhub.engecomp.io/res/pe_g.png\" width=\"auto\" height=\"22em\"></html>'\n};\n\nif (value === null || typeof value === \"undefined\") {\n\treturn '<html>&nbsp;</html>';\n}\nif (value < 0) {\n\treturn '<html>&nbsp;</html>';\n}\nindex = dict[Math.floor(value)];\nif (value < 0.1)\n    index = 0;\nif (value > 20)\n    index = 7;\nreturn html[index];\n\n",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "never"
                },
                "_hash" : 0.8991691600946541,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "pe_error",
                "type" : "attribute",
                "label" : "Observação",
                "color" : "#ff9800",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.1337628168600571
              }, {
                "name" : "demanda_fp",
                "type" : "attribute",
                "label" : "Dem Contr FP",
                "color" : "#795548",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "always"
                },
                "_hash" : 0.6335239954718386,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return Number(value);"
              }, {
                "name" : "potencial_economia",
                "type" : "attribute",
                "label" : "Dem Ideal FP",
                "color" : "#673ab7",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "always"
                },
                "_hash" : 0.05249394349001335,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "try {\n    var x = JSON.parse(value).pe.contrato_demanda.details.dem_ideal_fp\n} catch(error) {\n    return \"\"\n}\n\nreturn x"
              }, {
                "name" : "demanda_p",
                "type" : "attribute",
                "label" : "Dem Contr P",
                "color" : "#009688",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "always"
                },
                "_hash" : 0.6169066085701185,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return Number(value);"
              }, {
                "name" : "potencial_economia",
                "type" : "attribute",
                "label" : "Dem Ideal P",
                "color" : "#cddc39",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "always"
                },
                "_hash" : 0.46594774269127126,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "try {\n    var x = JSON.parse(value).pe.contrato_demanda.details.dem_ideal_p\n} catch(error) {\n    return \"\"\n}\n\nreturn x"
              }, {
                "name" : "enq_tarifario",
                "type" : "attribute",
                "label" : "Enq Tarifário",
                "color" : "#00bcd4",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "always"
                },
                "_hash" : 0.09803797623712285,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "var enq = {\"1\": \"Azul\", \"2\": \"Verde\"};\n\ntry {\n    var x = enq[value];\n} catch(error) {\n    return \"\";\n}\n\nreturn x;"
              }, {
                "name" : "potencial_economia",
                "type" : "attribute",
                "label" : "Enq Tarif Ideal",
                "color" : "#ff5722",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "always"
                },
                "_hash" : 0.1123090211669755,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "try {\n    var x = JSON.parse(value).pe.tarifacao.details.nome_enq_ideal;\n} catch(error) {\n    return \"\";\n}\n\nreturn x;"
              } ]
            } ],
            "enableDataExport" : true,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "name" : "Detalhes da unidade",
                "icon" : "more_horiz",
                "type" : "custom",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\nvar params = widgetContext.stateController.getStateParams()\n\nif (!params[\"Curr_Site\"]) {\n    params[\"Curr_Site\"] = {}\n}\nparams[\"Curr_Site\"] = {entityId: entityId}\n\n\n$injector.get(widgetContext.servicesMap.get('deviceService')).getDevice(entityId.id).subscribe((device) => {\n    if (device.type == 'UC') {\n        destination = \"ssu_pot_economia_uc\"\n    } else {\n        destination = \"ssu_pot_economia\"\n    }\n    widgetContext.stateController.updateState(destination, params, false);\n});\n\n",
                "id" : "d6334b7d-5385-1efc-dd3d-fe0e13842870"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "1f048c02-a2d8-2ebc-a53d-6af7068f1e7c",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "461b2b06-09ff-43c4-8388-3bf217886d7c" : {
          "type" : "static",
          "sizeX" : 54,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Economia no Mercado Livre</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 30px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "label Benchmarking GD",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "461b2b06-09ff-43c4-8388-3bf217886d7c",
          "typeFullFqn" : "system.cards.html_card"
        },
        "a049777b-b6d6-4eca-9296-5c050af9014d" : {
          "type" : "latest",
          "sizeX" : 34,
          "sizeY" : 9,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "status_cliente",
                "type" : "attribute",
                "label" : "status_cliente",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.6175208250947213,
                "postFuncBody" : "if (value == \"\") {\n    value = 0\n}\n\nvar dict = {\n    0: \"Não definido\",\n    1:\"Cativo\",\n    2:\"Livre\"\n};\n\nreturn dict[value];",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "utility",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5761914043089083,
                "postFuncBody" : "var url = 'https://solarhub.engecomp.io/res/utility_list.json?'+moment().format('MMDD');\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nvar obj = JSON.parse(Get(url));\n\nif (value == \"\") {\n    return \"Não definida\";\n}\nreturn obj[value];",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "aggregationType" : null
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "classe_tensao",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.9058048624834416,
                "postFuncBody" : "if (value == \"\") {\n    value = 0\n}\n\nvar dict = {\n    0:\"Não definida\",\n    1:\"A1 (>=230 kV)\",\n    2:\"A2 (88-138 kV)\",\n    3:\"A3 (69 kV)\",\n    4:\"A3a (30-44 kV)\",\n    5:\"A4 (2,3-25 kV)\",\n    6:\"AS (<2,3 kV)\",\n    7:\"B1 (Residencial)\",\n    8:\"B2 (Rural)\",\n    9:\"B3 (Demais classes)\"\n};\n\nreturn dict[value];",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "enq_tarifario",
                "type" : "attribute",
                "label" : "enq_tarifario",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.7468946926962012,
                "postFuncBody" : "if (value == \"\") {\n    value = 0\n}\n\nvar dict = {\n    0:\"Não definida\",\n    1:\"Azul\",\n    2:\"Verde\",\n    3:\"Convencional\",\n    4:\"Branca\"\n};\n\nreturn dict[value];",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "dados_contrato",
                "type" : "attribute",
                "label" : "demanda_fp",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.8987603896416565,
                "postFuncBody" : "try {\n    contrato = JSON.parse(value);\n    \n    var x = 0;\n    if (contrato.length > 0) {\n        var indexVigente = contrato.length-1\n        x = contrato[indexVigente].demanda_fp\n    }\n    \n    \n    return x.toLocaleString('pt-BR', {style: \"decimal\", maxFractionDigits: 0})+\" kW\";\n}\ncatch(err) {\n    return \"\"\n}",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "dados_contrato",
                "type" : "attribute",
                "label" : "demanda_p",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.23003460370525985,
                "postFuncBody" : "try {\n    contrato = JSON.parse(value);\n    \n    var x = 0;\n    if (contrato.length > 0) {\n        var indexVigente = contrato.length-1\n        x = contrato[indexVigente].demanda_p\n    }\n    \n    \n    return x.toLocaleString('pt-BR', {style: \"decimal\", maxFractionDigits: 0})+\" kW\";\n}\ncatch(err) {\n    return \"\"\n}",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "dados_contrato",
                "type" : "attribute",
                "label" : "ke",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.20006638812575872,
                "postFuncBody" : "try {\n    contrato = JSON.parse(value);\n    \n    var ke = 1\n    for (var i=contrato.length-1; i >=0; i--) {\n        if (contrato[i].ke > 0) {\n            ke = Math.round(parseFloat(contrato[i].ke) * 1000) / 1000;\n            break; \n        }\n    }\n    \n    return ke.toLocaleString('pt-BR', {style: \"decimal\", maxFractionDigits: 3, minFractionDigits: 3})+\" \";\n}\ncatch(err) {\n    return \"\"\n}",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "vigencia_contrato_acr",
                "type" : "attribute",
                "label" : "vigencia_contrato_acr",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.7358081031450445,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "// var d = new Date(value);\n\n// if (isNaN(d.getFullYear())) {\n//     return \"\";\n// }\n\n// return value;\n\nvar date = moment.utc(value).format('DD/MM/YYYY')\n\nif (date._isValid) {\n    return date\n} else {\n    return \"\"\n}\n\n"
              }, {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.25840636424584407,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return \": \"+value;"
              } ]
            }, {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "9372d9cb-e9ba-c2a0-1b4c-4316d7a28718",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC2",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.015369638753879533,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}",
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"38\">\n                <td width=\"50%\" align=\"left\"><style class=\"title\">Concessionária:</style><br><style class=\"text\">${utility}</style></td>\n                <td width=\"45%\" align=\"left\"><style class=\"title\">Vigente até:</style><br><style class=\"text\">${vigencia_contrato_acr}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"38\">\n                <td width=\"50%\" align=\"left\"><style class=\"title\">Status:</style><br><style class=\"text\">${status_cliente}</style></td>\n                <td width=\"45%\" align=\"left\"><style class=\"title\">Unidade Consumidora:</style><br><style class=\"text\">${UC}${UC2}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"38\">\n                <td width=\"50%\" align=\"left\"><style class=\"title\">Classe Tensão:</style><br><style class=\"text\">${classe_tensao}</style></td>\n                <td width=\"45%\" align=\"left\"><style class=\"title\">Tarifa:</style><br><style class=\"text\">${enq_tarifario}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"38\">\n                <td width=\"50%\" align=\"left\"><style class=\"title\">Demanda Fora Ponta:</style><br><style class=\"text\">${demanda_fp}</style></td>\n                <td width=\"45%\" align=\"left\"><style class=\"title\">Demanda Ponta:</style><br><style class=\"text\">${demanda_p}</style></td>\n            </tr>\n        </table>\n</div>"
            },
            "title" : "display_dados_contrato_energia",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.3rem",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n        style=\"min-width: 800px; padding: 20px\">\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\" fxLayoutGap=\"20px\">\n            \n            <mat-form-field fxFlex=\"50\" class=\"mat-block\">\n                <mat-label>Concessionária</mat-label>\n                <mat-select required name=\"utility\"\n                    [(ngModel)]=\"attributes.utility\" (ngModelChange)=\"change()\">\n                    <mat-option\n                        *ngFor=\"let item of utility_list\"\n                        [value]=\"item[1]\">\n                        {{item[0]}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Vigente até</mat-label>\n                <input matInput type=\"string\" [(ngModel)]=\"attributes.vigencia_contrato_acr\">\n            </mat-form-field>\n            \n        </div>\n            \n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\" fxLayoutGap=\"20px\">\n            \n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Status</mat-label>\n                <mat-select required type=\"text\"\n                    [(ngModel)]=\"attributes.status_cliente\" (ngModelChange)=\"change()\">\n                <mat-option [value]=\"0\">Não definido</mat-option>\n                <mat-option [value]=\"1\">Cativo</mat-option>\n                <mat-option [value]=\"2\">Livre</mat-option>\n                </mat-select>\n            </mat-form-field>\n            \n        </div>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-around left\" fxLayoutGap=\"20px\">\n            <mat-form-field fxFlex=\"50\" class=\"mat-block\">\n                <mat-label>Classe Tensão</mat-label>\n                <mat-select required name=\"classe_tensao\" [(ngModel)]=\"attributes.classe_tensao\" (ngModelChange)=\"change()\">\n                    <mat-option [value]=\"0\">Não definida</mat-option>\n                    <mat-option [value]=\"1\">A1 (>=230 kV)</mat-option>\n                    <mat-option [value]=\"2\">A2 (88-138 kV)</mat-option>\n                    <mat-option [value]=\"3\">A3 (69 kV)</mat-option>\n                    <mat-option [value]=\"4\">A3a (30-44 kV)</mat-option>\n                    <mat-option [value]=\"5\">A4 (2,3-25 kV)</mat-option>\n                    <mat-option [value]=\"6\">AS (&lt;2,3 kV)</mat-option>\n                    <mat-option [value]=\"7\">B1 (&lt;2,3 kV)</mat-option>\n                    <mat-option [value]=\"8\">B2 (&lt;2,3 kV)</mat-option>\n                    <mat-option [value]=\"9\">B3 (&lt;2,3 kV)</mat-option>\n                </mat-select><br>\n            </mat-form-field>\n            <mat-form-field fxFlex=\"50\" class=\"mat-block\">\n                <mat-label>Tarifa</mat-label>\n                <mat-select required type=\"text\"\n                    [(ngModel)]=\"attributes.enq_tarifario\" (ngModelChange)=\"change()\">\n                    <mat-option [value]=\"0\">Não definida</mat-option>\n                    <mat-option [value]=\"1\">Azul</mat-option>\n                    <mat-option [value]=\"2\">Verde</mat-option>\n                    <mat-option [value]=\"3\">Convencional</mat-option>\n                    <mat-option [value]=\"4\">Branca</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div [fxShow]=\"warning\" style=\"color: red; font-weight: bold;\">{{ errorMessage }}</div>\n        \n        <div class=\"relations-list old-relations\">\n        <div class=\"mat-body-1\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" style=\"padding-bottom: 10px; color: rgba(0,0,0,0.57);\">\n            Contratos\n              <button mat-icon-button color=\"primary\" (click)=\"editContract(row,'new')\" title=\"Novo\"><mat-icon>add_circle</mat-icon></button>\n            </div>\n\n            <table mat-table [dataSource]=\"attributes.dados_contrato\" class=\"mat-elevation-z8\">\n            \n              <ng-container matColumnDef=\"ke\">\n                <th mat-header-cell *matHeaderCellDef> Ke </th>\n                <td mat-cell *matCellDef=\"let contract\" style=\"width:15%\"> {{contract.ke}} </td>\n              </ng-container>\n            \n              <ng-container matColumnDef=\"ts\">\n                <th mat-header-cell *matHeaderCellDef> Vigência </th>\n                <td mat-cell *matCellDef=\"let contract\" style=\"width:35%\">{{contract.ts}} </td>\n              </ng-container>\n            \n              <ng-container matColumnDef=\"demanda_p\">\n                <th mat-header-cell *matHeaderCellDef> Ponta </th>\n                <td mat-cell *matCellDef=\"let contract\" style=\"width:20%\"> {{contract.demanda_p}} </td>\n              </ng-container>\n            \n              <ng-container matColumnDef=\"demanda_fp\">\n                <th mat-header-cell *matHeaderCellDef> F.Ponta </th>\n                <td mat-cell *matCellDef=\"let contract\" style=\"width:20%\"> {{contract.demanda_fp}} </td>\n              </ng-container>\n              \n            <ng-container matColumnDef=\"edit\">\n              <tr><th mat-header-cell *matHeaderCellDef> </th></tr>\n              <tr>\n                <td mat-cell *matCellDef=\"let contract\" style=\"width:10%\">\n                  <button mat-icon-button color=\"primary\" (click)=\"editContract(contract, 'edit')\" title=\"Editar\"><mat-icon>edit</mat-icon></button>\n                </td>\n              <tr>\n            </ng-container>\n            \n            <ng-container matColumnDef=\"del\">\n              <tr><th mat-header-cell *matHeaderCellDef> </th></tr>\n              <tr>\n                <td mat-cell *matCellDef=\"let contract\" style=\"width:10%\">\n                  <button mat-icon-button color=\"primary\" (click)=\"delContract(contract)\" title=\"Apagar\"><mat-icon>delete</mat-icon></button>\n                </td>\n              <tr>\n            </ng-container>                \n            \n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let contract; columns: displayedColumns;\" [ngStyle]=\"contract.vigente ? {'background-color': 'gainsboro'} : {}\"></tr>\n            </table>\n\n        </div>        \n        \n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async) || warning\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "body {color: purple; background-color: #d8da3d }\n\ninput {\n\tposition: relative;\n\twidth: 150px; height: 25px;\n\tcolor: white;\n}\n\n.spinner_container {\n    border-radius: 10px;\n    height: 70px;\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    transform: translate(-50%,-50%);\n    width: 70px;\n    z-index: 3;\n    opacity: 0.5;\n}",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\nstring = moment().format('YYYYMMDD')\nurl = 'https://solarhub.engecomp.io/res/utility_list.json'+'?'+string;\nwidgetContext.utility_list = sortByValue(JSON.parse(Get(url)))\n\nvar user = widgetContext.currentUser;\nvar userMail = user.sub;\nvar token = localStorage[\"jwt_token\"]\n\nshowInfoDialog()\n\nfunction API(action, row={}){\n    var payload = {token: token, email: userMail}\n    var message_err = \"\"\n    var message_OK = \"\"\n    switch(action) {\n        case 'GET':\n            type = 'GET'\n            break;\n        case 'DELETE':\n            type = 'DELETE'\n            payload.email = userMail\n            payload.id =  row.id\n            message_err = \"Erro ao apagar linha. Por favor contacte a Engecomp\"\n            message_OK = \"Linha apagada com sucesso\"\n            break;\n        case 'POST':\n            type = 'POST'\n            payload.id =  row.id\n            payload.ts = row.ts\n            payload.ke = row.ke\n            payload.ke_change = true\n            payload.demanda_p = row.demanda_p\n            payload.demanda_fp = row.demanda_fp\n            payload.meta_consumo_mwm = 0\n            payload.meta_consumo_kwh = 0\n            if (widgetContext.utility) {\n                payload.utility_id = widgetContext.utility    \n            }\n            \n            message_err = \"Erro ao incluir linha. Por favor contacte a Engecomp\"\n            message_OK = \"Linha incluída/alterada com sucesso\"\n            break;\n            \n        case 'UTILITY':\n            type = 'POST'\n            payload.utility_id = widgetContext.utility    \n            message_err = \"Erro ao salvar. Por favor contacte a Engecomp\"\n            message_OK = null\n            break; \n    }\n    \n    var url = `https://solarhub.engecomp.io/be/device/${entityName}/contrato`\n    return new Promise((resolve, reject) => {\n        $.ajax({\n        url: url,\n        data: JSON.stringify(payload),\n        type: type,\n        dataType: 'json',\n        headers: {'Accept': 'application/json', 'Content-Type': 'application/json', \"token\": token},\n        success: function (data) {\n            if (message_OK) {\n                widgetContext.showSuccessToast(message_OK, 3000)\n            }\n            if (action == 'POST' || action == 'DELETE') {\n                API('GET').then((data) => {\n                    resolve(data)\n                })\n                return\n            } \n            \n            if (action == 'GET') {\n                \n                //var save = [{key: \"dados_contrato\", value: JSON.stringify(data)}]\n                //attributeService.saveEntityAttributes(entityId, 'CLIENT_SCOPE', save).subscribe()\n                for (var i=0; i<data.length;i++) {\n                    data[i]['ts'] = moment.utc(data[i]['ts'],'YYYY-MM-DD HH:mm:ss').format('DD/MM/YYYY HH:mm')\n                }\n                resolve(data)\n                return\n            }\n            \n        },\n        error: function (error) {\n            if (message_err) {\n                widgetContext.showErrorToast(message_err, 3000)\n            }\n            reject(error)\n        }\n        });\n    })\n\n}\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController_edit(instance) {\n    let vm = instance;    \n    let formData = new FormData();\n    vm.processing = false\n    \n    vm.importTitle = 'Editar contrato'\n    if (widgetContext.currentAction == 'new'){\n        vm.importTitle = 'Inserir contrato'    \n    }\n    \n\n    vm.row = {ts: moment.utc().startOf('day').format('DD/MM/YYYY HH:mm'), \n                demanda_p: null, demanda_fp: null, ke: null\n            }\n    if (widgetContext.currentRow) {\n        //deep clone\n        vm.row = JSON.parse(JSON.stringify(widgetContext.currentRow));\n    }\n    vm.action = widgetContext.currentAction\n\n    vm.change = function() {\n\n        vm.warning = false\n        vm.ts = moment.utc(vm.row.ts, 'DD/MM/YYYY HH:mm')\n        \n        if (!vm.ts._isValid) {\n            vm.warning = true\n            vm.errorMessage = \"ATENÇÃO: data inválida\"\n            return\n        }\n\n        if ( (vm.row.demanda_p == null) || (vm.row.demanda_fp == null) || (vm.row.ke == null) ) {\n            vm.warning = true\n            vm.errorMessage = \"ATENÇÃO: faltam campos obrigatórios\"\n            return\n        }\n        \n    }\n    \n    vm.cancel = function() {\n        vm.row = widgetContext.currentRow\n        vm.dialogRef.close(null);\n    }\n    \n    vm.send = function() {\n        vm.processing = true\n        vm.row.ts = moment.utc(vm.row.ts, 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss')\n        API('POST', vm.row).then(function(result) {\n            vm.processing = false\n            vm.dialogRef.close(result);\n        });\n    }\n    \n    vm.change()\n} \n\n\n\nfunction InfoDialogController_del(instance) {\n    let vm = instance;    \n    let formData = new FormData();\n    vm.importTitle = 'Apagar contrato'\n    vm.row = widgetContext.currentRow\n    vm.processing = false\n    \n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n    \n    vm.send = function() {\n        vm.processing = true\n        API('DELETE', vm.row).then(function(result) {\n            vm.processing = false\n            vm.dialogRef.close(result);\n        });        \n    }\n}  \n\nfunction sortByValue(jsObj){\n    var sortedArray = [];\n    for(var i in jsObj)\n    {\n        sortedArray.push([jsObj[i], i]);\n    }\n    return sortedArray.sort();\n}\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    let formData = new FormData();\n    vm.attributes = {}\n    //vm.OK = true\n    vm.importTitle = 'Editar dados do contrato'\n    vm.utility_list = widgetContext.utility_list\n    vm.displayedColumns = ['ts','ke','demanda_fp','demanda_p', 'edit', 'del'];\n    \n    \n    vm.OK = false\n    vm.ke_change = false\n    vm.ts_change = false\n    vm.warning = false\n\n    API('GET').then((data) => {\n        vm.attributes.dados_contrato = data\n    })\n\n    vm.change = () => {\n\n        debugger\n        if (vm.attributes.hasOwnProperty('utility')) {\n            widgetContext.utility = vm.attributes.utility\n        }\n\n        var vigencia_contrato_acr = null\n        if (vm.attributes.hasOwnProperty('vigencia_contrato_acr')) {\n            vigencia_contrato_acr = moment.utc(vm.attributes.vigencia_contrato_acr, 'DD/MM/YYYY')\n        }\n        \n        vm.warning = false\n\n        if (vigencia_contrato_acr && !vigencia_contrato_acr._isValid) {\n            vm.warning = true\n            vm.errorMessage = \"ATENÇÃO: data inválida\"\n            return\n        } \n\n        if (isNaN(vm.attributes.utility) || isNaN(vm.attributes.classe_tensao) || isNaN(vm.attributes.enq_tarifario)) {\n            vm.warning = true\n            vm.errorMessage = \"ATENÇÃO: faltam campos obrigatórios\"\n            return\n        }\n        \n        if ([0,1,2,3,4,5,6].indexOf(vm.attributes.classe_tensao) > -1 && [3,4].indexOf(vm.attributes.enq_tarifario) > -1) {\n            vm.warning = true\n            vm.errorMessage = \"ATENÇÃO: enquadramento tarifário inválido para Grupo A\"\n            return\n        }     \n        \n        if ([7,8,9].indexOf(vm.attributes.classe_tensao) > -1 && [1,2].indexOf(vm.attributes.enq_tarifario) > -1) {\n            vm.warning = true\n            vm.errorMessage = \"ATENÇÃO: enquadramento tarifário inválido para Grupo B\"\n            return\n        }          \n        \n   \n        \n    }\n    \n    vm.change()\n\n    vm.diffAttrs=['utility','classe_tensao','enq_tarifario','status_cliente', 'vigencia_contrato_acr']\n    vm.diffAttrs_client = []\n    if (vm.diffAttrs.length > 0) {\n        \n        var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n        var response_client = attributeService.getEntityAttributes(entityId, 'CLIENT_SCOPE', vm.diffAttrs_client);\n         widgetContext.rxjs.forkJoin([response,response_client]).subscribe((groups) => {\n            for (j=0; j < groups.length; j++) {\n                for (var i = 0; i < groups[j].length; i++) {\n                    var x = groups[j][i].value\n                    vm.attributes[groups[j][i].key] = x\n                }\n            }\n            //vm.attributes.utility = ( vm.attributes.utility && vm.attributes.utility.toString() ) || null\n            widgetContext.utility = vm.attributes.utility || null\n            \n            if (vm.attributes.hasOwnProperty('vigencia_contrato_acr')) {\n                vm.attributes.vigencia_contrato_acr = moment.utc(vm.attributes.vigencia_contrato_acr).format('DD/MM/YYYY')\n            } \n            \n            vm.change()                \n        })\n    }\n    \n\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n    \n    vm.editContract = function(row, action) {\n        widgetContext.currentRow = row\n        widgetContext.currentAction = action\n        \n        template = `\n        <mat-toolbar fxLayout=\"row\" color=\"primary\">\n            <h2>{{ importTitle }}</h2>\n        </mat-toolbar>\n        <div mat-dialog-content>\n                <mat-spinner class=\"spinner_container\" [fxShow]=\"processing\"></mat-spinner>\n                <div fxLayout=\"column\" fxLayoutGap=\"15px\" fxLayoutAlign=\"space-around left\"\n                    style=\"min-width: 400px; padding: 20px\">\n                    \n                    <div [fxShow]=\"action == 'edit'\">\n                        Vigência: {{ row.ts }}<br>\n                    </div>\n                    <mat-form-field [fxShow]=\"action == 'new'\" fxFlex class=\"mat-block\">\n                        <mat-label>Vigência</mat-label>\n                        <input matInput required type=\"text\"\n                            [(ngModel)]=\"row.ts\" (ngModelChange)=\"change()\"> \n                    </mat-form-field>     \n                    <mat-form-field fxFlex class=\"mat-block\">\n                        <mat-label>Constante de medição (kWh/pulso)</mat-label>\n                        <input matInput required type=\"number\" min=\"0\" step=\"0.001\"\n                            [(ngModel)]=\"row.ke\" (ngModelChange)=\"change()\">\n                    </mat-form-field>                   \n                    <mat-form-field fxFlex class=\"mat-block\">\n                        <mat-label>Demanda Fora Ponta (kW)</mat-label>\n                        <input matInput required type=\"number\"\n                            [(ngModel)]=\"row.demanda_fp\" (ngModelChange)=\"change()\"> \n                    </mat-form-field>\n                    <mat-form-field fxFlex class=\"mat-block\">\n                        <mat-label>Demanda Ponta (kW)</mat-label>\n                        <input matInput required type=\"number\" \n                            [(ngModel)]=\"row.demanda_p\" (ngModelChange)=\"change()\">\n                        <mat-hint [fxShow]=\"row.demanda_p===0\">Em caso de tarifa Verde, preencha com o mesmo valor de FP</mat-hint>\n                    </mat-form-field>\n                     \n                </div>\n                <div [fxShow]=\"warning\" style=\"color: red; font-weight: bold;\">{{ errorMessage }}</div>\n        </div>\n        <div mat-dialog-actions fxLayout=\"row\"\n            fxLayoutAlign=\"end center\">\n            <button mat-button mat-raised-button color=\"primary\"\n                (click)=\"send()\" type=\"submit\"\n                [disabled]=\"(isLoading$ | async) || warning\">\n                Salvar\n            </button>\n            <button mat-button color=\"primary\" type=\"button\"\n                [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n                cdkFocusInitial>\n                Cancelar\n            </button>\n        </div>    \n        `\n        \n        customDialog.customDialog(template, InfoDialogController_edit).subscribe((data) => {\n            if (data) {\n                vm.attributes.dados_contrato = data\n            }\n        });\n    }\n\n    \n    vm.delContract = function(row) {\n        widgetContext.currentRow = row\n        template = `\n        <mat-toolbar fxLayout=\"row\" color=\"primary\">\n            <h2>{{ importTitle }}</h2>\n        </mat-toolbar>\n        <div mat-dialog-content>\n                <mat-spinner class=\"spinner_container\" [fxShow]=\"processing\"></mat-spinner>\n                <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n                    style=\"min-width: 400px; padding: 20px\">\n                    \n                    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\" fxLayoutGap=\"20px\">\n                        Tem certeza de que deseja apagar a linha com vigência a partir de {{ row.ts }}?\n                    </div>   \n                    \n                </div>\n        </div>\n        <div mat-dialog-actions fxLayout=\"row\"\n            fxLayoutAlign=\"end center\">\n            <button mat-button mat-raised-button color=\"primary\"\n                (click)=\"send()\" type=\"submit\"\n                [disabled]=\"(isLoading$ | async) || warning\">\n                OK\n            </button>\n            <button mat-button color=\"primary\" type=\"button\"\n                [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n                cdkFocusInitial>\n                Cancelar\n            </button>\n        </div>    \n        `\n        customDialog.customDialog(template, InfoDialogController_del).subscribe((data) => {\n            if (data) {\n                vm.attributes.dados_contrato = data\n            }\n        });\n    }    \n    \n\n    vm.send = function() {\n\n        var toSave = ['utility','classe_tensao','enq_tarifario','status_cliente', 'vigencia_contrato_acr']\n        if (vm.attributes.hasOwnProperty('vigencia_contrato_acr')) {\n            vm.attributes.vigencia_contrato_acr = moment.utc(vm.attributes.vigencia_contrato_acr, 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss')\n        }\n        var attributesToSave = []\n        for (i=0;i<toSave.length;i++) {\n            if (vm.attributes.hasOwnProperty(toSave[i])) {\n                attributesToSave.push({key: toSave[i], value: vm.attributes[toSave[i]]})\n            }\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n\n        API('UTILITY')\n\n        vm.cancel()\n    }\n}",
                "customResources" : [ ],
                "id" : "cd89a04e-7499-77a2-5d44-83d8242e2a4d"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "a049777b-b6d6-4eca-9296-5c050af9014d",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "8da81eb9-4e14-400b-9368-e96407b730f4" : {
          "type" : "latest",
          "sizeX" : 34,
          "sizeY" : 9,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "desc_tusd",
                "type" : "attribute",
                "label" : "desc_tusd",
                "color" : "#03a9f4",
                "settings" : { },
                "_hash" : 0.3641316285963003,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "preco_acl_mwh",
                "type" : "attribute",
                "label" : "preco_acl_mwh",
                "color" : "#ff9800",
                "settings" : { },
                "_hash" : 0.5318334801248643
              }, {
                "name" : "custo_gestao_acl",
                "type" : "attribute",
                "label" : "custo_gestao_acl",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.8043178609969264
              }, {
                "name" : "data_contrato_acl",
                "type" : "attribute",
                "label" : "data_contrato_acl",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.0867672729137654,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "var d = new Date(value);\n\nif (isNaN(d.getFullYear())) {\n    return \"\";\n}\n\nreturn value;"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}",
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"38\">\n                <td width=\"100%\" align=\"left\"><style class=\"title\">Preço ML:</style><br><style class=\"text\">${preco_acl_mwh}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"38\">\n                <td width=\"30%\" align=\"left\"><style class=\"title\">Desconto TUSD (%):</style><br><style class=\"text\">${desc_tusd}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"38\">\n                <td width=\"100%\" align=\"left\"><style class=\"title\">Custo Gestão:</style><br><style class=\"text\">${custo_gestao_acl}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"38\">\n                <td width=\"30%\" align=\"left\"><style class=\"title\">Desde:</style><br><style class=\"text\">${data_contrato_acl}</style></td>\n            </tr>\n        </table>\n</div>\n"
            },
            "title" : "display_dados_contrato_energia",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.3rem",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\">\n        <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Preço ML</mat-label>\n                <input matInput type=\"number\" [(ngModel)]=\"attributes.preco_acl_mwh\" step=\"0.01\">\n            </mat-form-field>\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Desconto TUSD (%)</mat-label>\n                <input matInput type=\"number\" [(ngModel)]=\"attributes.desc_tusd\" step=\"0.01\">\n            </mat-form-field>\n        </div>\n        <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Custo Gestão</mat-label>\n                <input matInput type=\"number\" [(ngModel)]=\"attributes.custo_gestao_acl\" step=\"1\">\n            </mat-form-field>\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Desde</mat-label>\n                <input matInput type=\"date\" [(ngModel)]=\"attributes.data_contrato_acl\">\n            </mat-form-field>\n        </div>\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>\n",
                "customCss" : "body {color: purple; background-color: #d8da3d }\n\ninput {\n\tposition: relative;\n\twidth: 150px; height: 25px;\n\tcolor: white;\n}\n\n.spinner_container {\n    border-radius: 10px;\n    height: 70px;\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    transform: translate(-50%,-50%);\n    width: 70px;\n    z-index: 3;\n    opacity: 0.5;\n}",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\nattributes = {}\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.OK = true\n    vm.importTitle = 'Dados da Gestão no ACL'\n\n    vm.attributes = {}\n    for (var i=0; i<widgetContext.data.length; i++){\n        var x = widgetContext.data[i].data[0][1]\n        vm.attributes[widgetContext.data[i].dataKey.name] = x\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()\n    }\n\n}\n",
                "customResources" : [ ],
                "id" : "cd89a04e-7499-77a2-5d44-83d8242e2a4d"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "8da81eb9-4e14-400b-9368-e96407b730f4",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "63382cf4-d273-40e9-bb40-f77625fe9158" : {
          "type" : "static",
          "sizeX" : 4,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>x</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
            },
            "title" : "label x",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "63382cf4-d273-40e9-bb40-f77625fe9158",
          "typeFullFqn" : "system.cards.html_card"
        },
        "262d5206-35ac-4073-8341-93b5f9921914" : {
          "type" : "latest",
          "sizeX" : 12,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "4256bdb6-ffef-7ddd-3ee5-da27415aa55e",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Active Energy (FP)_month_max",
                "type" : "timeseries",
                "label" : "Active Energy (FP)_month_max",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.29256525020096946,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value > 25) {\n        return formattedNumber(value*4, 0, 0)+' kW';\n    }\n    return formattedNumber(value*4, 1, 1)+' kW';\n\n}\nreturn \" \";\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "Active Energy (P)_month_max",
                "type" : "timeseries",
                "label" : "Active Energy (P)_month_max",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.3047623047233261,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value > 25) {\n        return formattedNumber(value*4, 0, 0)+' kW';\n    }\n    return formattedNumber(value*4, 1, 1)+' kW';\n\n}\nreturn \" \";\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "Active Energy (FP)_month_max",
                "type" : "timeseries",
                "label" : "tituloFP",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.21686059551088133,
                "postFuncBody" : "if (value > 2500) {\n    return 'FP:';\n}\nreturn 'F.Ponta:';\n"
              }, {
                "name" : "Active Energy (FP)_month_max",
                "type" : "timeseries",
                "label" : "tituloP",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.856108308715902,
                "postFuncBody" : "if (value > 2500) {\n    return 'P:';\n}\nreturn 'Ponta:';"
              }, {
                "name" : "Active Energy (FP)_month_max",
                "type" : "timeseries",
                "label" : "largura",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.3815889285541303,
                "postFuncBody" : "if (value > 250) {\n    return '15%';\n}\nreturn '32%';"
              }, {
                "name" : "Active Energy (FP)_month_max",
                "type" : "timeseries",
                "label" : "largura2",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.6563366598780407,
                "postFuncBody" : "if (value > 250) {\n    return '70%';\n}\nreturn '53%';"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table align=\"center\" width=\"98%\">\n            <tr>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura}\" class=\"value_left\">${tituloFP}</td>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura2}\" class=\"value_right\">${Active Energy (FP)_month_max}</td>\n                <td width=\"5%\">&nbsp;</td>\n            </tr>\n            <tr>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura}\" class=\"value_left\">${tituloP}</td>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura2}\" class=\"value_right\">${Active Energy (P)_month_max}</td>\n                <td width=\"5%\">&nbsp;</td>\n            </tr>\n        </table>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: #e34844;\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: #e34844;\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: #e34844;\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Máximas no Mês",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "262d5206-35ac-4073-8341-93b5f9921914",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "dc1bfc31-8e8b-43d9-a79c-65ca8061736b" : {
          "type" : "latest",
          "sizeX" : 12,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Active Energy (FP)_month_max",
                "type" : "timeseries",
                "label" : "Active Energy (FP)_month_max",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.29256525020096946,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value > 25) {\n        return formattedNumber(value*4, 0, 0)+' kW';\n    }\n    return formattedNumber(value*4, 1, 1)+' kW';\n\n}\nreturn \" \";\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "Active Energy (P)_month_max",
                "type" : "timeseries",
                "label" : "Active Energy (P)_month_max",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.3047623047233261,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value > 25) {\n        return formattedNumber(value*4, 0, 0)+' kW';\n    }\n    return formattedNumber(value*4, 1, 1)+' kW';\n\n}\nreturn \" \";\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "Active Energy (FP)_month_max",
                "type" : "timeseries",
                "label" : "tituloFP",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.21686059551088133,
                "postFuncBody" : "if (value > 2500) {\n    return 'FP:';\n}\nreturn 'F.Ponta:';\n"
              }, {
                "name" : "Active Energy (FP)_month_max",
                "type" : "timeseries",
                "label" : "tituloP",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.856108308715902,
                "postFuncBody" : "if (value > 2500) {\n    return 'P:';\n}\nreturn 'Ponta:';"
              }, {
                "name" : "Active Energy (FP)_month_max",
                "type" : "timeseries",
                "label" : "largura",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.3815889285541303,
                "postFuncBody" : "if (value > 250) {\n    return '15%';\n}\nreturn '32%';"
              }, {
                "name" : "Active Energy (FP)_month_max",
                "type" : "timeseries",
                "label" : "largura2",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.6563366598780407,
                "postFuncBody" : "if (value > 250) {\n    return '70%';\n}\nreturn '53%';"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table align=\"center\" width=\"98%\">\n            <tr>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura}\" class=\"value_left\">${tituloFP}</td>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura2}\" class=\"value_right\">${Active Energy (FP)_month_max}</td>\n                <td width=\"5%\">&nbsp;</td>\n            </tr>\n            <tr>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura}\" class=\"value_left\">${tituloP}</td>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura2}\" class=\"value_right\">${Active Energy (P)_month_max}</td>\n                <td width=\"5%\">&nbsp;</td>\n            </tr>\n        </table>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Máximas no Mês",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "dc1bfc31-8e8b-43d9-a79c-65ca8061736b",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "8613bc58-6d35-4571-9004-cd8375f54ea2" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Active Energy_year_sum",
                "type" : "timeseries",
                "label" : "valor",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.026411987772145373,
                "decimals" : 0,
                "postFuncBody" : "function formattedNumber(x, y) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: y}); \n}\n\nif (value > 99999) {\n    return formattedNumber(value/1000, 0)+' MWh';\n}\n\nif (value > 9999) {\n    return formattedNumber(value/1000, 1)+' MWh';\n}\n\nif (value > 999) {\n    return formattedNumber(value/1000, 2)+' MWh';\n}\n\nreturn formattedNumber(value, 0)+' kWh';\n",
                "usePostProcessing" : true,
                "units" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}",
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table align=\"center\" width=\"100%\">\n            <tr>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"90%\" class=\"value\">${valor}</td>\n                <td width=\"5%\">&nbsp;</td>\n            </tr>\n        </table>\n    </section>\n</div>"
            },
            "title" : "Acumulado no Ano",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "8613bc58-6d35-4571-9004-cd8375f54ea2",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "77e6a898-bbea-4636-a4a8-3f6e40976ed5" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "4256bdb6-ffef-7ddd-3ee5-da27415aa55e",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Active Energy_year_sum",
                "type" : "timeseries",
                "label" : "valor",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.026411987772145373,
                "decimals" : 0,
                "postFuncBody" : "function formattedNumber(x, y) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: y}); \n}\n\nif (value > 99999) {\n    return formattedNumber(value/1000, 0)+' MWh';\n}\n\nif (value > 9999) {\n    return formattedNumber(value/1000, 1)+' MWh';\n}\n\nif (value > 999) {\n    return formattedNumber(value/1000, 2)+' MWh';\n}\n\nreturn formattedNumber(value, 0)+' kWh';\n",
                "usePostProcessing" : true,
                "units" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table align=\"center\" width=\"100%\">\n            <tr>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"90%\" class=\"value\">${valor}</td>\n                <td width=\"5%\">&nbsp;</td>\n            </tr>\n        </table>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: #e34844;\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Acumulado no Ano",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "77e6a898-bbea-4636-a4a8-3f6e40976ed5",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "f61dddf4-1b10-439c-867c-c500882985d1" : {
          "type" : "alarm",
          "sizeX" : 64,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 0,
                "timewindowMs" : 2592000000,
                "interval" : 1000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1626575167153,
                  "endTimeMs" : 1626661567153
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSelection" : false,
              "enableSearch" : true,
              "displayDetails" : false,
              "allowAcknowledgment" : true,
              "allowClear" : false,
              "displayPagination" : true,
              "defaultPageSize" : 20,
              "defaultSortOrder" : "-startTime",
              "alarmsTitle" : "Alarmes",
              "enableSelectColumnDisplay" : true,
              "enableFilter" : true,
              "enableStickyHeader" : true,
              "useRowStyleFunction" : false
            },
            "title" : "Alarmes",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.3rem",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "alarmSource" : {
              "type" : "entity",
              "name" : "alarms",
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "Ponto",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.4703724035771084,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "details.name",
                "type" : "alarm",
                "label" : "Tipo",
                "color" : "#f44336",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var obj = JSON.parse(value)\nreturn obj.name",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.9033520003454285,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "startTime",
                "type" : "alarm",
                "label" : "Início",
                "color" : "#ffc107",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.7814015650239671
              }, {
                "name" : "endTime",
                "type" : "alarm",
                "label" : "Fim",
                "color" : "#607d8b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (alarm.status == 'ACTIVE_ACK' || alarm.status =='ACTIVE_UNACK') {\n    return null\n} else {\n    return moment.unix(value/1000).format(\"YYYY-MM-DD HH:mm:ss\");\n}\n"
                },
                "_hash" : 0.6723418179347178
              }, {
                "name" : "status",
                "type" : "alarm",
                "label" : "Status",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var dict ={\n    'ACTIVE_UNACK': 'Ativo',\n    'ACTIVE_ACK': 'Reconhecido',\n    'CLEARED_ACK':'Reconhecido',\n    'CLEARED_UNACK':'Normalizado'\n}\n\nreturn dict[value]\n"
                },
                "_hash" : 0.27193457482678196
              }, {
                "name" : "details.message",
                "type" : "alarm",
                "label" : "Mensagem",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.7757432908660367,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            },
            "alarmsPollingInterval" : 60,
            "datasources" : [ ],
            "widgetStyle" : { },
            "actions" : {
              "actionCellButton" : [ ],
              "rowClick" : [ {
                "name" : "Detalhes",
                "icon" : "more_horiz",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div class=\"widget status-widget\">\n        <table width=\"280px\">\n            <tr>\n                <td class=\"title\">Criticidade: </td>\n                <td class=\"value\">{{ additionalParams.alarm.severity | translate}}</td>\n            </tr>\n            <tr>\n                <td class=\"title\">Ponto de Medição: </td>\n                <td class=\"value\">{{ details.originator }}</td>\n            </tr>\n            <tr>\n                <td class=\"title\">Tipo do Evento: </td>\n                <td class=\"value\"> {{ details.name }}</td>\n            </tr>\n            <tr>\n                <td class=\"title\">Data do Evento: </td>\n                <td class=\"value\">{{ eventDate }}</td>\n            </tr>\n            <tr>\n                <td class=\"title\">Status: </td>\n                <td class=\"value\">{{ dict[additionalParams.alarm.status] }}</td>\n            </tr>\n            <tr>\n                <td class=\"title\">Valor Medido: </td>\n                <td class=\"value_trigger\"> {{ details.value || \"\" }} </td>\n            </tr>\n            <tr>\n                <td class=\"title\">Valor Limite: </td>\n                <td class=\"value\"> {{ details.threshold || \"\" }} </td>\n            </tr>\n        </table>\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"ack()\"\n        type=\"submit\" [disabled]=\"!unack || (isLoading$ | async)\">\n        {{ \"Acknowledge\" | translate }}\n    </button>    \n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Fechar\n    </button>\n</div>\n",
                "customCss" : " .widget {\n     position: relative;\n     min-width: 0;\n     width: 100%;\n     height: 100%;\n }\n\n .status-widget .title {\n     display: inline-block;\n     font-family: Arial;\n     font-weight: normal;\n     font-size: 14px;\n     width: 50%;\n     color: rgba(0, 0, 0, 0.66);\n }\n\n .status-widget .value {\n     display: inline-block;\n     padding: 2px;\n     font-family: Arial;\n     font-weight: normal;\n     font-size: 14px;\n     width: 50%;\n     color: rgba(0, 0, 0, 0.87);\n }\n\n .status-widget .value_trigger {\n     display: inline-block;\n     padding: 2px;\n     font-family: Arial;\n     font-weight: bold;\n     font-size: 14px;\n     color: #ff0000;\n }\n\n .status-widget .criticidade {\n     display: inline-block;\n     padding: 2px;\n     font-family: Arial;\n     font-weight: bold;\n     font-size: 14px;\n     color: rgba(0, 0, 0, 0.87);\n }\n\n .status-widget .button {\n     display: inline-block;\n     padding: 2px;\n     font-family: Arial;\n     font-weight: bold;\n     font-size: 16px;\n     color: #bdfbf8;\n}",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\nlet alarmService = $injector.get(widgetContext.servicesMap.get('alarmService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Detalhes do alarme'\n    \n    vm.details = additionalParams.alarm.details\n    vm.alarmId = additionalParams.alarm.id.id;\n    vm.additionalParams = additionalParams\n\n    vm.dict ={\n        'ACTIVE_UNACK': 'Ativo',\n        'ACTIVE_ACK': 'Ativo',\n        'CLEARED_ACK':'Normalizado',\n        'CLEARED_UNACK':'Normalizado'\n    };\n    \n    vm.eventDate = moment.unix(vm.additionalParams.alarm.startTs/1000).format(\"DD/MM/YYYY HH:mm\");\n    if (vm.dict[vm.additionalParams.alarm.status] == 'Normalizado' ) {\n        vm.eventDate = vm.eventDate+ ' - '+moment.unix(additionalParams.alarm.endTs/1000).format(\"DD/MM/YYYY HH:mm\");\n    }    \n    \n    if (vm.additionalParams.alarm.status == 'ACTIVE_UNACK' || additionalParams.alarm.status == 'CLEARED_UNACK') {\n        vm.unack = true;\n    } else {\n        vm.unack = false;\n    }\n    \n    \n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.ack = () =>\n    {\n        alarmService.ackAlarm(vm.alarmId).then(\n            vm.cancel()\n        );\n    };    \n\n}\n\n",
                "customResources" : [ ],
                "id" : "343ad200-d73e-491a-cd75-d25ad2b1cc8a"
              } ],
              "headerButton" : [ ]
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "alarmsMaxCountLoad" : 0,
            "alarmsFetchSize" : 100,
            "alarmFilterConfig" : {
              "statusList" : [ "ACTIVE", "CLEARED" ],
              "severityList" : [ ],
              "typeList" : [ ],
              "searchPropagatedAlarms" : false
            }
          },
          "id" : "f61dddf4-1b10-439c-867c-c500882985d1",
          "typeFullFqn" : "system.alarm_widgets.alarms_table"
        },
        "7adc8a21-c062-4db3-812f-3f4ae369ec2d" : {
          "type" : "latest",
          "sizeX" : 15,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "c887f65b-386b-db62-7d93-8ff5fe5ecdcd",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "economia_acl",
                "type" : "attribute",
                "label" : "economia",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.987586119385991,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "value = Number(value)\nvar d = new Date();\nvar n = d.getDate() + 32;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if ( value > 0 ) {\n        return \"R$ \"+ value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n    }\n    return \"-x-\";\n}\nreturn \" \";"
              }, {
                "name" : "economia_acl_perc",
                "type" : "attribute",
                "label" : "economia_perc",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.1268751420181815,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nif (value > 0) {\n    return formattedNumber(Math.abs(value*100), 1, 1)+\"% do custo cativo\";\n}\nreturn \"\";\n"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${economia}</div><br>\n        <footer>\n            <div class=\"additional-info\">${economia_perc}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Economia M.Livre",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Economia M.Livre",
                "icon" : "call_split",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "ssu_mlivre_cons",
                "setEntityId" : false,
                "stateEntityParamName" : null,
                "openRightLayout" : false,
                "id" : "b26b4723-893b-b7c1-5714-da09b07d6e63"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "7adc8a21-c062-4db3-812f-3f4ae369ec2d",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "a4120212-9a21-4fbf-6836-df5394530646" : {
          "type" : "latest",
          "sizeX" : 13,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "c887f65b-386b-db62-7d93-8ff5fe5ecdcd",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pe_total",
                "type" : "attribute",
                "label" : "valor",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.035842579144868436,
                "postFuncBody" : "value = Number(value)\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if ( value > 0 ) {\n        return \"R$ \"+ value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n    }\n    return \"-x-\";\n}\nreturn \" \";\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "pe_total_percentual",
                "type" : "attribute",
                "label" : "pe_perc",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.6816663320115219,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nif (value > 0) {\n    return formattedNumber(Math.abs(value), 1, 1)+\"% do custo anual\";\n}\nreturn \"\";\n"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n        <footer>\n            <div class=\"additional-info\">${pe_perc}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Potencial de Economia",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "id" : "89a9b12b-9bc6-bc15-c1d1-08ff0231df25",
                "name" : "Potencial de Economia Consolidado",
                "icon" : "list",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "ssu_pe_consolidado",
                "setEntityId" : false
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "a4120212-9a21-4fbf-6836-df5394530646",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "ab669139-8df1-4cdb-84c2-92c098baf829" : {
          "type" : "latest",
          "sizeX" : 64,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "-Economia Livre %",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "entitiesTitle" : "Economia no Mercado Livre (Últimos 12 meses)",
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "true",
              "displayEntityLabel" : false,
              "useRowStyleFunction" : false
            },
            "title" : "Economia no Mercado Livre",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.3rem",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "ea337dd3-3e20-573c-3268-117e79aee26d",
              "filterId" : "84fb0585-9357-f837-3785-1a51b9aaa828",
              "dataKeys" : [ {
                "name" : "id_ref_cliente",
                "type" : "attribute",
                "label" : "ID",
                "color" : "#e91e63",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return value.toString()"
                },
                "_hash" : 0.5875809894156685,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "always"
                },
                "_hash" : 0.3568490663500421,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "Nome da Loja",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "25%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.26440763097163766,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~SEM NOME\"    \n}\nreturn nome;",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "simulacao_acr",
                "type" : "attribute",
                "label" : "Custo Cativo",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return Math.round(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.6224670898904558,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "simulacao_acl",
                "type" : "attribute",
                "label" : "Custo Livre",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return Math.round(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.021072577484041233,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "economia_acl",
                "type" : "attribute",
                "label" : "Economia Livre",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return Math.round(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.35529139683052824,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "economia_acl_perc",
                "type" : "attribute",
                "label" : "Economia Livre %",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return (value*100).toLocaleString('pt-BR', {\n    style: 'decimal',\n    minimumFractionDigits: 1,\n    maximumFractionDigits: 1\n});"
                },
                "_hash" : 0.33273690441997283,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "economia_acl_perc",
                "type" : "attribute",
                "label" : "Economia",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "15%",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "never",
                  "cellContentFunction" : "var html = {\n    0: '<html>&nbsp;</html>',\n    1: '<html><img src=\"https://solarhub.engecomp.io/res/ec_a.png\" width=\"auto\" height=\"22em\"></html>',\n    2: '<html><img src=\"https://solarhub.engecomp.io/res/ec_b.png\" width=\"auto\" height=\"22em\"></html>',\n    3: '<html><img src=\"https://solarhub.engecomp.io/res/ec_c.png\" width=\"auto\" height=\"22em\"></html>',\n    4: '<html><img src=\"https://solarhub.engecomp.io/res/ec_d.png\" width=\"auto\" height=\"22em\"></html>',\n    5: '<html><img src=\"https://solarhub.engecomp.io/res/ec_e.png\" width=\"auto\" height=\"22em\"></html>',\n    6: '<html><img src=\"https://solarhub.engecomp.io/res/ec_f.png\" width=\"auto\" height=\"22em\"></html>',\n    7: '<html><img src=\"https://solarhub.engecomp.io/res/ec_g.png\" width=\"auto\" height=\"22em\"></html>'\n};\n\nif (value === null || typeof value === \"undefined\") {\n\treturn '<html>&nbsp;</html>';\n}\n\nvar val_perc = Math.floor(value * 100 / 3);\n\nif (val_perc < 1)\n    val_perc = 0;\nif (val_perc > 7)\n    val_perc = 7;\nreturn html[val_perc];\n\n"
                },
                "_hash" : 0.43672825494989875,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "acl_acr_error_reason",
                "type" : "attribute",
                "label" : "Obs",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "if (value.includes('maior que')) {\n    return \"\"\n} \nreturn value"
                },
                "_hash" : 0.75448746334256,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : null
              } ]
            } ],
            "enableDataExport" : true,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "name" : "Detalhes da unidade",
                "icon" : "more_horiz",
                "type" : "custom",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\nvar params = widgetContext.stateController.getStateParams()\n\nif (!params[\"Curr_Site\"]) {\n    params[\"Curr_Site\"] = {}\n}\nparams[\"Curr_Site\"] = {entityId: entityId}\n\n\n$injector.get(widgetContext.servicesMap.get('deviceService')).getDevice(entityId.id).subscribe((device) => {\n    if (device.type == 'UC') {\n        destination = \"ssu_mlivre_uc\"\n    } else {\n        destination = \"ssu_mlivre\"\n    }\n    widgetContext.stateController.updateState(destination, params, false);\n});\n",
                "id" : "680b63b8-c9eb-7f14-2c8a-3af3228191b9"
              } ],
              "headerButton" : [ {
                "name" : "Exportar contratos",
                "icon" : "arrow_downward",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <ul>\n        <li *ngFor=\"let data of dataFormat\"\n            (click)=\"donwload(data)\"\n            [ngClass]=\"{'clicked': dataClicked === data, 'hovered': dataHovered === data}\"\n            (mouseover)=\"dataHovered = data\"\n            (mouseout)=\"dataHovered = null\">\n            {{ data | date:'MMM/yyyy' }}\n        </li>\n    </ul>\n\n    <!-- <ul>\n  <li *ngFor=\"let data of dataFormat\" (click)=\"donwload(data)\">\n    {{ data | date:'MMM/yyyy' }}\n  </li>\n</ul>\n<-->\n    <!-- <mat-label>{{ dataFormat }}</mat-label> <-->\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "ul {\n    list-style-type: none;\n}\n\nli {\n    cursor: pointer;\n    padding: 7px 0px 6px 5px;\n    font-weight: 500;\n}\n\n.hovered {\n    background-color: #4fb04e;\n    font-weight: 500;\n    text-align: center;\n}",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\r\nlet customDialog = $injector.get(widgetContext.servicesMap\r\n    .get('customDialog'));\r\n\r\nvar myHeaders = new Headers();\r\nmyHeaders.append(\"accept\", \"application/json\");\r\nmyHeaders.append(\"api-token\",\r\n    \"4e1c9db8-cc6d-47c3-a10f-aaaa65925c7f\");\r\n\r\nshowInfoDialog()\r\n\r\n//var dataFormat;\r\n\r\nfunction showInfoDialog() {\r\n    customDialog.customDialog(htmlTemplate,\r\n        dialogCrontroller).subscribe();\r\n}\r\n\r\nfunction dialogCrontroller(instance) {\r\n\r\n    let vm = instance;\r\n\r\n    // vm.OK = true\r\n\r\n    vm.importTitle = 'Lista de Contratos'\r\n\r\n\r\n    vm.cancel = function() {\r\n        vm.dialogRef.close(null);\r\n    }\r\n\r\n\r\n    function getData() {\r\n\r\n        var url =\r\n            'https://solarhub.engecomp.io/apim/danfe/contratos/0051_Assa%C3%AD%20Atacadista/list'\r\n\r\n\r\n        var fetchParams = {\r\n            headers: myHeaders,\r\n            method: \"GET\"\r\n        }\r\n        fetch(url, fetchParams).then(function(res) {\r\n                if (res.status == 200) {\r\n                    return res.json().then(\r\n                        function(data) {\r\n                            vm.dataFormat = data;\r\n                            console.log('res ',\r\n                                this.dataFormat);\r\n                        }\r\n                    )\r\n                }\r\n            })\r\n            .catch(function(error) {\r\n                console.log('res ', error);\r\n            });\r\n    }\r\n\r\n    vm.donwload = function(data) {\r\n        console.log('donwload', data)\r\n        var url =\r\n            `https://solarhub.engecomp.io/apim/danfe/contratos/0051_Assa%C3%AD%20Atacadista/download/${data}`\r\n\r\n        var fetchParams = {\r\n            method: \"GET\",\r\n            headers: myHeaders,\r\n        }\r\n        fetch(url, fetchParams).then(function(res) {\r\n                res.json().then(\r\n                    function(data) {\r\n                        window.open(data.link);\r\n                       console.log('donwload ', data.link);\r\n                    }\r\n                )\r\n                if (res.status == 200) {\r\n                    //  downloadFile(data);\r\n                    //  window.location.href= res.link;\r\n                    console.log('donwload ', res);\r\n                } else {\r\n                    console.log('donwload ', res);\r\n                }\r\n            })\r\n            .catch(function(error) {\r\n                console.log('res ', error);\r\n            });\r\n\r\n    }\r\n\r\n\r\n    getData();\r\n}\r\n\r\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "1fb3e2a3-1fb5-8321-a683-ba036eb3db4f"
              }, {
                "name" : "Importar Contratos",
                "icon" : "arrow_upwards",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "\t<form #editDeviceForm=\"ngForm\" [formGroup] = 'fileAdd'\n      (ngSubmit)=\"send()\" style=\"width: 650px;\" >\n  <mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>Importar projeção de geração</h2>\n    <span fxFlex></span>\n    <button mat-button mat-icon-button\n            (click)=\"cancel()\"\n            type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n\n    <mat-spinner [fxShow]=\"loading\" class=\"spinner_container\"></mat-spinner>\n\n    <div class=\"tb-container\">\n      <label class=\"action-title\">Coloque aqui seu contrato</label>\n        <div class=\"action-file-select-container \">\n              <div class=\"action-file-clear-container\">\n                <button mat-button mat-icon-button color=\"primary\"\n                        type=\"button\"\n                        (click)=\"clearFile()\"\n                        class=\"action-file-clear-btn\"\n                        matTooltip=\"{{ 'action.remove' | translate }}\"\n                        matTooltipPosition=\"above\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </div>\n            <div class=\"drop-area action-flow-drop\">\n                <label for=\"file-input\">Arraste o arquivo ou clique aqui para selecionar</label>\n                <input class=\"file-input\" type=\"file\" id=\"file-input\" formControlName = 'controlInputField' (change)=\"fileAdded($event.target.files)\">\n              </div>\n        </div>\n    </div>\n    <div class = 'file-info'>\n      <div *ngIf=\"!fileName\" class=\"cut-text\">Nenhum arquivo selecionado</div>\n      <div *ngIf=\"fileName\" class=\"cut-text\">{{ fileName }}</div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\">\n    <span fxFlex></span>\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button mat-raised-button color=\"primary\"\n            style=\"margin-right: 20px;\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || fileAdd.invalid\">\n      Import\n    </button>\n  </div>\n</form>",
                "customCss" : "\n.file-input{\n       display: none;\n}\n\n.action-flow-drop{\n     position: relative;\n    height: 100%;\n    overflow: hidden;\n    border: dashed 2px;\n    margin-left: 15px;\n}\n\n.action-flow-drop label{\n    display: flex;\n      flex-direction: column;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      font-size: 16px;\n      text-align: center;\n}\n\n.action-title{\n    display: block;\n    padding-bottom: 8px;\n    margin-left: 15px;\n    color: #8E8E8E;\n    font-size:12px;\n}\n\n.action-file-select-container{\n    position: relative;\n    width: 100%;\n    height: 100px;\n}\n\n.action-file-clear-container{\n    position: relative;\n    float: right;\n    width: 48px;\n    height: 100%;\n}\n\n.action-file-clear-btn{\n    top: 50%;\n    transform: translate(0%, -50%) !important;\n}\n\n.file-info{\n    margin-left: 15px;\n    margin-right: 15px;\n}\n\n.loading{\n    margin-top: 5px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    text-align: center;\n}\n\n.action-flow-drop label{\n    font-size: 25px;\n}\n\n.spinner_container {\n    border-radius: 10px;\n    height: 70px;\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    transform: translate(-50%,-50%);\n    width: 70px;\n    z-index: 3;\n    opacity: 0.5;\n}",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap\n    .get('customDialog'));\n\nopenEditDeviceDialog();\n//debugger\n\n// search = {\n//     entityFilter: widgetContext.defaultSubscription.configuredDatasources[0].entityFilter,\n//     pageLink: {\n//         page: 0,\n//         pageSize: 1000,\n//         textSearch: null,\n//         dynamic: false\n//       }\n// }\n\nsearch = {\n    entityFilter: widgetContext.defaultSubscription\n        .configuredDatasources[0].entityFilter,\n    pageLink: {\n        page: 0,\n        pageSize: 1000,\n        textSearch: null,\n        dynamic: false,\n        sortOrder: {\n            key: {\n                key: \"name\",\n                type: \"ENTITY_FIELD\"\n            },\n            direction: \"ASC\"\n        }\n    },\n    entityFields: [{\n        key: \"name\",\n        type: \"ENTITY_FIELD\"\n    }],\n    latestValues: [{\n        key: \"description\",\n        type: \"ATTRIBUTE\"\n    }]\n}\n\nfunction openEditDeviceDialog() {\n    customDialog.customDialog(htmlTemplate,\n        EditDeviceDialogController).subscribe();\n}\n\nfunction EditDeviceDialogController(instance) {\n    let vm = instance;\n    vm.fileName = '';\n    vm.loading = false;\n    let url =\n        'https://solarhub.engecomp.io/apim/danfe/contratos/upload'\n    let user = widgetContext.currentUser;\n    let userMail = user.sub\n    //let parent_id = widgetContext.stateController.getEntityId('Curr_Client')\n\n    $(document).ready(function() {\n        let form = $('.drop-area');\n        form.on('drag dragstart dragend dragover dragenter dragleave drop',\n            function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n            }).on('drop', function(e) {\n            vm.fileAdded(e.originalEvent\n                .dataTransfer.files);\n        });\n    });\n\n    vm.fileAdd = vm.fb.group({\n        file: [\n            [],\n            [vm.validators.required]\n        ],\n        controlInputField: ''\n    });\n\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n    vm.clearFile = () => {\n        $(\".file-input\").value = \"\";\n        vm.fileName = '';\n        vm.fileAdd.patchValue({\n            file: []\n        })\n    }\n\n    vm.fileAdded = (files) => {\n        for (let i = 0; i < files.length; i++) {\n            let filetype = files[i].name.split('.')\n                .pop();\n            if (filetype === 'xls' || filetype ===\n                'xlsx') {\n                let newFiles = vm.fileAdd.get('file')\n                    .value\n                if (vm.fileAdd.get('file').value\n                    .length !== 0) {\n                    vm.fileName += ' // ';\n                }\n                newFiles.push(files.item(i))\n                vm.fileAdd.patchValue({\n                    file: newFiles\n                })\n                vm.fileName += files.item(i).name;\n            } else {\n                alert(files[i].name +\n                    \" tem extensão inválida\");\n            }\n        }\n        vm.fileAdd.get('controlInputField').patchValue(\n            '', {\n                emitEvent: false\n            });\n    }\n\n    vm.send = () => {\n        vm.loading = true;\n        var form = new FormData();\n        form.append(\"file\", vm.fileAdd.get('file')\n            .value[0]);\n\n        form.append(\"api-token\",\n            '4e1c9db8-cc6d-47c3-a10f-aaaa65925c7f')\n        form.append(\"email\", userMail)\n        \n        var settings = {\n            \"url\": \"https://solarhub.engecomp.io/apim/danfe/contratos/upload\",\n            \"method\": \"POST\",\n            \"timeout\": 0,\n            \"headers\": {\n                \"accept\": \"application/json\",\n                \"api-token\": '4e1c9db8-cc6d-47c3-a10f-aaaa65925c7f'\n            },\n            \"processData\": false,\n            \"mimeType\": \"multipart/form-data\",\n            \"contentType\": false,\n            \"data\": form,\n            \"success\": function(data) {\n                vm.loading = false\n                widgetContext.showSuccessToast(\n                    'Arquivo enviado com sucesso.',\n                    3000)\n                vm.cancel();\n            },\n            \"error\": function(data) {\n                vm.loading = false\n                try {\n                    response = JSON.parse(data\n                        .responseText)\n                    if (response.hasOwnProperty(\n                            'detail')) {\n                        message = response\n                            .detail\n                    } else {\n                        message =\n                            'Erro. Por favor contacte a Engecomp.'\n                    }\n                } catch {\n                    message =\n                        'Erro. Por favor contacte a Engecomp.'\n                }\n\n                widgetContext.showErrorToast(\n                    message, 3000)\n                vm.cancel();\n            }\n        };\n\n        $.ajax(settings)\n\n    }\n}",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "b80d728d-091f-7407-20b1-9b280ff3dad6"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "ab669139-8df1-4cdb-84c2-92c098baf829",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "3d119519-2c1a-4d6f-a82d-16100ab95d67" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "simulacao_acr",
                "type" : "attribute",
                "label" : "valor",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.7361966159681663,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nreturn \"R$ \"+formattedNumber(value, 0, 0);"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}\n"
            },
            "title" : "Custo Cativo",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "4px",
              "padding-bottom" : "10px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "3d119519-2c1a-4d6f-a82d-16100ab95d67",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "ed7fd79d-111f-4e3b-b817-78fd05fdbfa7" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "simulacao_acl",
                "type" : "attribute",
                "label" : "valor",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.1759597719132362,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nreturn \"R$ \"+formattedNumber(value, 0, 0);"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}\n"
            },
            "title" : "Custo Livre",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "4px",
              "padding-bottom" : "10px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "ed7fd79d-111f-4e3b-b817-78fd05fdbfa7",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "aa4ac253-9070-4aaa-9f4c-af137dd7ce8b" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "economia_acl",
                "type" : "attribute",
                "label" : "valor",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.33720846570933016,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nreturn \"R$ \"+formattedNumber(value, 0, 0);"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}\n"
            },
            "title" : "Economia Livre (R$)",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "4px",
              "padding-bottom" : "10px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "aa4ac253-9070-4aaa-9f4c-af137dd7ce8b",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "525d57e1-7da8-45c9-b485-8dcde9d47d90" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "economia_acl_perc",
                "type" : "attribute",
                "label" : "valor",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.6663317482585986,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nreturn formattedNumber(value*100, 1, 1) + \" %\";"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}\n"
            },
            "title" : "Economia ACR (%)",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "4px",
              "padding-bottom" : "10px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "525d57e1-7da8-45c9-b485-8dcde9d47d90",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "46d47bc4-e082-4d0c-9b44-40c2700576b9" : {
          "type" : "timeseries",
          "sizeX" : 35,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "simulacao_acr",
                "type" : "timeseries",
                "label" : "Custo Mensal ACR",
                "color" : "#35b89b",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "steppedLine" : "none"
                },
                "_hash" : 0.05172564850041583,
                "units" : "R$ {}",
                "decimals" : 2,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "simulacao_acl",
                "type" : "timeseries",
                "label" : "Custo Mensal ACL",
                "color" : "#d94e56",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "steppedLine" : "none"
                },
                "_hash" : 0.2737581771441737,
                "units" : "R$ {}",
                "decimals" : 2,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideLastInterval" : false,
              "hideQuickInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1641005999000,
                  "endTimeMs" : 1672541999000
                },
                "interval" : 63244800
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 2000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "allowDrilldown" : false,
              "timeWindows" : [ "12M", "Ano" ],
              "timeWindowsUnits" : "month,month",
              "initialTimeWindow" : "12M",
              "showContractedDemandCurves" : false,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "showRightScale" : true,
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 0,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: false,\n    callback: callback\n}\n\nreturn ticks",
              "stacked" : true,
              "sortLegendByLabel" : false,
              "axisLabel" : "Enter axis label here",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n        var decimals = ctx.decimals[tooltipItem\n            .datasetIndex];\n        var label = data.datasets[tooltipItem.datasetIndex]\n            .label || '';\n        var value = tooltipItem.yLabel.toLocaleString(\n            'pt-BR', {\n                style: 'decimal',\n                minimumFractionDigits: 0,\n                maximumFractionDigits: 0\n            });\n\n        try {\n            value = ctx.units[tooltipItem.datasetIndex]\n                .replace(/{}/g, value)\n        } catch (err) {}\n\n        var message = `${label}: ${value}`\n\n        return message;\n    },\n\n    filter = function(tooltipItem, data) {\n        return tooltipItem.value != \"NaN\"\n    }\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n\n    }\n}\n\nreturn tooltip\n\n",
              "rightScaleTicks" : "ticks = {\n    beginAtZero: true\n}\n\nreturn ticks",
              "showRightScale2" : true,
              "rightScaleTicks2" : "ticks = {\n    beginAtZero: true\n}\n\nreturn ticks",
              "roundToUnit" : false
            },
            "title" : "Gasto Mensal ACR x ACL (R$)",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            }
          },
          "id" : "46d47bc4-e082-4d0c-9b44-40c2700576b9",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "7c08c663-ecdf-4546-a289-dd15826f0f2c" : {
          "type" : "latest",
          "sizeX" : 20,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5155785689407371
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "classe_tensao",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.7789197618211576,
                "postFuncBody" : "var dict = {\n    0:\"\",\n    1:\"A1\",\n    2:\"A2\",\n    3:\"A3\",\n    4:\"A3a\",\n    5:\"A4\",\n    6:\"AS\",\n    7:\"B1\",\n    8:\"B2\",\n    9:\"B3\"\n};\nreturn dict[value];"
              }, {
                "name" : "enq_tarifario",
                "type" : "attribute",
                "label" : "enq_tarifario",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.5065987338045093,
                "postFuncBody" : "var dict = {\n    0:\"?Tarifa?\",\n    1:\"Azul\",\n    2:\"Verde\",\n    3:\"Convencional\",\n    4:\"Branca\"\n};\nreturn dict[value];"
              }, {
                "name" : "demanda_fp",
                "type" : "attribute",
                "label" : "demanda_fp",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.7312962999006185,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 1}) + \" kW\";"
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "utility",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.8852897696852668,
                "postFuncBody" : "var dict = {\n    0: \"?Distribuidora?\",\n    1: \"CPFL PIRATININGA\",\n    2: \"ENEL SP\",\n    3: \"LIGHT\",\n    4: \"COPEL\",\n    5: \"CEMIG\",\n    6: \"ELEKTRO\",\n    7: \"CELPE\",\n    8: \"CEA AMAPA\",\n    9: \"COELBA\",\n    10: \"CEB\",\n    11: \"COSERN\",\n    12: \"CPFL PAULISTA\",\n    13: \"CEEE\",\n    14: \"EDP ES\",\n    15: \"EDP SP\",\n    16: \"CELESC\",\n    17: \"ELETROBRAS AL\",\n    18: \"ELETROBRAS AM\",\n    19: \"ENEL CE COELCE\",\n    20: \"ENEL RJ AMPLA\",\n    21: \"CELG\",\n    22: \"ENERGISA ACE\",\n    23: \"ENERGISA MG\",\n    24: \"ENERGISA MSL\",\n    25: \"ENERGISA MT\",\n    26: \"ENERGISA PB\",\n    27: \"ENERGISA BORBOREMA\",\n    28: \"ENERGISA RJ\",\n    29: \"ENERGISA RO\",\n    30: \"ENERGISA SE\",\n    31: \"ENERGISA SUL-SE\",\n    32: \"ENERGISA TO\",\n    33: \"EQUATORIAL MA\",\n    34: \"EQUATORIAL PI\",\n    35: \"CELPA\",\n    36: \"RGE SUL\",\n    37: \"CPFL JAGUARI\",\n    38: \"CPFL LESTE PAULISTA\",\n    39: \"CPFL MOCOCA\",\n    40: \"CPFL SANTA CRUZ\",\n    41: \"CPFL SUL PAULISTA\",\n    42: \"RGE\" \n};\nreturn dict[value];"
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.2749712890857279
              }, {
                "name" : "estado",
                "type" : "attribute",
                "label" : "estado",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.39311028025251993
              } ],
              "entityAliasId" : "728823e0-e36b-2e9b-1756-7261ef29e278"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<table width=\"100%\" class='card'>\n    <tr width=\"100%\">\n        <td width=\"95%\">\n            <div class='content'>\n                <div class='column'>\n                    <div class='value_blue' align=\"right\">\n                        ${utility}\n                    </div>\n                    <div class='description' align=\"right\">\n                        ${description}<br>\n                        ${status_cliente} ${classe_tensao} ${enq_tarifario}\n                    </div>    \n                </div>\n            </div>\n        </td>\n        <td width=\"5%\">&nbsp;</td>\n    </tr>\n</table>",
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   width: 100%;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   width: 100%;\n   height: 100%;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}"
            },
            "title" : "ID Site 1",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "7c08c663-ecdf-4546-a289-dd15826f0f2c",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "99221ffd-1832-4d79-87ed-9b384f4d1abe" : {
          "type" : "latest",
          "sizeX" : 20,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.4791707582333746
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "classe_tensao",
                "color" : "#e34844",
                "settings" : { },
                "_hash" : 0.2693891785658551,
                "postFuncBody" : "var dict = {\n    0:\"\",\n    1:\"A1\",\n    2:\"A2\",\n    3:\"A3\",\n    4:\"A3a\",\n    5:\"A4\",\n    6:\"AS\",\n    7:\"B1\",\n    8:\"B2\",\n    9:\"B3\"\n};\nreturn dict[value];"
              }, {
                "name" : "enq_tarifario",
                "type" : "attribute",
                "label" : "enq_tarifario",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.7979988314678461,
                "postFuncBody" : "var dict = {\n    0:\"?Tarifa?\",\n    1:\"Azul\",\n    2:\"Verde\",\n    3:\"Convencional\",\n    4:\"Branca\"\n};\nreturn dict[value];"
              }, {
                "name" : "demanda_fp",
                "type" : "attribute",
                "label" : "demanda_fp",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.6170238355590876,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 1}) + \" kW\";"
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "utility",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.9958414655770815,
                "postFuncBody" : "var dict = {\n    0: \"?Distribuidora?\",\n    1: \"CPFL PIRATININGA\",\n    2: \"ENEL SP\",\n    3: \"LIGHT\",\n    4: \"COPEL\",\n    5: \"CEMIG\",\n    6: \"ELEKTRO\",\n    7: \"CELPE\",\n    8: \"CEA AMAPA\",\n    9: \"COELBA\",\n    10: \"CEB\",\n    11: \"COSERN\",\n    12: \"CPFL PAULISTA\",\n    13: \"CEEE\",\n    14: \"EDP ES\",\n    15: \"EDP SP\",\n    16: \"CELESC\",\n    17: \"ELETROBRAS AL\",\n    18: \"ELETROBRAS AM\",\n    19: \"ENEL CE COELCE\",\n    20: \"ENEL RJ AMPLA\",\n    21: \"CELG\",\n    22: \"ENERGISA ACE\",\n    23: \"ENERGISA MG\",\n    24: \"ENERGISA MSL\",\n    25: \"ENERGISA MT\",\n    26: \"ENERGISA PB\",\n    27: \"ENERGISA BORBOREMA\",\n    28: \"ENERGISA RJ\",\n    29: \"ENERGISA RO\",\n    30: \"ENERGISA SE\",\n    31: \"ENERGISA SUL-SE\",\n    32: \"ENERGISA TO\",\n    33: \"EQUATORIAL MA\",\n    34: \"EQUATORIAL PI\",\n    35: \"CELPA\",\n    36: \"RGE SUL\",\n    37: \"CPFL JAGUARI\",\n    38: \"CPFL LESTE PAULISTA\",\n    39: \"CPFL MOCOCA\",\n    40: \"CPFL SANTA CRUZ\",\n    41: \"CPFL SUL PAULISTA\",\n    42: \"RGE\" \n};\nreturn dict[value];"
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.8078976834835212
              }, {
                "name" : "estado",
                "type" : "attribute",
                "label" : "estado",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.5851067738933313
              } ],
              "entityAliasId" : "2ffa1716-0cf5-5edb-d0e5-e76972d43f0d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<table width=\"100%\" class='card'>\n    <tr width=\"100%\">\n        <td width=\"5%\">&nbsp;</td>\n        <td width=\"95%\">\n            <div class='content'>\n                <div class='column'>\n                    <div class='value_red'>\n                        ${utility}\n                    </div>\n                    <div class='description'>\n                        ${description}<br>\n                        ${status_cliente} ${classe_tensao} ${enq_tarifario}\n                    </div>    \n                </div>\n            </div>\n        </td>\n    </tr>\n</table>\n",
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}"
            },
            "title" : "ID Site 2",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "99221ffd-1832-4d79-87ed-9b384f4d1abe",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "46187849-a31c-4c73-9002-276686e8cb15" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_number_processed",
                "type" : "attribute",
                "label" : "fat_number_processed",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5370480000025313
              }, {
                "name" : "fat_total_ucs",
                "type" : "attribute",
                "label" : "fat_total_ucs",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.9781659357763268
              }, {
                "name" : "fat_last_month_closing",
                "type" : "attribute",
                "label" : "fat_last_month_closing",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.3715089690122355
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#ffffff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}",
              "cardHtml" : "<script>\n    //var x = ${energy_average_year}/${fat_consumo_kwh_average_year} || \"-x-\";\n    //document.getElementById(\"cob_carga\").innerHTML = x.toLocaleString('pt-Br',{style: \"percent\", minimumFractionDigits: 1, maximumFractionDigits: 1});\n    var total = \"${fat_total_ucs}\" || null\n    var processadas = \"${fat_number_processed}\"\n    var closing = \"${fat_last_month_closing}\"\n    \n    debugger\n    total = parseInt(total) || null\n    processadas = parseInt(processadas) || 0\n    closing = parseInt(closing)+1000 || null\n    \n    ucs = processadas.toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: 0, maximumFractionDigits: 0}) + \" / \" + total.toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: 0, maximumFractionDigits: 0});\n    if (total) {\n        rateio = (processadas/total).toLocaleString('pt-Br',{style: \"percent\", minimumFractionDigits: 1, maximumFractionDigits: 1})\n    } else {\n        rateio = \"\"\n    }\n    \n    \n    document.getElementById(\"ucs\").innerHTML = ucs;\n    document.getElementById(\"cob_carga\").innerHTML = rateio+\" da carga\";\n    if (closing) {\n        document.getElementById(\"closing\").innerHTML = moment.utc(closing).format(\"MMM YYYY\");\n        //moment.utc(closing).format(\"MMM YYYY\")\n    }\n    \n</script>\n<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div id=\"ucs\" class=\"value\"></div><br>\n        <footer>\n            <div id=\"cob_carga\" class=\"additional-info\"></div><br>\n            <div id=\"closing\" class=\"additional-info\"></div>\n        </footer>\n    </section>\n</div>"
            },
            "title" : "Faturas Processadas",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "46187849-a31c-4c73-9002-276686e8cb15",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "a52153d3-1402-4d40-a680-e1a70b27a150" : {
          "type" : "timeseries",
          "sizeX" : 54,
          "sizeY" : 35,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "9394fcb0-5690-2125-55f9-6406f27c509d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_ts",
                "type" : "timeseries",
                "label" : "Data",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.3536309260118291,
                "postFuncBody" : null,
                "units" : "{  \"seq\":11, \"hozAlign\": \"right\",   \"bottomCalc\": \"count\",   \"bottomCalcFormatter\": \"money\",   \"bottomCalcFormatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 0   },   \"formatter\": \"datetime\",   \"formatterParams\":   {     \"inputFormat\": \"x\",     \"outputFormat\": \"DD/MM/YY\",     \"invalidPlaceholder\": \"\"   } }",
                "usePostProcessing" : false,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_total",
                "type" : "timeseries",
                "label" : "Fatura (R$)",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.20092525227713165,
                "units" : "{  \"seq\":12,  \"bottomCalc\": \"sum\",     \"bottomCalcFormatter\": \"money\",   \"bottomCalcFormatterParams\": {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 2   },   \"align\": \"right\",   \"formatter\": \"money\",   \"formatterParams\": {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 2   } }",
                "postFuncBody" : "return Math.round(value*100)/100;",
                "usePostProcessing" : true,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "Consumo (kWh)",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.18776141735440843,
                "units" : "{   \"seq\":13, \"bottomCalc\": \"sum\",   \"bottomCalcFormatter\": \"money\",   \"bottomCalcFormatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 0   },   \"align\": \"right\",   \"formatter\": \"money\",   \"formatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 0   } }",
                "postFuncBody" : "return Math.round(value);",
                "usePostProcessing" : true,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_energia_creditada",
                "type" : "timeseries",
                "label" : "Créditos (kWh)",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.36565710214875735,
                "units" : "{ \"seq\":14,   \"bottomCalc\": \"sum\",   \"bottomCalcFormatter\": \"money\",   \"bottomCalcFormatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 0   },   \"align\": \"right\",   \"formatter\": \"money\",   \"formatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 0   } }",
                "postFuncBody" : "return Math.round(value);",
                "usePostProcessing" : true,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_valor_creditado_energia",
                "type" : "timeseries",
                "label" : "Créditos (R$)",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.6532214911191807,
                "units" : "{  \"seq\":15,  \"responsive\": 0,   \"bottomCalc\": \"sum\",   \"bottomCalcFormatter\": \"money\",   \"bottomCalcFormatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 2   },   \"align\": \"right\",   \"formatter\": \"money\",   \"formatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 2   } }",
                "postFuncBody" : "return Math.round(value*100)/100;",
                "usePostProcessing" : true,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_saldo_creditos",
                "type" : "timeseries",
                "label" : "Saldo Créditos",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.42405266779726913,
                "units" : "{  \"seq\":16,  \"bottomCalc\": \"sum\",   \"bottomCalcFormatter\": \"money\",   \"bottomCalcFormatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 0   },   \"align\": \"right\",   \"formatter\": \"money\",   \"formatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 0   } }",
                "postFuncBody" : "return Math.round(value);",
                "usePostProcessing" : true,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_disponibilidade_valor",
                "type" : "timeseries",
                "label" : "CUSD (R$)",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.3968041450492361,
                "units" : "{  \"seq\":17,  \"bottomCalc\": \"sum\",   \"bottomCalcFormatter\": \"money\",   \"bottomCalcFormatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 2   },   \"align\": \"right\",   \"formatter\": \"money\",   \"formatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 2   } }",
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_energia_injetada",
                "type" : "timeseries",
                "label" : "En.Injetada (kWh)",
                "color" : "#03a9f4",
                "settings" : { },
                "_hash" : 0.8384476186356715,
                "units" : "{ \"seq\":18, \"download\":false, \"visible\":false,   \"bottomCalc\": \"sum\",   \"bottomCalcFormatter\": \"money\",   \"bottomCalcFormatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 0   },   \"align\": \"right\",   \"formatter\": \"money\",   \"formatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 0   } }",
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_saldo_creditos_dif",
                "type" : "timeseries",
                "label" : "Var.Saldo (kWh)",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.8375448854820144,
                "units" : "{  \"seq\":33, \"download\":false, \"visible\":false,  \"sorter\": \"number\",   \"bottomCalc\": \"sum\",   \"bottomCalcFormatter\": \"money\",   \"bottomCalcFormatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 0   },   \"align\": \"right\",   \"formatter\": \"money\",   \"formatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 0   } }",
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_percentage_from_plant",
                "type" : "timeseries",
                "label" : "Rateio Decl.",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.49660242433625057,
                "units" : "{ \"seq\":35,   \"formatter\": \"money\",   \"formatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 2,     \"symbol\": \"%\",     \"symbolAfter\": true   },   \"bottomCalc\": \"sum\",   \"bottomCalcFormatter\": \"money\",   \"bottomCalcFormatterParams\":   {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 2,     \"symbol\": \"%\",     \"symbolAfter\": true   } }",
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return value*100;"
              }, {
                "name" : "uc_url_conta",
                "type" : "timeseries",
                "label" : "PDF",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.8187834817457889,
                "units" : "{\"seq\":99, \"formatter\":\"link\", \"formatterParams\":{     \"target\":\"_blank\",     \"label\": \"fatura\" }}",
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1654052400000,
                  "endTimeMs" : 1656644399000
                },
                "interval" : 18000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "attributeSettings" : "\nvar cred_receb = function(value, data) {\n    return Number(data.fat_saldo_creditos_dif) + Number(data.fat_energia_creditada)\n}\n\nvar toNumber = function(value,data) {\n    var f = parseFloat(value) \n    return f\n}\n\nvar rateio_obs = function(value, data, type, params, column) {\n    var total = (ctx.fat_energia_creditada_sum || 0) + (ctx.fat_saldo_creditos_dif_sum || 0)\n    if (total && data.fat_energia_injetada == 0) {\n        x = data.cred_receb / total * 100\n    } else {x = null}\n    return x\n}\n\nvar valid_rateio = function(value, data, type, params, column) {\n\n    rateio_base = (data.fat_percentage_from_plant > 0) ? data.fat_percentage_from_plant : data.perc_rateio\n    if (Math.abs(data.perc_rateio_obs - rateio_base ) > 0.05) {\n        return \"ERRO\"\n    } else {\n        return \"OK\"\n    }\n    // return \"X\"\n    \n}\n\nvar ABC = function(cell, formatterParams, onRendered){ //plain text value\n\n\n    var html = {\n        1: '<html><img src=\"https://solarhub.engecomp.io/res/ee_g.png\" width=\"auto\" height=\"22em\"></html>',\n        2: '<html><img src=\"https://solarhub.engecomp.io/res/ee_f.png\" width=\"auto\" height=\"22em\"></html>',\n        3: '<html><img src=\"https://solarhub.engecomp.io/res/ee_e.png\" width=\"auto\" height=\"22em\"></html>',\n        4: '<html><img src=\"https://solarhub.engecomp.io/res/ee_d.png\" width=\"auto\" height=\"22em\"></html>',\n        5: '<html><img src=\"https://solarhub.engecomp.io/res/ee_c.png\" width=\"auto\" height=\"22em\"></html>',\n        6: '<html><img src=\"https://solarhub.engecomp.io/res/ee_b.png\" width=\"auto\" height=\"22em\"></html>',\n        7: '<html><img src=\"https://solarhub.engecomp.io/res/ee_a.png\" width=\"auto\" height=\"22em\"></html>'\n    };\n    \n    value=Math.ceil(cell.getValue()*7,1)\n\n    return html[value];\n\n};\n\nattributeParams = [\n    {seq: 0, title: \"UC\", field: \"UC\", fixed: true, frozen: true,  headerMenu: \"headerMenu\", bottomCalc: \"count\", \"hozAlign\": \"right\", bottomCalcFormatter: \"money\",   bottomCalcFormatterParams: {decimal: \",\", thousand: \".\", precision: 0}, download:true},\n    {seq: 1, title: \"Nome\", field: \"description\", fixed: true, frozen: true, headerFilter:\"input\", download:true},\n    {seq: 2, title: \"Endereço\", field: \"endereco\", download:true},\n    {seq: 3, title: \"Cidade\", field: \"cidade\", download:true},\n    {seq: 4, title: \"Estado\", field: \"estado\", download:true},\n    {seq: 5, title: \"Rateio\", field: \"perc_rateio\", \"hozAlign\": \"right\", mutator: toNumber, formatter: \"money\", formatterParams: {download: true, decimal: \",\", thousand: \".\", precision: 2, symbol: \"%\", symbolAfter: true}, bottomCalc: \"sum\", bottomCalcFormatter: \"money\",   bottomCalcFormatterParams: {decimal: \",\", thousand: \".\", precision: 2, symbol: \"%\", symbolAfter: true}, download:true},\n    {seq: 31, title: \"Próx.Leitura\", scope: \"client\", field: \"fat_next_reading\", responsive:4, download:true, hozhozAlign: \"center\", formatter:\"datetime\", \"formatterParams\":{\"inputFormat\":\"x\",\"outputFormat\":\"DD/MM/YY\",\"invalidPlaceholder\":\"\"} },\n    {seq: 32, title: \"Cred.Receb.(kWh)\", field: \"cred_receb\", sorter: \"number\", mutator: cred_receb, \"bottomCalc\": \"sum\",   \"bottomCalcFormatter\": \"money\",   \"bottomCalcFormatterParams\": {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 0   },   \"hozAlign\": \"right\",   \"formatter\": \"money\",   \"formatterParams\": {     \"decimal\": \",\",     \"thousand\": \".\",     \"precision\": 0   } },\n    {seq: 34, title: \"Rateio Observ.\", field: \"perc_rateio_obs\", \"hozAlign\": \"right\", mutator: rateio_obs, formatter: \"money\", formatterParams: {download: true, decimal: \",\", thousand: \".\", precision: 2, symbol: \"%\", symbolAfter: true}, bottomCalc: \"sum\", bottomCalcFormatter: \"money\",   bottomCalcFormatterParams: {decimal: \",\", thousand: \".\", precision: 2, symbol: \"%\", symbolAfter: true}, download:true},\n    {seq: 36, title: \"Valid.Rateio\", field: \"valid_rateio\", \"hozAlign\": \"right\", mutator: valid_rateio, download:true}\n]\n    \nreturn attributeParams    ",
              "root_state" : "Curr_Usina",
              "fields_to_sum" : "fat_energia_creditada,fat_saldo_creditos_dif",
              "fill_zeroes" : true,
              "month_closing_button" : true
            },
            "title" : "Balanço Mensal",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Download Faturas",
                "icon" : "file_download",
                "type" : "custom",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\n\nvar user = widgetContext.currentUser;\nvar userMail = user.sub\n\n//var url = 'https://solarhub.engecomp.io/be/pdf_export/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\nvar url = 'https://solarhub.engecomp.io/be/pdf_export_v2/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\n\npayload = createJSON();\n\nsend();\n\nfunction uuidv4() {\n  return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n  );\n}\n\nfunction createJSON() {\n    var payload = {};\n    //payload.devices = [];\n    payload.files = [];\n    payload.email = userMail\n    //payload.plant = entityLabel\n    payload.plant = uuidv4()\n    \n    payload.month = moment.utc(widgetContext.timeWindow.minTime,'x').format('MM/YYYY')\n    \n    for (i=0; i < widgetContext.data.length ; i++){\n        if (widgetContext.data[i].dataKey.name == 'uc_url_conta' && widgetContext.data[i].data.length) {\n            file = {}\n            UC_name = widgetContext.data[i].datasource.entityName\n            file.link = widgetContext.data[i].data[0][1]\n            file.UC = UC_name.substring(3,entityName.length)\n            file.utility = UC_name.substring(0,2)\n            payload.files.push(file)\n            }\n        }\n    return payload\n}\n\nfunction getPlantData() {\n    plant = widgetContext.defaultSubscription.configuredDatasources[0].entityFilter.rootEntity\n    attributeService = self.ctx.$scope.$injector.get(self.ctx.servicesMap.get('attributeService'));\n    assetService = self.ctx.$scope.$injector.get(self.ctx.servicesMap.get('assetService'));\n}\n\nfunction send() {\n\n    let formData = new FormData();    \n    formData.append(\"payload\", JSON.stringify( payload ))\n\n    var fetchParams = { method: \"POST\", body: formData }\n    \n    fetch(url, fetchParams).then(function(r) {\n        if (r.status == 200) {\n\n            return r.json().then(\n                function(data) {\n                    if (data.hasOwnProperty('files') && data.files == 0) {\n                        widgetContext.showErrorToast('Nenhuma fatura disponível para a usina e mês selecionados', 3000)\n                        return\n                    } \n                    if (data.link && data.link.length > 0) {\n                        widgetContext.showSuccessToast('Caso o arquivo não seja baixado automaticamente, clique no link: '+data.link, 8000)\n                        window.open(data.link,'_blank');\n                    }\n                    else {\n                        widgetContext.showSuccessToast('Sucesso. Um link será enviado para o seu e-mail', 3000)\n                    }\n                })\n        }\n        else {\n            widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n        }\n        \n    }); \n\n}\n",
                "id" : "bc841a87-cb2d-1a22-c0a4-c3b37cf27208"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : false
          },
          "id" : "a52153d3-1402-4d40-a680-e1a70b27a150",
          "typeFullFqn" : "tenant.teste.tabulator"
        },
        "8a2c4f11-e719-445b-a60a-7d318819ae1c" : {
          "type" : "timeseries",
          "sizeX" : 27,
          "sizeY" : 23,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "energy_design_month_sum",
                "type" : "timeseries",
                "label" : "Projetada",
                "color" : "rgb(202, 144, 80)",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : true,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack8",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.6895992386404495,
                "postFuncBody" : "return Math.floor(value);",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            }, {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pm_wh_produced_delta_hour_sum",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ ],
                  "stackId" : "Stack0"
                },
                "_hash" : 0.7576602415989884
              }, {
                "name" : "pm_wh_produced_delta_day_sum",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ ],
                  "stackId" : "Stack0"
                },
                "_hash" : 0.3141303968602689
              }, {
                "name" : "pm_wh_produced_delta_month_sum",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ ],
                  "stackId" : "Stack0"
                },
                "_hash" : 0.8266447558145811
              }, {
                "name" : "pm_wh_produced_delta_year_sum",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ ],
                  "stackId" : "Stack0"
                },
                "_hash" : 0.6561579872170398
              } ]
            }, {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "13a3d106-d96a-c88d-0ba4-36ceaaa1cb66",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Active Energy_day_sum",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#65baa7",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack1",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.20534378304362244
              }, {
                "name" : "Active Energy_hour_sum",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#65baa7",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack1",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.6248602224199118
              }, {
                "name" : "Active Energy_month_sum",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#65baa7",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack1",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.34392127835450914
              }, {
                "name" : "Active Energy_year_sum",
                "type" : "timeseries",
                "label" : "${entityLabel}",
                "color" : "#65baa7",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack1",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.38686171025471494
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : true,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1670986799000,
                  "endTimeMs" : 1671591599000
                },
                "interval" : 63245000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : true,
              "timeWindows" : [ "Hoje", "24H", "7D", "30D", "12M" ],
              "initialTimeWindow" : "7D",
              "timeWindowsUnits" : "hour,hour,day,day,month",
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "leftScaleTicks" : "callback = function(value, index, values) {\nreturn value.toLocaleString('pt-BR', {\nstyle: 'decimal',\nmaximumFractionDigits: 1,\nminimumSignificantDigits: 2\n});\n}\nticks = {\nbeginAtZero: true,\ncallback: callback\n}\nreturn ticks",
              "stacked" : true,
              "tooltipSettings" : "function decimal_places(value) {\n    \n    if (value > 10) {\n        places = 0\n    } else {\n        places = 1\n    }\n    return places\n} \n\nvar tooltip = {\n    intersect: false,\n    mode: 'index',\n    position: 'nearest',\n    itemSort: function(a, b, data) {\n        //data.datasets[a.datasetIndex].label\n    },\n    callbacks: {\n\n        label: function(tooltipItem, data) {\n            if (isNaN(tooltipItem.yLabel)) {return}\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            places = decimal_places(tooltipItem.yLabel)\n            label += tooltipItem.yLabel\n                .toLocaleString('pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: places,\n                    minimumFractionDigits: places\n                });\n            return label;\n        },\n        \n        \n        footer: function(tooltipItem, data) {\n            try {\n                dif = 1-tooltipItem[1].yLabel/tooltipItem[0].yLabel\n                if (!isNaN(dif)) {\n                    return \"Perda: \"+dif.toLocaleString('pt-BR', { style: 'percent', maximumFractionDigits: 1, minimumFractionDigits: 1});\n                }\n            }\n            catch(err) {}\n        }\n    }\n}\n\nreturn tooltip\n\n\n\n\n",
              "roundToUnit" : true,
              "showContractedDemandCurves" : false,
              "showOverFlowInRed" : false,
              "sortLegendByLabel" : false,
              "roundingMethod" : "nearest",
              "showRightScale" : false,
              "showRightScale2" : false
            },
            "title" : "Geração (kWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Download geração projetada",
                "icon" : "cloud_download",
                "type" : "custom",
                "customFunction" : "// let $injector = widgetContext.$scope.$injector;\n// let customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nlet user = widgetContext.currentUser;\nlet userMail = user.sub\nlet url = 'https://solarhub.engecomp.io/openapi/report'\n\n\nvar stateParams = widgetContext.stateController.getStateParams();\n\nparams = {\n    use_case: \"energy_design_month_sum\",\n    //start_date: widgetContext.timeWindow.minTime,\n    //end_date: widgetContext.timeWindow.maxTime,\n    //entity_name: entityName,\n    entity_name: entityId.id,\n    //customer_name: stateParams.Curr_customer.entityName,\n    //input_localtime: false,\n    //output_localtime: true,\n    output_iso_8601: true,\n    template_url: \"https://solarhub.engecomp.io/res/template_energy_design.xlsx\",\n    render_pdf: 0,\n    api_version: 2\n    //email_to: userMail \n}\n\nsend(url+buildParams(params))\n\nfunction buildParams(params) {\n    var url = \"\"\n    for (var key in params) {\n        url = url+'&'+key+'='+params[key]\n    }\n    return url.replace(\"\\&\", \"?\")\n}\n\nfunction send(url) {\n    \n    debugger\n\n    var settings = {\n      \"url\": url,\n      \"method\": \"GET\",\n      \"timeout\": 0,\n      \"processData\": false,\n      //\"mimeType\": \"multipart/form-data\",\n      \"contentType\": false,\n      //\"data\": form,\n      \"headers\": {\n        \"token\": localStorage[\"jwt_token\"]\n      },\n      \"success\": function(data) {\n        if (data.link && data.link.length > 0) {\n            window.open(data.link,'_blank');\n        } \n        console.log(JSON.stringify(data))\n      },\n      \"error\": function(data) {\n        var message = 'Erro. Por favor contacte a Engecomp.'\n        widgetContext.showErrorToast(message, 3000)\n      }\n    };\n    \n    $.ajax(settings)\n\n}\n",
                "id" : "01e7f2cb-e8e7-19c5-bf72-29bea0ba2ffc"
              }, {
                "name" : "Upload geração projetada",
                "icon" : "cloud_upload",
                "type" : "customPretty",
                "customHtml" : "\t<form #editDeviceForm=\"ngForm\" [formGroup] = 'fileAdd'\n      (ngSubmit)=\"send()\" style=\"width: 650px;\" >\n  <mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>Importar projeção de geração</h2>\n    <span fxFlex></span>\n    <button mat-button mat-icon-button\n            (click)=\"cancel()\"\n            type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n\n    <mat-spinner [fxShow]=\"loading\" class=\"spinner_container\"></mat-spinner>\n\n    <div class=\"tb-container\">\n      <label class=\"action-title\">Arquivo Excel conforme acordado</label>\n        <div class=\"action-file-select-container \">\n              <div class=\"action-file-clear-container\">\n                <button mat-button mat-icon-button color=\"primary\"\n                        type=\"button\"\n                        (click)=\"clearFile()\"\n                        class=\"action-file-clear-btn\"\n                        matTooltip=\"{{ 'action.remove' | translate }}\"\n                        matTooltipPosition=\"above\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </div>\n            <div class=\"drop-area action-flow-drop\">\n                <label for=\"file-input\">Arraste o arquivo ou clique aqui para selecionar</label>\n                <input class=\"file-input\" type=\"file\" id=\"file-input\" formControlName = 'controlInputField' (change)=\"fileAdded($event.target.files)\">\n              </div>\n        </div>\n    </div>\n    <div class = 'file-info'>\n      <div *ngIf=\"!fileName\" class=\"cut-text\">Nenhum arquivo selecionado</div>\n      <div *ngIf=\"fileName\" class=\"cut-text\">{{ fileName }}</div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\">\n    <span fxFlex></span>\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button mat-raised-button color=\"primary\"\n            style=\"margin-right: 20px;\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || fileAdd.invalid\">\n      Import\n    </button>\n  </div>\n</form>",
                "customCss" : "\n.file-input{\n       display: none;\n}\n\n.action-flow-drop{\n     position: relative;\n    height: 100%;\n    overflow: hidden;\n    border: dashed 2px;\n    margin-left: 15px;\n}\n\n.action-flow-drop label{\n    display: flex;\n      flex-direction: column;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      font-size: 16px;\n      text-align: center;\n}\n\n.action-title{\n    display: block;\n    padding-bottom: 8px;\n    margin-left: 15px;\n    color: #8E8E8E;\n    font-size:12px;\n}\n\n.action-file-select-container{\n    position: relative;\n    width: 100%;\n    height: 100px;\n}\n\n.action-file-clear-container{\n    position: relative;\n    float: right;\n    width: 48px;\n    height: 100%;\n}\n\n.action-file-clear-btn{\n    top: 50%;\n    transform: translate(0%, -50%) !important;\n}\n\n.file-info{\n    margin-left: 15px;\n    margin-right: 15px;\n}\n\n.loading{\n    margin-top: 5px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    text-align: center;\n}\n\n.action-flow-drop label{\n    font-size: 25px;\n}\n\n.spinner_container {\n    border-radius: 10px;\n    height: 70px;\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    transform: translate(-50%,-50%);\n    width: 70px;\n    z-index: 3;\n    opacity: 0.5;\n}",
                "customFunction" : "\nlet $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenEditDeviceDialog();\ndebugger\n\n// search = {\n//     entityFilter: widgetContext.defaultSubscription.configuredDatasources[0].entityFilter,\n//     pageLink: {\n//         page: 0,\n//         pageSize: 1000,\n//         textSearch: null,\n//         dynamic: false\n//       }\n// }\n\nsearch = {\n    entityFilter: widgetContext.defaultSubscription.configuredDatasources[0].entityFilter,\n    pageLink: {\n        page: 0,\n        pageSize: 1000,\n        textSearch: null,\n        dynamic: false,\n        sortOrder: {\n          key: {\n            key: \"name\",\n            type: \"ENTITY_FIELD\"\n          },\n          direction: \"ASC\"\n        }\n      },\n    entityFields: [\n        {\n          key: \"name\",\n          type: \"ENTITY_FIELD\"\n        }\n      ],\n    latestValues: [\n        {\n          key: \"description\",\n          type: \"ATTRIBUTE\"\n        }\n      ]\n}\n\nfunction openEditDeviceDialog() {\n    customDialog.customDialog(htmlTemplate, EditDeviceDialogController).subscribe();\n}\n\nfunction EditDeviceDialogController(instance) {\n    let vm = instance;\n    vm.fileName = '';\n    vm.loading = false;\n    let url = 'https://solarhub.engecomp.io/openapi/file_upload'\n    let user = widgetContext.currentUser;\n    let userMail = user.sub\n    //let parent_id = widgetContext.stateController.getEntityId('Curr_Client')\n    \n     $( document ).ready(function() {\n        let form = $('.drop-area');\n        form.on('drag dragstart dragend dragover dragenter dragleave drop', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n        }).on('drop', function(e) {\n            vm.fileAdded(e.originalEvent.dataTransfer.files);\n        });\n    });\n    \n    vm.fileAdd = vm.fb.group({\n        file:[[], [vm.validators.required]],\n        controlInputField:''\n    });\n\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n    vm.clearFile = () => {\n        $(\".file-input\").value = \"\";\n        vm.fileName = '';\n        vm.fileAdd.patchValue({file: []})\n    }\n\n    vm.fileAdded = (files)=> {\n        for(let i = 0; i < files.length; i++){\n            let filetype=files[i].name.split('.').pop();\n            if (filetype === 'xls' || filetype === 'xlsx') {\n                let newFiles = vm.fileAdd.get('file').value\n                if(vm.fileAdd.get('file').value.length !== 0){\n                    vm.fileName += ' // ';\n                }\n                newFiles.push(files.item(i))\n                vm.fileAdd.patchValue({file: newFiles})\n                vm.fileName += files.item(i).name;\n            } else {\n               alert(files[i].name + \" tem extensão inválida\");\n            }\n        }\n        vm.fileAdd.get('controlInputField').patchValue('', {emitEvent: false});\n    }\n\n    vm.send = () =>\n    {\n        vm.loading = true;\n        \n        var form = new FormData();\n        form.append(\"file\", vm.fileAdd.get('file').value[0]);\n        form.append(\"file_type\", \"energy_design_month_sum\");\n        form.append(\"search\", JSON.stringify(search));\n        form.append(\"token\", localStorage[\"jwt_token\"])\n        form.append(\"email\", userMail)\n        \n        var settings = {\n          \"url\": url,\n          \"method\": \"POST\",\n          \"timeout\": 0,\n          \"processData\": false,\n          \"mimeType\": \"multipart/form-data\",\n          \"contentType\": false,\n          \"data\": form,\n          \"success\": function(data) {\n              vm.loading = false\n              widgetContext.showSuccessToast('Arquivo enviado com sucesso.', 3000)\n              vm.cancel();\n          },\n          \"error\": function(data) {\n            vm.loading = false\n            try {\n                response = JSON.parse(data.responseText)\n                if (response.hasOwnProperty('detail')) {\n                    message = response.detail\n                } else {\n                    message = 'Erro. Por favor contacte a Engecomp.'\n                }\n            } catch {\n                message = 'Erro. Por favor contacte a Engecomp.'\n            }\n\n            widgetContext.showErrorToast(message, 3000)\n            vm.cancel();\n          }\n        };\n        \n        $.ajax(settings)\n\n    }\n}\n\n\n",
                "customResources" : [ ],
                "id" : "a1c54acd-b14a-ee64-576a-4d72c5e73426"
              } ]
            }
          },
          "id" : "8a2c4f11-e719-445b-a60a-7d318819ae1c",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "bb7020ca-33cd-4695-bdbb-a6c89275dafe" : {
          "type" : "timeseries",
          "sizeX" : 27,
          "sizeY" : 16,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "Consumo",
                "color" : "#f44336",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.028088852031393108,
                "postFuncBody" : "return Math.round(value);",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_energia_creditada",
                "type" : "timeseries",
                "label" : "Créditos",
                "color" : "#04bd53",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.46766385383799847,
                "postFuncBody" : "return Math.round(value);",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_saldo_creditos",
                "type" : "timeseries",
                "label" : "Saldo de Créditos",
                "color" : "#ffc107",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "steppedLine" : "none"
                },
                "_hash" : 0.44353171969496286,
                "postFuncBody" : "return Math.round(value);",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            }, {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "0b4da799-9c06-9418-2fa4-bf9afe91cc2e",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "Active Energy_month_sum",
                "type" : "timeseries",
                "label" : "Medição Distribuidora",
                "color" : "#1b76b1",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : true,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.20465126591533633,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return Math.round(value);"
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1625108399000,
                  "endTimeMs" : 1656644399000
                },
                "interval" : 63244800
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 50000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : false,
              "timeWindows" : [ "12M" ],
              "showLeftScale" : true,
              "leftScaleTicks" : "callback = function(value, index, values) {\nreturn value.toLocaleString('pt-BR', {\nstyle: 'decimal',\nmaximumFractionDigits: 1,\nminimumSignificantDigits: 2\n});\n}\nticks = {\nbeginAtZero: true,\ncallback: callback\n}\nreturn ticks",
              "initialTimeWindow" : "12M",
              "timeWindowsUnits" : "month, month",
              "tooltipSettings" : "var tooltip = {\n    intersect: true,\n    mode: 'index',\n    position: 'nearest',\n    itemSort: function(a, b, data) {\n        //data.datasets[a.datasetIndex].label\n    },\n    callbacks: {\n\n        label: function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            var value = tooltipItem.yLabel || 0\n            label += value\n                .toLocaleString('pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n    }\n}\n\nreturn tooltip",
              "stacked" : false,
              "sortLegendByLabel" : false,
              "roundToUnit" : true
            },
            "title" : "Balanço Consumo x Créditos (kWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "bb7020ca-33cd-4695-bdbb-a6c89275dafe",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "0e308f04-f0a3-4421-a5b2-484bd184d0f3" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "0b4da799-9c06-9418-2fa4-bf9afe91cc2e",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "energy_average_year_rtu",
                "type" : "timeseries",
                "label" : "energy_average_year",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.17897345477796467,
                "postFuncBody" : "unit = \"kWh\";\nif (value >= 1000) {\n\tvalue /= 1000;\t// to MWh\n\tunit = \"MWh\";\n    if (value >= 1000) {\n    \tvalue /= 1000;\t// to GWh\n    \tunit = \"GWh\";\n    }\n}\n\ns = value.toLocaleString('pt-BR', { style: 'decimal', minimumSignificantDigits: 3, maximumSignificantDigits: 3});\nreturn s + \" \" + unit;\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807302,
                  "endTimeMs" : 1678878207302
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#ffffff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${energy_average_year}</div><br>\n        <footer>\n            <!-- <div class=\"additional-info\">${last_interval_ts}</div> -->\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Ger Anual (est.)",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "0e308f04-f0a3-4421-a5b2-484bd184d0f3",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "4258c837-f71a-45a7-9cfe-0163625b6670" : {
          "type" : "latest",
          "sizeX" : 27,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "UC",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "entitiesTitle" : "Unidades Consumidoras",
              "entityNameColumnTitle" : "Nome",
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "useRowStyleFunction" : true,
              "rowStyleFunction" : "if (entity['Contr Ativo'] == 'false') {\n    isActive = false\n} else {\n    isActive = true\n}\n\nif (!isActive) {\n    return  {background: \"#FAFAFA\"}\n}\n"
            },
            "title" : "Unidades Consumidoras",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "9394fcb0-5690-2125-55f9-6406f27c509d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_ts",
                "type" : "attribute",
                "label" : "Status",
                "color" : "#03a9f4",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "disabled",
                  "columnExportOption" : "never",
                  "cellContentFunction" : "var tolerancia = 40 * 24;  // 40 dias  \n\nvar x = parseInt(moment.utc().format('x'));\nvar horas = ((x - value) / 3600000);\nvar status = 0\n\n// calcula se faz mais de 40 dias\n// return \"Horas \" + horas + \"   X \"+ x; \n\nif (horas > tolerancia) { \n    status = 2;     // vermelho NotOk \n} else {\n    status = 1;         // verde OK\n}\n\nvar html = {\n    0: '<html>&nbsp;</html>',\n    1: '<html><img title=\"Online\" src=\"https://solarhub.engecomp.io/res/ok.png\" width=\"20\" height=\"20\"></html>',\n    2: '<html><img title=\"Offline\" src=\"https://solarhub.engecomp.io/res/nok.png\" width=\"20\" height=\"20\"></html>',\n    3: '<html><img title=\"Alarme\" src=\"https://solarhub.engecomp.io/res/attention6.png\" width=\"20\" height=\"20\"></html>'\n};\n\nreturn html[status];"
                },
                "_hash" : 0.33059804116206015,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.7899136876515169,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "Nome",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "columnWidth" : "15%",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.957563964157851,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "Cidade",
                "color" : "#f44336",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.9545775993492569,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_consumo_kwh",
                "type" : "attribute",
                "label" : "Consumo (kWh)",
                "color" : "#ffeb3b",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.9925892305654216,
                "postFuncBody" : "return Math.round(value);",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_energia_creditada",
                "type" : "attribute",
                "label" : "Créditos (kWh)",
                "color" : "#03a9f4",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.7596048653384102,
                "postFuncBody" : "return Math.round(value);",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_saldo_creditos",
                "type" : "attribute",
                "label" : "Saldo Créditos (kWh)",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.699167590840374,
                "postFuncBody" : "return Math.round(value);",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "perc_rateio",
                "type" : "attribute",
                "label" : "Rateio (%)",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "columnWidth" : "0px",
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 4, maximumFractionDigits: 4});"
                },
                "_hash" : 0.5816939079229972,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "tipo_ligacao",
                "type" : "attribute",
                "label" : "Ligação",
                "color" : "#3f51b5",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.08849975112367758,
                "postFuncBody" : "var dict = {\n    0: \"\",\n    1: \"Monofásica\",\n    2: \"Bifásica\",\n    3: \"Trifásica\"\n};\n\nreturn dict[Math.round(value)];",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "Classe",
                "color" : "#e91e63",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.7796008438510793,
                "postFuncBody" : "var dict = {\n    0:\"Não definida\",\n    1:\"A1\",\n    2:\"A2\",\n    3:\"A3\",\n    4:\"A3a\",\n    5:\"A4\",\n    6:\"AS\",\n    7:\"B1\",\n    8:\"B2\",\n    9:\"B3\"\n};\nreturn dict[value];",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_next_reading",
                "type" : "attribute",
                "label" : "Próx Leitura",
                "color" : "#ff9800",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return moment.unix(value).format('DD/MM/YYYY');"
                },
                "_hash" : 0.5916126032837665,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "active_contract",
                "type" : "attribute",
                "label" : "Contr Ativo",
                "color" : "#ff9800",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "if (value == \"false\") {\n    return \"Não\";\n}\n\nreturn \"Sim\";\n"
                },
                "_hash" : 0.14446838142437124,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : null
              } ]
            } ],
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "name" : "detalhe_UC",
                "icon" : "more_horiz",
                "type" : "openDashboardState",
                "targetDashboardStateId" : "solar_uc_popup",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_UC",
                "openInSeparateDialog" : true,
                "dialogTitle" : "",
                "dialogHideDashboardToolbar" : false,
                "dialogWidth" : null,
                "dialogHeight" : null,
                "openRightLayout" : false,
                "id" : "5947e007-5483-ba83-a228-fc0bf47bae3b"
              } ],
              "headerButton" : [ {
                "name" : "Tabela de dados",
                "icon" : "grid_on",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "geracao_rel_mensal_gd",
                "setEntityId" : false,
                "stateEntityParamName" : "Curr_Usina",
                "openRightLayout" : null,
                "id" : "7e24b693-c1b0-0098-46cf-0e768f5bf520"
              }, {
                "name" : "Adicionar UC",
                "icon" : "cloud_upload",
                "type" : "customPretty",
                "customHtml" : "<form #editDeviceForm=\"ngForm\" [formGroup] = 'fileAdd'\n      (ngSubmit)=\"send()\" style=\"width: 650px;\" >\n  <mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>Importar contas em PDF</h2>\n    <span fxFlex></span>\n    <button mat-button mat-icon-button\n            (click)=\"cancel()\"\n            type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div class = 'loading' *ngIf=\"loadingFiles\">\n        <div fxLayout = 'column'>\n            <mat-progress-spinner class=\"test\" mode = 'determinate' value = '{{progress}}' diameter=\"100\"></mat-progress-spinner>\n            <div>Aguarde...</div>\n        </div>\n    </div>\n    <div class=\"tb-container\">\n      <label class=\"action-title\">Arquivos PDF originais da concessionária (até 4MB cada)</label>\n        <div class=\"action-file-select-container \">\n              <div class=\"action-file-clear-container\">\n                <button mat-button mat-icon-button color=\"primary\"\n                        type=\"button\"\n                        (click)=\"clearFile()\"\n                        class=\"action-file-clear-btn\"\n                        matTooltip=\"{{ 'action.remove' | translate }}\"\n                        matTooltipPosition=\"above\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </div>\n            <div class=\"drop-area action-flow-drop\">\n                <label for=\"file-input\">Arraste o arquivo ou clique aqui para selecionar</label>\n                <input class=\"file-input\" type=\"file\" id=\"file-input\" formControlName = 'controlInputField' multiple (change)=\"fileAdded($event.target.files)\">\n              </div>\n        </div>\n    </div>\n    <div class = 'file-info'>\n      <div *ngIf=\"!fileName\" class=\"cut-text\">Nenhum arquivo selecionado</div>\n      <div *ngIf=\"fileName\" class=\"cut-text\">{{ fileName }}</div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\">\n    <span fxFlex></span>\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button mat-raised-button color=\"primary\"\n            style=\"margin-right: 20px;\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || fileAdd.invalid\">\n      Import\n    </button>\n  </div>\n</form>",
                "customCss" : "\n.file-input{\n       display: none;\n}\n\n.action-flow-drop{\n     position: relative;\n    height: 100%;\n    overflow: hidden;\n    border: dashed 2px;\n    margin-left: 15px;\n}\n\n.action-flow-drop label{\n    display: flex;\n      flex-direction: column;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      font-size: 16px;\n      text-align: center;\n}\n\n.action-title{\n    display: block;\n    padding-bottom: 8px;\n    margin-left: 15px;\n    color: #8E8E8E;\n    font-size:12px;\n}\n\n.action-file-select-container{\n    position: relative;\n    width: 100%;\n    height: 100px;\n}\n\n.action-file-clear-container{\n    position: relative;\n    float: right;\n    width: 48px;\n    height: 100%;\n}\n\n.action-file-clear-btn{\n    top: 50%;\n    transform: translate(0%, -50%) !important;\n}\n\n.file-info{\n    margin-left: 15px;\n    margin-right: 15px;\n}\n\n.loading{\n    margin-top: 5px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    text-align: center;\n}\n\n.action-flow-drop label{\n    font-size: 25px;\n}",
                "customFunction" : "\nlet $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenEditDeviceDialog();\n\nfunction openEditDeviceDialog() {\n    customDialog.customDialog(htmlTemplate, EditDeviceDialogController).subscribe();\n}\n\nfunction EditDeviceDialogController(instance) {\n    let vm = instance;\n    vm.fileName = '';\n    vm.progress = 0;\n    vm.loadingFiles = false;\n    let url = 'https://solarhub.engecomp.io/invoices'\n    let user = widgetContext.currentUser;\n    let userMail = user.sub\n    let parent_id = widgetContext.stateController.getEntityId('Curr_Usina')\n    \n     $( document ).ready(function() {\n        let form = $('.drop-area');\n        form.on('drag dragstart dragend dragover dragenter dragleave drop', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n        }).on('drop', function(e) {\n            vm.fileAdded(e.originalEvent.dataTransfer.files);\n        });\n    });\n    \n    vm.fileAdd = vm.fb.group({\n        file:[[], [vm.validators.required]],\n        controlInputField:''\n    });\n\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n    vm.clearFile = () => {\n        $(\".file-input\").value = \"\";\n        vm.fileName = '';\n        vm.fileAdd.patchValue({file: []})\n    }\n\n    vm.fileAdded = (files)=> {\n        for(let i = 0; i < files.length; i++){\n            let filetype=files[i].name.split('.').pop();\n            let filesize=files[i].size\n            if (filetype.toLowerCase() === 'pdf' && filesize < 1024*1024*4) {\n                let newFiles = vm.fileAdd.get('file').value\n                // if(vm.fileAdd.get('file').value.length !== 0){\n                //     vm.fileName += ' // ';\n                // }\n                newFiles.push(files.item(i))\n                vm.fileAdd.patchValue({file: newFiles})\n                if (i < 10) {\n                    vm.fileName += files.item(i).name+ ' // ';\n                }\n                if (i == 10) {\n                    vm.fileName += '... total de '+ files.length +' arquivos '\n                }\n            } else {\n                if (filetype.toLowerCase() !== 'pdf') {\n                    alert(files[i].name + \" tem extensão inválida\");\n                } else {\n                    alert(files[i].name + \" excede 4MB\");\n                }\n                \n            }\n        }\n        vm.fileAdd.get('controlInputField').patchValue('', {emitEvent: false});\n    }\n\n    vm.send = () =>\n    {\n        debugger\n        vm.loadingFiles = true;\n        for(let i=0; i < vm.fileAdd.get('file').value.length; i++) {\n            vm.progress = Math.round((i+1) / vm.fileAdd.get('file').value.length * 100)\n            let req = new XMLHttpRequest();\n            let formData = new FormData();\n            \n            var instructions = {\n                url: \"http://localhost:5000/gd\",\n                parent_id: widgetContext.stateController.getEntityId('Curr_Usina'),\n                tenant: 'bt',\n                user: userMail\n            };\n            \n            formData.append(\"invoice\", vm.fileAdd.get('file').value[i]);\n            formData.append(\"instructions\", JSON.stringify( instructions ))\n            fetch(url, {method: \"POST\", body: formData}).then(function(r) {\n                debugger\n            });\n\n        }\n        vm.loadingFiles = false;\n        vm.cancel();\n    }\n}\n\n\n",
                "customResources" : [ ],
                "id" : "ce1e8db7-eb73-7832-f5ae-46937eaa4c74"
              } ],
              "actionCellButton" : [ {
                "name" : "Editar dados",
                "icon" : "settings",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n        style=\"min-width: 800px; padding-top: 20px\">\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Nome</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.description\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Rateio (%)</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.perc_rateio\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Tipo de Ligação</mat-label>\n                <mat-select name=\"tipo_lig\"\n                    [(ngModel)]=\"attributes.tipo_ligacao\"\n                    ng-change=\"attributes.change()\">\n                    <mat-option [value]=\"0\">Não\n                        definida</mat-option>\n                    <mat-option [value]=\"1\">Monofásica\n                    </mat-option>\n                    <mat-option [value]=\"2\">Bifásica\n                    </mat-option>\n                    <mat-option [value]=\"3\">Trifásica\n                    </mat-option>\n                </mat-select><br>\n            </mat-form-field>\n\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex=\"66%\" fxLayoutFill>\n                <mat-label>Endereço</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.endereco\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Bairro</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.bairro\">\n            </mat-form-field>\n\n        </div>\n\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Cidade</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.cidade\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Estado</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.estado\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>CEP</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.cep\">\n            </mat-form-field>\n\n        </div>\n\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Latitude</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.latitude\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Longitude</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.longitude\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Classe de Tensão</mat-label>\n                <mat-select name=\"cl_tensao\"\n                    [(ngModel)]=\"attributes.classe_tensao\"\n                    ng-change=\"attributes.change()\">\n                    <mat-option [value]=\"0\">Não\n                        definida</mat-option>\n                    <mat-option [value]=\"1\">A1\n                    </mat-option>\n                    <mat-option [value]=\"2\">A2\n                    </mat-option>\n                    <mat-option [value]=\"3\">A3\n                    </mat-option>\n                    <mat-option [value]=\"4\">A3a\n                    </mat-option>\n                    <mat-option [value]=\"5\">A4\n                    </mat-option>\n                    <mat-option [value]=\"6\">AS\n                    </mat-option>\n                    <mat-option [value]=\"7\">B1\n                    </mat-option>\n                    <mat-option [value]=\"8\">B2\n                    </mat-option>\n                    <mat-option [value]=\"9\">B3\n                    </mat-option>\n                </mat-select><br>\n            </mat-form-field>\n\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>E-mail</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.email\">\n            </mat-form-field>\n\n        </div>\n\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\nlet deviceService = $injector.get(widgetContext.servicesMap.get('deviceService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Identificação UC'\n    vm.namedev = entityName\n    \n    deviceService.getDevice(entityId.id).subscribe((device) => {\n        vm.device = device;\n    })\n    \n    vm.diffAttrs=['description','perc_rateio','tipo_ligacao','endereco','bairro','cidade','estado','cep', 'latitude', 'longitude', 'email', 'classe_tensao']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n         })\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.device.label = vm.attributes.description;\n        deviceService.saveDevice(vm.device).subscribe(() =>{\n            widgetContext.dashboard.reload();\n        })\n        vm.cancel()\n    }\n\n}\n\n",
                "customResources" : [ ],
                "id" : "66663870-707c-1395-a8da-28031aa07126"
              } ]
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "4258c837-f71a-45a7-9cfe-0163625b6670",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "a4d723c6-06d5-492b-9111-36db39eb41a3" : {
          "type" : "latest",
          "sizeX" : 9,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pr_performance_ratio_month",
                "type" : "timeseries",
                "label" : "valor",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.4579071700983459,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function numberWithCommas(x, y, z) {\n    return x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z});\n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    return (value * 100).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1}) + \" %\";\n\n}\nreturn \" \";\n\n"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#ffffff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}",
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n        <footer>\n            <!-- <div class=\"additional-info\">${last_interval_ts}</div> -->\n        </footer>\n    </section>\n</div>"
            },
            "title" : "Performance Ratio",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "a4d723c6-06d5-492b-9111-36db39eb41a3",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "9b2ea5b4-55c7-6ed2-3363-6a89254adcb4" : {
          "type" : "timeseries",
          "sizeX" : 21,
          "sizeY" : 12,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pr_performance_ratio_month",
                "type" : "timeseries",
                "label" : "Mês",
                "color" : "#f44336",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return moment(value).format('MMM/YY')"
                },
                "_hash" : 0.7108486821336608,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return time;"
              }, {
                "name" : "pr_performance_ratio_month",
                "type" : "timeseries",
                "label" : "P Ratio",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1});"
                },
                "_hash" : 0.6911931828813271,
                "postFuncBody" : "return Math.round(value*1000)/10;",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "pr_capacity_factor_month",
                "type" : "timeseries",
                "label" : "F Capac",
                "color" : "#f44336",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 1, maximumFractionDigits: 1});"
                },
                "_hash" : 0.9181041493858442,
                "postFuncBody" : "return Math.round(value*1000)/10;",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 33696000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 20000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : false,
              "defaultPageSize" : 20,
              "enableSearch" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : false
            },
            "title" : "Performance Mensal",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "displayTimewindow" : false
          },
          "id" : "9b2ea5b4-55c7-6ed2-3363-6a89254adcb4",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "4df55daa-a875-4cb9-b62a-45f4d70498f9" : {
          "type" : "timeseries",
          "sizeX" : 33,
          "sizeY" : 29,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pm_wh_produced_delta_day_sum",
                "type" : "timeseries",
                "label" : "Geração",
                "color" : "#3c9ad8",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.9011362036376198,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "pm_wh_produced_delta_month_sum",
                "type" : "timeseries",
                "label" : "Geração",
                "color" : "#3c9ad8",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.7365019186620314,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "pr_irradiated_energy_day",
                "type" : "timeseries",
                "label" : "Irradiação",
                "color" : "#f7c820",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "right",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack1",
                  "aggUnit" : [ "day" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "right",
                  "axisTitle" : "Irradiação",
                  "axisTicksFormatter" : "callback = function(value, index, values) {\nreturn value.toLocaleString('pt-BR', {\nstyle: 'decimal',\nmaximumFractionDigits: 0,\nminimumSignificantDigits: 2\n});\n}\nticks = {\nbeginAtZero: true,\ncallback: callback\n}\nreturn ticks"
                },
                "_hash" : 0.08989326187283564,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return Math.round(value);"
              }, {
                "name" : "pr_irradiated_energy_month",
                "type" : "timeseries",
                "label" : "Irradiação",
                "color" : "#f7c820",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack1",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "right",
                  "yAxisID" : "right",
                  "axisTitle" : "Irradiação"
                },
                "_hash" : 0.08953861683575748,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return Math.round(value);"
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : true,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1659499199000,
                  "endTimeMs" : 1662091199000
                },
                "interval" : 63072000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : true,
              "axisLabel" : "Geração",
              "allowDrilldown" : true,
              "timeWindows" : [ "7D", "30D", "12M", "Ano" ],
              "initialTimeWindow" : "30D",
              "timeWindowsUnits" : "day,day,month,month",
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "leftScaleTicks" : "callback = function(value, index, values) {\nreturn value.toLocaleString('pt-BR', {\nstyle: 'decimal',\nmaximumFractionDigits: 0,\nminimumSignificantDigits: 2\n});\n}\nticks = {\nbeginAtZero: true,\ncallback: callback\n}\nreturn ticks",
              "stacked" : true,
              "tooltipSettings" : "var tooltip = {\n    intersect: false,\n    mode: 'index',\n    position: 'nearest',\n    itemSort: function(a, b, data) {\n        //data.datasets[a.datasetIndex].label\n    },\n    callbacks: {\n\n        label: function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            label += tooltipItem.yLabel\n                .toLocaleString('pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        },\n    }\n}\n\nreturn tooltip\n\n\n\n\n",
              "showRightScale" : true,
              "roundToUnit" : true,
              "rightScaleTicks" : "callback = function(value, index, values) {\nreturn value.toLocaleString('pt-BR', {\nstyle: 'decimal',\nmaximumFractionDigits: 0,\nminimumSignificantDigits: 2\n});\n}\nticks = {\nbeginAtZero: true,\ncallback: callback\n}\nreturn ticks",
              "showRightScale2" : false,
              "showContractedDemandCurves" : false,
              "showOverFlowInRed" : false,
              "sortLegendByLabel" : false,
              "roundingMethod" : "nearest"
            },
            "title" : "Geração x Irradiação",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "4df55daa-a875-4cb9-b62a-45f4d70498f9",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "1ce8fc80-466f-c35b-fe6c-078cb9009baf" : {
          "type" : "timeseries",
          "sizeX" : 21,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pm_wh_produced_delta_month_sum",
                "type" : "timeseries",
                "label" : "Mês",
                "color" : "#f44336",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var halfUnit = moment.duration(0.5, \"month\").asSeconds()\nvar adjusted_time = moment(value).add(halfUnit-1, \"second\").startOf(\"month\").unix()*1000\t\n\n\nreturn moment(adjusted_time).format('MMM/YY')"
                },
                "_hash" : 0.32532369746255463,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return time;"
              }, {
                "name" : "pm_wh_produced_delta_month_sum",
                "type" : "timeseries",
                "label" : "Geração",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.5060765840283641,
                "postFuncBody" : "",
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "pr_irradiated_energy_month",
                "type" : "timeseries",
                "label" : "Irradiação",
                "color" : "#ffc107",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (typeof value === \"undefined\") {return \"\"}\n\nreturn Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.40906585425165454,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "timewindowMs" : 33696000000,
                "quickInterval" : "CURRENT_DAY",
                "interval" : 1000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 20000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "enableSearch" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : false,
              "reserveSpaceForHiddenAction" : "true",
              "showMilliseconds" : false,
              "useEntityLabel" : false,
              "hideEmptyLines" : false,
              "useRowStyleFunction" : false
            },
            "title" : "Produção Mensal",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "displayTimewindow" : false
          },
          "id" : "1ce8fc80-466f-c35b-fe6c-078cb9009baf",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "48aa3368-dcfe-4705-8eb4-9d6b27ff9ada" : {
          "type" : "latest",
          "sizeX" : 27,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "UC",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "entitiesTitle" : "Unidades Consumidoras",
              "entityNameColumnTitle" : "Nome",
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "useRowStyleFunction" : true,
              "reserveSpaceForHiddenAction" : "false",
              "displayEntityLabel" : false,
              "rowStyleFunction" : "var style = {}\n\n//1st check if background style is needed\nif (entity['Contr Ativo'] == 'false') {\n    isActive = false\n} else {\n    isActive = true\n}\n\nif (!isActive) {\n    style.background = \"#FAFAFA\"\n}\n\n\n//then check if belongs to plant\nvar params = ctx.stateController.getStateParams();\nvar showInactiveUcs = ctx.showInactiveUcs || false;\n\nvar plant_id = params.Curr_Usina.entityId.id;\n\nvar relation_active_plant_id = entity.relation_active_plant_id || plant_id;\n\nif (relation_active_plant_id != plant_id) {\n    if (showInactiveUcs) {\n        style.fontWeight = 300\n    } else {\n        style.display = \"none\"\n    }\n}\n\nreturn style;\n"
            },
            "title" : "Unidades Consumidoras",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "9394fcb0-5690-2125-55f9-6406f27c509d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_ts",
                "type" : "attribute",
                "label" : "Status",
                "color" : "#03a9f4",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "\n\nvar alarme = 30 * 24;  // 10 dias\nvar tolerancia = 40 * 24;  // 40 dias\n\nvar x = parseInt(moment.utc().format('x'));\nvar horas = ((x - value) / 3600000);\nvar status \n\n// calcula se faz mais de 40 dias\n\nif (horas > tolerancia) { \n    status = 3;     // vermelho NotOk \n} else if (horas > alarme) { \n    status = 2;     // amarelo Já deveira ter chegado \n} else {\n    status = 1;         // verde OK\n}\n\nvar html = {\n    0: '<html>&nbsp;</html>',\n    1: '<html><img title=\"Fatura Ok\" src=\"https://solarhub.engecomp.io/res/ok.png\" width=\"20\" height=\"20\"></html>',\n    2: '<html><img title=\"Fatura Atrasada\" src=\"https://solarhub.engecomp.io/res/atrasada.png\" width=\"20\" height=\"20\"></html>',\n    3: '<html><img title=\"Fatura Muito Atrasada\" src=\"https://solarhub.engecomp.io/res/nok.png\" width=\"20\" height=\"20\"></html>'\n};\n\nreturn html[status];"
                },
                "_hash" : 0.33404247586538904,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.7899136876515169,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "Nome",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "columnWidth" : "15%"
                },
                "_hash" : 0.957563964157851,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "Cidade",
                "color" : "#f44336",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.9545775993492569,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_consumo_kwh",
                "type" : "attribute",
                "label" : "Consumo (kWh)",
                "color" : "#ffeb3b",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return Math.round(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.9925892305654216,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_energia_creditada",
                "type" : "attribute",
                "label" : "Créditos (kWh)",
                "color" : "#03a9f4",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return Math.round(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.7596048653384102,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_saldo_creditos",
                "type" : "attribute",
                "label" : "Saldo Créditos (kWh)",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.699167590840374,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "perc_rateio",
                "type" : "attribute",
                "label" : "Rateio (%)",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 4, maximumFractionDigits: 4});",
                  "columnWidth" : "0px"
                },
                "_hash" : 0.5816939079229972,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "tipo_ligacao",
                "type" : "attribute",
                "label" : "Ligação",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "var dict = {\n    0: \"\",\n    1: \"Monofásica\",\n    2: \"Bifásica\",\n    3: \"Trifásica\"\n};\n\nreturn dict[Math.round(value)];"
                },
                "_hash" : 0.08849975112367758,
                "postFuncBody" : "",
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "Classe",
                "color" : "#e91e63",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "var dict = {\n    0:\"Não definida\",\n    1:\"A1\",\n    2:\"A2\",\n    3:\"A3\",\n    4:\"A3a\",\n    5:\"A4\",\n    6:\"AS\",\n    7:\"B1\",\n    8:\"B2\",\n    9:\"B3\"\n};\nreturn dict[value];"
                },
                "_hash" : 0.7796008438510793,
                "postFuncBody" : "",
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_next_reading",
                "type" : "attribute",
                "label" : "Próx Leitura",
                "color" : "#03a9f4",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "columnWidth" : "0px",
                  "cellContentFunction" : "return moment.unix(value).format('DD/MM/YYYY');"
                },
                "_hash" : 0.6768615059921246,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : ""
              }, {
                "name" : "active_contract",
                "type" : "attribute",
                "label" : "Contr Ativo",
                "color" : "#ff9800",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "if (value == \"false\") {\n    return \"Não\";\n}\n\nreturn \"Sim\";\n"
                },
                "_hash" : 0.5360498006981262,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : ""
              }, {
                "name" : "relation_active_plant_id",
                "type" : "attribute",
                "label" : "relation_active_plant_id",
                "color" : "#673ab7",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "disabled",
                  "columnExportOption" : "never"
                },
                "_hash" : 0.40944330876628054,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "name" : "Detalhe da UC",
                "icon" : "more_horiz",
                "type" : "openDashboardState",
                "targetDashboardStateId" : "solar_uc_popup",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_UC",
                "openInSeparateDialog" : true,
                "dialogTitle" : "",
                "dialogHideDashboardToolbar" : true,
                "dialogWidth" : null,
                "dialogHeight" : null,
                "openRightLayout" : false,
                "id" : "7146e1c2-2fb4-19b8-a1f6-ee17a938b63e"
              } ],
              "headerButton" : [ {
                "id" : "7e24b693-c1b0-0098-46cf-0e768f5bf520",
                "name" : "Tabela de dados",
                "icon" : "grid_on",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "solar_rel_mensal",
                "setEntityId" : false,
                "stateEntityParamName" : "Curr_Usina"
              }, {
                "name" : "Adicionar UC",
                "icon" : "cloud_upload",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<form #editDeviceForm=\"ngForm\" [formGroup] = 'fileAdd'\n      (ngSubmit)=\"send()\" style=\"width: 650px;\" >\n  <mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>Importar contas em PDF</h2>\n    <span fxFlex></span>\n    <button mat-button mat-icon-button\n            (click)=\"cancel()\"\n            type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div class = 'loading' *ngIf=\"loadingFiles\">\n        <div fxLayout = 'column'>\n            <mat-progress-spinner class=\"test\" mode = 'determinate' value = '{{progress}}' diameter=\"100\"></mat-progress-spinner>\n            <div>Aguarde...</div>\n        </div>\n    </div>\n    <div class=\"tb-container\">\n        <mat-checkbox class=\"checkbox\" formControlName=\"sendMail\">\n            Notificar interessados por e-mail\n        </mat-checkbox>  \n        \n      <label class=\"action-title\">Arquivos PDF originais da concessionária</label>\n        <div class=\"action-file-select-container \">\n              <div class=\"action-file-clear-container\">\n                <button mat-button mat-icon-button color=\"primary\"\n                        type=\"button\"\n                        (click)=\"clearFile()\"\n                        class=\"action-file-clear-btn\"\n                        matTooltip=\"{{ 'action.remove' | translate }}\"\n                        matTooltipPosition=\"above\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </div>\n            <div class=\"drop-area action-flow-drop\">\n                <label for=\"file-input\">Arraste o arquivo ou clique aqui para selecionar</label>\n                <input class=\"file-input\" type=\"file\" id=\"file-input\" formControlName = 'controlInputField' multiple (change)=\"fileAdded($event.target.files)\">\n              </div>\n        </div>\n    </div>\n    <div class = 'file-info'>\n      <div *ngIf=\"!fileName\" class=\"cut-text\">Nenhum arquivo selecionado</div>\n      <div *ngIf=\"fileName\" class=\"cut-text\">{{ fileName }}</div>\n    </div>\n\n    <div mat-dialog-actions fxLayout=\"row\">\n    <span fxFlex></span>\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button mat-raised-button color=\"primary\"\n            style=\"margin-right: 20px;\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || fileAdd.invalid\">\n      Import\n    </button>\n  </div>\n</form>",
                "customCss" : "\n.file-input{\n       display: none;\n}\n\n.action-flow-drop{\n     position: relative;\n    height: 100%;\n    overflow: hidden;\n    border: dashed 2px;\n    margin-left: 15px;\n}\n\n.action-flow-drop label{\n    display: flex;\n      flex-direction: column;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      font-size: 16px;\n      text-align: center;\n}\n\n.action-title{\n    display: block;\n    padding-bottom: 8px;\n    margin-left: 15px;\n    color: #8E8E8E;\n    font-size:12px;\n}\n\n.action-file-select-container{\n    position: relative;\n    width: 100%;\n    height: 100px;\n}\n\n.action-file-clear-container{\n    position: relative;\n    float: right;\n    width: 48px;\n    height: 100%;\n}\n\n.action-file-clear-btn{\n    top: 50%;\n    transform: translate(0%, -50%) !important;\n}\n\n.file-info{\n    margin-left: 15px;\n    margin-right: 15px;\n}\n\n.checkbox{\n    margin-left: 15px;\n    margin-right: 15px;\n}\n\n.loading{\n    margin-top: 5px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    text-align: center;\n}\n\n.action-flow-drop label{\n    font-size: 25px;\n}",
                "customFunction" : "\nlet $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet tenant = 'bt'\n\nopenEditDeviceDialog();\n\nfunction openEditDeviceDialog() {\n    customDialog.customDialog(htmlTemplate, EditDeviceDialogController).subscribe();\n}\n\n\nfunction EditDeviceDialogController(instance) {\n    let vm = instance;\n    vm.fileName = '';\n    vm.progress = 0;\n    vm.loadingFiles = false;\n\n    let url = 'https://solarhub.engecomp.io/invoices'\n    let user = widgetContext.currentUser;\n    let userMail = user.sub\n    let parent_id = widgetContext.stateController.getEntityId('Curr_Usina')\n    let customer_id = widgetContext.stateController.getEntityId('Curr_customer')\n\n    widgetContext.attributeService.getEntityAttributes(parent_id,'SERVER_SCOPE',['tenant']).subscribe(r => {\n        if (r.length > 0) {\n            tenant = r[0].value\n        } else {\n            widgetContext.attributeService.getEntityAttributes(customer_id,'SERVER_SCOPE',['tenant']).subscribe(r => {\n                if (r.length > 0) {\n                    tenant = r[0].value\n                }\n            })                \n        }\n    })\n    \n\n\n     $( document ).ready(function() {\n        let form = $('.drop-area');\n        form.on('drag dragstart dragend dragover dragenter dragleave drop', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n        }).on('drop', function(e) {\n            vm.fileAdded(e.originalEvent.dataTransfer.files);\n        });\n    });\n    \n    vm.fileAdd = vm.fb.group({\n        file:[[], [vm.validators.required]],\n        controlInputField:'',\n        sendMail: true\n    });\n\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n    vm.clearFile = () => {\n        $(\".file-input\").value = \"\";\n        vm.fileName = '';\n        vm.fileAdd.patchValue({file: []})\n    }\n\n    vm.fileAdded = (files)=> {\n        for(let i = 0; i < files.length; i++){\n            let filetype=files[i].name.split('.').pop();\n            let filesize=files[i].size\n            if (filetype.toLowerCase() === 'pdf' && filesize < 1024*1024*4) {\n                let newFiles = vm.fileAdd.get('file').value\n\n                newFiles.push(files.item(i))\n                \n                vm.fileAdd.patchValue({file: newFiles})\n                if (i < 10) {\n                    vm.fileName += files.item(i).name+ ' // ';\n                }\n                if (i == 10) {\n                    vm.fileName += '... total de '+ files.length +' arquivos '\n                }\n\n            } else {\n                if (filetype.toLowerCase() !== 'pdf') {\n                    alert(files[i].name + \" tem extensão inválida\");\n                } else {\n                    alert(files[i].name + \" excede 4MB\");\n                }\n                \n            }\n        }\n        vm.fileAdd.get('controlInputField').patchValue('', {emitEvent: false});\n    }\n\n\n    vm.send = () =>\n    {\n        var total_files = vm.fileAdd.get('file').value.length\n        var promises = []\n        var completed = 0\n        for(let i=0; i < total_files; i++) {\n            vm.progress = Math.round((i+1) / vm.fileAdd.get('file').value.length * 100)\n            let req = new XMLHttpRequest();\n            let formData = new FormData();\n            \n            var instructions = {\n                url: \"http://localhost:5000/gd\",\n                parent_id: widgetContext.stateController.getEntityId('Curr_Usina'),\n                tenant: tenant,\n                user: userMail,\n                sendMail: vm.fileAdd.controls.sendMail.value\n            };\n            \n            if (total_files > 120) {\n                instructions.priority = 5\n            } else if (total_files > 30) {\n                instructions.priority = 3\n            }         \n            \n            formData.append(\"invoice\", vm.fileAdd.get('file').value[i]);\n            formData.append(\"instructions\", JSON.stringify( instructions ))\n            promises.push(\n                fetch(url, {method: \"POST\", body: formData}).then(function (r) {\n                    ++completed\n                    if (completed % 5 == 0) {\n                        widgetContext.showSuccessToast(completed+' de '+total_files+' arquivos carregados. Em andamento.', 3000)\n                    }\n                })\n                )\n        }\n\n        Promise.all(promises).then(function (responses) {\n            widgetContext.showSuccessToast(total_files+' arquivos carregados com sucesso', 3000)\n        });\n        widgetContext.showSuccessToast('Carregando arquivos. Mantenha esta tela aberta', 3000)\n        vm.cancel();\n    }    \n    \n    \n    \n}\n\n\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "ce1e8db7-eb73-7832-f5ae-46937eaa4c74"
              }, {
                "name" : "Relatório de Faturas",
                "icon" : "arrow_downward",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n     <div fxLayout=\"column\" fxLayout.gt-sm=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"20px\">\n         \n\n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"0\" fxFlexOrder.gt-sm=\"0\">\n          <mat-label>Data Inicial</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"sdStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n        \n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"1\" fxFlexOrder.gt-sm=\"1\">\n          <mat-label>Data Final</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"edStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n\n    </div>\n    \n    <div [fxShow]=\"!OK\" fxLayoutGap=\"20px\" style=\"color: red; font-weight: bold;\">ATENÇÃO: {{ errorMessage }}</div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nvar user = widgetContext.currentUser;\n\n\nvar url = 'https://solarhub.engecomp.io/be/uc_data_export/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\n\npayload = {\n    email: user.sub,\n    token: localStorage[\"jwt_token\"]\n}\n\n//deepcopy\nvar filter = JSON.parse(JSON.stringify(widgetContext.defaultSubscription.configuredDatasources[0].entityFilter))\n\npayload.search = {\n    entityFilter: filter,\n    pageLink: {\n        page: 0,\n        pageSize: 1000,\n        textSearch: null,\n        dynamic: false,\n        sortOrder: {\n          key: {\n            key: \"name\",\n            type: \"ENTITY_FIELD\"\n          },\n          direction: \"ASC\"\n        }\n      },\n    entityFields: [\n        {\n          key: \"name\",\n          type: \"ENTITY_FIELD\"\n        }\n      ],\n    latestValues: [\n        {\n          key: \"description\",\n          type: \"ATTRIBUTE\"\n        }\n      ]\n}\n\npayload.search.entityFilter.maxLevel = 9\npayload.search.entityFilter.type = \"deviceSearchQuery\"\npayload.search.entityFilter.deviceTypes = [\"UC\"]\n\nshowInfoDialog()\n\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    \n    let vm = instance;   \n    vm.OK = true\n\n    vm.importTitle = 'Exportação de dados - FATURAS'\n    \n    vm.ed = moment.utc().startOf('day').toDate();\n    vm.sd = moment(vm.ed).subtract(1, 'month').toDate();\n\n    vm.sdStr = moment(vm.sd).format('DD/MM/YYYY');\n    vm.edStr = moment(vm.ed).format('DD/MM/YYYY');\n    \n    vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY')\n    vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY')\n    \n    \n    vm.change = function() {\n\n        vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY HH:mm')\n        vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY HH:mm')\n        \n        var days = moment(vm.ed).diff(moment(vm.sd),\n            'days');\n            \n        if (!vm.sd._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data inicial inválida\"\n            return\n        }\n        \n        if (!vm.ed._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data final inválida\"\n            return\n        }\n\n        //check start date greater than end date\n        if (days < 0) {\n            vm.OK = false;\n            vm.errorMessage =\n                \"Data inicial maior que data final\";\n            return;\n        }\n\n        vm.OK = true;\n    }\n\n    \n    vm.change()\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n\n        let formData = new FormData();\n        \n        sd = moment(vm.sd).format('YYYY-MM-DD');\n        ed = moment(vm.ed).format('YYYY-MM-DD');\n        \n        payload.start_date = sd\n        payload.end_date = ed\n        payload.getnow = true\n        payload.use_case = \"gd_bt\"\n        \n        formData.append(\"payload\", JSON.stringify( payload ))\n        console.log(JSON.stringify( payload ))\n\n        var fetchParams = { method: \"POST\", body: formData }\n        \n        fetch(url, fetchParams).then(function(r) {\n            if (r.status == 200) {\n\n                return r.json().then(\n                    function(data) {\n                        if (data.link && data.link.length > 0) {\n                            window.open(data.link,'_blank');\n                        }\n                        else {\n                            widgetContext.showSuccessToast('Sucesso. Um link será enviado para o seu e-mail', 3000)\n                        }\n                    })\n            }\n            else {\n                widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n            }\n            \n        })\n        .catch(function(error) {\n            widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n        });\n  \n        vm.cancel();  \n        \n    }\n}\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "af71f2e8-f754-60bd-31db-b3b3f0e70adf"
              }, {
                "name" : "Ocultar inativas",
                "icon" : "visibility_off",
                "useShowWidgetActionFunction" : true,
                "showWidgetActionFunction" : "var show = widgetContext.showInactiveUcs || false;\nvar customerId = widgetContext.currentUser.customerId;\nvar authority = widgetContext.currentUser.authority;\nvar authorization = false\n\nif (customerId === 'c976b980-fca4-11ec-a281-9f248213a189' || authority.includes(\"TENANT\")) {\n    // Delta\n    authorization = true;\n}\n\nreturn show && authorization;\n",
                "type" : "custom",
                "customFunction" : "widgetContext.showInactiveUcs = false\nwidgetContext.updateWidgetParams()\nwidgetContext.defaultSubscription.callbacks.onDataUpdated()",
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "7adc026f-2448-8bcf-2ddf-a4d758bbbc39"
              }, {
                "name" : "Mostrar inativas",
                "icon" : "visibility",
                "useShowWidgetActionFunction" : true,
                "showWidgetActionFunction" : "var show = widgetContext.showInactiveUcs || false;\nvar customerId = widgetContext.currentUser.customerId;\nvar authority = widgetContext.currentUser.authority;\nvar authorization = false\n\nif (customerId === 'c976b980-fca4-11ec-a281-9f248213a189' || authority.includes(\"TENANT\")) {\n    // Delta\n    authorization = true;\n}\n\nreturn !show && authorization;\n",
                "type" : "custom",
                "customFunction" : "widgetContext.showInactiveUcs = true\nwidgetContext.updateWidgetParams()\nwidgetContext.defaultSubscription.callbacks.onDataUpdated()",
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "d1fce49c-5eee-68f2-a6a9-c1f209b78b20"
              } ],
              "actionCellButton" : [ {
                "name" : "Editar dados",
                "icon" : "settings",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <mat-label>&nbsp;<br>Unidade Consumidora: {{attributes.UC}}<br>&nbsp;\n    </mat-label>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n        style=\"min-width: 800px; padding-top: 20px\">\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Nome</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.description\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Rateio (%)</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.perc_rateio\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Tipo de Ligação</mat-label>\n                <mat-select name=\"tipo_lig\"\n                    [(ngModel)]=\"attributes.tipo_ligacao\"\n                    ng-change=\"attributes.change()\">\n                    <mat-option [value]=\"0\">Não\n                        definida</mat-option>\n                    <mat-option [value]=\"1\">Monofásica\n                    </mat-option>\n                    <mat-option [value]=\"2\">Bifásica\n                    </mat-option>\n                    <mat-option [value]=\"3\">Trifásica\n                    </mat-option>\n                </mat-select><br>\n            </mat-form-field>\n\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex=\"66%\" fxLayoutFill>\n                <mat-label>Endereço</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.endereco\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Bairro</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.bairro\">\n            </mat-form-field>\n\n        </div>\n\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Cidade</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.cidade\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Estado</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.estado\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>CEP</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.cep\">\n            </mat-form-field>\n\n        </div>\n\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Latitude</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.latitude\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Longitude</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.longitude\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Classe de Tensão</mat-label>\n                <mat-select name=\"cl_tensao\"\n                    [(ngModel)]=\"attributes.classe_tensao\"\n                    ng-change=\"attributes.change()\">\n                    <mat-option [value]=\"0\">Não\n                        definida</mat-option>\n                    <mat-option [value]=\"1\">A1\n                    </mat-option>\n                    <mat-option [value]=\"2\">A2\n                    </mat-option>\n                    <mat-option [value]=\"3\">A3\n                    </mat-option>\n                    <mat-option [value]=\"4\">A3a\n                    </mat-option>\n                    <mat-option [value]=\"5\">A4\n                    </mat-option>\n                    <mat-option [value]=\"6\">AS\n                    </mat-option>\n                    <mat-option [value]=\"7\">B1\n                    </mat-option>\n                    <mat-option [value]=\"8\">B2\n                    </mat-option>\n                    <mat-option [value]=\"9\">B3\n                    </mat-option>\n                </mat-select><br>\n            </mat-form-field>\n\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex=\"33%\" fxLayoutFill>\n                <mat-label>CNPJ</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.cnpj\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>E-mail</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.email\">\n            </mat-form-field>\n\n        </div>\n\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\nlet deviceService = $injector.get(widgetContext.servicesMap.get('deviceService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Configuração da Unidade Consumidora'\n    vm.namedev = entityName\n    \n    deviceService.getDevice(entityId.id).subscribe((device) => {\n        vm.device = device;\n    })\n    \n    vm.diffAttrs=['description','perc_rateio','tipo_ligacao','endereco','bairro','cidade','estado','cep', 'latitude', 'longitude', 'email', 'classe_tensao', 'UC', 'cnpj']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n         })\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        debugger\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.device.label = vm.attributes.description;\n        deviceService.saveDevice(vm.device).subscribe(() =>{\n            widgetContext.dashboard.reload();\n        })\n        vm.cancel()\n    }\n\n}\n\n",
                "customResources" : [ ],
                "id" : "66663870-707c-1395-a8da-28031aa07126"
              }, {
                "name" : "Credenciais",
                "icon" : "key",
                "useShowWidgetActionFunction" : true,
                "showWidgetActionFunction" : "return widgetContext.currentUser.authority === 'TENANT_ADMIN';",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <mat-label>&nbsp;<br>Unidade Consumidora: {{attributes.UC}}<br>&nbsp;\n    </mat-label>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n        style=\"min-width: 800px; padding-top: 20px\">\n\n\n            <mat-form-field fxFlex=\"50%\" fxLayoutFill>\n                <mat-label>Usuário</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.site_user\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Senha</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.site_pwd\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Tenant</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.tenant\">\n            </mat-form-field>\n\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\nlet deviceService = $injector.get(widgetContext.servicesMap.get('deviceService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Credenciais da Unidade Consumidora'\n    vm.namedev = entityName\n    \n    deviceService.getDevice(entityId.id).subscribe((device) => {\n        vm.device = device;\n    })\n    \n    vm.diffAttrs=['site_user','site_pwd', 'tenant', 'UC']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n         })\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n\n        vm.cancel()\n    }\n\n}\n\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "c8e8588c-dafc-c2d8-9619-a5d39d652e2e"
              }, {
                "name" : "Mover para outra usina",
                "icon" : "swap_vert_circle",
                "useShowWidgetActionFunction" : true,
                "showWidgetActionFunction" : "var customerId = widgetContext.currentUser.customerId;\nvar authority = widgetContext.currentUser.authority;\nvar result = false;\n\nif (customerId === 'c976b980-fca4-11ec-a281-9f248213a189' || authority.includes(\"TENANT\")) {\n    //somente delta ou tenant\n    result = true;\n}\n\nreturn result;",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n        style=\"min-width: 800px; padding: 20px\">\n\n        <div [fxShow]=\"warning\" style=\"color: red; font-weight: bold;\">{{ errorMessage }}</div>\n        \n        <div class=\"relations-list old-relations\">\n        <div class=\"mat-body-1\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" style=\"padding-bottom: 10px; color: rgba(0,0,0,0.57);\">\n            Usinas\n              <button mat-icon-button color=\"primary\" (click)=\"editContract(row,'new')\" title=\"Novo\"><mat-icon>add_circle</mat-icon></button>\n            </div>\n\n            <mat-table [dataSource]=\"relations\" class=\"mat-elevation-z8\">\n\n                <ng-container matColumnDef=\"warn\">\n                  <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                    <mat-cell *matCellDef=\"let relation\" style=\"width:10%\">\n                      <mat-icon title=\"Lacuna\" [fxShow]=\"relation.gap\" color=\"yellow\">warning</mat-icon>\n                    </mat-cell>\n                </ng-container>   \n            \n                <ng-container matColumnDef=\"description\">\n                    <mat-header-cell *matHeaderCellDef> Usina </mat-header-cell>\n                    <mat-cell *matCellDef=\"let relation\" style=\"width:50%\">{{ relation.description }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"start_date\">\n                    <mat-header-cell *matHeaderCellDef> De </mat-header-cell>\n                    <mat-cell *matCellDef=\"let relation\" style=\"width:15%\">{{ relation.start_date }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"end_date\">\n                    <mat-header-cell *matHeaderCellDef> Até </mat-header-cell>\n                    <mat-cell *matCellDef=\"let relation\" style=\"width:15%\">{{ relation.end_date }}</mat-cell>\n                </ng-container>\n            \n                <ng-container matColumnDef=\"del\">\n                  <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                    <mat-cell *matCellDef=\"let relation\" style=\"width:10%\">\n                      <button mat-icon-button color=\"primary\" (click)=\"delContract(relation)\" title=\"Apagar\"><mat-icon>delete</mat-icon></button>\n                    </mat-cell>\n                </ng-container>            \n\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n            <mat-row *matRowDef=\"let relation; columns: displayedColumns;\" [ngStyle]=\"relation.active ? {'background-color': 'gainsboro'} : {}\"></mat-row>\n            </mat-table>\n\n        </div>        \n        \n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Fechar\n    </button>\n</div>",
                "customCss" : "body {color: purple; background-color: #d8da3d }\n\ninput {\n\tposition: relative;\n\twidth: 150px; height: 25px;\n\tcolor: white;\n}\n\n.spinner_container {\n    border-radius: 10px;\n    height: 70px;\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    transform: translate(-50%,-50%);\n    width: 70px;\n    z-index: 3;\n    opacity: 0.5;\n}",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nconst customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nconst attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\nconst entityService = $injector.get(widgetContext.servicesMap.get('entityService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nvar user = widgetContext.currentUser;\nvar userMail = user.sub;\nvar token = localStorage[\"jwt_token\"]\nvar UC = entityName\n\nvar state = widgetContext.stateController.getStateParams()\n\nvar raw_UC = additionalParams.entity.UC\nvar UC_label = additionalParams.entity.Nome\n\nconst query = {\n    entityFilter: {\n        type: \"assetSearchQuery\",\n        resolveMultiple: true,\n        rootStateEntity: true,\n        rootEntity: {id: state.Curr_customer.entityId.id, entityType: state.Curr_customer.entityId.entityType},\n        direction: \"FROM\",\n        maxLevel: 9,\n        fetchLastLevelOnly: false,\n        relationType: null,\n        assetTypes: [\"usina\", \"node\"]\n    },\n    \"pageLink\": {\n        \"page\": 0,\n        \"pageSize\": 1000,\n        \"textSearch\": null,\n        \"dynamic\": false,\n        \"sortOrder\":\n        {\n            \"key\":\n            {\n                \"key\": \"label\",\n                \"type\": \"ENTITY_FIELD\"\n            },\n            \"direction\": \"ASC\"\n        }\n    },\n    entityFields: [{key: \"label\", type: \"ENTITY_FIELD\"}],\n    latestValues: []\n};\n\nentityService.findEntityDataByQuery(query).subscribe((response) => {\n    widgetContext.usinas = response.data\n})\n\nshowInfoDialog()\n\nfunction API(type, row={}){\n    var message_err = \"\"\n    var message_OK = \"\"\n    var url = \"\"\n\n    var site = row.id\n    var start_date = row.start_date\n    var end_date = row.end_date || \"0\"\n    url = `https://solarhub.engecomp.io/apim/ucs/relation/${UC}/to/${site}/${start_date}/${end_date}`\n\n    switch(type) {\n        case 'GET':\n            url = `https://solarhub.engecomp.io/apim/ucs/relation/${UC}`\n            break;\n        case 'DELETE':\n            message_err = \"Erro ao apagar linha. Por favor contacte a Engecomp\"\n            message_OK = \"Linha apagada com sucesso\"\n            break;\n        case 'POST':\n            message_err = \"Erro ao incluir linha. Por favor contacte a Engecomp\"\n            message_OK = \"Linha incluída/alterada com sucesso\"\n            break;\n    }\n    \n    \n    return new Promise((resolve, reject) => {\n        $.ajax({\n        url: url,\n        type: type,\n        headers: {'Accept': 'application/json', 'Content-Type': 'application/json', \"api-token\": \"tang\"},\n        success: function (data) {\n            if (message_OK) {\n                widgetContext.showSuccessToast(message_OK, 3000)\n            }\n            resolve(data)\n        },\n        error: function (error) {\n            if (message_err) {\n\n                if (error.status != 500) {\n                    message_err = \"Erro: \"+JSON.parse(error.responseText).detail\n                }\n                widgetContext.showErrorToast(message_err, 5000)\n            }\n            reject(error)\n        }\n        });\n    })\n\n}\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController_edit(instance) {\n    let vm = instance;    \n    let formData = new FormData();\n    vm.processing = false\n    vm.usinas = widgetContext.usinas\n    \n    vm.importTitle = \"Editar relação\"\n    if (widgetContext.currentAction == 'new'){\n        vm.importTitle = 'Nova relação'    \n    }\n    \n\n    vm.row = {start_date: null, end_date: null, id: null}\n    if (widgetContext.currentRow) {\n        //deep clone\n        vm.row = JSON.parse(JSON.stringify(widgetContext.currentRow));\n        vm.row.start_date = moment.utc(vm.row.start_date, 'YYYY-MM-DD').format('DD/MM/YYYY')\n        vm.row.end_date = moment.utc(vm.row.end_date, 'YYYY-MM-DD').format('DD/MM/YYYY')\n    }\n    vm.action = widgetContext.currentAction\n\n    vm.change = function() {\n        vm.warning = false;\n\n        vm.start_date = moment.utc(vm.row.start_date, 'DD/MM/YYYY HH:mm');\n        vm.end_date = moment.utc(vm.row.end_date, 'DD/MM/YYYY HH:mm');\n\n        if (!vm.start_date._isValid) {\n            vm.warning = true\n            vm.errorMessage = \"ATENÇÃO: data inicial inválida\"\n            return\n        }\n        \n        if (vm.row.end_date != null && !vm.end_date._isValid) {\n            vm.warning = true\n            vm.errorMessage = \"ATENÇÃO: data final inválida\"\n            return\n        }  \n        \n        if (vm.row.id === null) {\n            vm.warning = true\n            vm.errorMessage = \"ATENÇÃO: escolha uma usina\"\n            return\n        } \n        \n    }\n    \n    vm.cancel = function() {\n        vm.row = widgetContext.currentRow\n        vm.dialogRef.close(null);\n    }\n    \n    vm.send = function() {\n        vm.processing = true\n        vm.row.start_date = moment.utc(vm.row.start_date, 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD')\n        if (vm.row.end_date != null) {\n            vm.row.end_date = moment.utc(vm.row.end_date, 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD')        \n        }\n        API('POST', vm.row).then(function(result) {\n            vm.processing = false\n            vm.relations = result\n            vm.dialogRef.close(result);\n        }).catch(function(error){\n            vm.processing = false\n        });\n    }\n    \n    vm.change()\n} \n\n\n\nfunction InfoDialogController_del(instance) {\n    let vm = instance;    \n    let formData = new FormData();\n    vm.importTitle = 'Apagar relação'\n    vm.row = widgetContext.currentRow\n    vm.processing = false\n    \n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n    \n    vm.send = function() {\n        vm.processing = true\n        API('DELETE', vm.row).then(function(result) {\n            vm.processing = false\n            vm.relations = result\n            vm.dialogRef.close(result);\n        }).catch(function(error){\n            vm.processing = false\n        });        \n    }\n}  \n\n\nfunction sortByValue(jsObj){\n    var sortedArray = [];\n    for(var i in jsObj)\n    {\n        sortedArray.push([jsObj[i], i]);\n    }\n    return sortedArray.sort();\n}\n\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    let formData = new FormData();\n    vm.attributes = {}\n    //vm.OK = true\n    vm.importTitle = 'Editar UC '+raw_UC+' - '+UC_label\n    vm.displayedColumns = ['warn','description','start_date','end_date','del'];\n\n    vm.OK = false\n    vm.warning = false\n\n    API('GET').then((data) => {\n        vm.relations = data\n    })\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n    \n    vm.editContract = function(row, action) {\n        widgetContext.currentRow = row\n        widgetContext.currentAction = action\n\n        template = `\n        <mat-toolbar fxLayout=\"row\" color=\"primary\">\n            <h2>{{ importTitle }}</h2>\n        </mat-toolbar>\n        <div mat-dialog-content>\n                <mat-spinner class=\"spinner_container\" [fxShow]=\"processing\"></mat-spinner>\n                <div fxLayout=\"column\" fxLayoutGap=\"15px\" fxLayoutAlign=\"space-around left\"\n                    style=\"min-width: 700px; padding: 20px\">\n                    \n                    <mat-form-field fxFlex class=\"mat-block\">\n                        <mat-label>Vigência de</mat-label>\n                        <input matInput required type=\"text\"\n                            [(ngModel)]=\"row.start_date\" (ngModelChange)=\"change()\"> \n                    </mat-form-field>\n                    <mat-form-field fxFlex class=\"mat-block\">\n                        <mat-label>Vigência até (deixar vazio se indefinida)</mat-label>\n                        <input matInput type=\"text\"\n                            [(ngModel)]=\"row.end_date\" (ngModelChange)=\"change()\"> \n                    </mat-form-field>       \n\n                    <mat-form-field fxFlex class=\"mat-block\">\n                        <mat-label>Usina</mat-label>\n                        <mat-select required \n                            [(ngModel)]=\"row.id\" (ngModelChange)=\"change()\">\n                            <mat-option\n                                *ngFor=\"let x of usinas\"\n                                [value]=\"x.entityId.id\">\n                                {{ x.latest.ENTITY_FIELD.label.value }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                </div>\n                <div [fxShow]=\"warning\" style=\"color: red; font-weight: bold;\">{{ errorMessage }}</div>\n        </div>\n        <div mat-dialog-actions fxLayout=\"row\"\n            fxLayoutAlign=\"end center\">\n            <button mat-button mat-raised-button color=\"primary\"\n                (click)=\"send()\" type=\"submit\"\n                [disabled]=\"(isLoading$ | async) || warning\">\n                Salvar\n            </button>\n            <button mat-button color=\"primary\" type=\"button\"\n                [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n                cdkFocusInitial>\n                Cancelar\n            </button>\n        </div>    \n        `\n        \n        customDialog.customDialog(template, InfoDialogController_edit).subscribe((data) => {\n            if (data) {\n                vm.relations = data\n            }\n        });\n    }\n\n    \n    vm.delContract = function(row) {\n        widgetContext.currentRow = row\n        template = `\n        <mat-toolbar fxLayout=\"row\" color=\"primary\">\n            <h2>{{ importTitle }}</h2>\n        </mat-toolbar>\n        <div mat-dialog-content>\n                <mat-spinner class=\"spinner_container\" [fxShow]=\"processing\"></mat-spinner>\n                <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n                    style=\"min-width: 400px; padding: 20px\">\n                    \n                    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\" fxLayoutGap=\"20px\">\n                        Tem certeza de que deseja apagar esta relação? Os dados históricos poderão ser afetados.\n                    </div>   \n                    \n                </div>\n        </div>\n        <div mat-dialog-actions fxLayout=\"row\"\n            fxLayoutAlign=\"end center\">\n            <button mat-button mat-raised-button color=\"primary\"\n                (click)=\"send()\" type=\"submit\"\n                [disabled]=\"(isLoading$ | async) || warning\">\n                OK\n            </button>\n            <button mat-button color=\"primary\" type=\"button\"\n                [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n                cdkFocusInitial>\n                Cancelar\n            </button>\n        </div>    \n        `\n        customDialog.customDialog(template, InfoDialogController_del).subscribe((data) => {\n            if (data) {\n                vm.relations = data\n            }\n        });\n    }    \n    \n}",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "28885558-d04f-72a3-2dcc-38d5e13f19ef"
              } ]
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "48aa3368-dcfe-4705-8eb4-9d6b27ff9ada",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "580c3402-4d95-45ed-9664-83362b333835" : {
          "type" : "timeseries",
          "sizeX" : 33,
          "sizeY" : 29,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pr_performance_ratio_day",
                "type" : "timeseries",
                "label" : "Performance Ratio",
                "color" : "#f44336",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "day" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "axisMin" : 0,
                  "axisMax" : 1
                },
                "_hash" : 0.39984313122422765,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "pr_performance_ratio_month",
                "type" : "timeseries",
                "label" : "Performance Ratio",
                "color" : "#f44336",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "axisMin" : 0,
                  "axisMax" : 1
                },
                "_hash" : 0.8850926747170051,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "pr_capacity_factor_days",
                "type" : "timeseries",
                "label" : "Fator Capacidade",
                "color" : "#249b7d",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "day" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "axisMin" : 0,
                  "axisMax" : 1
                },
                "_hash" : 0.5167164376436939,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "pr_capacity_factor_month",
                "type" : "timeseries",
                "label" : "Fator Capacidade",
                "color" : "#249b7d",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "axisMin" : 0,
                  "axisMax" : 1
                },
                "_hash" : 0.37476655481576904,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "pr_plant_availability_day",
                "type" : "timeseries",
                "label" : "Disponibilidade",
                "color" : "#985cb6",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack6",
                  "aggUnit" : [ "day" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "axisMin" : 0,
                  "axisMax" : 1
                },
                "_hash" : 0.405215062810512,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return Math.min(value,1);"
              }, {
                "name" : "pr_plant_availability_month",
                "type" : "timeseries",
                "label" : "Disponibilidade",
                "color" : "#985cb6",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack6",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 3,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "axisMin" : 0,
                  "axisMax" : 1
                },
                "_hash" : 0.26763824454159924,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return Math.min(value,1);"
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : true,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1659499199000,
                  "endTimeMs" : 1662091199000
                },
                "interval" : 63244000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : false,
              "timeWindows" : [ "7D", "30D", "12M", "Ano" ],
              "initialTimeWindow" : "30D",
              "timeWindowsUnits" : "day,day,month,month",
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "leftScaleTicks" : "callback = function(value, index, values) {\n    return value.toLocaleString('pt-BR', {\n        style: 'percent',\n        maximumFractionDigits: 0\n    });\n}\n\nticks = {\n    beginAtZero: true,\n    suggestedMin: 0,\n    suggestedMax: 1,\n    callback: callback\n}\n\nreturn ticks",
              "stacked" : true,
              "tooltipSettings" : "var tooltip = {\n    intersect: false,\n    mode: 'index',\n    position: 'nearest',\n    itemSort: function(a, b, data) {\n        //data.datasets[a.datasetIndex].label\n    },\n    callbacks: {\n\n        label: function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            label += tooltipItem.yLabel\n                .toLocaleString('pt-BR', {\n                    style: 'percent',\n                    maximumFractionDigits: 1,\n                    minimumFractionDigits: 1\n                });\n            return label;\n        },\n    }\n}\n\nreturn tooltip\n\n\n\n\n",
              "showRightScale" : false,
              "roundToUnit" : true,
              "showContractedDemandCurves" : false,
              "showOverFlowInRed" : false,
              "sortLegendByLabel" : false,
              "roundingMethod" : "nearest",
              "showRightScale2" : false
            },
            "title" : "Indicadores de Performance",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "580c3402-4d95-45ed-9664-83362b333835",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "7d906702-b002-4a7d-9cce-6aa8034aeeb1" : {
          "type" : "timeseries",
          "sizeX" : 24,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pm_grid_v1",
                "type" : "timeseries",
                "label" : "Fase A",
                "color" : "#2196f3",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.6676314261035907,
                "decimals" : 1
              }, {
                "name" : "pm_grid_v2",
                "type" : "timeseries",
                "label" : "Fase B",
                "color" : "#4caf50",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.5589090117140578,
                "decimals" : 1
              }, {
                "name" : "pm_grid_v3",
                "type" : "timeseries",
                "label" : "Fase C",
                "color" : "#f44336",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.08587173173862794,
                "decimals" : 1
              } ]
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 86400000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "column",
                "position" : "right",
                "showMin" : false,
                "showMax" : false,
                "showAvg" : false,
                "showTotal" : false
              }
            },
            "title" : "Tensões (V)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "7d906702-b002-4a7d-9cce-6aa8034aeeb1",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "a91eef11-c60a-40c6-a943-227300a086b4" : {
          "type" : "timeseries",
          "sizeX" : 21,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "pm_grid_i1",
                "type" : "timeseries",
                "label" : "Fase A",
                "color" : "#2196f3",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.17625564489723455,
                "decimals" : 2
              }, {
                "name" : "pm_grid_i2",
                "type" : "timeseries",
                "label" : "Fase B",
                "color" : "#4caf50",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.9158844279806402,
                "decimals" : 2
              }, {
                "name" : "pm_grid_i3",
                "type" : "timeseries",
                "label" : "Fase C",
                "color" : "#f44336",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.6355373554410992,
                "decimals" : 2
              } ],
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715"
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 86400000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "column",
                "position" : "right",
                "showMin" : false,
                "showMax" : false,
                "showAvg" : false,
                "showTotal" : false
              }
            },
            "title" : "Correntes (A)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "a91eef11-c60a-40c6-a943-227300a086b4",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "6c8b5bcb-3572-4343-8250-2068ee468d8e" : {
          "type" : "latest",
          "sizeX" : 9,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pm_grid_hz",
                "type" : "timeseries",
                "label" : "valor",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.887308176479835,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function numberWithCommas(x, y, z) {\n    return x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z});\n}\n\nvar d = new Date();\nvar h = d.getHours() + 1;\n\nif (value === null) {\n    return \"\";\n}\nif (((d.getTime()/1000) - (time/1000)) < (h*3600)) { \n\n    // formata o valor a ser apresentado\n    return numberWithCommas(value, 2, 2) + \" Hz\";\n\n}\nreturn \" \";"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Frequência",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "6c8b5bcb-3572-4343-8250-2068ee468d8e",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "695e3bce-de16-b8ca-3888-550430ebd573" : {
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "flag_27A",
                "type" : "timeseries",
                "label" : "flag_27A",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.22828284524943565,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "flag_27B",
                "type" : "timeseries",
                "label" : "flag_27B",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.2939849335524116
              }, {
                "name" : "flag_27C",
                "type" : "timeseries",
                "label" : "flag_27C",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.39524706935643694
              }, {
                "name" : "flag_27-0",
                "type" : "timeseries",
                "label" : "flag_27-0",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.4231612990700624
              }, {
                "name" : "flag_32A",
                "type" : "timeseries",
                "label" : "flag_32A",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.09210756551195942
              }, {
                "name" : "flag_32B",
                "type" : "timeseries",
                "label" : "flag_32B",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.3248324425883846
              }, {
                "name" : "flag_32C",
                "type" : "timeseries",
                "label" : "flag_32C",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.7375004256329389
              }, {
                "name" : "flag_37A",
                "type" : "timeseries",
                "label" : "flag_37A",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.9108118295072207
              }, {
                "name" : "flag_37B",
                "type" : "timeseries",
                "label" : "flag_37B",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.7583954321101587
              }, {
                "name" : "flag_37C",
                "type" : "timeseries",
                "label" : "flag_37C",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.35136895766391074
              }, {
                "name" : "flag_47",
                "type" : "timeseries",
                "label" : "flag_47",
                "color" : "#03a9f4",
                "settings" : { },
                "_hash" : 0.5778780794805387
              }, {
                "name" : "flag_50A",
                "type" : "timeseries",
                "label" : "flag_50A",
                "color" : "#ff9800",
                "settings" : { },
                "_hash" : 0.5585753009195782
              }, {
                "name" : "flag_50B",
                "type" : "timeseries",
                "label" : "flag_50B",
                "color" : "#673ab7",
                "settings" : { },
                "_hash" : 0.6977661543906697
              }, {
                "name" : "flag_50C",
                "type" : "timeseries",
                "label" : "flag_50C",
                "color" : "#cddc39",
                "settings" : { },
                "_hash" : 0.5011833589880188
              }, {
                "name" : "flag_50N",
                "type" : "timeseries",
                "label" : "flag_50N",
                "color" : "#009688",
                "settings" : { },
                "_hash" : 0.48338523941217026
              }, {
                "name" : "flag_51A",
                "type" : "timeseries",
                "label" : "flag_51A",
                "color" : "#795548",
                "settings" : { },
                "_hash" : 0.14034545946730037
              }, {
                "name" : "flag_51B",
                "type" : "timeseries",
                "label" : "flag_51B",
                "color" : "#00bcd4",
                "settings" : { },
                "_hash" : 0.8555776631864866
              }, {
                "name" : "flag_51C",
                "type" : "timeseries",
                "label" : "flag_51C",
                "color" : "#ff5722",
                "settings" : { },
                "_hash" : 0.9066355307362897
              }, {
                "name" : "flag_51N",
                "type" : "timeseries",
                "label" : "flag_51N",
                "color" : "#9e9e9e",
                "settings" : { },
                "_hash" : 0.2380664422809302
              }, {
                "name" : "flag_59A",
                "type" : "timeseries",
                "label" : "flag_59A",
                "color" : "#2962ff",
                "settings" : { },
                "_hash" : 0.5473605019913608
              }, {
                "name" : "flag_59B",
                "type" : "timeseries",
                "label" : "flag_59B",
                "color" : "#00c853",
                "settings" : { },
                "_hash" : 0.8765023772806979
              }, {
                "name" : "flag_59C",
                "type" : "timeseries",
                "label" : "flag_59C",
                "color" : "#d50000",
                "settings" : { },
                "_hash" : 0.7561907385973377
              }, {
                "name" : "flag_59N",
                "type" : "timeseries",
                "label" : "flag_59N",
                "color" : "#ffab00",
                "settings" : { },
                "_hash" : 0.9802398509476515
              }, {
                "name" : "flag_67A",
                "type" : "timeseries",
                "label" : "flag_67A",
                "color" : "#455a64",
                "settings" : { },
                "_hash" : 0.9842904705403717
              }, {
                "name" : "flag_67B",
                "type" : "timeseries",
                "label" : "flag_67B",
                "color" : "#aa00ff",
                "settings" : { },
                "_hash" : 0.4605548881880801
              }, {
                "name" : "flag_67C",
                "type" : "timeseries",
                "label" : "flag_67C",
                "color" : "#64dd17",
                "settings" : { },
                "_hash" : 0.24206110272536874
              }, {
                "name" : "flag_67N",
                "type" : "timeseries",
                "label" : "flag_67N",
                "color" : "#304ffe",
                "settings" : { },
                "_hash" : 0.18016259654244116
              }, {
                "name" : "flag_78",
                "type" : "timeseries",
                "label" : "flag_78",
                "color" : "#c51162",
                "settings" : { },
                "_hash" : 0.6171651234838011
              }, {
                "name" : "flag_81",
                "type" : "timeseries",
                "label" : "flag_81",
                "color" : "#ffd600",
                "settings" : { },
                "_hash" : 0.030621722787157912
              }, {
                "name" : "flag_86",
                "type" : "timeseries",
                "label" : "flag_86",
                "color" : "#0091ea",
                "settings" : { },
                "_hash" : 0.14275917347512546
              }, {
                "name" : "flag_BA",
                "type" : "timeseries",
                "label" : "flag_BA",
                "color" : "#ff6d00",
                "settings" : { },
                "_hash" : 0.3584676350466751
              }, {
                "name" : "flag_GS",
                "type" : "timeseries",
                "label" : "flag_GS",
                "color" : "#6200ea",
                "settings" : { },
                "_hash" : 0.13929609810204013
              }, {
                "name" : "flag_Q",
                "type" : "timeseries",
                "label" : "flag_Q",
                "color" : "#aeea00",
                "settings" : { },
                "_hash" : 0.970936358388069
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<script>\n    \n    var val_27a = \"${flag_27A}\";\n    var val_27b = \"${flag_27B}\";\n    var val_27c = \"${flag_27C}\";\n    var val_27_0 = \"${flag_27_0}\";\n    var val_32a = \"${flag_32A}\";\n    var val_32b = \"${flag_32B}\";\n    var val_32c = \"${flag_32C}\";\n    var val_37a = \"${flag_37A}\";\n    var val_37b = \"${flag_37B}\";\n    var val_37c = \"${flag_37C}\";\n    var val_47 = \"${flag_47}\";\n    var val_50a = \"${flag_50A}\";\n    var val_50b = \"${flag_50B}\";\n    var val_50c = \"${flag_50C}\";\n    var val_50n = \"${flag_50N}\";\n    var val_51a = \"${flag_51A}\";\n    var val_51b = \"${flag_51B}\";\n    var val_51c = \"${flag_51C}\";\n    var val_51n = \"${flag_51N}\";\n    var val_59a = \"${flag_59A}\";\n    var val_59b = \"${flag_59B}\";\n    var val_59c = \"${flag_59C}\";\n    var val_59n = \"${flag_59N}\";\n    var val_67a = \"${flag_67A}\";\n    var val_67b = \"${flag_67B}\";\n    var val_67c = \"${flag_67C}\";\n    var val_67n = \"${flag_67N}\";\n    var val_78 = \"${flag_78}\";\n    var val_81 = \"${flag_81}\";\n    var val_86 = \"${flag_86}\";\n    var val_BA = \"${flag_BA}\";\n    var val_GS = \"${flag_GS}\";\n    var val_Q = \"${flag_Q}\";\n    \n    val_27a = parseFloat(val_27a) || 0\n    val_27b = parseFloat(val_27b) || 0\n    val_27c = parseFloat(val_27c) || 0\n    val_27_0 = parseFloat(val_27_0) || 0\n    val_32a = parseFloat(val_32a) || 0\n    val_32b = parseFloat(val_32b) || 0\n    val_32c = parseFloat(val_32c) || 0\n    val_37a = parseFloat(val_37a) || 0\n    val_37b = parseFloat(val_37b) || 0\n    val_37c = parseFloat(val_37c) || 0\n    val_47 = parseFloat(val_47) || 0\n    val_50a = parseFloat(val_50a) || 0\n    val_50b = parseFloat(val_50b) || 0\n    val_50c = parseFloat(val_50c) || 0\n    val_50n = parseFloat(val_50n) || 0\n    val_51a = parseFloat(val_51a) || 0\n    val_51b = parseFloat(val_51b) || 0\n    val_51c = parseFloat(val_51c) || 0\n    val_51n = parseFloat(val_51n) || 0\n    val_59a = parseFloat(val_59a) || 0\n    val_59b = parseFloat(val_59b) || 0\n    val_59c = parseFloat(val_59c) || 0\n    val_59n = parseFloat(val_59n) || 0\n    val_67a = parseFloat(val_67a) || 0\n    val_67b = parseFloat(val_67b) || 0\n    val_67c = parseFloat(val_67c) || 0\n    val_67n = parseFloat(val_67n) || 0\n    val_78 = parseFloat(val_78) || 0\n    val_81 = parseFloat(val_81) || 0\n    val_86 = parseFloat(val_86) || 0\n    val_BA = parseFloat(val_BA) || 0\n    val_GS = parseFloat(val_GS) || 0\n    val_Q = parseFloat(val_Q) || 0\n    \n    if (val_27a > 0) {\n        document.getElementById(\"flag_27a\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_27a\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n    if (val_27b > 0) {\n        document.getElementById(\"flag_27b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_27b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n    if (val_27c > 0) {\n        document.getElementById(\"flag_27c\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_27c\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n    if (val_27_0 > 0) {\n        document.getElementById(\"flag_27_0\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_27_0\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n\n    if (val_32a > 0) {\n        document.getElementById(\"flag_32a\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_32a\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n    if (val_32b > 0) {\n        document.getElementById(\"flag_32b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_32b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n    if (val_32c > 0) {\n        document.getElementById(\"flag_32c\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_32c\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n\n    if (val_37a > 0) {\n        document.getElementById(\"flag_37a\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_37a\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n    if (val_37b > 0) {\n        document.getElementById(\"flag_37b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_37b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n    if (val_37c > 0) {\n        document.getElementById(\"flag_37c\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_37c\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n\n    if (val_47 > 0) {\n        document.getElementById(\"flag_47\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_47\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n\n    if (val_50a > 0) {\n        document.getElementById(\"flag_50a\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_50a\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n    if (val_50b > 0) {\n        document.getElementById(\"flag_50b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_50b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n    if (val_50c > 0) {\n        document.getElementById(\"flag_50c\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_50c\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n    if (val_50n > 0) {\n        document.getElementById(\"flag_50n\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_50n\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n\n    if (val_51a > 0) {\n        document.getElementById(\"flag_51a\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_51a\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n    if (val_51b > 0) {\n        document.getElementById(\"flag_51b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_51b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n    if (val_51c > 0) {\n        document.getElementById(\"flag_51c\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_51c\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n    if (val_51n > 0) {\n        document.getElementById(\"flag_51n\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_51n\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n\n    if (val_59a > 0) {\n        document.getElementById(\"flag_59a\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_59a\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n    if (val_59b > 0) {\n        document.getElementById(\"flag_59b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_59b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n    if (val_59c > 0) {\n        document.getElementById(\"flag_59c\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_59c\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n    if (val_59n > 0) {\n        document.getElementById(\"flag_59n\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_59n\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n\n    if (val_67a > 0) {\n        document.getElementById(\"flag_67a\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_67a\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n    if (val_67b > 0) {\n        document.getElementById(\"flag_67b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_67b\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n    if (val_67c > 0) {\n        document.getElementById(\"flag_67c\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_67c\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n    if (val_67n > 0) {\n        document.getElementById(\"flag_67n\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_67n\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n\n    if (val_78 > 0) {\n        document.getElementById(\"flag_78\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_78\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n    if (val_81 > 0) {\n        document.getElementById(\"flag_81\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_81\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n\n    if (val_86 > 0) {\n        document.getElementById(\"flag_86\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_86\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n\n    if (val_BA > 0) {\n        document.getElementById(\"flag_BA\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_BA\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n\n    if (val_GS > 0) {\n        document.getElementById(\"flag_GS\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_GS\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n\n    if (val_Q > 0) {\n        document.getElementById(\"flag_Q\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_desligado.png\" width=\"30vw\" height=\"30vh\">'\n    } else {\n        document.getElementById(\"flag_Q\").innerHTML = '<img src=\"https://solarhub.engecomp.io/res/flag_neutro.png\" width=\"30vw\" height=\"30vh\">'\n    }\n\n</script>\n\n<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table width=\"100%\">\n        \t<tr>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t\t<td width=\"16%\">\n        \t\t    <div class=\"descricao\">&nbsp;</div>\n        \t\t</td>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t\t<td width=\"18%\">\n        \t\t    <div class=\"descricao\">A</div>\n        \t\t</td>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t\t<td width=\"18%\">\n        \t\t    <div class=\"descricao\">B</div>\n        \t\t</td>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t\t<td width=\"18%\">\n        \t\t    <div class=\"descricao\">C</div>\n        \t\t</td>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t\t<td width=\"18%\">\n        \t\t    <div class=\"descricao\">N</div>\n        \t\t</td>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t</tr>\n\n        \t<tr>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div class=\"descricao\">51</div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_51a\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_51b\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_51c\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_51n\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t</tr>\n\n        \t<tr>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div class=\"descricao\">50</div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_50a\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_50b\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_50c\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_50n\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t</tr>\n\n        \t<tr>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div class=\"descricao\">67</div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_67a\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_67b\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_67c\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_67n\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t</tr>\n\n        \t<tr>\n       \t<tr>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div class=\"descricao\">59</div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_59a\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_59b\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_59c\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_59n\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t</tr>\n\n        </table>\n\n        &nbsp;<br>\n        <table width=\"100%\">\n        \t<tr>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t\t<td width=\"16%\">\n        \t\t    <div class=\"descricao\">&nbsp;</div>\n        \t\t</td>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t\t<td width=\"18%\">\n        \t\t    <div class=\"descricao\">A</div>\n        \t\t</td>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t\t<td width=\"18%\">\n        \t\t    <div class=\"descricao\">B</div>\n        \t\t</td>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t\t<td width=\"18%\">\n        \t\t    <div class=\"descricao\">C</div>\n        \t\t</td>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t\t<td width=\"18%\">\n        \t\t    <div class=\"descricao\">&nbsp;</div>\n        \t\t</td>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t</tr>\n\n         \t<tr>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div class=\"descricao\">27</div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_27a\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_27b\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_27c\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div class=\"descricao\">&nbsp;</div></td>\n        \t\t<td>&nbsp;</td>\n        \t</tr>\n\n        \t<tr>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div class=\"descricao\">32</div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_32a\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_32b\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_32c\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div class=\"descricao\">&nbsp;</div></td>\n        \t\t<td>&nbsp;</td>\n        \t</tr>\n\n        \t<tr>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div class=\"descricao\">37</div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_37a\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_37b\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_37c\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div class=\"descricao\">&nbsp;</div></td>\n        \t\t<td>&nbsp;</td>\n        \t</tr>\n        </table>\n        \n        &nbsp;<br>\n        <table width=\"100%\">\n        \t<tr>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t\t<td width=\"16%\">\n        \t\t    <div class=\"descricao\">&nbsp;</div>\n        \t\t</td>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t\t<td width=\"18%\">\n        \t\t    <div class=\"descricao\">81</div>\n        \t\t</td>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t\t<td width=\"18%\">\n        \t\t    <div class=\"descricao\">Q</div>\n        \t\t</td>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t\t<td width=\"18%\">\n        \t\t    <div class=\"descricao\">GS</div>\n        \t\t</td>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t\t<td width=\"18%\">\n        \t\t    <div class=\"descricao\">BA</div>\n        \t\t</td>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t</tr>\n        \t<tr>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div class=\"descricao\">&nbsp;</div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_81\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_Q\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_GS\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_BA\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t</tr>\n        </table>\n\n        &nbsp;<br>\n        <table width=\"100%\">\n        \t<tr>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t\t<td width=\"16%\">\n        \t\t    <div class=\"descricao\">&nbsp;</div>\n        \t\t</td>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t\t<td width=\"18%\">\n        \t\t    <div class=\"descricao\">47</div>\n        \t\t</td>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t\t<td width=\"18%\">\n        \t\t    <div class=\"descricao\">86</div>\n        \t\t</td>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t\t<td width=\"18%\">\n        \t\t    <div class=\"descricao\">78</div>\n        \t\t</td>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t\t<td width=\"18%\">\n        \t\t    <div class=\"descricao\">27-0</div>\n        \t\t</td>\n        \t\t<td width=\"2%\">&nbsp;</td>\n        \t</tr>\n        \t<tr>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div class=\"descricao\">&nbsp;</div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_47\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_86\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_78\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t\t<td><div id=\"flag_27_0\" class=\"value\"></div></td>\n        \t\t<td>&nbsp;</td>\n        \t</tr>\n        </table>\n        \n    </section>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 1.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .descricao {\n    display: inline-block;\n    font-family : Roboto Condensed;\n    font-weight : 600;\n    font-size : 1.6vh;\n    padding: 5px;\n    color: rgb(50,88,127);\n}\n"
            },
            "title" : "Bandeirolas",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false
          },
          "row" : 0,
          "col" : 0,
          "id" : "695e3bce-de16-b8ca-3888-550430ebd573",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "5d6039f3-065e-40d8-abd2-d10b440de777" : {
          "type" : "latest",
          "sizeX" : 20,
          "sizeY" : 5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "latitude",
                "type" : "attribute",
                "label" : "latitude",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.12053059779723752,
                "decimals" : null,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 6, minimumFractionDigits: 6}); "
              }, {
                "name" : "longitude",
                "type" : "attribute",
                "label" : "longitude",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.7678419940529702,
                "decimals" : null,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 6, minimumFractionDigits: 6}); "
              }, {
                "name" : "weatherURL",
                "type" : "attribute",
                "label" : "weather",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.2189923541610701
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"90%\">\n            <tr height=\"38\">\n                <td width=\"45%\" align=\"left\"><style class=\"title\">Latitude:</style><br><style class=\"text\">${latitude}</style></td>\n                <td width=\"45%\" align=\"left\"><style class=\"title\">Longitude:</style><br><style class=\"text\">${longitude}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"90%\">\n            <tr height=\"38\">\n                <td width=\"90%\" align=\"left\"><style class=\"title\">Weather URL:</style><br><style class=\"text\">${weather}</style></td>\n            </tr>\n        </table>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}"
            },
            "title" : "Dados Coordenadas",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\">\n        <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Latitude</mat-label>\n                <input matInput type=\"number\" [(ngModel)]=\"attributes.latitude\" (ngModelChange)=\"change()\"\n                min=\"-90\" max=\"90\" step=\"0.000001\" placeholder=\"de -90 a +90\">\n            </mat-form-field>\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Longitude</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.longitude\" (ngModelChange)=\"change()\"\n                    min=\"-180\" max=\"180\" step=\"0.000001\" placeholder=\"de -180 a +180\">\n            </mat-form-field>\n        </div>\n        <mat-form-field fxFlex class=\"mat-block\">\n            <mat-label>WeatherURL</mat-label>\n            <input matInput type=\"text\"\n                [(ngModel)]=\"attributes.weatherURL\">\n        </mat-form-field>\n    </div>\n    \n    <br><div [fxShow]=\"!OK\" fxLayoutGap=\"20px\" style=\"color: red; font-weight: bold;\">ATENÇÃO: {{ message }}</div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(!OK || (isLoading$ | async))\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\nattributes = {}\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.OK = true\n    vm.importTitle = 'Editar Coordenadas'\n    vm.message = \"\"\n\n    vm.attributes = {}\n    for (var i=0; i<widgetContext.data.length; i++){\n        var x = widgetContext.data[i].data[0][1]\n        vm.attributes[widgetContext.data[i].dataKey.name] = x\n    }\n    vm.attributes.latitude = parseFloat(vm.attributes.latitude.replace(',','.'))\n    vm.attributes.longitude = parseFloat(vm.attributes.longitude.replace(',','.'))\n\n    vm.change = function() {\n\n        if (vm.attributes.latitude > 90 | vm.attributes.latitude > 90) {\n            vm.OK = false\n            vm.message = \"Latitude inválida\"\n            return\n        } \n        \n        if (vm.attributes.longitude > 180 | vm.attributes.longitude < -180) {\n            vm.OK = false\n            vm.message = \"Longitude inválida\"\n            return\n        } \n        vm.OK = true\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()\n    }\n\n}",
                "customResources" : [ ],
                "id" : "a25e279b-4ed1-6374-614e-35d9e4e1ab6e"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "5d6039f3-065e-40d8-abd2-d10b440de777",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "3bfeaa0f-fa34-6398-749c-8b1d1dd0c6bd" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.8183732083388873
              }, {
                "name" : "logo",
                "type" : "attribute",
                "label" : "logo",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.3289760607157439
              }, {
                "name" : "cor_de_fundo",
                "type" : "attribute",
                "label" : "cor_de_fundo",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.9243089060003935
              } ],
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgb(204, 204, 204)",
            "padding" : "0px",
            "settings" : {
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    display: block;\n    align-items: center;\n    justify-content: center;\n}\n\n.vertical-center {\n  margin: 0;\n  padding: 3px 3px 3px 3px;\n  position: absolute;\n  top: 50%;\n  /* -ms-transform: translateY(-50%); */\n  transform: translateY(-50%) translateX(-50%);\n  left: 50%;\n}\n\n.image {\n  max-height: 80%;\n  max-width: 80%;\n  margin:auto;\n  display:block;\n}\n",
              "cardHtml" : "<div style=\"background-color:${cor_de_fundo}\">\n    &nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>\n    &nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>\n    &nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>\n    &nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>\n    &nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>\n    &nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>\n</div>\n<img class=\"image vertical-center\" src=\"${logo}\" alt=\"${description}\">"
            },
            "title" : "Logotipo",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "3bfeaa0f-fa34-6398-749c-8b1d1dd0c6bd",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "c5e3e02c-f6ba-d94b-90f7-9dde188d2de7" : {
          "type" : "latest",
          "sizeX" : 12,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "alias",
                "type" : "attribute",
                "label" : "alias",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5671112303010537
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.08753771580722458,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"-- SEM NOME --\"    \n}\nreturn nome;"
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "serial",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5235226956368948,
                "postFuncBody" : "return \"SN: \" + value;"
              }, {
                "name" : "firmware_version",
                "type" : "attribute",
                "label" : "firmware_version",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.53024477538874
              }, {
                "name" : "last_telemetry",
                "type" : "attribute",
                "label" : "last_telemetry",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.5057664517123861
              }, {
                "name" : "meter",
                "type" : "attribute",
                "label" : "meter",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.5521594546006754,
                "postFuncBody" : "return \"End: \"+value;"
              }, {
                "name" : "ref_cliente",
                "type" : "attribute",
                "label" : "ref_cliente",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.8831237265429479
              }, {
                "name" : "area",
                "type" : "attribute",
                "label" : "area",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.10640042482383616
              }, {
                "name" : "contrato",
                "type" : "attribute",
                "label" : "contrato",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.5466639338323851,
                "postFuncBody" : "return \"Contrato: \"+value;"
              } ],
              "entityAliasId" : "11be4446-48c0-cac9-6400-94a717e876ba"
            }, {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "nome_site",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.8758669588353116
              } ],
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgb(255, 255, 255)",
            "padding" : "10px",
            "settings" : {
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value {\n    font-size: 1.8vh;\n    font-weight: 300;\n}\n\n.card .title {\n    font-size: 2.0vh;\n    font-weight: bold;\n    color: #bdfbf8;\n}\n\n.card .description {\n    font-size: 14px;\n    color: #999;\n}\n",
              "cardHtml" : "<div class='card'>\n    <div class='content'>\n        <div class='column'>\n            <div class='title'>\n                ${nome_site}<br>\n                ${description} ${area}\n            </div>    \n            <div class='value'>\n                Ref: ${ref_cliente}<br>\n                ${contrato}<br>\n                ${serial} ${meter}\n            </div>    \n        </div>\n    </div>\n</div>"
            },
            "title" : "id_site_sem_config",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "c5e3e02c-f6ba-d94b-90f7-9dde188d2de7",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "8f0c1d4e-a79a-8eff-a22e-48155156c440" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy Delta",
                "type" : "timeseries",
                "label" : "last_interval_wh",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.553795007728678,
                "postFuncBody" : "function formattedNumber(x,maxDigits) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: maxDigits}); \n}\n\nif (value > 250) {\n    return formattedNumber(value*4,0)+' kW';\n}\n\nreturn formattedNumber(value*4,1)+' kW';"
              }, {
                "name" : "Active Energy Delta",
                "type" : "timeseries",
                "label" : "last_interval_ts",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.47690608127243594,
                "postFuncBody" : "return moment.unix(time/1000).format('DD-MMM HH:mm');"
              } ],
              "entityAliasId" : "11be4446-48c0-cac9-6400-94a717e876ba"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${last_interval_wh}</div><br>\n        <footer>\n            <div class=\"additional-info\">${last_interval_ts}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Última Leitura",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "18px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "8f0c1d4e-a79a-8eff-a22e-48155156c440",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "0ff41f7b-7496-7d05-69fb-0619d1802766" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy Delta_day_sum",
                "type" : "timeseries",
                "label" : "consumo",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5623134603429236,
                "postFuncBody" : "function formattedNumber(x, min, max) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: min,  maximumFractionDigits: max});\n}\nif ( value > 99999 ) {\n    return formattedNumber(value/1000, 1, 2)+' MWh';\n}\nreturn formattedNumber(value, 0, 0)+' kWh';"
              } ],
              "entityAliasId" : "11be4446-48c0-cac9-6400-94a717e876ba"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${consumo}</div>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Consumo Hoje",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "18px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "0ff41f7b-7496-7d05-69fb-0619d1802766",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "a887a8ff-d5fd-65a3-a17b-3a830fd16664" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy Delta_month_sum",
                "type" : "timeseries",
                "label" : "consumo",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.3239682579078662,
                "postFuncBody" : "function formattedNumber(x, min, max) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: min,  maximumFractionDigits: max});\n}\nif ( value > 99999 ) {\n    return formattedNumber(value/1000, 1, 2)+' MWh';\n}\nreturn formattedNumber(value, 0, 0)+' kWh';"
              } ],
              "entityAliasId" : "11be4446-48c0-cac9-6400-94a717e876ba"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${consumo}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Consumo Mês",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "18px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "a887a8ff-d5fd-65a3-a17b-3a830fd16664",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "9304646d-70e1-bbdd-9a92-596fe765fe5d" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy Delta_year_sum",
                "type" : "timeseries",
                "label" : "consumo",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5066239839346354,
                "postFuncBody" : "function formattedNumber(x, min, max) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: min,  maximumFractionDigits: max});\n}\nif ( value > 99999 ) {\n    return formattedNumber(value/1000, 1, 2)+' MWh';\n}\nreturn formattedNumber(value, 0, 0)+' kWh';"
              } ],
              "entityAliasId" : "11be4446-48c0-cac9-6400-94a717e876ba"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${consumo}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Consumo Ano",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "18px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "9304646d-70e1-bbdd-9a92-596fe765fe5d",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "bed87251-20f4-1737-66d8-1f4cb7f6defe" : {
          "type" : "timeseries",
          "sizeX" : 27,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy Delta_hour_sum",
                "type" : "timeseries",
                "label" : "Consumo Hora",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "aggUnit" : [ "hour" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "Stack0"
                },
                "_hash" : 0.040219466505192925
              }, {
                "name" : "Active Energy Delta_day_sum",
                "type" : "timeseries",
                "label" : "Consumo Dia",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "Stack0",
                  "aggUnit" : [ "day" ]
                },
                "_hash" : 0.8740100839991156
              }, {
                "name" : "Active Energy Delta_month_sum",
                "type" : "timeseries",
                "label" : "Consumo Mês",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ "month" ]
                },
                "_hash" : 0.09957695826280699
              }, {
                "name" : "Active Energy Delta_year_sum",
                "type" : "timeseries",
                "label" : "Consumo Ano",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ ]
                },
                "_hash" : 0.520745973724257
              } ],
              "entityAliasId" : "11be4446-48c0-cac9-6400-94a717e876ba"
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1634871599000,
                  "endTimeMs" : 1635476399000
                },
                "interval" : 12342000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : false,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : true,
              "timeWindows" : [ "Hoje", "24H", "7D", "30D", "Mes", "12M", "Ano" ],
              "timeWindowsUnits" : "hour,hour,day,day,day,month,month,year",
              "initialTimeWindow" : "7D",
              "showContractedDemandCurves" : false,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "showRightScale" : false,
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: false,\n    callback: callback,\n    precision: 0\n}\n\nreturn ticks",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            label += tooltipItem.yLabel.toLocaleString(\n                'pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n        \nfilter = function (tooltipItem, data) {return tooltipItem.value != \"NaN\"}\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n\n    }\n}\n\nreturn tooltip",
              "stacked" : true
            },
            "title" : "Consumo (kWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            }
          },
          "id" : "bed87251-20f4-1737-66d8-1f4cb7f6defe",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "6280c170-6100-d9f7-d224-4939c31d86e0" : {
          "type" : "timeseries",
          "sizeX" : 27,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "Active Energy Delta",
                "type" : "timeseries",
                "label" : "Demanda Intervalo",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "aggUnit" : [ "minute" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "Stack0"
                },
                "_hash" : 0.040219466505192925,
                "postFuncBody" : "return value*4;"
              }, {
                "name" : "Active Energy Delta_day_max",
                "type" : "timeseries",
                "label" : "Demanda Dia",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "xx"
                },
                "_hash" : 0.8740100839991156,
                "postFuncBody" : "return value*4;"
              }, {
                "name" : "Active Energy Delta_month_max",
                "type" : "timeseries",
                "label" : "Demanda Mês",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "aggUnit" : [ ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.09957695826280699,
                "postFuncBody" : "return value*4;"
              } ],
              "entityAliasId" : "11be4446-48c0-cac9-6400-94a717e876ba"
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1634871599000,
                  "endTimeMs" : 1635476399000
                },
                "interval" : 60480000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : false,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : true,
              "timeWindows" : [ "7D", "30D", "Mes", "12M", "Ano" ],
              "timeWindowsUnits" : "day,day,day,month,month",
              "initialTimeWindow" : "7D",
              "showContractedDemandCurves" : false,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: false,\n    callback: callback,\n    precision: 0\n}\n\nreturn ticks",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            label += tooltipItem.yLabel.toLocaleString(\n                'pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n        \nfilter = function (tooltipItem, data) {return tooltipItem.value != \"NaN\"}\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n\n    }\n}\n\nreturn tooltip",
              "stacked" : true,
              "roundToUnit" : true
            },
            "title" : "Demanda (kW)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            }
          },
          "id" : "6280c170-6100-d9f7-d224-4939c31d86e0",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "0023cf96-56f9-4b7f-8c33-f42ca2ba6a2a" : {
          "type" : "latest",
          "sizeX" : 37,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Ponto de Medição",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "entitiesTitle" : "Pontos de Medição",
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Pontos de Medição",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "cb6f0aa3-f9e4-8565-483c-4b4326ff40ad",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "last_telemetry",
                "type" : "attribute",
                "label" : "Status",
                "color" : "#03a9f4",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var html = {\n    0: '<html>&nbsp;</html>',\n    1: '<html><img title=\"Online\" src=\"https://solarhub.engecomp.io/res/ok.png\" width=\"20\" height=\"20\"></html>',\n    2: '<html><img title=\"Offline\" src=\"https://solarhub.engecomp.io/res/nok.png\" width=\"20\" height=\"20\"></html>',\n    3: '<html><img title=\"Alarme\" src=\"https://solarhub.engecomp.io/res/attention6.png\" width=\"20\" height=\"20\"></html>'\n};\n\nreturn html[value];"
                },
                "_hash" : 0.9863293527661336,
                "postFuncBody" : "x = parseInt(moment.utc().format('x'))\nvar horas = ((x - value) / 3600000);\n\nvar tolerancia = 3;\n\n// calcula se tá online ou offline\nif (horas > tolerancia) { \n    return 2;     // vermelho NotOk \n}\n\nreturn 1;         // verde OK"
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "Ponto de Medição",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.283215932135525,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~~ SEM NOME ~~\"    \n}\nreturn nome;"
              }, {
                "name" : "ref_cliente",
                "type" : "attribute",
                "label" : "Ref Cliente",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.6824419619163928
              }, {
                "name" : "area",
                "type" : "attribute",
                "label" : "Área",
                "color" : "#607d8b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.6001273165028669
              }, {
                "name" : "kwh_mensal_m00",
                "type" : "attribute",
                "label" : "Consumo M-0",
                "color" : "#ffeb3b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0})"
                },
                "_hash" : 0.16253240492215038,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\n//if (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    return value;\n\n//}\n//return \" \";"
              }, {
                "name" : "kwh_mensal_m01",
                "type" : "attribute",
                "label" : "Consumo M-1",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0})"
                },
                "_hash" : 0.6360106646866897,
                "decimals" : 0,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\n//if (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    return value;\n\n//}\n//return \" \";"
              }, {
                "name" : "kwh_mensal_m02",
                "type" : "attribute",
                "label" : "Consumo M-2",
                "color" : "#3f51b5",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0})"
                },
                "_hash" : 0.7062809090246078,
                "decimals" : 0,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\n//if (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    return value;\n\n//}\n//return \" \";"
              }, {
                "name" : "kwh_mensal_m03",
                "type" : "attribute",
                "label" : "Consumo M-3",
                "color" : "#03a9f4",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0})"
                },
                "_hash" : 0.5628822283783612,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\n//if (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    return value;\n\n//}\n//return \" \";"
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "Remota (SN)",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.9237771354167557,
                "postFuncBody" : "return value;"
              }, {
                "name" : "meter",
                "type" : "attribute",
                "label" : "Medidor",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.2808489926085027,
                "postFuncBody" : "return value;"
              }, {
                "name" : "contrato",
                "type" : "attribute",
                "label" : "Contrato",
                "color" : "#607d8b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.6902791349859607
              }, {
                "name" : "last_telemetry",
                "type" : "attribute",
                "label" : "Ult Conexão",
                "color" : "#ff9800",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.7156438536152372,
                "postFuncBody" : "return moment.unix(value/1000).format('DD-MMM HH:mm');"
              } ]
            } ],
            "enableDataExport" : true,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "id" : "0f439a7a-c1b1-63cf-a83d-e5137a9bb69e",
                "name" : "Detalhes da unidade",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : null,
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Ponto_Sub"
              } ],
              "actionCellButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n        style=\"min-width: 500px; padding-top: 20px\">\n        <mat-form-field fxFlex class=\"mat-block\" >\n            <mat-label>Nome</mat-label>\n            <input matInput [(ngModel)]=\"attributes.description\">\n        </mat-form-field>\n\n        <mat-form-field fxFlex class=\"mat-block\" >\n            <mat-label>Ref. Cliente</mat-label>\n            <input matInput [(ngModel)]=\"attributes.ref_cliente\">\n        </mat-form-field>\n\n        <mat-form-field fxFlex class=\"mat-block\" >\n            <mat-label>Área</mat-label>\n            <input matInput [(ngModel)]=\"attributes.area\">\n        </mat-form-field>\n\n        <mat-form-field fxFlex class=\"mat-block\" >\n            <mat-label>Contrato</mat-label>\n            <input matInput [(ngModel)]=\"attributes.contrato\">\n        </mat-form-field>\n\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Editar dados'\n    \n    vm.diffAttrs=['description','area','contrato','ref_cliente']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n         })\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        debugger\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()\n    }\n\n}\n\n",
                "customResources" : [ ],
                "id" : "e5d1593e-620c-b452-c62f-23091486f900"
              } ],
              "headerButton" : [ {
                "name" : "Exportação de Dados",
                "icon" : "file_download",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <mat-form-field fxFlex class=\"mat-block\">\n        <mat-label>Integração</mat-label>\n        <mat-select name=\"integracao\" [(ngModel)]=\"integracao\" (ngModelChange)=\"change()\">\n          <mat-option value=\"all\">15 minutos</mat-option>\n          <mat-option value=\"hour\">1 hora</mat-option>\n          <mat-option value=\"day\">1 dia</mat-option>\n          <mat-option value=\"month\">1 mês</mat-option>\n          <mat-option value=\"none\">Soma do período</mat-option>\n        </mat-select><br>\n    </mat-form-field>\n    \n     <div fxLayout=\"column\" fxLayout.gt-sm=\"row\" fxLayoutGap=\"5px\" ng-cloak>\n        \n                \n        <mat-form-field color=\"accent\" appearance=\"fill\">\n          <mat-label>Data Inicial</mat-label>\n          <input matInput [matDatepicker]=\"picker1\" [(ngModel)]=\"sd\" (ngModelChange)=\"change()\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n          <mat-datepicker #picker1></mat-datepicker>\n        </mat-form-field>\n        \n        \n        <mat-form-field color=\"accent\" appearance=\"fill\">\n          <mat-label>Data Final</mat-label>\n          <input matInput [matDatepicker]=\"picker2\" [(ngModel)]=\"ed\" (ngModelChange)=\"change()\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n          <mat-datepicker #picker2></mat-datepicker>\n        </mat-form-field>\n        \n        <div fxLayout=\"column\" fxFlexOrder=\"0\" fxFlexOrder.gt-sm=\"2\">\n            <matSubheader>Dates</matSubheader>\n            <div>\n                <mat-label style=\"font-size: x-small;\">Start</mat-label>\n                <div>{{sd | date:shortDate}}</div>\n            </div>\n            <div>\n                <mat-label style=\"font-size: x-small;\">End</mat-label>\n                <div>{{ed | date:shortDate}}</div>\n            </div>\n        </div>\n    </div>\n    \n    \n    <mat-label>\n        Tamanho estimado: {{ linhas }} linhas<br><br>\n    </mat-label>\n    \n    <mat-label>\n        <input type=\"checkbox\" [(ngModel)]=\"async\"> Envio por email (recomendado)\n    </mat-label>\n\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form md-input-container {\n    padding-right: 10px;\n}\n\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body md-autocomplete-wrap md-input-container {\n    height: 30px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n\n.relations-list.old-relations tb-entity-select tb-entity-autocomplete button {\n    display: none;\n} \n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form md-input-container {\n    padding-right: 10px;\n}\n\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body md-autocomplete-wrap md-input-container {\n    height: 30px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nvar user = widgetContext.currentUser;\n\n\nvar url = 'https://solarhub.engecomp.io/be/sm_data_export/cdf9d21d-f312-4ea9-8de7-e54819278999/form/v3'\n\npayload = {\n    email: user.sub,\n    token: localStorage[\"jwt_token\"]\n}\n\npayload.search = {\n    entityFilter: widgetContext.defaultSubscription.configuredDatasources[0].entityFilter,\n    pageLink: {\n        page: 0,\n        pageSize: 1000,\n        textSearch: null,\n        dynamic: false,\n        sortOrder: {\n          key: {\n            key: \"name\",\n            type: \"ENTITY_FIELD\"\n          },\n          direction: \"ASC\"\n        }\n      },\n    entityFields: [\n        {\n          key: \"name\",\n          type: \"ENTITY_FIELD\"\n        }\n      ],\n    latestValues: [\n        {\n          key: \"description\",\n          type: \"ATTRIBUTE\"\n        }\n      ]\n}\n\n\nshowInfoDialog()\n\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    debugger\n    let vm = instance;\n    \n    vm.importTitle = 'Exportação de dados'\n\n    vm.layout= \"simplificado\"\n    vm.sd= moment(vm.ed).subtract(1, 'month').toDate()\n    vm.ed= moment.utc().startOf('day').toDate()\n    vm.integracao= \"all\"\n    vm.async= true\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.change = function() {\n        \n        debugger;\n\n        var diffTime = Math.abs(vm.ed - vm.sd);\n        var diffMonths = diffTime / (1000 * 60 * 60 * 24 * 30)\n        var linhasPorMes = 0\n\n        switch(vm.integracao){\n            case \"all\": \n                linhasPorMes = 24*4*30\n                break;\n            case \"hour\":\n                linhasPorMes = 24*30\n                break;\n            case \"day\":\n                linhasPorMes = 30\n                break;\n            case \"month\":\n                linhasPorMes = 1\n                break;   \n        }\n        \n        vm.linhas = Math.ceil(linhasPorMes * diffMonths * widgetContext.defaultSubscription.dataPages[0].totalElements)\n        \n        if (vm.linhas < 5000) {\n            vm.async = false\n        } else {\n            vm.async = true\n        }\n        \n    }\n    \n    vm.change()\n\n\n    vm.send = function() {\n        \n        debugger;\n\n        let formData = new FormData();\n        \n        sd = moment(vm.sd).format('YYYY-MM-DD');\n        ed = moment(vm.ed).format('YYYY-MM-DD');\n        \n        payload.start_date = sd\n        payload.end_date = ed\n        payload.interval = vm.integracao\n        payload.layout = vm.layout\n        payload.getnow = !vm.async\n        \n        formData.append(\"payload\", JSON.stringify( payload ))\n        console.log(JSON.stringify( payload ))\n\n        var fetchParams = { method: \"POST\", body: formData }\n        \n        fetch(url, fetchParams).then(function(r) {\n            if (r.status == 200) {\n\n                return r.json().then(\n                    function(data) {\n                        if (data.link && data.link.length > 0) {\n                            window.open(data.link,'_blank');\n                        }\n                        else {\n                            widgetContext.showSuccessToast('Sucesso. Um link será enviado para o seu e-mail', 3000)\n                        }\n                    })\n            }\n            else {\n                widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n            }\n            \n        })\n        .catch(function(error) {\n            widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n        });\n  \n        vm.cancel();  \n        \n    }\n}\n",
                "customResources" : [ ],
                "id" : "1b96f6ff-dc58-7b21-46d9-db9b72b210c4"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "0023cf96-56f9-4b7f-8c33-f42ca2ba6a2a",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "0cc25e2f-1752-4725-bc6c-99e355a1c323" : {
          "type" : "static",
          "sizeX" : 64,
          "sizeY" : 2,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(0, 105, 92)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "tablist" : "[\n    {\"name\": \"Submedição\", \"icon\": \"fa-sitemap\", \"stateId\": \"ssu_submedicao_subcliente\"}\n]\n"
            },
            "title" : "Tab Telemetria",
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "0cc25e2f-1752-4725-bc6c-99e355a1c323",
          "typeFullFqn" : "tenant.teste.tabs_permissions"
        },
        "a221a726-fd75-0171-24d9-2e65d8f6583a" : {
          "type" : "static",
          "sizeX" : 64,
          "sizeY" : 2,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(0, 105, 92)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "tablist" : "[\n    {\"name\": \"Admin\", \"icon\": \"fa-address-card\", \"stateId\": \"adm_clientes\"},\n    {\"name\": \"Voltar\", \"icon\": \"fa-arrow-circle-left\", \"stateId\": \"solar_home\"},\n    {\"name\": \"Usina\", \"icon\": \"fa-solar-panel\", \"stateId\": \"solar_usina\"},\n    {\"name\": \"Geração\", \"icon\": \"fa-solar-panel\", \"stateId\": \"solar_invest\"},\n    {\"name\": \"Equipamentos\", \"icon\": \"fa-hdd\", \"stateId\": \"solar_equiptos\"},\n    {\"name\": \"Unidades Consumidoras\", \"icon\": \"fa-project-diagram\", \"stateId\": \"solar_ucs\"},\n    {\"name\": \"Auditoria\", \"icon\": \"fa-check-square\", \"stateId\": \"solar_kpis\"},\n    {\"name\": \"Performance\", \"icon\": \"fa-sort-amount-up\", \"stateId\": \"solar_performance_ratio\"},\n    {\"name\": \"Contratos\", \"icon\": \"fa-file-contract\", \"stateId\": \"solar_contratos\"},\n    {\"name\": \"Configuração\", \"icon\": \"fa-cog\", \"stateId\": \"solar_config_ufv\"},\n    {\"name\": \"Admin Only\", \"icon\": \"fa-cog\", \"stateId\": \"solar_config_admin\"}\n]\n"
            },
            "title" : "Tab Solar",
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showLegend" : false,
            "actions" : { }
          },
          "id" : "a221a726-fd75-0171-24d9-2e65d8f6583a",
          "typeFullFqn" : "tenant.teste.tabs_permissions"
        },
        "61078680-83b5-ba0e-02a0-e2e864b19697" : {
          "type" : "timeseries",
          "sizeX" : 8,
          "sizeY" : 5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "minipanel_v",
                "type" : "timeseries",
                "label" : "Tensão (V)",
                "color" : "#2196f3",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.7974850532846043,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "minipanel_v_ref",
                "type" : "timeseries",
                "label" : "Tensão ref. (V)",
                "color" : "#4caf50",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.2983125887484186,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : true,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "timewindowMs" : 172800000,
                "quickInterval" : "CURRENT_DAY",
                "interval" : 600000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 50000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "timeForComparison" : "previousInterval",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "showLegend" : true,
              "legendConfig" : {
                "direction" : "column",
                "position" : "right",
                "sortDataKeys" : false,
                "showMin" : false,
                "showMax" : true,
                "showAvg" : false,
                "showTotal" : false
              }
            },
            "title" : "Tensão miniplacas",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "displayTimewindow" : true
          },
          "row" : 0,
          "col" : 0,
          "id" : "61078680-83b5-ba0e-02a0-e2e864b19697",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "fe6d6acc-f268-42a3-a328-d0bcc9643042" : {
          "type" : "static",
          "sizeX" : 15,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Upload de Faturas</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 30px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "label UC GD",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "fe6d6acc-f268-42a3-a328-d0bcc9643042",
          "typeFullFqn" : "system.cards.html_card"
        },
        "b27849bb-4e6b-b4c4-0ae6-f97dc8816d18" : {
          "type" : "static",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card' id=\"upload\">\nCarregar faturas\n</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
            },
            "title" : "New HTML Card",
            "dropShadow" : true,
            "actions" : {
              "elementClick" : [ {
                "name" : "upload",
                "icon" : "more_horiz",
                "type" : "customPretty",
                "customHtml" : "<form #editDeviceForm=\"ngForm\" [formGroup] = 'fileAdd'\n      (ngSubmit)=\"send()\" style=\"width: 650px;\" >\n  <mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>Importar contas em PDF</h2>\n    <span fxFlex></span>\n    <button mat-button mat-icon-button\n            (click)=\"cancel()\"\n            type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div class = 'loading' *ngIf=\"loadingFiles\">\n        <div fxLayout = 'column'>\n            <mat-progress-spinner class=\"test\" mode = 'determinate' value = '{{progress}}' diameter=\"100\"></mat-progress-spinner>\n            <div>Aguarde...</div>\n        </div>\n    </div>\n    <div class=\"tb-container\">\n      <label class=\"action-title\">Arquivos PDF originais da concessionária</label>\n        <div class=\"action-file-select-container \">\n              <div class=\"action-file-clear-container\">\n                <button mat-button mat-icon-button color=\"primary\"\n                        type=\"button\"\n                        (click)=\"clearFile()\"\n                        class=\"action-file-clear-btn\"\n                        matTooltip=\"{{ 'action.remove' | translate }}\"\n                        matTooltipPosition=\"above\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </div>\n            <div class=\"drop-area action-flow-drop\">\n                <label for=\"file-input\">Arraste o arquivo ou clique aqui para selecionar</label>\n                <input class=\"file-input\" type=\"file\" id=\"file-input\" formControlName = 'controlInputField' multiple (change)=\"fileAdded($event.target.files)\">\n              </div>\n        </div>\n    </div>\n    <div class = 'file-info'>\n      <div *ngIf=\"!fileName\" class=\"cut-text\">Nenhum arquivo selecionado</div>\n      <div *ngIf=\"fileName\" class=\"cut-text\">{{ fileName }}</div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\">\n    <span fxFlex></span>\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button mat-raised-button color=\"primary\"\n            style=\"margin-right: 20px;\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || fileAdd.invalid\">\n      Import\n    </button>\n  </div>\n</form>",
                "customCss" : "\n.file-input{\n       display: none;\n}\n\n.action-flow-drop{\n     position: relative;\n    height: 100%;\n    overflow: hidden;\n    border: dashed 2px;\n    margin-left: 15px;\n}\n\n.action-flow-drop label{\n    display: flex;\n      flex-direction: column;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      font-size: 16px;\n      text-align: center;\n}\n\n.action-title{\n    display: block;\n    padding-bottom: 8px;\n    margin-left: 15px;\n    color: #8E8E8E;\n    font-size:12px;\n}\n\n.action-file-select-container{\n    position: relative;\n    width: 100%;\n    height: 100px;\n}\n\n.action-file-clear-container{\n    position: relative;\n    float: right;\n    width: 48px;\n    height: 100%;\n}\n\n.action-file-clear-btn{\n    top: 50%;\n    transform: translate(0%, -50%) !important;\n}\n\n.file-info{\n    margin-left: 15px;\n    margin-right: 15px;\n}\n\n.loading{\n    margin-top: 5px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    text-align: center;\n}\n\n.action-flow-drop label{\n    font-size: 25px;\n}",
                "customFunction" : "\nlet $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenEditDeviceDialog();\n\nfunction openEditDeviceDialog() {\n    customDialog.customDialog(htmlTemplate, EditDeviceDialogController).subscribe();\n}\n\nfunction EditDeviceDialogController(instance) {\n    let vm = instance;\n    vm.fileName = '';\n    vm.progress = 0;\n    vm.loadingFiles = false;\n    let url = 'https://solarhub.engecomp.io/invoices'\n    let user = widgetContext.currentUser;\n    let userMail = user.sub\n    let parent_id = widgetContext.stateController.getEntityId('Curr_customer')\n    \n     $( document ).ready(function() {\n        let form = $('.drop-area');\n        form.on('drag dragstart dragend dragover dragenter dragleave drop', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n        }).on('drop', function(e) {\n            vm.fileAdded(e.originalEvent.dataTransfer.files);\n        });\n    });\n    \n    vm.fileAdd = vm.fb.group({\n        file:[[], [vm.validators.required]],\n        controlInputField:''\n    });\n\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n    vm.clearFile = () => {\n        $(\".file-input\").value = \"\";\n        vm.fileName = '';\n        vm.fileAdd.patchValue({file: []})\n    }\n\n    vm.fileAdded = (files)=> {\n        for(let i = 0; i < files.length; i++){\n            let filetype=files[i].name.split('.').pop();\n            let filesize=files[i].size\n            if (filetype.toLowerCase() === 'pdf' && filesize < 1024*1024*4) {\n                let newFiles = vm.fileAdd.get('file').value\n                if(vm.fileAdd.get('file').value.length !== 0){\n                    vm.fileName += ' // ';\n                }\n                newFiles.push(files.item(i))\n                vm.fileAdd.patchValue({file: newFiles})\n                vm.fileName += files.item(i).name;\n            } else {\n                if (filetype.toLowerCase() !== 'pdf') {\n                    alert(files[i].name + \" tem extensão inválida\");\n                } else {\n                    alert(files[i].name + \" excede 4MB\");\n                }\n                \n            }\n        }\n        vm.fileAdd.get('controlInputField').patchValue('', {emitEvent: false});\n    }\n\n    vm.send = () =>\n    {\n        var total_files = vm.fileAdd.get('file').value.length\n        var promises = []\n        var completed = 0\n        for(let i=0; i < total_files; i++) {\n            vm.progress = Math.round((i+1) / vm.fileAdd.get('file').value.length * 100)\n            let req = new XMLHttpRequest();\n            let formData = new FormData();\n            \n            var instructions = {\n                url: \"http://localhost:5000/gd\",\n                // parent_id: widgetContext.stateController.getEntityId('Curr_Site'),\n                tenant: 'america',\n                user: userMail\n            };\n            \n            formData.append(\"invoice\", vm.fileAdd.get('file').value[i]);\n            formData.append(\"instructions\", JSON.stringify( instructions ))\n            promises.push(\n                fetch(url, {method: \"POST\", body: formData}).then(function (r) {\n                    ++completed\n                    if (completed % 5 == 0) {\n                        widgetContext.showSuccessToast(completed+' de '+total_files+' arquivos carregados. Em andamento.', 3000)\n                    }\n                })\n                )\n        }\n        debugger;\n        Promise.all(promises).then(function (responses) {\n            widgetContext.showSuccessToast(total_files+' arquivos carregados com sucesso', 3000)\n        });\n        widgetContext.showSuccessToast('Carregando arquivos. Mantenha esta tela aberta', 3000)\n        vm.cancel();\n    }\n}\n",
                "customResources" : [ ],
                "id" : "31b92f4f-724a-d137-3366-1827c30d7b60"
              } ]
            }
          },
          "row" : 0,
          "col" : 0,
          "id" : "b27849bb-4e6b-b4c4-0ae6-f97dc8816d18",
          "typeFullFqn" : "system.cards.html_card"
        },
        "e7db3254-ce5d-42c3-ad53-5a4a7618bb15" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 23,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(17, 103, 93)",
            "color" : "rgb(255, 255, 255)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Consumidor",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Tabela de Pontos",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "ee76901d-e4df-00fe-aac8-c6a6cd4e1331",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "Consumidor",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "70%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~~SEM NOME~~\"; \n}\nreturn nome;"
                },
                "_hash" : 0.5889221504240929,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~~SEM NOME~~\"; \n}\nreturn nome;",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "serial",
                "type" : "attribute",
                "label" : "Remota",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "30%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.32020296738311727
              } ]
            } ],
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "name" : "update state",
                "icon" : "more_horiz",
                "type" : "custom",
                "customFunction" : "let entityRelationService = widgetContext.entityRelationService\nlet attributeService = widgetContext.attributeService\n\nvar params = widgetContext.stateController.getStateParams();\nparams.Curr_Site = {\n    entityId: entityId,\n    entityName: entityName\n};\n\nentityRelationService.findInfoByTo(entityId).subscribe(\n    (relations) => {\n        if (relations.length > 0 && relations[0].from.entityType == 'DEVICE') {\n            params[\"Curr_Fat_BT\"]= {\n                entityId: relations[0].from,\n                entityName: relations[0].fromName\n            };\n        }\n        widgetContext.stateController.updateState('faturas_telemetria', params, false);\n    }\n);\n",
                "id" : "44a81251-ca85-3f7b-f3c1-4d5bcfd7fde6"
              } ],
              "headerButton" : [ ],
              "rowDoubleClick" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "e7db3254-ce5d-42c3-ad53-5a4a7618bb15",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "37e27508-65ba-3a41-cb8e-34a5c15586df" : {
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "medicao_inversores",
                "type" : "attribute",
                "label" : "medicao_inversores",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.9261578796571555
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "widgetTitle" : "Tem medição inversores?",
              "trueValue" : "Sim",
              "falseValue" : "Não"
            },
            "title" : "input_med_inversores",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false
          },
          "row" : 0,
          "col" : 0,
          "id" : "37e27508-65ba-3a41-cb8e-34a5c15586df",
          "typeFullFqn" : "system.input_widgets.update_server_boolean_attribute"
        },
        "7b6b27be-f79a-b286-5e9a-24c999737624" : {
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "medicao_ssu",
                "type" : "attribute",
                "label" : "medicao_ssu",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5293557635566792
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "trueValue" : "Sim",
              "falseValue" : "Não",
              "widgetTitle" : "Tem medição SSU?"
            },
            "title" : "input_med_ssu",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false
          },
          "row" : 0,
          "col" : 0,
          "id" : "7b6b27be-f79a-b286-5e9a-24c999737624",
          "typeFullFqn" : "system.input_widgets.update_server_boolean_attribute"
        },
        "03471c83-5ab1-f1a9-5244-1926fd66e61a" : {
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "bot",
                "type" : "attribute",
                "label" : "bot",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.9426408895132181
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "widgetTitle" : "BOT?",
              "trueValue" : "Sim",
              "falseValue" : "Não"
            },
            "title" : "input_bot",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false
          },
          "row" : 0,
          "col" : 0,
          "id" : "03471c83-5ab1-f1a9-5244-1926fd66e61a",
          "typeFullFqn" : "system.input_widgets.update_server_boolean_attribute"
        },
        "779f12bb-5ab8-e64e-d0f2-8074a66cc944" : {
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "site_pwd",
                "type" : "attribute",
                "label" : "site_pwd",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.7421673043930115
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Senha"
            },
            "title" : "input_site_pwd",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "779f12bb-5ab8-e64e-d0f2-8074a66cc944",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "948b763f-3117-e8d2-a951-a8707fc86943" : {
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "site_user",
                "type" : "attribute",
                "label" : "site_user",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.06801384380558706
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Usuário"
            },
            "title" : "input_site_user",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "948b763f-3117-e8d2-a951-a8707fc86943",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "2abae2ac-6088-42a0-a968-248e4dc7c283" : {
          "type" : "latest",
          "sizeX" : 34,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "displayEntityName" : false,
              "displayEntityType" : false,
              "entityNameColumnTitle" : "Usinas",
              "entitiesTitle" : "Lista de Usinas",
              "defaultSortOrder" : "Usina",
              "enableSelectColumnDisplay" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true
            },
            "title" : "Lista de Usinas",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "48230aec-e803-e27d-3129-e2e9f331d1b2",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "status",
                "type" : "attribute",
                "label" : "Status",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var html = {\n    0: '<html>&nbsp;</html>',\n    1: '<html><img title=\"Online\" src=\"https://solarhub.engecomp.io/res/sitemap_verde_24.png\" width=\"20\" height=\"20\"></html>',\n    2: '<html><img title=\"Alarme\" src=\"https://solarhub.engecomp.io/res/sitemap_amarelo_24.png\" width=\"20\" height=\"20\"></html>',\n    3: '<html><img title=\"Offline\" src=\"https://solarhub.engecomp.io/res/sitemap_vermelho_24.png\" width=\"20\" height=\"20\"></html>',\n    11: '<html><img title=\"Online\" src=\"https://solarhub.engecomp.io/res/ok.png\" width=\"20\" height=\"20\"></html>',\n    12: '<html><img title=\"Alarme\" src=\"https://solarhub.engecomp.io/res/attention6.png\" width=\"20\" height=\"20\"></html>',\n    13: '<html><img title=\"Offline\" src=\"https://solarhub.engecomp.io/res/nok.png\" width=\"20\" height=\"20\"></html>'\n};\n\nreturn html[value];",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.7430476877162842,
                "postFuncBody" : "try {\n    var result = JSON.parse(value);\n}\ncatch {\n    return 1\n}\n\nvar ac = 0;\nvar lt = 0;\nvar offset = 10;\n\nac = (result.alarm_count || 0);\nlt = (result.last_telemetry || 0);    \ntipo = (result.type || 0); \n\nif (tipo == \"node\") {\n    offset = 0;\n}\n\nx = parseInt(moment.utc().format('x'))\nvar horas = ((x - lt) / 3600000);\n\nvar tolerancia = 1.5;\n\n// calcula se tá online ou offline\nif (horas > tolerancia) { \n    return offset + 3;     // vermelho NotOk \n}\n\nif (ac >= 1) {\n    return offset + 2;     // triangulo ALARME\n}\nreturn offset + 1;         // verde OK",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "Usina",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "20%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.6023863017299247,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~~ SEM NOME ~~\"    \n}\nreturn nome;"
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "Cidade",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "25%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.6593539409904223
              }, {
                "name" : "pm_wh_produced_delta_day_sum",
                "type" : "timeseries",
                "label" : "kWh Hoje",
                "color" : "#607d8b",
                "settings" : {
                  "columnWidth" : "15%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-br',{minimumSignificanDigits: 3, minimumFractionDigits:0, maximumFractionDigits:0})\n",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.0816944742981931,
                "postFuncBody" : "var d = new Date();\nvar h = d.getHours() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (h*3600)) { \n\n    // formata o valor a ser apresentado\n    return value;\n\n}\nreturn \" \";\n\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "pm_wh_produced_delta_month_sum",
                "type" : "timeseries",
                "label" : "kWh Mês",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "15%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-br',{minimumSignificanDigits: 3, minimumFractionDigits:0, maximumFractionDigits:0})+\" \""
                },
                "_hash" : 0.654638610429995,
                "postFuncBody" : "var d = new Date();\nvar n = d.getDate() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    return value;\n\n}\nreturn \"\"\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "potencia_nominal",
                "type" : "attribute",
                "label" : "Potência kW",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "15%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "if (value === null) {\n    return \"\";\n} else {\n    return value.toLocaleString('pt-br',{minimumSignificanDigits: 3, minimumFractionDigits:0, maximumFractionDigits:0});\n}"
                },
                "_hash" : 0.3008403297160325,
                "units" : "",
                "decimals" : null
              }, {
                "name" : "fat_total_ucs",
                "type" : "attribute",
                "label" : "Num UCs",
                "color" : "#8bc34a",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.19892611014873496,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "name" : "Detalhes da unidade",
                "icon" : "more_horiz",
                "type" : "custom",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\nvar params = widgetContext.stateController.getStateParams();\nlet entityRelationService = $injector.get(widgetContext.servicesMap.get('entityRelationService'));\n\nparams.Curr_Usina= {\n    entityId: entityId,\n    entityName: entityName\n};\ndestination = \"solar_usina\";        // PÁGINA DEFAULT\n\nfunction onlySpaces(str) {\n  return /^\\s*$/.test(str);\n}\n\ndebugger;\n$injector.get(widgetContext.servicesMap.get('attributeService')).getEntityAttributes(entityId, 'SERVER_SCOPE', ['mainTab', 'medicao_inversores', 'medicao_ssu']).subscribe((attribute) => {\n    attributes = {};\n    for(var i=0;i<attribute.length;i++) {\n        attributes[attribute[i].key] = attribute[i].value;\n    }\n    \n    if (attribute.length > 0) {\n        if (attributes.hasOwnProperty('mainTab') && !onlySpaces(attributes.mainTab)) {\n            destination = attributes.mainTab;       // PEGA MAINTAB SE ESTIVER CADASTRADO\n            widgetContext.stateController.updateState(destination, params, false);\n            return;\n        } else {\n            //if (attributes.hasOwnProperty('medicao_inversores') && attributes.medicao_inversores) {\n                destination = \"solar_usina\";        // VAI PRA PÁGINA QUE MOSTRA MEDIÇÃO DE INVERSORES\n                widgetContext.stateController.updateState(destination, params, false);\n                return;\n            //} else {\n            //    destination = \"solar_ger\";          // VAI PRA PÁGINA QUE MOSTRA SÓ DADOS DE SSU (GER)\n             \n                // ATRIBUIR O ID DO DEVICE TIPO GER RELACIONADO À VARIÁVEL CURR_GER\n\n                q = {\"entityFilter\":\n                    {\n                        \"type\": \"deviceSearchQuery\",\n                        \"resolveMultiple\": false,\n                        \"rootStateEntity\": true,\n                        \"stateEntityParamName\": \"\",\n                        \"defaultStateEntity\": null,\n                        \"rootEntity\": entityId,\n                        \"direction\": \"FROM\",\n                        \"maxLevel\": 1,\n                        \"relationType\": \"Contains\",\n                        \"deviceTypes\": [\"GER\"]\n                    },\n                    \"pageLink\": {\n                            \"page\": 0,\n                            \"pageSize\": 1000,\n                            \"textSearch\": null,\n                            \"dynamic\": false,\n                            \"sortOrder\": {},\n                        },\n                    \"entityFields\": [],\n                    \"latestValues\": [],\n                    \"keyFilters\": []\n                }\n    \n                widgetContext.entityService.findEntityDataByQuery(q).subscribe((devices) => {\n                    if (devices.data.length > 0) {\n                        // widgetContext.deviceService.getDevice(devices.data[0].entityId.id).subscribe((device) => {\n                        //     params.Curr_Ger= {\n                        //         entityId: device.id,\n                        //         entityName: device.name\n                        //     };\n                        //     widgetContext.stateController.updateState(destination, params, false);\n                        //     return\n                        // })\n                        params.Curr_Ger= {\n                            entityId: devices.data[0].entityId,\n                            //entityName: device.name\n                        };\n                        widgetContext.stateController.updateState(destination, params, false);\n                        return;\n                    } else {\n                        params.Curr_Ger = {};\n                        widgetContext.stateController.updateState(destination, params, false);\n                        return;\n                    }\n                    \n                })\n            //}\n        }\n    }\n\n    \n});\n",
                "id" : "095b684e-c744-ea3d-2b34-b99e1f6bf707"
              } ],
              "actionCellButton" : [ ],
              "headerButton" : [ {
                "id" : "2dca44d3-2e56-9fbc-21c2-40cc1e45d063",
                "name" : "Alarmes",
                "icon" : "warning",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "solar_alarmes",
                "setEntityId" : false
              }, {
                "id" : "8fa04f3a-7086-9427-deee-732bcb539c06",
                "name" : "Performance Atual",
                "icon" : "bubble_chart",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "solar_kpis_inst",
                "setEntityId" : false
              }, {
                "name" : "Relatório Faturas",
                "icon" : "arrow_downward",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n     <div fxLayout=\"column\" fxLayout.gt-sm=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"20px\">\n         \n\n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"0\" fxFlexOrder.gt-sm=\"0\">\n          <mat-label>Data Inicial</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"sdStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n        \n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"1\" fxFlexOrder.gt-sm=\"1\">\n          <mat-label>Data Final</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"edStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n\n    </div>\n    \n    <div [fxShow]=\"!OK\" fxLayoutGap=\"20px\" style=\"color: red; font-weight: bold;\">ATENÇÃO: {{ errorMessage }}</div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nvar user = widgetContext.currentUser;\n\n\nvar url = 'https://solarhub.engecomp.io/be/uc_data_export/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\n\npayload = {\n    email: user.sub,\n    token: localStorage[\"jwt_token\"]\n}\n\npayload.search = {\n    entityFilter: widgetContext.defaultSubscription.configuredDatasources[0].entityFilter,\n    pageLink: {\n        page: 0,\n        pageSize: 1000,\n        textSearch: null,\n        dynamic: false,\n        sortOrder: {\n          key: {\n            key: \"name\",\n            type: \"ENTITY_FIELD\"\n          },\n          direction: \"ASC\"\n        }\n      },\n    entityFields: [\n        {\n          key: \"name\",\n          type: \"ENTITY_FIELD\"\n        }\n      ],\n    latestValues: [\n        {\n          key: \"description\",\n          type: \"ATTRIBUTE\"\n        }\n      ]\n}\n\npayload.search.entityFilter.maxLevel = 9\npayload.search.entityFilter.type = \"deviceSearchQuery\"\npayload.search.entityFilter.deviceTypes = [\"UC\"]\n\nshowInfoDialog()\n\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    \n    let vm = instance;   \n    vm.OK = true\n\n    vm.importTitle = 'Exportação de dados - FATURAS'\n    \n    vm.ed = moment.utc().startOf('day').toDate();\n    vm.sd = moment(vm.ed).subtract(1, 'month').toDate();\n\n    vm.sdStr = moment(vm.sd).format('DD/MM/YYYY');\n    vm.edStr = moment(vm.ed).format('DD/MM/YYYY');\n    \n    vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY')\n    vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY')\n    \n    \n    vm.change = function() {\n\n        vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY HH:mm')\n        vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY HH:mm')\n        \n        var days = moment(vm.ed).diff(moment(vm.sd),\n            'days');\n            \n        if (!vm.sd._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data inicial inválida\"\n            return\n        }\n        \n        if (!vm.ed._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data final inválida\"\n            return\n        }\n\n        //check start date greater than end date\n        if (days < 0) {\n            vm.OK = false;\n            vm.errorMessage =\n                \"Data inicial maior que data final\";\n            return;\n        }\n\n        vm.OK = true;\n    }\n\n    \n    vm.change()\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n\n        let formData = new FormData();\n        \n        sd = moment(vm.sd).format('YYYY-MM-DD');\n        ed = moment(vm.ed).format('YYYY-MM-DD');\n        \n        payload.start_date = sd\n        payload.end_date = ed\n        payload.getnow = true\n        payload.use_case = \"ssu\"\n        \n        formData.append(\"payload\", JSON.stringify( payload ))\n        console.log(JSON.stringify( payload ))\n\n        var fetchParams = { method: \"POST\", body: formData }\n        \n        fetch(url, fetchParams).then(function(r) {\n            if (r.status == 200) {\n\n                return r.json().then(\n                    function(data) {\n                        if (data.link && data.link.length > 0) {\n                            window.open(data.link,'_blank');\n                        }\n                        else {\n                            widgetContext.showSuccessToast('Sucesso. Um link será enviado para o seu e-mail', 3000)\n                        }\n                    })\n            }\n            else {\n                widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n            }\n            \n        })\n        .catch(function(error) {\n            widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n        });\n  \n        vm.cancel();  \n        \n    }\n}\n",
                "customResources" : [ ],
                "id" : "ccbed037-3fa0-7373-d6b2-f3db124b9e8d"
              } ],
              "rowDoubleClick" : [ ]
            },
            "legendConfig" : {
              "position" : "bottom",
              "showMin" : false,
              "showMax" : false,
              "showAvg" : true,
              "showTotal" : false
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "2abae2ac-6088-42a0-a968-248e4dc7c283",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "19b38d8d-751d-4322-a3da-4207538e4c40" : {
          "type" : "timeseries",
          "sizeX" : 30,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pm_wh_produced_delta_day_sum",
                "type" : "timeseries",
                "label" : "Medição Usina",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "Stack0",
                  "aggUnit" : [ "day" ]
                },
                "_hash" : 0.8740100839991156,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "pm_wh_produced_delta_month_sum",
                "type" : "timeseries",
                "label" : "Medição Usina",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ "month" ]
                },
                "_hash" : 0.09957695826280699,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "geracao_dia",
                "type" : "timeseries",
                "label" : "Medição Distribuidora",
                "color" : "#65baa7",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "steppedLine" : "false",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack1",
                  "aggUnit" : [ "day" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.6994766054702646,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "geracao_mes",
                "type" : "timeseries",
                "label" : "Medição Distribuidora",
                "color" : "#65baa7",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "steppedLine" : "false",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack1",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.19267782010665457,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1644375599000,
                  "endTimeMs" : 1646967599000
                },
                "interval" : 63244800
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : false,
              "timeWindows" : [ "7D", "30D", "Mes", "12M", "Ano" ],
              "timeWindowsUnits" : "day,day,day,month,month",
              "initialTimeWindow" : "30D",
              "showContractedDemandCurves" : false,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "showRightScale" : false,
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: false,\n    callback: callback\n}\n\nreturn ticks",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            label += tooltipItem.yLabel.toLocaleString(\n                'pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n        \nfilter = function (tooltipItem, data) {return tooltipItem.value != \"NaN\"}\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n\n    }\n}\n\nreturn tooltip",
              "stacked" : true,
              "roundToUnit" : true
            },
            "title" : "Geração Total (kWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            }
          },
          "id" : "19b38d8d-751d-4322-a3da-4207538e4c40",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "48a8b270-b5d2-4856-9213-50c532c92cf0" : {
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "active_energy_day_ger",
                "type" : "timeseries",
                "label" : "val_ssu",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.939965496982661,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "var d = new Date();\n\nif (value === null) {\n    return 0;\n}\n\nhoje = Math.floor((d.getTime()/1000)/86400);\ndia_dado = Math.floor((time/1000)/86400);\n\nif (dia_dado == hoje) { \n\n    // retorna o valor a ser apresentado\n    return value;\n\n}\nreturn 0;"
              }, {
                "name" : "pm_wh_produced_delta_day_sum",
                "type" : "timeseries",
                "label" : "val_usina",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5151753312783649,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "var d = new Date();\n\nif (value === null) {\n    return 0;\n}\n\nhoje = Math.floor((d.getTime()/1000)/86400);\ndia_dado = Math.floor((time/1000)/86400);\n\nif (dia_dado == hoje) { \n\n    // retorna o valor a ser apresentado\n    return value;\n\n}\nreturn 0;"
              }, {
                "name" : "medicao_inversores",
                "type" : "attribute",
                "label" : "medicao_inversores",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.5247736112186379
              }, {
                "name" : "medicao_ssu",
                "type" : "attribute",
                "label" : "medicao_ssu",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.9032493976687692
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#ffffff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<script>\n    \n    var en_ssu = \"${val_ssu}\";\n    var en_usina = \"${val_usina}\"; \n    var tem_ssu = \"${medicao_ssu}\"; \n    var tem_inversores = \"${medicao_inversores}\";\n\n    en_ssu = parseFloat(en_ssu) || 0\n    en_usina = parseFloat(en_usina) || 0\n\n    var unit = \" kWh\";\n    var frac_digits = 0;\n    \n    if (tem_inversores == \"true\") {\n        if (en_usina >= 10000) {\n        \ten_usina /= 1000;\t// to MWh\n        \tunit = \" MWh\";\n            frac_digits = 1;\n            if (en_usina >= 1000) { frac_digits = 0 }\n            if (en_usina >= 10000) {\n            \ten_usina /= 1000;\t// to GWh\n            \tunit = \" GWh\";\n                frac_digits = 2;\n                if (en_usina >= 1000) { frac_digits = 1 }\n            }\n        }\n        document.getElementById(\"energyusina\").innerHTML = (en_usina).toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: frac_digits, maximumFractionDigits: frac_digits}) + unit;\n    } else {\n        if (en_ssu >= 1000) {\n        \ten_ssu /= 1000;\t// to MWh\n        \tunit = \" MWh\";\n            frac_digits = 1;\n            if (en_ssu >= 1000) { frac_digits = 0 }\n            if (en_ssu >= 1000) {\n            \ten_ssu /= 1000;\t// to GWh\n            \tunit = \" GWh\";\n                frac_digits = 2;\n                if (en_ssu >= 1000) { frac_digits = 1 }\n            }\n        }\n        document.getElementById(\"energyusina\").innerHTML = (en_ssu).toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: frac_digits, maximumFractionDigits: frac_digits}) + unit;\n    }\n\n</script>\n\n<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div id=\"energyusina\" class=\"value\"></div><br>\n        <footer>\n            <div class=\"additional-info\">${valor_extra}</div>\n        </footer>\n    </section>\n</div>\n\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Geração Hoje",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false
          },
          "row" : 0,
          "col" : 0,
          "id" : "48a8b270-b5d2-4856-9213-50c532c92cf0",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "83d9569b-5371-43d3-9054-0a8e47f684ab" : {
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "active_energy_month_ger",
                "type" : "timeseries",
                "label" : "mes_ssu",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.939965496982661,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "var d = new Date();\n\nif (value === null) {\n    return 0;\n}\n\nmes_hoje = d.getMonth();\nmes_dado = Math.round(Math.round(((Math.floor((time/1000)/86400)/365.25) % 1) * 365) / 30);\n\nif (mes_dado == mes_hoje) { \n\n    // retorna o valor a ser apresentado\n    return value;\n\n}\nreturn 0;"
              }, {
                "name" : "pm_wh_produced_delta_month_sum",
                "type" : "timeseries",
                "label" : "mes_usina",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5151753312783649,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "var d = new Date();\n\nif (value === null) {\n    return 0;\n}\n\nmes_hoje = d.getMonth();\nmes_dado = Math.round(Math.round(((Math.floor((time/1000)/86400)/365.25) % 1) * 365) / 30);\n\nif (mes_dado == mes_hoje) { \n\n    // retorna o valor a ser apresentado\n    return value;\n\n}\nreturn 0;"
              }, {
                "name" : "medicao_inversores",
                "type" : "attribute",
                "label" : "medicao_inversores",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.5247736112186379
              }, {
                "name" : "medicao_ssu",
                "type" : "attribute",
                "label" : "medicao_ssu",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.9032493976687692
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#ffffff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<script>\n    \n    var en_ssu = \"${mes_ssu}\";\n    var en_usina = \"${mes_usina}\"; \n    var tem_ssu = \"${medicao_ssu}\"; \n    var tem_inversores = \"${medicao_inversores}\";\n\n    en_ssu = parseFloat(en_ssu) || 0\n    en_usina = parseFloat(en_usina) || 0\n\n    var unit = \" kWh\";\n    var frac_digits = 0;\n    \n    if (tem_inversores == \"true\") {\n        if (en_usina >= 10000) {\n        \ten_usina /= 1000;\t// to MWh\n        \tunit = \" MWh\";\n            frac_digits = 1;\n            if (en_usina >= 1000) { frac_digits = 0 }\n            if (en_usina >= 10000) {\n            \ten_usina /= 1000;\t// to GWh\n            \tunit = \" GWh\";\n                frac_digits = 2;\n                if (en_usina >= 1000) { frac_digits = 1 }\n            }\n        }\n        document.getElementById(\"energyusina_mes\").innerHTML = (en_usina).toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: frac_digits, maximumFractionDigits: frac_digits}) + unit;\n    } else {\n        if (en_ssu >= 1000) {\n        \ten_ssu /= 1000;\t// to MWh\n        \tunit = \" MWh\";\n            frac_digits = 1;\n            if (en_ssu >= 1000) { frac_digits = 0 }\n            if (en_ssu >= 1000) {\n            \ten_ssu /= 1000;\t// to GWh\n            \tunit = \" GWh\";\n                frac_digits = 2;\n                if (en_ssu >= 1000) { frac_digits = 1 }\n            }\n        }\n        document.getElementById(\"energyusina_mes\").innerHTML = (en_ssu).toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: frac_digits, maximumFractionDigits: frac_digits}) + unit;\n    }\n\n</script>\n\n<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div id=\"energyusina_mes\" class=\"value\"></div><br>\n        <footer>\n            <div class=\"additional-info\">${valor_extra}</div>\n        </footer>\n    </section>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Geração Mês",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false
          },
          "row" : 0,
          "col" : 0,
          "id" : "83d9569b-5371-43d3-9054-0a8e47f684ab",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "4d0d607f-2910-44b8-9f02-23af990e134e" : {
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "energy_average_year",
                "type" : "timeseries",
                "label" : "ano_usina",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.939965496982661,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : null
              }, {
                "name" : "energy_average_year_rtu",
                "type" : "timeseries",
                "label" : "ano_ssu",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5151753312783649,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "medicao_inversores",
                "type" : "attribute",
                "label" : "medicao_inversores",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.5247736112186379
              }, {
                "name" : "medicao_ssu",
                "type" : "attribute",
                "label" : "medicao_ssu",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.9032493976687692
              }, {
                "name" : "fat_consumo_kwh_average_year",
                "type" : "timeseries",
                "label" : "fat_consumo_kwh_average_year",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.18601088732544246
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#ffffff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<script>\n    \n    var en_ssu = \"${ano_ssu}\";\n    var en_usina = \"${ano_usina}\"; \n    var tem_ssu = \"${medicao_ssu}\"; \n    var tem_inversores = \"${medicao_inversores}\";\n    var consumo_anual = \"${fat_consumo_kwh_average_year}\";\n\n    en_ssu = parseFloat(en_ssu) || 0\n    en_usina = parseFloat(en_usina) || 0\n    consumo_anual = parseFloat(consumo_anual) || 0\n\n    var unit = \" kWh\";\n    var frac_digits = 0;\n    document.getElementById(\"energyusina_ano\").innerHTML = \"0\" + unit;\n    document.getElementById(\"cob_geracao_ano2\").innerHTML = \"\";\n    \n    if (tem_inversores == \"true\") {\n        if (en_usina > 0 ) {\n            if ((consumo_anual > 0)) {\n                document.getElementById(\"cob_geracao_ano2\").innerHTML = \"Cobertura: \"+ (en_usina/consumo_anual).toLocaleString('pt-Br',{style: \"percent\", minimumFractionDigits: 1, maximumFractionDigits: 1});\n            }\n            if (en_usina >= 10000) {\n            \ten_usina /= 1000;\t// to MWh\n            \tunit = \" MWh\";\n                frac_digits = 1;\n                if (en_usina >= 1000) { frac_digits = 0 }\n                if (en_usina >= 10000) {\n                \ten_usina /= 1000;\t// to GWh\n                \tunit = \" GWh\";\n                    frac_digits = 2;\n                    if (en_usina >= 1000) { frac_digits = 1 }\n                }\n            }\n            document.getElementById(\"energyusina_ano\").innerHTML = (en_usina).toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: frac_digits, maximumFractionDigits: frac_digits}) + unit;\n        }\n    } else {\n        if (en_ssu > 0 ) {\n            if ((consumo_anual > 0)) {\n                document.getElementById(\"cob_geracao_ano2\").innerHTML = \"Cobertura: \"+ (en_ssu/consumo_anual).toLocaleString('pt-Br',{style: \"percent\", minimumFractionDigits: 1, maximumFractionDigits: 1});\n            }\n            if (en_ssu >= 1000) {\n            \ten_ssu /= 1000;\t// to MWh\n            \tunit = \" MWh\";\n                frac_digits = 1;\n                if (en_ssu >= 1000) { frac_digits = 0 }\n                if (en_ssu >= 1000) {\n                \ten_ssu /= 1000;\t// to GWh\n                \tunit = \" GWh\";\n                    frac_digits = 2;\n                    if (en_ssu >= 1000) { frac_digits = 1 }\n                }\n            }\n            document.getElementById(\"energyusina_ano\").innerHTML = (en_ssu).toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: frac_digits, maximumFractionDigits: frac_digits}) + unit;\n        }\n    }\n\n\n</script>\n\n<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div id=\"energyusina_ano\" class=\"value\"></div><br>\n        <footer>\n            <div id=\"cob_geracao_ano2\" class=\"additional-info\"></div>\n        </footer>\n    </section>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Geração Anual (est.)",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false
          },
          "row" : 0,
          "col" : 0,
          "id" : "4d0d607f-2910-44b8-9f02-23af990e134e",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "627a3ec7-8787-7806-9eb1-7aaa17e60d28" : {
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "energy_average_year",
                "type" : "timeseries",
                "label" : "val_usina_fc",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.7777761151129292,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "energy_average_year_rtu",
                "type" : "timeseries",
                "label" : "val_ssu_fc",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.5261422961027664,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "potencia_nominal",
                "type" : "attribute",
                "label" : "potencia_nominal",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.13014273391353814
              }, {
                "name" : "medicao_inversores",
                "type" : "attribute",
                "label" : "medicao_inversores",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.0671112728487222
              }, {
                "name" : "medicao_ssu",
                "type" : "attribute",
                "label" : "medicao_ssu",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.13145278141508432
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<script>\n\n    var en_ssu_fc = \"${val_ssu_fc}\";\n    var en_usina_fc = \"${val_usina_fc}\"; \n    var potencia_nominal = \"${potencia_nominal}\";\n    var tem_ssu = \"${medicao_ssu}\"; \n    var tem_inversores = \"${medicao_inversores}\";\n\n    en_ssu_fc = parseFloat(en_ssu_fc) || 0\n    en_usina_fc = parseFloat(en_usina_fc) || 0\n    potencia_nominal = parseFloat(potencia_nominal) || 0\n\n    if (potencia_nominal > 0) {\n        if (tem_inversores == \"true\") {\n            document.getElementById(\"energyusina_fc\").innerHTML = ((en_usina_fc*100)/(potencia_nominal*365*24)).toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: 1, maximumFractionDigits: 1}) + \" %\";\n        } else {\n            document.getElementById(\"energyusina_fc\").innerHTML = ((en_ssu_fc*100)/(potencia_nominal*365*24)).toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: 1, maximumFractionDigits: 1}) + \" %\";\n        }\n    } else {\n        document.getElementById(\"energyusina_fc\").innerHTML = \"\";\n    }\n    \n</script>\n\n<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div id=\"energyusina_fc\" class=\"value\"></div><br>\n        <footer>\n            <div class=\"additional-info\">${valor_extra}</div>\n        </footer>\n    </section>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .descricao {\n    display: inline-block;\n    font-family : Roboto Condensed;\n    font-weight : 600;\n    font-size : 1.8vh;\n    padding: 10px;\n    color: rgb(50,88,127);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    margin-left: 7px;\n    color: rgba(0,0,0,0.54);\n    font-size: 1.5vh;\n}\n\n.status-widget .espaco {\n    font-size: 1.5vh;\n}\n\n.date {\n    font-family: Arial;\n    font-size: 1.25vh;\n    color: darkslategray;\n}\n\n.tam_auto {\n  height: auto;\n  width: auto;\n  text-align: center;\n}\n"
            },
            "title" : "Fator de Capacidade",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false
          },
          "row" : 0,
          "col" : 0,
          "id" : "627a3ec7-8787-7806-9eb1-7aaa17e60d28",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "868a759e-ae39-4864-85cf-5d9d34858b1a" : {
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "co2_rtu",
                "type" : "timeseries",
                "label" : "co2_ssu",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.939965496982661,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return value/1000;"
              }, {
                "name" : "co2",
                "type" : "timeseries",
                "label" : "co2_usina",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5151753312783649,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return value/1000;"
              }, {
                "name" : "medicao_inversores",
                "type" : "attribute",
                "label" : "medicao_inversores",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.5247736112186379
              }, {
                "name" : "medicao_ssu",
                "type" : "attribute",
                "label" : "medicao_ssu",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.9032493976687692
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#ffffff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<script>\n    \n    var en_ssu = \"${co2_ssu}\";\n    var en_usina = \"${co2_usina}\"; \n    var tem_ssu = \"${medicao_ssu}\"; \n    var tem_inversores = \"${medicao_inversores}\";\n\n    en_ssu = parseFloat(en_ssu) || 0\n    en_usina = parseFloat(en_usina) || 0\n\n    var unit = \" ton\";\n    var frac_digits = 1;\n    \n    if (tem_inversores == \"true\") {\n        document.getElementById(\"energyusina_co2\").innerHTML = (en_usina).toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: frac_digits, maximumFractionDigits: frac_digits}) + unit;\n    } else {\n        document.getElementById(\"energyusina_co2\").innerHTML = (en_ssu).toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: frac_digits, maximumFractionDigits: frac_digits}) + unit;\n    }\n\n</script>\n\n<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div id=\"energyusina_co2\" class=\"value\"></div><br>\n        <footer>\n            <div class=\"additional-info\">${valor_extra}</div>\n        </footer>\n    </section>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "CO2 Anual",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false
          },
          "row" : 0,
          "col" : 0,
          "id" : "868a759e-ae39-4864-85cf-5d9d34858b1a",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "c1c851be-a22b-425f-a9e8-c99f2cb2008c" : {
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "trees_rtu",
                "type" : "timeseries",
                "label" : "trees_ssu",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.939965496982661,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : null
              }, {
                "name" : "trees",
                "type" : "timeseries",
                "label" : "trees_usina",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5151753312783649,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : null
              }, {
                "name" : "medicao_inversores",
                "type" : "attribute",
                "label" : "medicao_inversores",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.5247736112186379
              }, {
                "name" : "medicao_ssu",
                "type" : "attribute",
                "label" : "medicao_ssu",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.9032493976687692
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#ffffff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<script>\n    \n    var en_ssu = \"${trees_ssu}\";\n    var en_usina = \"${trees_usina}\"; \n    var tem_ssu = \"${medicao_ssu}\"; \n    var tem_inversores = \"${medicao_inversores}\";\n\n    en_ssu = parseFloat(en_ssu) || 0\n    en_usina = parseFloat(en_usina) || 0\n\n    var unit = \" árvores\";\n    var frac_digits = 0;\n    \n    if (tem_inversores == \"true\") {\n        document.getElementById(\"energyusina_trees\").innerHTML = (en_usina).toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: frac_digits, maximumFractionDigits: frac_digits}) + unit;\n    } else {\n        document.getElementById(\"energyusina_trees\").innerHTML = (en_ssu).toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: frac_digits, maximumFractionDigits: frac_digits}) + unit;\n    }\n\n</script>\n\n<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div id=\"energyusina_trees\" class=\"value\"></div><br>\n        <footer>\n            <div class=\"additional-info\">${valor_extra}</div>\n        </footer>\n    </section>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Equivalente a",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false
          },
          "row" : 0,
          "col" : 0,
          "id" : "c1c851be-a22b-425f-a9e8-c99f2cb2008c",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "8ba76e6b-4ccf-4ae7-81fa-4f83076c945e" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh_average_year",
                "type" : "timeseries",
                "label" : "fat_consumo_kwh_average_year",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.10255728674114684,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#ffffff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<script>\n    \n    var consumo_anual = \"${fat_consumo_kwh_average_year}\";\n    consumo_anual = parseFloat(consumo_anual) || 0\n\n    var unit = \" kWh\";\n    var frac_digits = 0;\n    document.getElementById(\"consumo_ano\").innerHTML = \"0\" + unit;\n\n    if (consumo_anual > 0) {\n        if (consumo_anual >= 10000) {\n        \tconsumo_anual /= 1000;\t// to MWh\n        \tunit = \" MWh\";\n            frac_digits = 1;\n            if (consumo_anual >= 1000) { frac_digits = 0 }\n            if (consumo_anual >= 10000) {\n            \tconsumo_anual /= 1000;\t// to GWh\n            \tunit = \" GWh\";\n                frac_digits = 2;\n                if (consumo_anual >= 1000) { frac_digits = 1 }\n            }\n        }\n        document.getElementById(\"consumo_ano\").innerHTML = (consumo_anual).toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: frac_digits, maximumFractionDigits: frac_digits}) + unit;\n    }\n    \n</script>\n\n<div class=\"widget status-widget\">\n    <div layout=\"column\" class=\"main\">\n        <div id=\"consumo_ano\" class=\"value\"></div>\n        <footer>\n            <div class=\"additional-info\"></div>\n        </footer>\n    </div>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Consumo Anual (est.)",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "8ba76e6b-4ccf-4ae7-81fa-4f83076c945e",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "f938477d-3b7d-4f1a-819e-d1f18c35e049" : {
          "type" : "timeseries",
          "sizeX" : 30,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "pm_wh_produced_delta_day_sum",
                "type" : "timeseries",
                "label" : "Energia Gerada",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "stackId" : "Stack0",
                  "aggUnit" : [ "day" ]
                },
                "_hash" : 0.8740100839991156,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "pm_wh_produced_delta_month_sum",
                "type" : "timeseries",
                "label" : "Energia Gerada",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ "month" ]
                },
                "_hash" : 0.09957695826280699,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "geracao_dia",
                "type" : "timeseries",
                "label" : "Energia Injetada",
                "color" : "#65baa7",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "steppedLine" : "false",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack1",
                  "aggUnit" : [ "day" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.6994766054702646,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "geracao_mes",
                "type" : "timeseries",
                "label" : "Energia Injetada",
                "color" : "#65baa7",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "steppedLine" : "false",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack1",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.19267782010665457,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1668999599000,
                  "endTimeMs" : 1671591599000
                },
                "interval" : 63244800
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : false,
              "timeWindows" : [ "7D", "30D", "Mes", "12M", "Ano" ],
              "timeWindowsUnits" : "day,day,day,month,month",
              "initialTimeWindow" : "30D",
              "showContractedDemandCurves" : false,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "showRightScale" : false,
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: false,\n    callback: callback\n}\n\nreturn ticks",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            label += tooltipItem.yLabel.toLocaleString(\n                'pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n        \nfilter = function (tooltipItem, data) {return tooltipItem.value != \"NaN\"}\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n\n    }\n}\n\nreturn tooltip",
              "stacked" : true,
              "roundToUnit" : true
            },
            "title" : "Geração Total (kWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "legendConfig" : {
              "direction" : "column",
              "position" : "bottom",
              "sortDataKeys" : false,
              "showMin" : false,
              "showMax" : false,
              "showAvg" : true,
              "showTotal" : false
            }
          },
          "id" : "f938477d-3b7d-4f1a-819e-d1f18c35e049",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "953969fe-5773-248b-5aee-7653eea5d440" : {
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 6.5,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "entityName",
              "displayEntityName" : true,
              "displayEntityType" : true,
              "enableSelectColumnDisplay" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "entitiesTitle" : "Usuários"
            },
            "title" : "Usuários",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "84592a75-3de0-a3f8-fc24-45d153194f4e",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "homePage",
                "type" : "attribute",
                "label" : "homePage",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.006265209224261881
              }, {
                "name" : "lastLogin",
                "type" : "attribute",
                "label" : "Ult.Login",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return moment.unix(value/1000).format('YYYY-MM-DD HH:mm')"
                },
                "_hash" : 0.1398889342082026,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return value"
              } ]
            } ],
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleIcon" : "",
            "actions" : {
              "rowClick" : [ {
                "name" : "Detalhes do usuário",
                "icon" : "more_horiz",
                "type" : "openDashboardState",
                "targetDashboardStateId" : "adm_users_popup",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_user",
                "openInSeparateDialog" : true,
                "dialogTitle" : "",
                "dialogHideDashboardToolbar" : true,
                "dialogWidth" : null,
                "dialogHeight" : null,
                "openRightLayout" : false,
                "id" : "7b47b963-4ea4-4e0e-c6fa-c95c8abc620e"
              } ]
            }
          },
          "row" : 0,
          "col" : 0,
          "id" : "953969fe-5773-248b-5aee-7653eea5d440",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "24ad6c7a-5aa7-09f8-3050-f734020d0998" : {
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "89fa94b0-707e-c9cb-cb61-bade8a9658e2",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "name",
                "type" : "entityField",
                "label" : "name",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.22188440561556777,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "lastname",
                "type" : "entityField",
                "label" : "lastname",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.43862112039056145,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${name}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "New HTML Value Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false
          },
          "row" : 0,
          "col" : 0,
          "id" : "24ad6c7a-5aa7-09f8-3050-f734020d0998",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "73ff987b-68ab-868e-c9b2-40d532c9f1ac" : {
          "type" : "timeseries",
          "sizeX" : 8,
          "sizeY" : 5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "89fa94b0-707e-c9cb-cb61-bade8a9658e2",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "action",
                "type" : "timeseries",
                "label" : "Acessos",
                "color" : "#2196f3",
                "settings" : {
                  "excludeFromStacking" : false,
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "showLines" : true,
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "thresholds" : [ {
                    "thresholdValueSource" : "predefinedValue"
                  } ],
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  }
                },
                "_hash" : 0.6127376419537791,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "timewindowMs" : 10368000000,
                "quickInterval" : "CURRENT_DAY",
                "interval" : 604800000
              },
              "aggregation" : {
                "type" : "COUNT",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454",
                "min" : 0
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "timeForComparison" : "previousInterval",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "showLegend" : false,
              "legendConfig" : {
                "direction" : "column",
                "position" : "bottom",
                "sortDataKeys" : false,
                "showMin" : false,
                "showMax" : false,
                "showAvg" : true,
                "showTotal" : false
              }
            },
            "title" : "Número de Acessos por Semana",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { }
          },
          "row" : 0,
          "col" : 0,
          "id" : "73ff987b-68ab-868e-c9b2-40d532c9f1ac",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "4d15f0aa-dba5-4a14-b6df-74f11dfc0b11" : {
          "type" : "latest",
          "sizeX" : 11,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "15bb8e7a-abd3-de38-9c4e-a07f19190715",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "consumo_projetado_kwh",
                "type" : "attribute",
                "label" : "valor_mwh",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.6347023344548481,
                "postFuncBody" : "function numberWithCommas(x, y, z) {\n    return x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z});\n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if (value > 100000) {\n        return numberWithCommas(value/1000, 1, 2) + \" MWh\";\n    }\n    return numberWithCommas(value, 0, 0) + \" kWh\";\n\n}\nreturn \" \";",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor_mwh}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Geração Mês (est)",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "4d15f0aa-dba5-4a14-b6df-74f11dfc0b11",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "ef8f2a1a-3e0f-0bfb-f32d-01e6b6562761" : {
          "type" : "timeseries",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "9372d9cb-e9ba-c2a0-1b4c-4316d7a28718",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_saldo_creditos",
                "type" : "timeseries",
                "label" : "fat_saldo_creditos",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.7634466675726166
              } ]
            }, {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "energy_average_year_rtu",
                "type" : "timeseries",
                "label" : "energy_average_year",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.11674352466893967,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : true,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "timewindowMs" : 25920000000,
                "quickInterval" : "CURRENT_DAY",
                "interval" : 7200000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<script>\n    var x = ${fat_saldo_creditos}/${energy_average_year}*12 || \"-x-\"\n    document.getElementById(\"meses_cred\").innerHTML = x.toLocaleString('pt-Br',{style: \"decimal\", minimumFractionDigits: 1, maximumFractionDigits: 1});\n</script>\n<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div id=\"meses_cred\" class=\"value\"></div><br>\n        <footer>\n            <!-- <div class=\"additional-info\">${last_interval_ts}</div> -->\n        </footer>\n    </section>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Meses de Créditos",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "actions" : { },
            "displayTimewindow" : false,
            "enableDataExport" : false,
            "widgetCss" : "",
            "noDataDisplayMessage" : "",
            "showTitleIcon" : false,
            "titleTooltip" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "ef8f2a1a-3e0f-0bfb-f32d-01e6b6562761",
          "typeFullFqn" : "tenant.teste.html_card_ts"
        },
        "35b88277-9345-46b1-bdf6-882f0ca2478f" : {
          "type" : "latest",
          "sizeX" : 20,
          "sizeY" : 4,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "mainTab",
                "type" : "attribute",
                "label" : "mainTab",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.3989835748501396
              } ],
              "entityAliasId" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "TAB principal",
              "minLength" : 0
            },
            "title" : "input_tab_principal",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "35b88277-9345-46b1-bdf6-882f0ca2478f",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "01c1b5f7-e2cd-39a4-14d7-3f3523ce4372" : {
          "type" : "latest",
          "sizeX" : 23,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "default_group",
                "type" : "attribute",
                "label" : "grupo",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.9853482741401354,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Grupo Padrão Fatura (Consumidor)",
              "minLength" : 0,
              "isRequired" : true
            },
            "title" : "edit_telefone_cliente",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "01c1b5f7-e2cd-39a4-14d7-3f3523ce4372",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "7e2de491-7b18-3172-4745-2e13162e6815" : {
          "type" : "latest",
          "sizeX" : 23,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "5fee0380-fec1-773a-3c41-a190aba9610a",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "tenant",
                "type" : "attribute",
                "label" : "tenant",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.9853482741401354,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showResultMessage" : true,
              "showLabel" : true,
              "labelValue" : "Tenant especial",
              "minLength" : 0,
              "isRequired" : true
            },
            "title" : "edit_telefone_cliente",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "7e2de491-7b18-3172-4745-2e13162e6815",
          "typeFullFqn" : "system.input_widgets.update_server_string_attribute"
        },
        "acadc4bc-51d3-ce02-8ff9-d04aa4a9a5b2" : {
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "c887f65b-386b-db62-7d93-8ff5fe5ecdcd",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "name",
                "type" : "entityField",
                "label" : "Nome",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.29512665127240534
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class='card'>\n    <div class='content'>\n        <div class='column'>\n            <div class='title'>\n                &nbsp;&nbsp;${Nome}\n            </div>    \n        </div>\n    </div>\n</div>",
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value {\n    font-size: 1.7vh;\n    font-weight: 300;\n}\n\n.card .title {\n    font-size: 1.5vh;\n    font-weight: bold;\n    color: rgb(50, 88, 127);\n}\n\n.card .description {\n    font-size: 14px;\n    color: #999;\n}\n"
            },
            "title" : "New HTML Value Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "acadc4bc-51d3-ce02-8ff9-d04aa4a9a5b2",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "bcff0f11-d4b5-43af-8cd6-efbc0e538e6f" : {
          "type" : "latest",
          "sizeX" : 36,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "entitiesTitle" : "Pontos de Consumo",
              "enableSearch" : true,
              "enableSelectColumnDisplay" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "false",
              "displayEntityName" : false,
              "displayEntityLabel" : false,
              "displayEntityType" : false,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Nome da Loja",
              "useRowStyleFunction" : true,
              "rowStyleFunction" : "var style = {};\nvar isActive;\n\n//1st check if background style is needed\nif (entity['Contr Ativo'] == 'false') {\n    isActive = false;\n} else {\n    isActive = true;\n}\n\nif (!isActive) {\n    style.background = \"#FAFAFA\";\n}\n\nreturn style;"
            },
            "title" : "Tabela de Pontos de Consumo",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "ea337dd3-3e20-573c-3268-117e79aee26d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_ts",
                "type" : "attribute",
                "label" : "St",
                "color" : "#e91e63",
                "settings" : {
                  "columnWidth" : "7%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "never",
                  "cellContentFunction" : "var alarme = 30 * 24;  // 10 dias\nvar tolerancia = 40 * 24;  // 40 dias\n\nvar x = parseInt(moment.utc().format('x'));\nvar horas = ((x - value) / 3600000);\nvar status \n\n// calcula se faz mais de 40 dias\n\nif (horas > tolerancia) { \n    status = 3;     // vermelho NotOk \n} else if (horas > alarme) { \n    status = 2;     // amarelo Já deveira ter chegado \n} else {\n    status = 1;         // verde OK\n}\n\nvar html = {\n    0: '<html>&nbsp;</html>',\n    1: '<html><img title=\"Fatura Ok\" src=\"https://solarhub.engecomp.io/res/ok.png\" width=\"20\" height=\"20\"></html>',\n    2: '<html><img title=\"Fatura Atrasada\" src=\"https://solarhub.engecomp.io/res/atrasada.png\" width=\"20\" height=\"20\"></html>',\n    3: '<html><img title=\"Fatura Muito Atrasada\" src=\"https://solarhub.engecomp.io/res/nok.png\" width=\"20\" height=\"20\"></html>'\n};\n\nreturn html[status];"
                },
                "_hash" : 0.3319542789910914,
                "postFuncBody" : "",
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "id_ref_cliente",
                "type" : "attribute",
                "label" : "ID",
                "color" : "#03a9f4",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return value.toString();"
                },
                "_hash" : 0.12375032904408023,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : ""
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "Nome da Loja",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "25%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~~SEM NOME~~\"    \n}\nreturn nome;"
                },
                "_hash" : 0.7759033120837209,
                "postFuncBody" : "",
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "MWh",
                "color" : "#00bcd4",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "if (value === null) {\n    return \"\";\n} else {\n    return (value/1000).toLocaleString('pt-br',{minimumSignificanDigits: 3, minimumFractionDigits:1, maximumFractionDigits:1});\n}",
                  "cellStyleFunction" : "return {\"textAlign\" : \"center\"};",
                  "columnWidth" : "0px"
                },
                "_hash" : 0.03231327416933438,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "meta_consumo_espelho",
                "type" : "timeseries",
                "label" : "Meta",
                "color" : "#00bcd4",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "debugger;\n\nif (value === null || value == 0) {\n    return \"\";\n} \n\n// maximo 5 dias de diferenca entre os ts\nif (Math.abs(entity[\"fat_ts\"]-entity[\"meta_ts\"]) < 432000000 ) {\n    return (value/1000).toLocaleString('pt-br',{minimumSignificanDigits: 3, minimumFractionDigits:1, maximumFractionDigits:1});\n}\nreturn \"\";",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.707347061865061,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : "",
                "aggregationType" : "NONE"
              }, {
                "name" : "dif_consumo_espelho",
                "type" : "attribute",
                "label" : "Var %",
                "color" : "#9e9e9e",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-br',{style: 'percent', minimumFractionDigits:1, maximumFractionDigits:1});",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.4153718720171573,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : null,
                "aggregationType" : null
              }, {
                "name" : "dif_consumo_espelho_ytd",
                "type" : "attribute",
                "label" : "Var YTD %",
                "color" : "#00c853",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-br',{style: 'percent', minimumFractionDigits:1, maximumFractionDigits:1});",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.3038901836953741,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null,
                "aggregationType" : null
              }, {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "Mês",
                "color" : "#795548",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return moment(value).format('MMM/YY')",
                  "cellStyleFunction" : "return {\"textAlign\" : \"center\"};"
                },
                "_hash" : 0.20497184840274496,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return time;"
              }, {
                "name" : "fat_total_com_danfes",
                "type" : "timeseries",
                "label" : "BRL",
                "color" : "#673ab7",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-br',{style: 'decimal', minimumFractionDigits:2, maximumFractionDigits:2});"
                },
                "_hash" : 0.4658155376736992,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "10%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellStyleFunction" : "return {\"textAlign\" : \"center\"};"
                },
                "_hash" : 0.46047340608980813,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "Distrib",
                "color" : "#cddc39",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var url = 'https://solarhub.engecomp.io/res/utility_list.json?'+moment().format('MMDD');\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nvar obj = JSON.parse(Get(url));\nif (value == \"\") {\n    return \"Não definida\";\n}\nreturn obj[Math.floor(value)];",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.97263044232483,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : null
              }, {
                "name" : "status_cliente",
                "type" : "attribute",
                "label" : "Status",
                "color" : "#795548",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var dict = {\n    0: \"?Status? \",\n    1:\"Cativo\",\n    2:\"Livre\"\n};\nreturn dict[value];",
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.37901192936159167,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "Classe",
                "color" : "#00bcd4",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var dict = {\n    0:\"?Classe?\",\n    1:\"A1\",\n    2:\"A2\",\n    3:\"A3\",\n    4:\"A3a\",\n    5:\"A4\",\n    6:\"AS\",\n    7:\"B1\",\n    8:\"B2\",\n    9:\"B3\"\n};\nreturn dict[value];",
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.169447420104351,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "enq_tarifario",
                "type" : "attribute",
                "label" : "Tarifa",
                "color" : "#ff5722",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var dict = {\n    0:\"?Tarifa?\",\n    1:\"Azul\",\n    2:\"Verde\",\n    3:\"Convencional\",\n    4:\"Branca\"\n};\nreturn dict[value];",
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.925666268644888,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_next_reading",
                "type" : "timeseries",
                "label" : "Prox Leitura",
                "color" : "#ff9800",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return moment.unix(value).format('DD/MM/YYYY');",
                  "cellStyleFunction" : "return {\"textAlign\" : \"center\"};"
                },
                "_hash" : 0.13985311453045157,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : null
              }, {
                "name" : "meta_consumo_espelho_m2",
                "type" : "timeseries",
                "label" : "meta2",
                "color" : "#2962ff",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "disabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "if (value === null || value == 0) {\n    return \"\";\n} \n\n// maximo 3 dias de diferenca entre os ts\nif (Math.abs(entity[\"St\"]-entity[\"meta_ts\"]) < 259200000 ) {\n    return (value/1000).toLocaleString('pt-br',{minimumSignificanDigits: 3, minimumFractionDigits:1, maximumFractionDigits:1});\n}\nreturn \"\"",
                  "cellStyleFunction" : "return {\"textAlign\" : \"center\"};"
                },
                "_hash" : 0.06590732837199931,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_ts",
                "type" : "attribute",
                "label" : "fat_ts",
                "color" : "#673ab7",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "disabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.1527363355190452,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : null,
                "aggregationType" : null
              }, {
                "name" : "meta_consumo_espelho",
                "type" : "timeseries",
                "label" : "meta_ts",
                "color" : "#009688",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "disabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.8433334488586766,
                "aggregationType" : "NONE",
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return time;"
              } ]
            } ],
            "enableDataExport" : true,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "name" : "change entity",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "custom",
                "customFunction" : "// var $injector = widgetContext.$scope.$injector;\nvar params = widgetContext.stateController.getStateParams()\nvar destination\nvar attributes = {}\n\nwidgetContext.attributeService.getEntityAttributes(entityId, \"SERVER_SCOPE\", [\"loja_espelho\"]).subscribe((r) => {\n    for (var i = 0; i < r.length; i++) {\n        var x = r[i].value\n        attributes[r[i].key] = x\n    }\n    \n    if (!params[\"Curr_Site\"]) {\n        params[\"Curr_Site\"] = {};\n    }\n    params[\"Curr_Site\"] = {entityId: entityId};\n    \n    if (attributes.hasOwnProperty(\"loja_espelho\")) {\n        if (!params[\"Site_Espelho\"]) {\n            params[\"Site_Espelho\"] = {};\n        }\n        params[\"Site_Espelho\"] = {entityId: {id: attributes.loja_espelho, entityType: \"DEVICE\"}};\n    }\n    \n    widgetContext.stateController.updateState(\"ssu_geral_uc\", params, false);    \n})\n\n\n\n// $injector.get(widgetContext.servicesMap.get('deviceService')).getDevice(entityId.id).subscribe((device) => {\n//     if (device.type == 'UC') {\n//         destination = \"ssu_geral_uc\";\n//     } else {\n//         destination = \"ssu_site\";\n//     }\n//     widgetContext.stateController.updateState(destination, params, false);\n// });",
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "1633b5ed-8873-48b9-0ea8-055d147a9ffe"
              } ],
              "headerButton" : [ {
                "id" : "db077380-0a48-5ce3-02d0-57ad29e95ca8",
                "name" : "Alarmes",
                "icon" : "warning",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "ssu_alarmes",
                "setEntityId" : false
              }, {
                "name" : "Exportação de Dados - Telemetria",
                "icon" : "file_download",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n\n\n    <mat-form-field fxFlex class=\"mat-block\">\n        <mat-label>Layout</mat-label>\n        <mat-select name=\"layout\" [(ngModel)]=\"layout\" (ngModelChange)=\"change()\">\n          <mat-option value=\"completo\">Completo</mat-option>\n          <mat-option [disabled]=\"integracao != 'all'\" value=\"simplificado\">Simplificado</mat-option>\n        </mat-select><br>\n    </mat-form-field>\n\n    <mat-form-field fxFlex class=\"mat-block\">\n        <mat-label>Integração</mat-label>\n        <mat-select name=\"integracao\" [(ngModel)]=\"integracao\" (ngModelChange)=\"change()\">\n          <mat-option value=\"all\">15 minutos</mat-option>\n          <mat-option [disabled]=\"layout == 'simplificado'\" value=\"hour\">1 hora</mat-option>\n          <mat-option [disabled]=\"layout == 'simplificado'\" value=\"day\">1 dia</mat-option>\n          <mat-option [disabled]=\"layout == 'simplificado'\" value=\"month\">1 mês</mat-option>\n        </mat-select><br>\n    </mat-form-field>\n    \n    <mat-form-field fxFlex class=\"mat-block\">\n        <mat-label>Formato</mat-label>\n        <mat-select name=\"format\" [(ngModel)]=\"format\">\n          <mat-option value=\"xls\">xls</mat-option>\n          <mat-option value=\"csv\">csv</mat-option>\n        </mat-select><br>\n    </mat-form-field>\n    \n     <div fxLayout=\"column\" fxLayout.gt-sm=\"row\" fxLayoutGap=\"5px\" ng-cloak>\n        \n                \n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"0\" fxFlexOrder.gt-sm=\"0\">\n          <mat-label>Data Inicial</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"sdStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n        \n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"1\" fxFlexOrder.gt-sm=\"1\">\n          <mat-label>Data Final</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"edStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n        \n\n    </div>\n\n    <mat-label>\n        Tamanho estimado: {{ linhas }} linhas<br><br>\n    </mat-label>\n    \n    <mat-label>\n        <input type=\"checkbox\" [(ngModel)]=\"async\"> Envio por email (recomendado)\n    </mat-label>\n\n    <div [fxShow]=\"!OK\" style=\"padding: 20px; color: red; font-weight: bold;\">ATENÇÃO: {{ errorMessage }}</div>\n\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"!OK || (isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nvar user = widgetContext.currentUser;\n\n\nvar url = 'https://solarhub.engecomp.io/be/data_export/cdf9d21d-f312-4ea9-8de7-e54819278999/form/v3'\n\npayload = {\n    email: user.sub,\n    token: localStorage[\"jwt_token\"]\n}\n\npayload.search = {\n    entityFilter: widgetContext.defaultSubscription.configuredDatasources[0].entityFilter,\n    pageLink: {\n        page: 0,\n        pageSize: 1000,\n        textSearch: null,\n        dynamic: false,\n        sortOrder: {\n          key: {\n            key: \"name\",\n            type: \"ENTITY_FIELD\"\n          },\n          direction: \"ASC\"\n        }\n      },\n    entityFields: [\n        {\n          key: \"name\",\n          type: \"ENTITY_FIELD\"\n        }\n      ],\n    latestValues: [\n        {\n          key: \"description\",\n          type: \"ATTRIBUTE\"\n        }\n      ]\n}\n\n\nshowInfoDialog()\n\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n\n    let vm = instance;\n    \n    vm.importTitle = 'Exportação de dados - TELEMETRIA'\n\n    vm.layout= \"simplificado\"\n    // vm.sd= moment(vm.ed).subtract(1, 'month').toDate()\n    // vm.ed= moment.utc().startOf('day').toDate()\n    vm.integracao= \"all\"\n    vm.format= \"xls\"\n    vm.async= true\n    \n    vm.ed = moment.utc().startOf('day').toDate();\n    vm.sd = moment(vm.ed).subtract(1, 'month').toDate();\n\n    vm.sdStr = moment(vm.sd).format('DD/MM/YYYY');\n    vm.edStr = moment(vm.ed).format('DD/MM/YYYY');\n    \n    vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY')\n    vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY')    \n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.change = function() {\n        \n        vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY HH:mm')\n        vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY HH:mm')\n        \n        var days = moment(vm.ed).diff(moment(vm.sd),\n            'days');\n            \n        if (!vm.sd._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data inicial inválida\"\n            return\n        }\n        \n        if (!vm.ed._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data final inválida\"\n            return\n        }\n\n        //check start date greater than end date\n        if (days < 0) {\n            vm.OK = false;\n            vm.errorMessage =\n                \"Data inicial maior que data final\";\n            return;\n        }\n        \n        vm.OK = true;\n\n        var diffTime = Math.abs(vm.ed - vm.sd);\n        var diffMonths = diffTime / (1000 * 60 * 60 * 24 * 30)\n        var linhasPorMes = 0\n\n        switch(vm.integracao){\n            case \"all\": \n                linhasPorMes = 24*4*30\n                break;\n            case \"hour\":\n                linhasPorMes = 24*30\n                break;\n            case \"day\":\n                linhasPorMes = 30\n                break;\n            case \"month\":\n                linhasPorMes = 1\n                break;   \n        }\n        \n        vm.linhas = Math.ceil(linhasPorMes * diffMonths * widgetContext.defaultSubscription.dataPages[0].totalElements)\n        \n        if (vm.linhas < 5000) {\n            vm.async = false\n        } else {\n            vm.async = true\n        }\n        \n    }\n    \n    vm.change()\n\n\n    vm.send = function() {\n        \n        let formData = new FormData();\n        \n        sd = moment(vm.sd).format('YYYY-MM-DD');\n        ed = moment(vm.ed).format('YYYY-MM-DD');\n        \n        payload.start_date = sd\n        payload.end_date = ed\n        payload.interval = vm.integracao\n        payload.output_format = vm.format\n        payload.layout = vm.layout\n        payload.getnow = !vm.async\n        \n        formData.append(\"payload\", JSON.stringify( payload ))\n        console.log(JSON.stringify( payload ))\n\n        var fetchParams = { method: \"POST\", body: formData }\n        \n        fetch(url, fetchParams).then(function(r) {\n            if (r.status == 200) {\n\n                return r.json().then(\n                    function(data) {\n                        if (data.link && data.link.length > 0) {\n                            window.open(data.link,'_blank');\n                        }\n                        else {\n                            widgetContext.showSuccessToast('Sucesso. Um link será enviado para o seu e-mail', 3000)\n                        }\n                    })\n            }\n            else {\n                widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n            }\n            \n        })\n        .catch(function(error) {\n            widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n        });\n  \n        vm.cancel();  \n        \n    }\n}\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "8488c5bc-f7e7-9230-6ab8-faefed25d39d"
              }, {
                "name" : "Adicionar UC",
                "icon" : "cloud_upload",
                "useShowWidgetActionFunction" : true,
                "showWidgetActionFunction" : "var params = widgetContext.stateController.getStateParams()\nreturn params.admin\n",
                "type" : "customPretty",
                "customHtml" : "<form #editDeviceForm=\"ngForm\" [formGroup] = 'fileAdd'\n      (ngSubmit)=\"send()\" style=\"width: 650px;\" >\n  <mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>Importar contas em PDF</h2>\n    <span fxFlex></span>\n    <button mat-button mat-icon-button\n            (click)=\"cancel()\"\n            type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div class = 'loading' *ngIf=\"loadingFiles\">\n        <div fxLayout = 'column'>\n            <mat-progress-spinner class=\"test\" mode = 'determinate' value = '{{progress}}' diameter=\"100\"></mat-progress-spinner>\n            <div>Aguarde...</div>\n        </div>\n    </div>\n    <div class=\"tb-container\">\n      <label class=\"action-title\">Arquivos PDF originais da concessionária</label>\n        <div class=\"action-file-select-container \">\n              <div class=\"action-file-clear-container\">\n                <button mat-button mat-icon-button color=\"primary\"\n                        type=\"button\"\n                        (click)=\"clearFile()\"\n                        class=\"action-file-clear-btn\"\n                        matTooltip=\"{{ 'action.remove' | translate }}\"\n                        matTooltipPosition=\"above\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </div>\n            <div class=\"drop-area action-flow-drop\">\n                <label for=\"file-input\">Arraste o arquivo ou clique aqui para selecionar</label>\n                <input class=\"file-input\"  type=\"file\" id=\"file-input\" formControlName = 'controlInputField' multiple (change)=\"fileAdded($event.target.files)\">\n              </div>\n        </div>\n    </div>\n    <div class = 'file-info'>\n      <div *ngIf=\"!fileName\" class=\"cut-text\">Nenhum arquivo selecionado</div>\n      <div *ngIf=\"fileName\" class=\"cut-text\">{{ fileName }}</div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\">\n    <span fxFlex></span>\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button mat-raised-button color=\"primary\"\n            style=\"margin-right: 20px;\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || fileAdd.invalid\">\n      Import\n    </button>\n  </div>\n</form>",
                "customCss" : "\n.file-input{\n       display: none;\n}\n\n.action-flow-drop{\n     position: relative;\n    height: 100%;\n    overflow: hidden;\n    border: dashed 2px;\n    margin-left: 15px;\n}\n\n.action-flow-drop label{\n    display: flex;\n      flex-direction: column;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      font-size: 16px;\n      text-align: center;\n}\n\n.action-title{\n    display: block;\n    padding-bottom: 8px;\n    margin-left: 15px;\n    color: #8E8E8E;\n    font-size:12px;\n}\n\n.action-file-select-container{\n    position: relative;\n    width: 100%;\n    height: 100px;\n}\n\n.action-file-clear-container{\n    position: relative;\n    float: right;\n    width: 48px;\n    height: 100%;\n}\n\n.action-file-clear-btn{\n    top: 50%;\n    transform: translate(0%, -50%) !important;\n}\n\n.file-info{\n    margin-left: 15px;\n    margin-right: 15px;\n}\n\n.loading{\n    margin-top: 5px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    text-align: center;\n}\n\n.action-flow-drop label{\n    font-size: 25px;\n}",
                "customFunction" : "\nlet $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenEditDeviceDialog();\n\nfunction openEditDeviceDialog() {\n    customDialog.customDialog(htmlTemplate, EditDeviceDialogController).subscribe();\n}\n\nfunction EditDeviceDialogController(instance) {\n    let vm = instance;\n    vm.fileName = '';\n    vm.progress = 0;\n    vm.loadingFiles = false;\n    let url = 'https://solarhub.engecomp.io/invoices'\n    // let url = 'https://solarhub.engecomp.io/'\n    // let url = 'http://127.0.0.1:5000/'\n    let user = widgetContext.currentUser;\n    let userMail = user.sub\n    // let parent_id = widgetContext.stateController.getEntityId('Curr_customer')\n    \n    //hard coded ASSAI - OUTROS\n    let parent_id = {\n        entityType: 'ASSET',\n        id: '53ed32a0-4f08-11ed-af90-0382b482d98e'\n    }\n \n    \n     $( document ).ready(function() {\n        let form = $('.drop-area');\n        form.on('drag dragstart dragend dragover dragenter dragleave drop', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n        }).on('drop', function(e) {\n            vm.fileAdded(e.originalEvent.dataTransfer.files);\n        });\n    });\n    \n    vm.fileAdd = vm.fb.group({\n        file:[[], [vm.validators.required]],\n        controlInputField:''\n    });\n\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n    vm.clearFile = () => {\n        $(\".file-input\").value = \"\";\n        vm.fileName = '';\n        vm.fileAdd.patchValue({file: []})\n    }\n\n    vm.fileAdded = (files)=> {\n        for(let i = 0; i < files.length; i++){\n            let filetype=files[i].name.split('.').pop();\n            let filesize=files[i].size\n            debugger\n            if (['pdf','xml'].includes(filetype.toLowerCase()) && filesize < 1024*1024*4) {\n                let newFiles = vm.fileAdd.get('file').value\n\n                newFiles.push(files.item(i))\n                \n                vm.fileAdd.patchValue({file: newFiles})\n                if (i < 10) {\n                    vm.fileName += files.item(i).name+ ' // ';\n                }\n                if (i == 10) {\n                    vm.fileName += '... total de '+ files.length +' arquivos '\n                }\n\n            } else {\n                if (filetype.toLowerCase() !== 'pdf') {\n                    alert(files[i].name + \" tem extensão inválida\");\n                } else {\n                    alert(files[i].name + \" excede 4MB\");\n                }\n                \n            }\n        }\n        vm.fileAdd.get('controlInputField').patchValue('', {emitEvent: false});\n    }\n    \n\n        vm.send = () =>\n    {\n        var total_files = vm.fileAdd.get('file').value.length\n        var promises = []\n        var completed = 0\n        for(let i=0; i < total_files; i++) {\n            vm.progress = Math.round((i+1) / total_files * 100)\n            let req = new XMLHttpRequest();\n            let formData = new FormData();\n            \n            var instructions = {\n                url: \"http://localhost:5000/gd\",\n                parent_id: parent_id,\n                tenant: 'bt',\n                usage: 1,\n                user: userMail,\n                //sendMail: vm.fileAdd.controls.sendMail.value || true\n            };\n            \n            if (total_files > 120) {\n                instructions.priority = 5\n            } else if (total_files > 30) {\n                instructions.priority = 3\n            }         \n            \n            formData.append(\"invoice\", vm.fileAdd.get('file').value[i]);\n            formData.append(\"instructions\", JSON.stringify( instructions ))\n            promises.push(\n                fetch(url, {method: \"POST\", body: formData}).then(function (r) {\n                    ++completed\n                    if (completed % 5 == 0) {\n                        widgetContext.showSuccessToast(completed+' de '+total_files+' arquivos carregados. Em andamento.', 3000)\n                    }\n                })\n                )\n        }\n\n        Promise.all(promises).then(function (responses) {\n            widgetContext.showSuccessToast(total_files+' arquivos carregados com sucesso', 3000)\n        });\n        widgetContext.showSuccessToast('Carregando arquivos. Mantenha esta tela aberta', 3000)\n        vm.loadingFiles = false;\n        vm.cancel();\n    }  \n}",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "9ee7c44d-c767-c103-530e-38a880cf4e2a"
              }, {
                "name" : "Download de dados - Faturas",
                "icon" : "arrow_downward",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n     <div fxLayout=\"column\" fxLayout.gt-sm=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"20px\">\n         \n\n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"0\" fxFlexOrder.gt-sm=\"0\">\n          <mat-label>Data Inicial</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"sdStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n        \n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"1\" fxFlexOrder.gt-sm=\"1\">\n          <mat-label>Data Final</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"edStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n\n    </div>\n    \n    <div [fxShow]=\"!OK\" fxLayoutGap=\"20px\" style=\"color: red; font-weight: bold;\">ATENÇÃO: {{ errorMessage }}</div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nvar user = widgetContext.currentUser;\n\n\nvar url = 'https://solarhub.engecomp.io/be/uc_data_export/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\n\npayload = {\n    email: user.sub,\n    token: localStorage[\"jwt_token\"]\n}\n\npayload.search = {\n    entityFilter: widgetContext.defaultSubscription.configuredDatasources[0].entityFilter,\n    pageLink: {\n        page: 0,\n        pageSize: 1000,\n        textSearch: null,\n        dynamic: false,\n        sortOrder: {\n          key: {\n            key: \"name\",\n            type: \"ENTITY_FIELD\"\n          },\n          direction: \"ASC\"\n        }\n      },\n    entityFields: [\n        {\n          key: \"name\",\n          type: \"ENTITY_FIELD\"\n        }\n      ],\n    latestValues: [\n        {\n          key: \"description\",\n          type: \"ATTRIBUTE\"\n        }\n      ]\n}\n\npayload.search.entityFilter.maxLevel = 9\n\nshowInfoDialog()\n\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n    \n    let vm = instance;   \n    vm.OK = true\n\n    vm.importTitle = 'Exportação de dados - FATURAS'\n    \n    vm.ed = moment.utc().startOf('day').toDate();\n    vm.sd = moment(vm.ed).subtract(1, 'month').toDate();\n\n    vm.sdStr = moment(vm.sd).format('DD/MM/YYYY');\n    vm.edStr = moment(vm.ed).format('DD/MM/YYYY');\n    \n    vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY')\n    vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY')\n    \n    \n    vm.change = function() {\n\n        vm.sd = moment.utc(vm.sdStr,'DD/MM/YYYY HH:mm')\n        vm.ed = moment.utc(vm.edStr,'DD/MM/YYYY HH:mm')\n        \n        var days = moment(vm.ed).diff(moment(vm.sd),\n            'days');\n            \n        if (!vm.sd._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data inicial inválida\"\n            return\n        }\n        \n        if (!vm.ed._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data final inválida\"\n            return\n        }\n\n        //check start date greater than end date\n        if (days < 0) {\n            vm.OK = false;\n            vm.errorMessage =\n                \"Data inicial maior que data final\";\n            return;\n        }\n\n        vm.OK = true;\n    }\n\n    \n    vm.change()\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n\n        let formData = new FormData();\n        \n        sd = moment(vm.sd).format('YYYY-MM-DD');\n        ed = moment(vm.ed).format('YYYY-MM-DD');\n        \n        payload.start_date = sd\n        payload.end_date = ed\n        payload.getnow = true\n        payload.use_case = \"ssu\"\n        \n        formData.append(\"payload\", JSON.stringify( payload ))\n        console.log(JSON.stringify( payload ))\n\n        var fetchParams = { method: \"POST\", body: formData }\n        \n        fetch(url, fetchParams).then(function(r) {\n            if (r.status == 200) {\n\n                return r.json().then(\n                    function(data) {\n                        if (data.link && data.link.length > 0) {\n                            window.open(data.link,'_blank');\n                        }\n                        else {\n                            widgetContext.showSuccessToast('Sucesso. Um link será enviado para o seu e-mail', 3000)\n                        }\n                    })\n            }\n            else {\n                //widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n                widgetContext.showErrorToast(data.description, 3000)\n            }\n            \n        })\n        .catch(function(error) {\n            widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n        });\n  \n        vm.cancel();  \n        \n    }\n}\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "88e07711-99a0-bb46-9e5b-df6da89ff325"
              }, {
                "name" : "Filtros",
                "icon" : "filter_list",
                "useShowWidgetActionFunction" : false,
                "showWidgetActionFunction" : "return false;",
                "type" : "openDashboardState",
                "targetDashboardStateId" : "ssu_filter_popup",
                "setEntityId" : true,
                "stateEntityParamName" : null,
                "openRightLayout" : false,
                "dialogTitle" : "",
                "dialogHideDashboardToolbar" : true,
                "dialogWidth" : null,
                "dialogHeight" : null,
                "openInSeparateDialog" : true,
                "openInPopover" : false,
                "id" : "ebfaba82-f84c-6fa6-d59e-248418535a93"
              } ],
              "actionCellButton" : [ {
                "name" : "Credenciais",
                "icon" : "key",
                "useShowWidgetActionFunction" : true,
                "showWidgetActionFunction" : "var admin = widgetContext.stateController.getStateParams().admin;\n\nvar customer_list = [\n    \"thales.russo@assai.com.br\",\n    \"sandra.oliveira@assai.com.br\",\n    \"beatriz.silva6@assai.com.br\"\n    ]\n\n\nif (widgetContext.currentUser.authority === 'TENANT_ADMIN') {\n    return true\n}\n\nif (customer_list.includes(widgetContext.currentUser.sub) && admin ) {\n    return true\n}\n\nreturn false",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <mat-label>&nbsp;<br>Unidade Consumidora: {{attributes.UC}}</mat-label>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n        style=\"min-width: 800px; padding-top: 15px\">\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-around left\" fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=\"50%\" fxLayoutFill>\n                <mat-label>Usuário</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.site_user\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"50%\" fxLayoutFill>\n                <mat-label>Senha</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.site_pwd\">\n            </mat-form-field>\n        </div>            \n\n            <mat-form-field [fxShow]=\"tenant_admin\" fxFlex fxLayoutFill>\n                <mat-label>Tenant</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.tenant\">\n            </mat-form-field>\n            \n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Código de UC alternativo</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.alternative_UC\">\n            </mat-form-field>            \n\n    </div>\n    \n    <mat-table [dataSource]=\"logs\" class=\"mat-elevation-z8\">\n\n            <ng-container matColumnDef=\"ts\">\n                <mat-header-cell *matHeaderCellDef> Data </mat-header-cell>\n                <mat-cell *matCellDef=\"let log\" style=\"width:25%\">{{ log.ts }}</mat-cell>\n            </ng-container>\n            \n            <ng-container matColumnDef=\"bot_log\">\n                <mat-header-cell *matHeaderCellDef> Evento </mat-header-cell>\n                <mat-cell *matCellDef=\"let log\" style=\"width:67%\">{{ log.bot_log }}</mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"bot_picture\">\n                <mat-header-cell *matHeaderCellDef> Imagem </mat-header-cell>\n                <mat-cell *matCellDef=\"let log\" style=\"width:8%\">\n                    <a [fxShow]=\"log.pic_present\" href=\"{{log.bot_picture}}\" target=\"_blank\"><mat-icon >camera_alt</mat-icon></a>\n                </mat-cell>\n            </ng-container>            \n        \n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n        <mat-row *matRowDef=\"let log; columns: displayedColumns;\"></mat-row>\n    </mat-table>    \n\n    \n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\nlet deviceService = $injector.get(widgetContext.servicesMap.get('deviceService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nshowInfoDialog()\n\nvar telemetry_keys = ['bot_log', 'bot_picture']\n\nfunction uniq(a) {\n    return a.sort().filter(function(item, pos, ary) {\n        return !pos || item != ary[pos - 1];\n    });\n}\n\nfunction normalize_telemetry(telemetry) {\n    ts_list = []\n    for (const key in telemetry) {\n        telemetry[key].map(({ts})=>ts_list.push(ts));\n    }\n\n    ts_list = uniq(ts_list).sort().reverse();    \n    \n    var x = []\n    var new_telemetry = []\n    for (const ts of ts_list) {\n        x = {ts: ts, pic_present: false}\n        for (const key of telemetry_keys) {\n            y = telemetry[key].find(z => z.ts === ts);\n            if (typeof y != 'undefined') {\n                x[key] = y.value\n                if (key == 'bot_picture') {\n                    x['pic_present'] = true\n                }\n            }\n        }\n        new_telemetry.push(x)\n    }\n    return new_telemetry\n}\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Credenciais da Unidade Consumidora'\n    vm.namedev = entityName\n    vm.displayedColumns = ['ts','bot_log', 'bot_picture'];\n    \n    deviceService.getDevice(entityId.id).subscribe((device) => {\n        vm.device = device;\n    })\n    \n    // vm.logs = [{ts: 123, bot_log: \"teste\"}, {ts: 456, bot_log: \"teste2\"}]\n    \n    attributeService.getEntityTimeseries(entityId, telemetry_keys, moment().subtract(30, 'days').format('x'), moment().format('x')).subscribe((telemetry) => {\n        //vm.logs = telemetry.bot_log;\n        vm.logs = normalize_telemetry(telemetry)\n        for (var i=0; i<vm.logs.length; i++) {\n            vm.logs[i].ts = moment(vm.logs[i].ts).local().format('DD/MM/YYYY HH:mm')\n        }\n    })    \n    \n    \n    vm.diffAttrs=['site_user','site_pwd', 'tenant', 'UC', 'alternative_UC']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n         })\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n\n        vm.cancel()\n    }\n\n}\n\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "02dced8e-1d5b-44b6-beb2-945e9aac4d65"
              } ],
              "rowDoubleClick" : [ ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "bcff0f11-d4b5-43af-8cd6-efbc0e538e6f",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "b3026bfe-a898-47f7-9dd8-9eeebe6e7dfc" : {
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "89fa94b0-707e-c9cb-cb61-bade8a9658e2",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "filter_distrib",
                "type" : "attribute",
                "label" : "Distribuidora",
                "color" : "#f44336",
                "settings" : {
                  "dataKeyType" : "server",
                  "dataKeyValueType" : "select",
                  "slideToggleLabelPosition" : "after",
                  "selectOptions" : [ {
                    "value" : "0",
                    "label" : "-x-"
                  }, {
                    "value" : "18",
                    "label" : "AMAZONAS ENERGIA"
                  }, {
                    "value" : "8",
                    "label" : "CEA AMAPÁ"
                  }, {
                    "value" : "10",
                    "label" : "CEB"
                  }, {
                    "value" : "13",
                    "label" : "CEEE"
                  }, {
                    "value" : "16",
                    "label" : "CELESC"
                  }, {
                    "value" : "7",
                    "label" : "CELPE"
                  }, {
                    "value" : "5",
                    "label" : "CEMIG"
                  }, {
                    "value" : "9",
                    "label" : "COELBA"
                  }, {
                    "value" : "4",
                    "label" : "COPEL"
                  }, {
                    "value" : "11",
                    "label" : "COSERN"
                  }, {
                    "value" : "12",
                    "label" : "CPFL PAULISTA"
                  }, {
                    "value" : "1",
                    "label" : "CPFL PIRATININGA"
                  }, {
                    "value" : "14",
                    "label" : "EDP ES"
                  }, {
                    "value" : "15",
                    "label" : "EDP SP"
                  }, {
                    "value" : "6",
                    "label" : "ELEKTRO"
                  }, {
                    "value" : "19",
                    "label" : "ENEL CE"
                  }, {
                    "value" : "21",
                    "label" : "ENEL GO"
                  }, {
                    "value" : "20",
                    "label" : "ENEL RJ"
                  }, {
                    "value" : "2",
                    "label" : "ENEL SP"
                  }, {
                    "value" : "22",
                    "label" : "ENERGISA AC"
                  }, {
                    "value" : "27",
                    "label" : "ENERGISA BORBOREMA"
                  }, {
                    "value" : "23",
                    "label" : "ENERGISA MG"
                  }, {
                    "value" : "24",
                    "label" : "ENERGISA MS"
                  }, {
                    "value" : "25",
                    "label" : "ENERGISA MT"
                  }, {
                    "value" : "26",
                    "label" : "ENERGISA PB"
                  }, {
                    "value" : "28",
                    "label" : "ENERGISA RJ"
                  }, {
                    "value" : "29",
                    "label" : "ENERGISA RO"
                  }, {
                    "value" : "30",
                    "label" : "ENERGISA SE"
                  }, {
                    "value" : "31",
                    "label" : "ENERGISA S-SE"
                  }, {
                    "value" : "32",
                    "label" : "ENERGISA TO"
                  }, {
                    "value" : "17",
                    "label" : "EQUATORIAL AL"
                  }, {
                    "value" : "33",
                    "label" : "EQUATORIAL MA"
                  }, {
                    "value" : "35",
                    "label" : "EQUATORIAL PA"
                  }, {
                    "value" : "34",
                    "label" : "EQUATORIAL PI"
                  }, {
                    "value" : "3",
                    "label" : "LIGHT"
                  }, {
                    "value" : "36",
                    "label" : "RGE SUL"
                  }, {
                    "value" : "46",
                    "label" : "RORAIMA ENERGIA"
                  }, {
                    "value" : "59",
                    "label" : "SULGIPE"
                  } ],
                  "step" : 1,
                  "required" : false,
                  "requiredErrorMessage" : "",
                  "minValueErrorMessage" : "",
                  "maxValueErrorMessage" : "",
                  "invalidDateErrorMessage" : "",
                  "isEditable" : "editable",
                  "dataKeyHidden" : false,
                  "useCustomIcon" : false,
                  "customIcon" : "",
                  "useGetValueFunction" : false,
                  "useSetValueFunction" : false
                },
                "_hash" : 0.04786852412957088,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "filter_status",
                "type" : "attribute",
                "label" : "Status",
                "color" : "#9c27b0",
                "settings" : {
                  "dataKeyType" : "server",
                  "dataKeyValueType" : "select",
                  "slideToggleLabelPosition" : "after",
                  "selectOptions" : [ {
                    "value" : "0",
                    "label" : "-x-"
                  }, {
                    "value" : "1",
                    "label" : "Cativo"
                  }, {
                    "value" : "2",
                    "label" : "Livre"
                  } ],
                  "step" : 1,
                  "required" : false,
                  "requiredErrorMessage" : "",
                  "minValueErrorMessage" : "",
                  "maxValueErrorMessage" : "",
                  "invalidDateErrorMessage" : "",
                  "isEditable" : "editable",
                  "dataKeyHidden" : false,
                  "useCustomIcon" : false,
                  "customIcon" : "",
                  "useGetValueFunction" : false,
                  "useSetValueFunction" : false
                },
                "_hash" : 0.7810446938289004,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "filter_classe",
                "type" : "attribute",
                "label" : "Classe",
                "color" : "#ffc107",
                "settings" : {
                  "dataKeyType" : "server",
                  "dataKeyValueType" : "select",
                  "slideToggleLabelPosition" : "after",
                  "selectOptions" : [ {
                    "value" : "0",
                    "label" : "-x-"
                  }, {
                    "value" : "1",
                    "label" : "A1"
                  }, {
                    "value" : "2",
                    "label" : "A2"
                  }, {
                    "value" : "3",
                    "label" : "A3"
                  }, {
                    "value" : "4",
                    "label" : "A3a"
                  }, {
                    "value" : "5",
                    "label" : "A4"
                  }, {
                    "value" : "6",
                    "label" : "AS"
                  }, {
                    "value" : "7",
                    "label" : "B1"
                  }, {
                    "value" : "8",
                    "label" : "B2"
                  }, {
                    "value" : "9",
                    "label" : "B3"
                  } ],
                  "step" : 1,
                  "required" : false,
                  "requiredErrorMessage" : "",
                  "minValueErrorMessage" : "",
                  "maxValueErrorMessage" : "",
                  "invalidDateErrorMessage" : "",
                  "isEditable" : "editable",
                  "dataKeyHidden" : false,
                  "useCustomIcon" : false,
                  "customIcon" : "",
                  "useGetValueFunction" : false,
                  "useSetValueFunction" : false
                },
                "_hash" : 0.3202003976960288,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "filter_tarifa",
                "type" : "attribute",
                "label" : "Tarifa",
                "color" : "#607d8b",
                "settings" : {
                  "dataKeyType" : "server",
                  "dataKeyValueType" : "select",
                  "slideToggleLabelPosition" : "after",
                  "selectOptions" : [ {
                    "value" : "0",
                    "label" : "-x-"
                  }, {
                    "value" : "1",
                    "label" : "Azul"
                  }, {
                    "value" : "2",
                    "label" : "Verde"
                  }, {
                    "value" : "3",
                    "label" : "Convencional"
                  }, {
                    "value" : "4",
                    "label" : "Branca"
                  } ],
                  "step" : 1,
                  "required" : false,
                  "requiredErrorMessage" : "",
                  "minValueErrorMessage" : "",
                  "maxValueErrorMessage" : "",
                  "invalidDateErrorMessage" : "",
                  "isEditable" : "editable",
                  "dataKeyHidden" : false,
                  "useCustomIcon" : false,
                  "customIcon" : "",
                  "useGetValueFunction" : false,
                  "useSetValueFunction" : false
                },
                "_hash" : 0.7110609888974386,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "filter_LED",
                "type" : "attribute",
                "label" : "Iluminação",
                "color" : "#4caf50",
                "settings" : {
                  "dataKeyType" : "server",
                  "dataKeyValueType" : "select",
                  "slideToggleLabelPosition" : "after",
                  "selectOptions" : [ {
                    "value" : "0",
                    "label" : "-x-"
                  }, {
                    "value" : "1",
                    "label" : "LED"
                  }, {
                    "label" : "Fluorescente",
                    "value" : "2"
                  } ],
                  "step" : 1,
                  "required" : false,
                  "requiredErrorMessage" : "",
                  "minValueErrorMessage" : "",
                  "maxValueErrorMessage" : "",
                  "invalidDateErrorMessage" : "",
                  "isEditable" : "editable",
                  "dataKeyHidden" : false,
                  "useCustomIcon" : false,
                  "useGetValueFunction" : false,
                  "useSetValueFunction" : false
                },
                "_hash" : 0.06864224561893617,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "filter_AC2",
                "type" : "attribute",
                "label" : "Ar Condicionado",
                "color" : "#f44336",
                "settings" : {
                  "dataKeyType" : "server",
                  "dataKeyValueType" : "select",
                  "slideToggleLabelPosition" : "after",
                  "selectOptions" : [ {
                    "value" : "0",
                    "label" : "-x-"
                  }, {
                    "value" : "1",
                    "label" : "Sim"
                  }, {
                    "value" : "2",
                    "label" : "Não"
                  } ],
                  "step" : 1,
                  "required" : false,
                  "requiredErrorMessage" : "",
                  "minValueErrorMessage" : "",
                  "maxValueErrorMessage" : "",
                  "invalidDateErrorMessage" : "",
                  "isEditable" : "editable",
                  "dataKeyHidden" : false,
                  "useCustomIcon" : false,
                  "customIcon" : "",
                  "useGetValueFunction" : false,
                  "useSetValueFunction" : false
                },
                "_hash" : 0.9703366404050382,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "20px",
            "settings" : {
              "showActionButtons" : false,
              "showResultMessage" : false,
              "showGroupTitle" : false,
              "fieldsAlignment" : "row",
              "updateAllValues" : false,
              "groupTitle" : "${entityName}",
              "fieldsInRow" : 1
            },
            "title" : "Filtros",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "widgetCss" : "",
            "noDataDisplayMessage" : "",
            "margin" : "",
            "titleTooltip" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "b3026bfe-a898-47f7-9dd8-9eeebe6e7dfc",
          "typeFullFqn" : "system.input_widgets.update_multiple_attributes"
        },
        "714f244c-c766-4e75-9442-e9ae186f0e86" : {
          "type" : "static",
          "sizeX" : 15,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Filtro de Unidades Consumidoras</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 20px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "label Filtro UCs",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "714f244c-c766-4e75-9442-e9ae186f0e86",
          "typeFullFqn" : "system.cards.html_card"
        },
        "e5bc4254-246d-41f1-abf9-aa62318f00b8" : {
          "type" : "latest",
          "sizeX" : 20,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "244faf8c-5b98-22f7-05e3-118bf50d0134",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.4791707582333746
              }, {
                "name" : "status_cliente",
                "type" : "attribute",
                "label" : "status_cliente",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.9103397791075183,
                "postFuncBody" : "var dict = {\n    0: \"?Status? \",\n    1:\"Cativo\",\n    2:\"Livre\"\n};\nreturn dict[value];\n"
              }, {
                "name" : "classe_tensao",
                "type" : "attribute",
                "label" : "classe_tensao",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.2693891785658551,
                "postFuncBody" : "var dict = {\n    0:\"\",\n    1:\"A1\",\n    2:\"A2\",\n    3:\"A3\",\n    4:\"A3a\",\n    5:\"A4\",\n    6:\"AS\",\n    7:\"B1\",\n    8:\"B2\",\n    9:\"B3\"\n};\nreturn dict[value];"
              }, {
                "name" : "enq_tarifario",
                "type" : "attribute",
                "label" : "enq_tarifario",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.7979988314678461,
                "postFuncBody" : "var dict = {\n    0:\"?Tarifa?\",\n    1:\"Azul\",\n    2:\"Verde\",\n    3:\"Convencional\",\n    4:\"Branca\"\n};\nreturn dict[value];"
              }, {
                "name" : "demanda_fp",
                "type" : "attribute",
                "label" : "demanda_fp",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.6170238355590876,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 1}) + \" kW\";"
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "utility",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.9958414655770815,
                "postFuncBody" : "var url = 'https://solarhub.engecomp.io/res/utility_list.json?'+moment().format('MMDD');\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nvar obj = JSON.parse(Get(url));\nif (value == \"\") {\n    return \"Não definida\";\n}\nreturn obj[Math.floor(value)];",
                "usePostProcessing" : true,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<table width=\"100%\" class='card'>\n    <tr width=\"100%\">\n        <td width=\"5%\">&nbsp;</td>\n        <td width=\"95%\">\n            <div class='content'>\n                <div class='column'>\n                    <div class='value_red'>\n                        ${description}\n                    </div>\n                    <div class='description'>\n                        ${status_cliente} ${classe_tensao} ${enq_tarifario} ${demanda_fp}<br>\n                        ${utility}\n                    </div>    \n                </div>\n            </div>\n        </td>\n    </tr>\n</table>\n",
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}\n"
            },
            "title" : "ID Site 2",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "e5bc4254-246d-41f1-abf9-aa62318f00b8",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "32a2b43a-0a86-4d65-bbbf-e0235d9c87a9" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Consumidor",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "entitiesTitle" : "Site",
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "true",
              "displayEntityLabel" : false,
              "useRowStyleFunction" : false
            },
            "title" : "Site 1",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "ea337dd3-3e20-573c-3268-117e79aee26d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "Consumidor",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.7626665376485484,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~~ SEM NOME ~~\"    \n}\nreturn nome;"
              }, {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.5556550431266114,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "enableDataExport" : false,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "name" : "change entity",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "custom",
                "customFunction" : "// var $injector = widgetContext.$scope.$injector;\nvar params = widgetContext.stateController.getStateParams()\nvar destination\nvar attributes = {}\n\nwidgetContext.attributeService.getEntityAttributes(entityId, \"SERVER_SCOPE\", [\"loja_espelho\"]).subscribe((r) => {\n    for (var i = 0; i < r.length; i++) {\n        var x = r[i].value\n        attributes[r[i].key] = x\n    }\n\n    if (!params[\"Curr_Site\"]) {\n        params[\"Curr_Site\"] = {};\n    }\n    params[\"Curr_Site\"] = {entityId: entityId};\n    \n    if (attributes.hasOwnProperty(\"loja_espelho\")) {\n        if (!params[\"Site_Espelho\"]) {\n            params[\"Site_Espelho\"] = {};\n        }\n        params[\"Site_Espelho\"] = {entityId: {id: attributes.loja_espelho, entityType: \"DEVICE\"}};\n    }\n    \n    widgetContext.stateController.updateState(null, params, false);    \n})\n",
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "210730dc-1dca-0e5c-4b8c-4877665a296b"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "32a2b43a-0a86-4d65-bbbf-e0235d9c87a9",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "d6f1f197-6d6c-4a94-bf63-36d449a4b065" : {
          "type" : "latest",
          "sizeX" : 10,
          "sizeY" : 35,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : false,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "Consumidor",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "entitiesTitle" : "Site Espelho",
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "true",
              "displayEntityLabel" : false,
              "useRowStyleFunction" : false
            },
            "title" : "Site Espelho",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "ea337dd3-3e20-573c-3268-117e79aee26d",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "Consumidor",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.9958691716519923,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~~ SEM NOME ~~\"    \n}\nreturn nome;"
              }, {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.8490269998432656
              } ]
            } ],
            "enableDataExport" : false,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "name" : "change entity",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : null,
                "setEntityId" : true,
                "stateEntityParamName" : "Site_Espelho",
                "openRightLayout" : null,
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "749f930c-b8ec-e81c-9eae-ce058a052f81"
              } ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "d6f1f197-6d6c-4a94-bf63-36d449a4b065",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "4582ac9d-1749-4251-98d9-ab0ca393ca2d" : {
          "type" : "timeseries",
          "sizeX" : 44,
          "sizeY" : 29,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_demanda_fp_registrado",
                "type" : "timeseries",
                "label" : "Site",
                "color" : "#3c9ad8",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : true,
                  "showPoints" : true,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "tooltipValueFormatter" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}) + \" kWh\";",
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  },
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "excludeFromStacking" : false
                },
                "_hash" : 0.10772487818705123,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            }, {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "244faf8c-5b98-22f7-05e3-118bf50d0134",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_demanda_fp_registrado",
                "type" : "timeseries",
                "label" : "Site Espelho",
                "color" : "#e34844",
                "settings" : {
                  "showLines" : true,
                  "fillLines" : true,
                  "showPoints" : true,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "tooltipValueFormatter" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}) + \" kWh\";",
                  "showPointShape" : "circle",
                  "pointShapeFormatter" : "var size = radius * Math.sqrt(Math.PI) / 2;\nctx.moveTo(x - size, y - size);\nctx.lineTo(x + size, y + size);\nctx.moveTo(x - size, y + size);\nctx.lineTo(x + size, y - size);",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "comparisonSettings" : {
                    "showValuesForComparison" : true
                  },
                  "hideDataByDefault" : false,
                  "disableDataHiding" : false,
                  "removeFromLegend" : false,
                  "excludeFromStacking" : false
                },
                "_hash" : 0.7651355102815629,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 7200000,
                "timewindowMs" : 31104000000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "shadowSize" : 4,
              "fontColor" : "#545454",
              "fontSize" : 10,
              "xaxis" : {
                "showLabels" : true,
                "color" : "#545454"
              },
              "yaxis" : {
                "showLabels" : true,
                "color" : "#545454",
                "title" : "Demanda (kW)",
                "tickDecimals" : 0
              },
              "grid" : {
                "color" : "#545454",
                "tickColor" : "#DDDDDD",
                "verticalLines" : true,
                "horizontalLines" : true,
                "outlineWidth" : 1
              },
              "stack" : false,
              "tooltipIndividual" : false,
              "timeForComparison" : "months",
              "xaxisSecond" : {
                "axisPosition" : "top",
                "showLabels" : true
              },
              "smoothLines" : false,
              "tooltipCumulative" : false,
              "hideZeros" : false,
              "showTooltip" : true,
              "comparisonEnabled" : false,
              "customLegendEnabled" : false,
              "showLegend" : false,
              "legendConfig" : {
                "direction" : "column",
                "position" : "bottom",
                "sortDataKeys" : false,
                "showMin" : false,
                "showMax" : false,
                "showAvg" : true,
                "showTotal" : false,
                "showLatest" : false
              }
            },
            "title" : "Comparação de Demandas",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : false,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "4582ac9d-1749-4251-98d9-ab0ca393ca2d",
          "typeFullFqn" : "system.charts.basic_timeseries"
        },
        "5196d2b0-9447-4ed8-8d13-210bb87714c1" : {
          "type" : "timeseries",
          "sizeX" : 26,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "Site",
                "color" : "#3c9ad8",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 5,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.33889585174860604,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            }, {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "244faf8c-5b98-22f7-05e3-118bf50d0134",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "Site Espelho",
                "color" : "#e34844",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 5,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.0031396349179371175,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideLastInterval" : false,
              "hideQuickInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1646103599000,
                  "endTimeMs" : 1677639599000
                },
                "interval" : 63245000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : false,
              "timeWindows" : [ "12M", "Ano" ],
              "timeWindowsUnits" : "month,month",
              "initialTimeWindow" : "12M",
              "showContractedDemandCurves" : false,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "showRightScale" : false,
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: true,\n    callback: callback\n}\n\nreturn ticks",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            label += tooltipItem.yLabel.toLocaleString(\n                'pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n        \nfilter = function (tooltipItem, data) {return tooltipItem.value != \"NaN\"}\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n\n    }\n}\n\nreturn tooltip",
              "stacked" : true,
              "showOverFlowInRed" : false,
              "sortLegendByLabel" : false,
              "roundToUnit" : true,
              "roundingMethod" : "same",
              "showRightScale2" : false,
              "rightScaleTicks" : "ticks = {\n    beginAtZero: true\n}\n\nreturn ticks"
            },
            "title" : "Comparação de Consumos (kWh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "5196d2b0-9447-4ed8-8d13-210bb87714c1",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "56c43529-363a-486a-a989-0c7eff768dd5" : {
          "type" : "timeseries",
          "sizeX" : 26,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_demanda_fp_registrado",
                "type" : "timeseries",
                "label" : "Site",
                "color" : "#3c9ad8",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 5,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.33889585174860604,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            }, {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "244faf8c-5b98-22f7-05e3-118bf50d0134",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_demanda_fp_registrado",
                "type" : "timeseries",
                "label" : "Site Espelho",
                "color" : "#e34844",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "line",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : true,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 5,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.0031396349179371175,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideLastInterval" : false,
              "hideQuickInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1646103599000,
                  "endTimeMs" : 1677639599000
                },
                "interval" : 63245000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : false,
              "timeWindows" : [ "12M", "Ano" ],
              "timeWindowsUnits" : "month,month",
              "initialTimeWindow" : "12M",
              "showContractedDemandCurves" : false,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "showRightScale" : false,
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: true,\n    callback: callback\n}\n\nreturn ticks",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            label += tooltipItem.yLabel.toLocaleString(\n                'pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n        \nfilter = function (tooltipItem, data) {return tooltipItem.value != \"NaN\"}\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n\n    }\n}\n\nreturn tooltip",
              "stacked" : true,
              "showOverFlowInRed" : false,
              "sortLegendByLabel" : false,
              "roundToUnit" : true,
              "roundingMethod" : "same",
              "showRightScale2" : false,
              "rightScaleTicks" : "ticks = {\n    beginAtZero: true\n}\n\nreturn ticks"
            },
            "title" : "Comparação de Demandas (kW)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "56c43529-363a-486a-a989-0c7eff768dd5",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "db0a5df9-47eb-4710-85a2-d7b03f28f7ba" : {
          "type" : "latest",
          "sizeX" : 15,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "c887f65b-386b-db62-7d93-8ff5fe5ecdcd",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "economia_acl",
                "type" : "attribute",
                "label" : "economia",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.987586119385991,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "value = Number(value)\nvar d = new Date();\nvar n = d.getDate() + 32;\n\nif (value === null) {\n    return \"\";\n}\n\nif (((d.getTime()/1000) - (time/1000)) < (n*86400)) { \n\n    // formata o valor a ser apresentado\n    if ( value > 0 ) {\n        return \"R$ \"+ value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});\n    }\n    return \"-x-\";\n}\nreturn \" \";"
              }, {
                "name" : "economia_acl_perc",
                "type" : "attribute",
                "label" : "economia_perc",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.1268751420181815,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nif (value > 0) {\n    return formattedNumber(Math.abs(value*100), 1, 1)+\"% do custo cativo\";\n}\nreturn \"\";\n"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${economia}</div><br>\n        <footer>\n            <div class=\"additional-info\">${economia_perc}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Economia M.Livre",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "db0a5df9-47eb-4710-85a2-d7b03f28f7ba",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "0af512ac-337a-4d4e-84e9-75eebbe79d7a" : {
          "type" : "latest",
          "sizeX" : 36,
          "sizeY" : 29,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "entitiesTitle" : "Pontos de Consumo de Água",
              "enableSearch" : true,
              "enableSelectColumnDisplay" : false,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "false",
              "displayEntityName" : false,
              "displayEntityLabel" : false,
              "displayEntityType" : false,
              "displayPagination" : true,
              "defaultPageSize" : 20,
              "defaultSortOrder" : "Consumidor",
              "useRowStyleFunction" : true,
              "rowStyleFunction" : "var style = {};\nvar isActive;\n\n//1st check if background style is needed\nif (entity['Contr Ativo'] == 'false') {\n    isActive = false;\n} else {\n    isActive = true;\n}\n\nif (!isActive) {\n    style.background = \"#FAFAFA\"\n}\n\n\nreturn style;\n"
            },
            "title" : "Tabela de Pontos de Consumo",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "6d82de94-904d-9c2b-a951-e4f4db6227c8",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fatw_reading_date_ts",
                "type" : "timeseries",
                "label" : "St",
                "color" : "#03a9f4",
                "settings" : {
                  "columnWidth" : "40px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var alarme = 30 * 24;  // 10 dias\nvar tolerancia = 40 * 24;  // 40 dias\n\nvar x = parseInt(moment.utc().format('x'));\nvar horas = ((x - value) / 3600000);\nvar status \n\n// calcula se faz mais de 40 dias\n\nif (horas > tolerancia) { \n    status = 3;     // vermelho NotOk \n} else if (horas > alarme) { \n    status = 2;     // amarelo Já deveira ter chegado \n} else {\n    status = 1;         // verde OK\n}\n\nvar html = {\n    0: '<html>&nbsp;</html>',\n    1: '<html><img title=\"Fatura Ok\" src=\"https://solarhub.engecomp.io/res/ok.png\" width=\"20\" height=\"20\"></html>',\n    2: '<html><img title=\"Fatura Atrasada\" src=\"https://solarhub.engecomp.io/res/atrasada.png\" width=\"20\" height=\"20\"></html>',\n    3: '<html><img title=\"Fatura Muito Atrasada\" src=\"https://solarhub.engecomp.io/res/nok.png\" width=\"20\" height=\"20\"></html>'\n};\n\nreturn html[status];",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "never"
                },
                "_hash" : 0.48124273115253624,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : "",
                "aggregationType" : "NONE"
              }, {
                "name" : "fatw_reading_date_ts",
                "type" : "timeseries",
                "label" : "Fatura",
                "color" : "#ff9800",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "disabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "var alarme = 30 * 24;  // 10 dias\nvar tolerancia = 40 * 24;  // 40 dias\n\nvar x = parseInt(moment.utc().format('x'));\nvar horas = ((x - value) / 3600000);\nvar status \n\n// calcula se faz mais de 40 dias\n\nif (horas > tolerancia) { \n    status = 3;     // vermelho NotOk \n} else if (horas > alarme) { \n    status = 2;     // amarelo Já deveira ter chegado \n} else {\n    status = 1;         // verde OK\n}\n\nvar label = {\n    0: '',\n    1: 'Fatura Ok',\n    2: 'Fatura Atrasada',\n    3: 'Fatura Muito Atrasada'\n};\n\nreturn label[status];"
                },
                "_hash" : 0.06356190257579941,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "id_ref_cliente",
                "type" : "attribute",
                "label" : "ID",
                "color" : "#03a9f4",
                "settings" : {
                  "columnWidth" : "40px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toString();",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.12375032904408023,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : "",
                "aggregationType" : null
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "Nome da Loja",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "20%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"~~SEM NOME~~\"    \n}\nreturn nome;"
                },
                "_hash" : 0.7759033120837209,
                "postFuncBody" : "",
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fatw_consumption_m3",
                "type" : "timeseries",
                "label" : "Consumo ㎥",
                "color" : "#03a9f4",
                "settings" : {
                  "columnWidth" : "12%",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-br',{minimumFractionDigits:1, maximumFractionDigits:1});"
                },
                "_hash" : 0.35983633063122267,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fatw_consumption_m3",
                "type" : "timeseries",
                "label" : "Mês",
                "color" : "#ff9800",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return moment(value).format('MMM/YY')"
                },
                "_hash" : 0.37739147013006735,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return time;"
              }, {
                "name" : "fatw_consumption_brl",
                "type" : "timeseries",
                "label" : "BRL",
                "color" : "#03a9f4",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-br',{minimumFractionDigits:2, maximumFractionDigits:2});"
                },
                "_hash" : 0.70509888738263,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fatw_next_reading_ts",
                "type" : "timeseries",
                "label" : "Prox Leitura",
                "color" : "#ff9800",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "return moment.unix(value/1000).format('DD/MM/YYYY');"
                },
                "_hash" : 0.13985311453045157,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : null
              }, {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "10%",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.46047340608980813,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "Concess",
                "color" : "#ffeb3b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "var url = 'https://solarhub.engecomp.io/res/wutility_list.json?'+moment().format('MMDD');\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nvar obj = JSON.parse(Get(url));\nif (value == \"\"|| obj.hasOwnProperty(value) == false) {\n    return \"Não definida\";\n}\nreturn obj[value];",
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.1921167443186249,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : "",
                "aggregationType" : null
              }, {
                "name" : "type",
                "type" : "entityField",
                "label" : "Type",
                "color" : "#e91e63",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "disabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 4.112702478897834E-4,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "active_contract",
                "type" : "attribute",
                "label" : "Contr Ativo",
                "color" : "#673ab7",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "defaultColumnVisibility" : "hidden",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible",
                  "cellContentFunction" : "if (value == \"false\") {\n    return \"Não\";\n}\n\nreturn \"Sim\";\n"
                },
                "_hash" : 0.6524667742860639,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "enableDataExport" : true,
            "widgetStyle" : { },
            "actions" : {
              "rowClick" : [ {
                "name" : "change entity",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "water_site",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Water",
                "openRightLayout" : false,
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "1633b5ed-8873-48b9-0ea8-055d147a9ffe"
              } ],
              "headerButton" : [ {
                "id" : "db077380-0a48-5ce3-02d0-57ad29e95ca8",
                "name" : "Alarmes",
                "icon" : "warning",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "ssu_alarmes",
                "setEntityId" : false
              }, {
                "name" : "Exportação de Dados - Telemetria",
                "icon" : "file_download",
                "useShowWidgetActionFunction" : true,
                "showWidgetActionFunction" : "return false;",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n\n\n    <mat-form-field fxFlex class=\"mat-block\">\n        <mat-label>Layout</mat-label>\n        <mat-select name=\"layout\" [(ngModel)]=\"layout\" (ngModelChange)=\"change()\">\n          <mat-option value=\"completo\">Completo</mat-option>\n          <mat-option [disabled]=\"integracao != 'all'\" value=\"simplificado\">Simplificado</mat-option>\n        </mat-select><br>\n    </mat-form-field>\n\n    <mat-form-field fxFlex class=\"mat-block\">\n        <mat-label>Integração</mat-label>\n        <mat-select name=\"integracao\" [(ngModel)]=\"integracao\" (ngModelChange)=\"change()\">\n          <mat-option value=\"all\">15 minutos</mat-option>\n          <mat-option [disabled]=\"layout == 'simplificado'\" value=\"hour\">1 hora</mat-option>\n          <mat-option [disabled]=\"layout == 'simplificado'\" value=\"day\">1 dia</mat-option>\n          <mat-option [disabled]=\"layout == 'simplificado'\" value=\"month\">1 mês</mat-option>\n        </mat-select><br>\n    </mat-form-field>\n    \n    <mat-form-field fxFlex class=\"mat-block\">\n        <mat-label>Formato</mat-label>\n        <mat-select name=\"format\" [(ngModel)]=\"format\">\n          <mat-option value=\"xls\">xls</mat-option>\n          <mat-option value=\"csv\">csv</mat-option>\n        </mat-select><br>\n    </mat-form-field>\n    \n     <div fxLayout=\"column\" fxLayout.gt-sm=\"row\" fxLayoutGap=\"5px\" ng-cloak>\n        \n                \n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"0\" fxFlexOrder.gt-sm=\"0\">\n          <mat-label>Data Inicial</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"sdStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n        \n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"1\" fxFlexOrder.gt-sm=\"1\">\n          <mat-label>Data Final</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"edStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n        \n\n    </div>\n\n    <mat-label>\n        Tamanho estimado: {{ linhas }} linhas<br><br>\n    </mat-label>\n    \n    <mat-label>\n        <input type=\"checkbox\" [(ngModel)]=\"async\"> Envio por email (recomendado)\n    </mat-label>\n\n    <div [fxShow]=\"!OK\" style=\"padding: 20px; color: red; font-weight: bold;\">ATENÇÃO: {{ errorMessage }}</div>\n\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"!OK || (isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap\n    .get('customDialog'));\n\nvar user = widgetContext.currentUser;\n\n\nvar url =\n    'https://solarhub.engecomp.io/be/data_export/cdf9d21d-f312-4ea9-8de7-e54819278999'\n\npayload = {\n    email: user.sub,\n    token: localStorage[\"jwt_token\"]\n}\n\npayload.search = {\n    entityFilter: widgetContext.defaultSubscription\n        .configuredDatasources[0].entityFilter,\n    pageLink: {\n        page: 0,\n        pageSize: 1000,\n        textSearch: null,\n        dynamic: false,\n        sortOrder: {\n            key: {\n                key: \"name\",\n                type: \"ENTITY_FIELD\"\n            },\n            direction: \"ASC\"\n        }\n    },\n    entityFields: [{\n        key: \"name\",\n        type: \"ENTITY_FIELD\"\n    }],\n    latestValues: [{\n        key: \"description\",\n        type: \"ATTRIBUTE\"\n    }]\n}\n\n\nshowInfoDialog()\n\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate,\n        dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n\n    let vm = instance;\n\n    vm.importTitle = 'Exportação de dados - TELEMETRIA'\n\n    vm.layout = \"simplificado\"\n    // vm.sd= moment(vm.ed).subtract(1, 'month').toDate()\n    // vm.ed= moment.utc().startOf('day').toDate()\n    vm.integracao = \"all\"\n    vm.format = \"xls\"\n    vm.async = true\n\n    vm.ed = moment.utc().startOf('day').toDate();\n    vm.sd = moment(vm.ed).subtract(1, 'month').toDate();\n\n    vm.sdStr = moment(vm.sd).format('DD/MM/YYYY');\n    vm.edStr = moment(vm.ed).format('DD/MM/YYYY');\n\n    vm.sd = moment.utc(vm.sdStr, 'DD/MM/YYYY')\n    vm.ed = moment.utc(vm.edStr, 'DD/MM/YYYY')\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.change = function() {\n\n        vm.sd = moment.utc(vm.sdStr, 'DD/MM/YYYY HH:mm')\n        vm.ed = moment.utc(vm.edStr, 'DD/MM/YYYY HH:mm')\n\n        var days = moment(vm.ed).diff(moment(vm.sd),\n            'days');\n\n        if (!vm.sd._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data inicial inválida\"\n            return\n        }\n\n        if (!vm.ed._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data final inválida\"\n            return\n        }\n\n        //check start date greater than end date\n        if (days < 0) {\n            vm.OK = false;\n            vm.errorMessage =\n                \"Data inicial maior que data final\";\n            return;\n        }\n\n        vm.OK = true;\n\n        var diffTime = Math.abs(vm.ed - vm.sd);\n        var diffMonths = diffTime / (1000 * 60 * 60 *\n            24 * 30)\n        var linhasPorMes = 0\n\n        switch (vm.integracao) {\n            case \"all\":\n                linhasPorMes = 24 * 4 * 30\n                break;\n            case \"hour\":\n                linhasPorMes = 24 * 30\n                break;\n            case \"day\":\n                linhasPorMes = 30\n                break;\n            case \"month\":\n                linhasPorMes = 1\n                break;\n        }\n\n        vm.linhas = Math.ceil(linhasPorMes *\n            diffMonths * widgetContext\n            .defaultSubscription.dataPages[0]\n            .totalElements)\n\n        if (vm.linhas < 5000) {\n            vm.async = false\n        } else {\n            vm.async = true\n        }\n\n    }\n\n    vm.change()\n\n\n    vm.send = function() {\n\n        let formData = new FormData();\n\n        sd = moment(vm.sd).format('YYYY-MM-DD');\n        ed = moment(vm.ed).format('YYYY-MM-DD');\n\n        payload.start_date = sd\n        payload.end_date = ed\n        payload.interval = vm.integracao\n        payload.output_format = vm.format\n        payload.layout = vm.layout\n        payload.getnow = !vm.async\n\n        formData.append(\"payload\", JSON.stringify(\n            payload))\n        console.log(JSON.stringify(payload))\n\n        var fetchParams = {\n            method: \"POST\",\n            body: formData\n        }\n\n        fetch(url, fetchParams).then(function(r) {\n                if (r.status == 200) {\n\n                    return r.json().then(\n                        function(data) {\n                            if (data.link &&\n                                data.link\n                                .length > 0) {\n                                window.open(data\n                                    .link,\n                                    '_blank'\n                                    );\n                            } else {\n                                widgetContext\n                                    .showSuccessToast(\n                                        'Sucesso. Um link será enviado para o seu e-mail',\n                                        3000)\n                            }\n                        })\n                } else {\n                    widgetContext.showErrorToast(\n                        'Erro. Por favor contacte a Engecomp.',\n                        3000)\n                }\n\n            })\n            .catch(function(error) {\n                widgetContext.showErrorToast(\n                    'Erro. Por favor contacte a Engecomp.',\n                    3000)\n            });\n\n        vm.cancel();\n\n    }\n}",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "8488c5bc-f7e7-9230-6ab8-faefed25d39d"
              }, {
                "name" : "Adicionar UC",
                "icon" : "cloud_upload",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<form #editDeviceForm=\"ngForm\" [formGroup] = 'fileAdd'\n      (ngSubmit)=\"send()\" style=\"width: 650px;\" >\n  <mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>Importar contas em PDF</h2>\n    <span fxFlex></span>\n    <button mat-button mat-icon-button\n            (click)=\"cancel()\"\n            type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div class = 'loading' *ngIf=\"loadingFiles\">\n        <div fxLayout = 'column'>\n            <mat-progress-spinner class=\"test\" mode = 'determinate' value = '{{progress}}' diameter=\"100\"></mat-progress-spinner>\n            <div>Aguarde...</div>\n        </div>\n    </div>\n    <div class=\"tb-container\">\n      <label class=\"action-title\">Arquivos PDF originais da concessionária</label>\n        <div class=\"action-file-select-container \">\n              <div class=\"action-file-clear-container\">\n                <button mat-button mat-icon-button color=\"primary\"\n                        type=\"button\"\n                        (click)=\"clearFile()\"\n                        class=\"action-file-clear-btn\"\n                        matTooltip=\"{{ 'action.remove' | translate }}\"\n                        matTooltipPosition=\"above\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </div>\n            <div class=\"drop-area action-flow-drop\">\n                <label for=\"file-input\">Arraste o arquivo ou clique aqui para selecionar</label>\n                <input class=\"file-input\"  type=\"file\" id=\"file-input\" formControlName = 'controlInputField' multiple (change)=\"fileAdded($event.target.files)\">\n              </div>\n        </div>\n    </div>\n    <div class = 'file-info'>\n      <div *ngIf=\"!fileName\" class=\"cut-text\">Nenhum arquivo selecionado</div>\n      <div *ngIf=\"fileName\" class=\"cut-text\">{{ fileName }}</div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\">\n    <span fxFlex></span>\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button mat-raised-button color=\"primary\"\n            style=\"margin-right: 20px;\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || fileAdd.invalid\">\n      Import\n    </button>\n  </div>\n</form>",
                "customCss" : "\n.file-input{\n       display: none;\n}\n\n.action-flow-drop{\n     position: relative;\n    height: 100%;\n    overflow: hidden;\n    border: dashed 2px;\n    margin-left: 15px;\n}\n\n.action-flow-drop label{\n    display: flex;\n      flex-direction: column;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      font-size: 16px;\n      text-align: center;\n}\n\n.action-title{\n    display: block;\n    padding-bottom: 8px;\n    margin-left: 15px;\n    color: #8E8E8E;\n    font-size:12px;\n}\n\n.action-file-select-container{\n    position: relative;\n    width: 100%;\n    height: 100px;\n}\n\n.action-file-clear-container{\n    position: relative;\n    float: right;\n    width: 48px;\n    height: 100%;\n}\n\n.action-file-clear-btn{\n    top: 50%;\n    transform: translate(0%, -50%) !important;\n}\n\n.file-info{\n    margin-left: 15px;\n    margin-right: 15px;\n}\n\n.loading{\n    margin-top: 5px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    text-align: center;\n}\n\n.action-flow-drop label{\n    font-size: 25px;\n}",
                "customFunction" : "\nlet $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenEditDeviceDialog();\n\nfunction openEditDeviceDialog() {\n    customDialog.customDialog(htmlTemplate, EditDeviceDialogController).subscribe();\n}\n\nfunction EditDeviceDialogController(instance) {\n    let vm = instance;\n    vm.fileName = '';\n    vm.progress = 0;\n    vm.loadingFiles = false;\n    let url = 'https://solarhub.engecomp.io/invoices'\n    // let url = 'https://solarhub.engecomp.io/'\n    // let url = 'http://127.0.0.1:5000/'\n    let user = widgetContext.currentUser;\n    let userMail = user.sub\n    // let parent_id = widgetContext.stateController.getEntityId('Curr_SubClient')\n    //hard coded ASSAI - OUTROS\n    let parent_id = {\n        entityType: 'ASSET',\n        id: '53ed32a0-4f08-11ed-af90-0382b482d98e'\n    }    \n    \n     $( document ).ready(function() {\n        let form = $('.drop-area');\n        form.on('drag dragstart dragend dragover dragenter dragleave drop', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n        }).on('drop', function(e) {\n            vm.fileAdded(e.originalEvent.dataTransfer.files);\n        });\n    });\n    \n    vm.fileAdd = vm.fb.group({\n        file:[[], [vm.validators.required]],\n        controlInputField:''\n    });\n\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n    vm.clearFile = () => {\n        $(\".file-input\").value = \"\";\n        vm.fileName = '';\n        vm.fileAdd.patchValue({file: []})\n    }\n\n    vm.fileAdded = (files)=> {\n        for(let i = 0; i < files.length; i++){\n            let filetype=files[i].name.split('.').pop();\n            let filesize=files[i].size\n            if (filetype.toLowerCase() === 'pdf' && filesize < 1024*1024*4) {\n                let newFiles = vm.fileAdd.get('file').value\n\n                newFiles.push(files.item(i))\n                \n                vm.fileAdd.patchValue({file: newFiles})\n                if (i < 10) {\n                    vm.fileName += files.item(i).name+ ' // ';\n                }\n                if (i == 10) {\n                    vm.fileName += '... total de '+ files.length +' arquivos '\n                }\n\n            } else {\n                if (filetype.toLowerCase() !== 'pdf') {\n                    alert(files[i].name + \" tem extensão inválida\");\n                } else {\n                    alert(files[i].name + \" excede 4MB\");\n                }\n                \n            }\n        }\n        vm.fileAdd.get('controlInputField').patchValue('', {emitEvent: false});\n    }\n    \n\n        vm.send = () =>\n    {\n        var total_files = vm.fileAdd.get('file').value.length\n        var promises = []\n        var completed = 0\n        for(let i=0; i < total_files; i++) {\n            vm.progress = Math.round((i+1) / total_files * 100)\n            let req = new XMLHttpRequest();\n            let formData = new FormData();\n            \n            var instructions = {\n                url: \"http://localhost:5000/gd\",\n                parent_id: parent_id,\n                tenant: 'bt',\n                usage: 1,\n                user: userMail,\n                //sendMail: vm.fileAdd.controls.sendMail.value || true\n            };\n            \n            if (total_files > 120) {\n                instructions.priority = 5\n            } else if (total_files > 30) {\n                instructions.priority = 3\n            }         \n            \n            formData.append(\"invoice\", vm.fileAdd.get('file').value[i]);\n            formData.append(\"instructions\", JSON.stringify( instructions ))\n            promises.push(\n                fetch(url, {method: \"POST\", body: formData}).then(function (r) {\n                    ++completed\n                    if (completed % 5 == 0) {\n                        widgetContext.showSuccessToast(completed+' de '+total_files+' arquivos carregados. Em andamento.', 3000)\n                    }\n                })\n                )\n        }\n\n        Promise.all(promises).then(function (responses) {\n            widgetContext.showSuccessToast(total_files+' arquivos carregados com sucesso', 3000)\n        });\n        widgetContext.showSuccessToast('Carregando arquivos. Mantenha esta tela aberta', 3000)\n        vm.loadingFiles = false;\n        vm.cancel();\n    }  \n}",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "9ee7c44d-c767-c103-530e-38a880cf4e2a"
              }, {
                "name" : "Download de dados - Faturas",
                "icon" : "arrow_downward",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n     <div fxLayout=\"column\" fxLayout.gt-sm=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"20px\">\n         \n\n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"0\" fxFlexOrder.gt-sm=\"0\">\n          <mat-label>Data Inicial</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"sdStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n        \n        <mat-form-field fxFlex fxLayout=\"column\" fxFlexOrder=\"1\" fxFlexOrder.gt-sm=\"1\">\n          <mat-label>Data Final</mat-label>\n          <input matInput type=\"text\"  [(ngModel)]=\"edStr\" (ngModelChange)=\"change()\" name=\"sd\">\n        </mat-form-field>\n\n    </div>\n    \n    <div [fxShow]=\"!OK\" fxLayoutGap=\"20px\" style=\"color: red; font-weight: bold;\">ATENÇÃO: {{ errorMessage }}</div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap\n    .get('customDialog'));\n\nvar user = widgetContext.currentUser;\nvar myHeaders = new Headers();\n\n// var url = 'https://solarhub.engecomp.io/apim_ds/reports/wuc_invoice'\n// var url =  `https://solarhub.engecomp.io/apim_ds/reports/wuc_invoice?${entity_type}='CUSTOMER'&${entity_id}=${entity_id}&${start_date}=${payload.start_date}&${end_date}=${payload.end_date}&${mail_to}=${payload.email}`;\n\nvar entity_id = 'cdf9d21d-f312-4ea9-8de7-e54819278999';\n\n// payload = {\n//     mail_to: user.sub,\n//     token: localStorage[\"jwt_token\"],\n//     entity_type: 'CUSTOMER',\n//     entity_id: 'fc2b8fe0-0ce9-11ed-a281-9f248213a189',\n// }\n\n//deepcopy\nvar filter = JSON.parse(JSON.stringify(widgetContext\n    .defaultSubscription.configuredDatasources[0]\n    .entityFilter))\n\npayload = {\n    email: user.sub,\n    mail_to: user.sub,\n    token: localStorage[\"jwt_token\"]\n}\n\npayload.search = {\n    entityFilter: filter,\n    pageLink: {\n        page: 0,\n        pageSize: 1000,\n        textSearch: null,\n        dynamic: false,\n        sortOrder: {\n            direction: \"ASC\"\n        }\n    },\n}\n\n\n// payload.search.entityFilter.maxLevel = 9\n// payload.search.entityFilter.type = \"deviceSearchQuery\"\npayload.search.entity_type = 'CUSTOMER',\npayload.search.entity_id = 'fc2b8fe0-0ce9-11ed-a281-9f248213a189'\n\nshowInfoDialog()\n\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, dialogCrontroller).subscribe();\n}\n\nfunction dialogCrontroller(instance) {\n\n    let vm = instance;\n    vm.OK = true\n\n    vm.importTitle = 'FATURAS ÁGUA'\n\n    vm.ed = moment.utc().startOf('day').toDate();\n    vm.sd = moment(vm.ed).subtract(1, 'month').toDate();\n\n    vm.sdStr = moment(vm.sd).format('DD/MM/YYYY');\n    vm.edStr = moment(vm.ed).format('DD/MM/YYYY');\n\n    vm.sd = moment.utc(vm.sdStr, 'DD/MM/YYYY')\n    vm.ed = moment.utc(vm.edStr, 'DD/MM/YYYY')\n\n\n    vm.change = function() {\n\n        vm.sd = moment.utc(vm.sdStr, 'DD/MM/YYYY HH:mm')\n        vm.ed = moment.utc(vm.edStr, 'DD/MM/YYYY HH:mm')\n\n        var days = moment(vm.ed).diff(moment(vm.sd),\n            'days');\n\n        if (!vm.sd._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data inicial inválida\"\n            return\n        }\n\n        if (!vm.ed._isValid) {\n            vm.OK = false\n            vm.errorMessage = \"Data final inválida\"\n            return\n        }\n\n        //check start date greater than end date\n        if (days < 0) {\n            vm.OK = false;\n            vm.errorMessage =\n                \"Data inicial maior que data final\";\n            return;\n        }\n\n        vm.OK = true;\n    }\n\n\n    vm.change()\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n\n        let formData = new FormData();\n\n        sd = moment(vm.sd).format('YYYY-MM-DD');\n        ed = moment(vm.ed).format('YYYY-MM-DD');\n\n        payload.start_date = sd\n        payload.end_date = ed\n        payload.getnow = true\n        payload.use_case = \"gd_bt\"\n        payload.entity_type = 'CUSTOMER'\n        \n        // payload.start_date = sd\n        // payload.end_date = ed\n        // payload.interval = vm.integracao\n        // payload.output_format = vm.format\n        // payload.layout = vm.layout\n        // payload.getnow = !vm.async\n\n        // formData.append(\"payload\", JSON.stringify(\n        //     payload))\n        // console.log(JSON.stringify(payload))\n\n        // var fetchParams = {\n        //     method: \"POST\",\n        //     headers: myHeaders,\n        //     redirect: 'follow'\n        // }\n        \n        formData.append(\"payload\", JSON.stringify( payload ))\n        console.log('Request Payload: ', JSON.stringify( payload ))\n        \n        var fetchParams = { method: \"POST\", body: formData }\n        myHeaders.append(\"Content-Type\", \"text/html; charset=UTF-8\")\n\n        var url = `https://solarhub.engecomp.io/apim_ds/reports/wuc_invoice?entity_type=${payload.entity_type}&entity_id=${entity_id}&start_date=${payload.start_date}&end_date=${payload.end_date}&mail_to=${payload.email}`;\n        \n        // var url = 'https://solarhub.engecomp.io/apim_ds/reports/wuc_invoice?entity_type=CUSTOMER&entity_id=fc2b8fe0-0ce9-11ed-a281-9f248213a189&start_date=2023-01-01&end_date=2023-03-03&mail_to=ericka.alcantara@engecomp.com.br'\n        \n        // var url = `https://solarhub.engecomp.io/apim_ds/reports/wuc_invoice?${payload.entity_type}/${entity_id}/${payload.start_date}/${payload.end_date}/${payload.email}`;\n\n        fetch(url, fetchParams, myHeaders).then(function(r) {\n                if (r.status == 200) {\n\n                    return r.json().then(\n                        function(data) {\n                            if (data.link &&\n                                data.link\n                                .length > 0) {\n                                window.open(data\n                                    .link,\n                                    '_blank'\n                                );\n                            } else {\n                                widgetContext\n                                    .showSuccessToast(\n                                        'Sucesso. Um link será enviado para o seu e-mail',\n                                        3000)\n                            }\n                        })\n                } else {\n                    widgetContext.showErrorToast(\n                        `1 - Erro. Por favor contacte a Engecomp.`,\n                        3000)\n                }\n            })\n            .catch(function(error) {\n                widgetContext.showErrorToast(\n                    `2 - Erro. Por favor contacte a Engecomp.`,\n                    3000)\n            });\n\n        vm.cancel();\n\n    }\n}",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "88e07711-99a0-bb46-9e5b-df6da89ff325"
              }, {
                "name" : "Filtros",
                "icon" : "filter_list",
                "useShowWidgetActionFunction" : true,
                "showWidgetActionFunction" : "return false;",
                "type" : "openDashboardState",
                "targetDashboardStateId" : "ssu_filter_popup",
                "setEntityId" : true,
                "stateEntityParamName" : null,
                "openRightLayout" : false,
                "dialogTitle" : "",
                "dialogHideDashboardToolbar" : true,
                "dialogWidth" : null,
                "dialogHeight" : null,
                "openInSeparateDialog" : true,
                "openInPopover" : false,
                "id" : "ebfaba82-f84c-6fa6-d59e-248418535a93"
              } ],
              "actionCellButton" : [ {
                "name" : "Credenciais",
                "icon" : "key",
                "useShowWidgetActionFunction" : true,
                "showWidgetActionFunction" : "var admin = widgetContext.stateController.getStateParams().admin;\n\nvar customer_list = [\n    \"thales.russo@assai.com.br\",\n    \"sandra.oliveira@assai.com.br\"\n    ]\n\n\nif (widgetContext.currentUser.authority === 'TENANT_ADMIN') {\n    return true\n}\n\nif (customer_list.includes(widgetContext.currentUser.sub) && admin ) {\n    return true\n}\n\nreturn false",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <mat-label>&nbsp;<br>Unidade Consumidora: {{attributes.UC}}</mat-label>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n        style=\"min-width: 800px; padding-top: 15px\">\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-around left\" fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=\"50%\" fxLayoutFill>\n                <mat-label>Usuário</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.site_user\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"50%\" fxLayoutFill>\n                <mat-label>Senha</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.site_pwd\">\n            </mat-form-field>\n        </div>            \n\n            <mat-form-field [fxShow]=\"tenant_admin\" fxFlex fxLayoutFill>\n                <mat-label>Tenant</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.tenant\">\n            </mat-form-field>\n            \n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Código de UC alternativo</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.alternative_UC\">\n            </mat-form-field>            \n\n    </div>\n    \n    <mat-table [dataSource]=\"logs\" class=\"mat-elevation-z8\">\n\n            <ng-container matColumnDef=\"ts\">\n                <mat-header-cell *matHeaderCellDef> Data </mat-header-cell>\n                <mat-cell *matCellDef=\"let log\" style=\"width:25%\">{{ log.ts }}</mat-cell>\n            </ng-container>\n            \n            <ng-container matColumnDef=\"bot_log\">\n                <mat-header-cell *matHeaderCellDef> Evento </mat-header-cell>\n                <mat-cell *matCellDef=\"let log\" style=\"width:67%\">{{ log.bot_log }}</mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"bot_picture\">\n                <mat-header-cell *matHeaderCellDef> Imagem </mat-header-cell>\n                <mat-cell *matCellDef=\"let log\" style=\"width:8%\">\n                    <a [fxShow]=\"log.pic_present\" href=\"{{log.bot_picture}}\" target=\"_blank\"><mat-icon >camera_alt</mat-icon></a>\n                </mat-cell>\n            </ng-container>            \n        \n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n        <mat-row *matRowDef=\"let log; columns: displayedColumns;\"></mat-row>\n    </mat-table>    \n\n    \n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\nlet deviceService = $injector.get(widgetContext.servicesMap.get('deviceService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nshowInfoDialog()\n\nvar telemetry_keys = ['bot_log', 'bot_picture']\n\nfunction uniq(a) {\n    return a.sort().filter(function(item, pos, ary) {\n        return !pos || item != ary[pos - 1];\n    });\n}\n\nfunction normalize_telemetry(telemetry) {\n    ts_list = []\n    for (const key in telemetry) {\n        telemetry[key].map(({ts})=>ts_list.push(ts));\n    }\n\n    ts_list = uniq(ts_list).sort().reverse();    \n    \n    var x = []\n    var new_telemetry = []\n    for (const ts of ts_list) {\n        x = {ts: ts, pic_present: false}\n        for (const key of telemetry_keys) {\n            y = telemetry[key].find(z => z.ts === ts);\n            if (typeof y != 'undefined') {\n                x[key] = y.value\n                if (key == 'bot_picture') {\n                    x['pic_present'] = true\n                }\n            }\n        }\n        new_telemetry.push(x)\n    }\n    return new_telemetry\n}\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Credenciais da Unidade Consumidora'\n    vm.namedev = entityName\n    vm.displayedColumns = ['ts','bot_log', 'bot_picture'];\n    \n    deviceService.getDevice(entityId.id).subscribe((device) => {\n        vm.device = device;\n    })\n    \n    // vm.logs = [{ts: 123, bot_log: \"teste\"}, {ts: 456, bot_log: \"teste2\"}]\n    \n    attributeService.getEntityTimeseries(entityId, telemetry_keys, moment().subtract(30, 'days').format('x'), moment().format('x')).subscribe((telemetry) => {\n        //vm.logs = telemetry.bot_log;\n        vm.logs = normalize_telemetry(telemetry)\n        for (var i=0; i<vm.logs.length; i++) {\n            vm.logs[i].ts = moment(vm.logs[i].ts).local().format('DD/MM/YYYY HH:mm')\n        }\n    })    \n    \n    \n    vm.diffAttrs=['site_user','site_pwd', 'tenant', 'UC', 'alternative_UC']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n         })\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n\n        vm.cancel()\n    }\n\n}\n\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "02dced8e-1d5b-44b6-beb2-945e9aac4d65"
              } ],
              "rowDoubleClick" : [ ]
            },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "0af512ac-337a-4d4e-84e9-75eebbe79d7a",
          "typeFullFqn" : "system.cards.entities_table"
        },
        "d99d1634-53c0-4968-9322-ec5ef7a6acc3" : {
          "type" : "latest",
          "sizeX" : 28,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "6d82de94-904d-9c2b-a951-e4f4db6227c8",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "serial",
                "type" : "attribute",
                "label" : "serial",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.2480594686375368,
                "decimals" : 0,
                "postFuncBody" : "return \"Remota: \"+value;"
              }, {
                "name" : "latitude",
                "type" : "attribute",
                "label" : "latitude",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.4835535055608968
              }, {
                "name" : "longitude",
                "type" : "attribute",
                "label" : "longitude",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.5324887104274882
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.16456604186865653,
                "postFuncBody" : "var nome = value;\nif (nome.length < 2) {\n    nome = \"-- SEM NOME --\"    \n}\nreturn nome;"
              }, {
                "name" : "utility",
                "type" : "attribute",
                "label" : "utility",
                "color" : "#ff9800",
                "settings" : { },
                "_hash" : 0.09683687422599174,
                "postFuncBody" : "var url = 'https://solarhub.engecomp.io/res/wutility_list.json?'+moment().format('MMDD');\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nvar obj = JSON.parse(Get(url));\n\nif (value == \"\" || obj.hasOwnProperty(value) == false) {\n    return \"Não cadastrada\";\n}\n\nreturn obj[value];",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "aggregationType" : null
              }, {
                "name" : "fat_consumo_kwh",
                "type" : "attribute",
                "label" : "fat_consumo_kwh",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.9457281678001042
              }, {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.192539995495,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return \"UC: \" + value;"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "fitMapBounds" : true,
              "latKeyName" : "latitude",
              "lngKeyName" : "longitude",
              "showLabel" : false,
              "label" : "${description}",
              "tooltipPattern" : "<b>${description}</b><br/>\n<br/>\n${UC}<br/>\n${utility}<br/>",
              "markerImageSize" : 34,
              "useColorFunction" : false,
              "markerImages" : [ "tb-image;/api/images/tenant/assai_teste_03_23_dashboard_widget_unidades_monitoradas_marker_image_0.png", "tb-image;/api/images/tenant/assai_teste_03_23_dashboard_widget_unidades_monitoradas_marker_image_1.png", "tb-image;/api/images/tenant/assai_teste_03_23_dashboard_widget_unidades_monitoradas_marker_image_2.png" ],
              "useMarkerImageFunction" : true,
              "colorFunction" : "var type = dsData[dsIndex]['type'];\nif (type == 'colorpin') {\n\tvar temperature = dsData[dsIndex]['temperature'];\n\tif (typeof temperature !== undefined) {\n\t    var percent = (temperature + 60)/120 * 100;\n\t    return tinycolor.mix('blue', 'red', amount = percent).toHexString();\n\t}\n\treturn 'blue';\n}\n",
              "markerImageFunction" : "// function getMaxConsumption(){\n//   return dsData.reduce((max, b) => Math.max(max, b.fat_consumo_kwh), dsData[0].fat_consumo_kwh);\n// }\n\n\n// if (!dsData[0].hasOwnProperty(\"max\")) {\n//     dsData[0].max = getMaxConsumption()\n// }\n\ndebugger;\nvar size = 18\n// var max_size = 18;\n// var min_size = 3;\n// var prop = max_size / dsData[0].max\n// var size = Math.max(min_size, data.fat_consumo_kwh * prop);\n\n\n\nreturn\t{\n\t    url: images[0],\n\t    size: size\n\t}\n",
              "mapProvider" : "OpenStreetMap.Mapnik",
              "showTooltip" : true,
              "autocloseTooltip" : true,
              "tooltipFunction" : "var deviceType = dsData[dsIndex]['deviceType'];\r\nif (typeof deviceType !== undefined) {\r\n    if (deviceType == \"energy meter\") {\r\n        return '<b>${alias}</b><br/><b>Energy:</b> ${energy:2} kWt<br/>';\r\n    } else if (deviceType == \"thermometer\") {\r\n        return '<b>${alias}</b><br/><b>Temperature:</b> ${temperature:2} °C<br/>';\r\n    }\r\n}",
              "labelFunction" : "var deviceType = dsData[dsIndex]['deviceType'];\r\nif (typeof deviceType !== undefined) {\r\n    if (deviceType == \"energy meter\") {\r\n        return '<span style=\"color:orange;\">${alias}, ${energy:2} kWt</span>';\r\n    } else if (deviceType == \"thermometer\") {\r\n        return '<span style=\"color:blue;\">${alias}, ${temperature:2} °C</span>';\r\n    }\r\n}",
              "polygonKeyName" : "coordinates",
              "polygonOpacity" : 0.5,
              "polygonStrokeOpacity" : 1,
              "polygonStrokeWeight" : 1,
              "customProviderTileUrl" : "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
              "showTooltipAction" : "hover",
              "useLabelFunction" : false,
              "zoomOnClick" : true,
              "showCoverageOnHover" : true,
              "animate" : true,
              "removeOutsideVisibleBounds" : true,
              "useClusterMarkers" : false,
              "useDefaultCenterPosition" : false,
              "defaultCenterPosition" : "0,0",
              "provider" : "openstreet-map",
              "mapPageSize" : 16384,
              "useCustomProvider" : false,
              "draggableMarker" : false,
              "disableScrollZooming" : false,
              "disableZoomControl" : false,
              "useTooltipFunction" : false,
              "tooltipOffsetX" : 0,
              "tooltipOffsetY" : 0,
              "markerOffsetX" : 0.5,
              "markerOffsetY" : 0.5,
              "showPolygon" : false,
              "showCircle" : false,
              "spiderfyOnMaxZoom" : false,
              "chunkedLoading" : true,
              "maxClusterRadius" : 1,
              "circleKeyName" : "perimeter",
              "editableCircle" : false,
              "showCircleLabel" : false,
              "useCircleFillColorFunction" : false,
              "circleFillColorOpacity" : 0.2,
              "useCircleStrokeColorFunction" : false,
              "circleStrokeOpacity" : 1,
              "circleStrokeWeight" : 3,
              "showCircleTooltip" : false,
              "snappable" : false,
              "initDragMode" : false,
              "hideAllControlButton" : false,
              "hideDrawControlButton" : false,
              "hideEditControlButton" : false,
              "hideRemoveControlButton" : false,
              "editablePolygon" : false,
              "showPolygonLabel" : false,
              "usePolygonColorFunction" : false,
              "usePolygonStrokeColorFunction" : false,
              "showPolygonTooltip" : false,
              "defaultZoomLevel" : 18
            },
            "title" : "Unidades Monitoradas",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : {
              "markerClick" : [ {
                "name" : "Detalhes do ponto",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "water_site",
                "setEntityId" : true,
                "stateEntityParamName" : "Curr_Water",
                "openRightLayout" : false,
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "d3e01a61-d917-ce67-7582-c2db686ca4ce"
              } ],
              "tooltipAction" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "d99d1634-53c0-4968-9322-ec5ef7a6acc3",
          "typeFullFqn" : "system.maps_v2.openstreetmap"
        },
        "92bb9480-256d-48b2-950b-4d8186cb5562" : {
          "type" : "latest",
          "sizeX" : 54,
          "sizeY" : 10,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "4658668c-deb7-d1e4-3bb5-86ced47d6e05",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "nome",
                "type" : "attribute",
                "label" : "nome",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.314082626274236,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "endereco",
                "type" : "attribute",
                "label" : "endereco",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.29428729276659693
              }, {
                "name" : "cep",
                "type" : "attribute",
                "label" : "cep",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.5714814111075266
              }, {
                "name" : "bairro",
                "type" : "attribute",
                "label" : "bairro",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.1792060085480156
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#8bc34a",
                "settings" : { },
                "_hash" : 0.6039520675261614
              }, {
                "name" : "estado",
                "type" : "attribute",
                "label" : "estado",
                "color" : "#3f51b5",
                "settings" : { },
                "_hash" : 0.255617971554996
              }, {
                "name" : "segmento",
                "type" : "attribute",
                "label" : "segmento",
                "color" : "#e91e63",
                "settings" : { },
                "_hash" : 0.4438436825064902,
                "postFuncBody" : "string = moment().format('YYYYMMDD')\nurl = 'https://solarhub.engecomp.io/res/ramo_atividade.json'+'?'+string;\nvar ramo_atividade = JSON.parse(Get(url));\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nreturn ramo_atividade[value];\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "contato",
                "type" : "attribute",
                "label" : "contato",
                "color" : "#ffeb3b",
                "settings" : { },
                "_hash" : 0.9172346110507434
              }, {
                "name" : "depto",
                "type" : "attribute",
                "label" : "depto",
                "color" : "#03a9f4",
                "settings" : { },
                "_hash" : 0.8789454918582487
              }, {
                "name" : "telefone",
                "type" : "attribute",
                "label" : "telefone",
                "color" : "#ff9800",
                "settings" : { },
                "_hash" : 0.5118181150391452
              }, {
                "name" : "email",
                "type" : "attribute",
                "label" : "email",
                "color" : "#673ab7",
                "settings" : { },
                "_hash" : 0.23050908419558058
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#cddc39",
                "settings" : { },
                "_hash" : 0.1704841555313179
              }, {
                "name" : "obs_cliente",
                "type" : "attribute",
                "label" : "obs_cliente",
                "color" : "#cddc39",
                "settings" : { },
                "_hash" : 0.3936841816165175
              }, {
                "name" : "icms",
                "type" : "attribute",
                "label" : "icms",
                "color" : "#009688",
                "settings" : { },
                "_hash" : 0.7603581145702347,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : 0,
                "funcBody" : null
              }, {
                "name" : "id_ref_cliente",
                "type" : "attribute",
                "label" : "id_ref_cliente",
                "color" : "#009688",
                "settings" : { },
                "_hash" : 0.20042231848340308,
                "units" : null,
                "decimals" : 0,
                "funcBody" : null,
                "usePostProcessing" : false,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"25%\" align=\"left\"><style class=\"title\">ID:</style><br><style class=\"text\">${entityName}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Nome da Unidade:</style><br><style class=\"text\">${description}</style></td>\n                <td width=\"23%\" align=\"left\"><style class=\"title\">Referência Cliente:</style><br><style class=\"text\">${id_ref_cliente}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Razão Social:</style><br><style class=\"text\">${nome}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"73%\" align=\"left\"><style class=\"title\">Endereço:</style><br><style class=\"text\">${endereco}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Bairro:</style><br><style class=\"text\">${bairro}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Cidade:</style><br><style class=\"text\">${cidade}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Estado:</style><br><style class=\"text\">${estado}</style></td>\n                <td width=\"23%\" align=\"left\"><style class=\"title\">CEP:</style><br><style class=\"text\">${cep}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Ramo de Atividade:</style><br><style class=\"text\">${segmento}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Responsável:</style><br><style class=\"text\">${contato}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">Departamento:</style><br><style class=\"text\">${depto}</style></td>\n                <td width=\"23%\" align=\"left\"><style class=\"title\">Telefone:</style><br><style class=\"text\">${telefone}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">E-mail:</style><br><style class=\"text\">${email}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"38\">\n                <td width=\"73%\" align=\"left\"><style class=\"title\">Observações:</style><br><style class=\"text\">${obs_cliente}</style></td>\n                <td width=\"25%\" align=\"left\"><style class=\"title\">ICMS Diferenciado:</style><br><style class=\"text\">${icms}%</style></td>\n            </tr>\n        </table>\n</div>\n\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}"
            },
            "title" : "Dados do Consumidor",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n        style=\"min-width: 800px; padding: 20px\">\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=\"49\" class=\"mat-block\">\n                <mat-label>Nome da Unidade\n                </mat-label>\n                <input matInput type=\"text\"\n                    [(ngModel)]=\"attributes.description\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"17\"  class=\"mat-block\">\n                <mat-label>Referência Cliente\n                </mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.id_ref_cliente\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Razão Social\n                </mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.nome\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=\"66\" class=\"mat-block\">\n                <mat-label>Endereço</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.endereco\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Bairro</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.bairro\">\n            </mat-form-field>\n\n        </div>\n\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=\"33\" class=\"mat-block\">\n                <mat-label>Cidade</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.cidade\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"33\" class=\"mat-block\">\n                <mat-label>Estado</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.estado\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"33\" class=\"mat-block\">\n                <mat-label>CEP</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.cep\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Contato</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.contato\">\n            </mat-form-field>\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Depto</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.depto\">\n            </mat-form-field>\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Telefone</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.telefone\">\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex=\"66\" class=\"mat-block\">\n                <mat-label>Email</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.email\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Ramo de Atividade</mat-label>\n                <mat-select name=\"segmento\"\n                    [(ngModel)]=\"attributes.segmento\">\n                    <mat-option\n                        *ngFor=\"let item of ramo_atividade\"\n                        [value]=\"item[1]\">\n                        {{item[0]}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex=\"66\" class=\"mat-block\">\n                <mat-label>Observações</mat-label>\n                <input matInput type=\"text\"\n                    [(ngModel)]=\"attributes.obs_cliente\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>ICMS Diferenciado\n                </mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.icms\">\n            </mat-form-field>\n        </div>\n\n\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nstring = moment().format('YYYYMMDD')\nurl = 'https://solarhub.engecomp.io/res/ramo_atividade.json'+'?'+string;\nwidgetContext.ramo_atividade = sortByValue(JSON.parse(Get(url)))\n\n\nfunction sortByValue(jsObj){\n    var sortedArray = [];\n    for(var i in jsObj)\n    {\n        sortedArray.push([jsObj[i], i]);\n    }\n    return sortedArray.sort();\n}\n\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction Get(yourUrl){\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",yourUrl,false);\n    Httpreq.send(null);\n    return Httpreq.responseText;          \n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Editar dados do consumidor'\n    vm.ramo_atividade = widgetContext.ramo_atividade\n\n    vm.diffAttrs=['segmento']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n         })\n    }\n\n    for (var i=0; i<widgetContext.data.length; i++){\n        if (!vm.diffAttrs.includes(widgetContext.data[i].dataKey.name)) {\n            var x = widgetContext.data[i].data[0][1]\n            vm.attributes[widgetContext.data[i].dataKey.name] = x\n        }\n    }\n    delete vm.attributes.UC\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        debugger;\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            // if (key == \"id_ref_cliente\") {\n            //     vm.attributes[key] = vm.attributes[key].toString()\n            // }\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()  \n    }\n}\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "714386db-bd14-7aee-c92e-707569ee4835"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "92bb9480-256d-48b2-950b-4d8186cb5562",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "4f165794-85cb-46d1-861c-d8bc2d8de33c" : {
          "type" : "latest",
          "sizeX" : 20,
          "sizeY" : 5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "4658668c-deb7-d1e4-3bb5-86ced47d6e05",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "latitude",
                "type" : "attribute",
                "label" : "latitude",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.12053059779723752,
                "decimals" : null,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 6, minimumFractionDigits: 6}); "
              }, {
                "name" : "longitude",
                "type" : "attribute",
                "label" : "longitude",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.7678419940529702,
                "decimals" : null,
                "postFuncBody" : "return value.toLocaleString('pt-BR', { style: 'decimal', maximumFractionDigits: 6, minimumFractionDigits: 6}); "
              }, {
                "name" : "weatherURL",
                "type" : "attribute",
                "label" : "weather",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.2189923541610701
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"90%\">\n            <tr height=\"38\">\n                <td width=\"45%\" align=\"left\"><style class=\"title\">Latitude:</style><br><style class=\"text\">${latitude}</style></td>\n                <td width=\"45%\" align=\"left\"><style class=\"title\">Longitude:</style><br><style class=\"text\">${longitude}</style></td>\n            </tr>\n        </table>\n        <table align=\"center\" width=\"90%\">\n            <tr height=\"38\">\n                <td width=\"90%\" align=\"left\"><style class=\"title\">Weather URL:</style><br><style class=\"text\">${weather}</style></td>\n            </tr>\n        </table>\n</div>\n",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}"
            },
            "title" : "Dados Coordenadas",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\">\n        <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Latitude</mat-label>\n                <input matInput type=\"number\" [(ngModel)]=\"attributes.latitude\" step=\"0.000001\">\n            </mat-form-field>\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Longitude</mat-label>\n                <input matInput type=\"number\"\n                    [(ngModel)]=\"attributes.longitude\" step=\"0.000001\">\n            </mat-form-field>\n        </div>\n        <mat-form-field fxFlex class=\"mat-block\">\n            <mat-label>WeatherURL</mat-label>\n            <input matInput type=\"text\"\n                [(ngModel)]=\"attributes.weatherURL\">\n        </mat-form-field>\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\"\n        type=\"submit\" [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\"\n        (click)=\"cancel()\" cdkFocusInitial>\n        Cancelar\n    </button>\n</div>\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\nattributes = {}\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.OK = true\n    vm.importTitle = 'Editar Coordenadas'\n\n    vm.attributes = {}\n    for (var i=0; i<widgetContext.data.length; i++){\n        var x = widgetContext.data[i].data[0][1]\n        vm.attributes[widgetContext.data[i].dataKey.name] = x\n    }\n    vm.attributes.latitude = parseFloat(vm.attributes.latitude.replace(',','.'))\n    vm.attributes.longitude = parseFloat(vm.attributes.longitude.replace(',','.'))\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()\n    }\n\n}",
                "customResources" : [ ],
                "id" : "a25e279b-4ed1-6374-614e-35d9e4e1ab6e"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "4f165794-85cb-46d1-861c-d8bc2d8de33c",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "8ffaf91a-0894-47c4-9fb3-197ad087d341" : {
          "type" : "latest",
          "sizeX" : 34,
          "sizeY" : 4,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "4658668c-deb7-d1e4-3bb5-86ced47d6e05",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "usage",
                "type" : "attribute",
                "label" : "usage",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.4146637795120083,
                "postFuncBody" : "var dict = {\n    0:\"Não definido\",\n    1:\"Principal\",\n    2:\"Auxiliar\",\n    3:\"Submedição/Rateio\",\n    4:\"Geração\"\n};\n\nreturn dict[Math.floor(value)];"
              }, {
                "name" : "grandeza",
                "type" : "attribute",
                "label" : "grandeza",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.5109883078849702,
                "postFuncBody" : "var dict = {\n    0:\"Não definida\",\n    1:\"Energia\",\n    2:\"Água\",\n    3:\"Água Reuso\",\n    4:\"Gás\"\n};\n\nreturn dict[Math.floor(value)];"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}",
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"95%\">\n            <tr height=\"38\">\n                <td width=\"46%\" align=\"left\"><style class=\"title\">Grandeza:</style><br><style class=\"text\">${grandeza}</style></td>\n                <td width=\"46%\" align=\"left\"><style class=\"title\">Uso:</style><br><style class=\"text\">${usage}</style></td>\n            </tr>\n        </table>\n</div>"
            },
            "title" : "Dados Medicao",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n    style=\"min-width: 500px; padding-top: 20px\">\n\n    <table width=\"95%\">\n        <tr height=\"3\">\n            <td width=\"2%\">&nbsp;</td>\n            <td width=\"46%\">&nbsp;</td>\n            <td width=\"2%\">&nbsp;</td>\n            <td width=\"48%\">&nbsp;</td>\n            <td width=\"2%\">&nbsp;</td>\n        </tr>\n        <tr>\n            <td>&nbsp;</td>\n            <td fxLayoutAlign=\"space-around left\">\n                <mat-form-field layout-fill>\n                    <mat-label>Grandeza</mat-label>\n                    <mat-select name=\"grandeza\"\n                        [(ngModel)]=\"attributes.grandeza\">\n                        <mat-option value=\"0\">Não definida\n                        </mat-option>\n                        <mat-option value=\"1\">Energia\n                        </mat-option>\n                        <mat-option value=\"2\">Água\n                        </mat-option>\n                        <mat-option value=\"3\">Água Reuso\n                        </mat-option>\n                        <mat-option value=\"4\">Gás\n                        </mat-option>\n                    </mat-select><br>\n                </mat-form-field>\n\n\n            </td>\n            <td>&nbsp;</td>\n            <td fxLayoutAlign=\"space-around left\">\n                <mat-form-field layout-fill>\n                    <mat-label>Uso</mat-label>\n                    <mat-select name=\"usage\"\n                        [(ngModel)]=\"attributes.usage\">\n                        <mat-option value=\"0\">Não definido\n                        </mat-option>\n                        <mat-option value=\"1\">Principal\n                        </mat-option>\n                        <mat-option value=\"2\">Auxiliar\n                        </mat-option>\n                        <mat-option value=\"3\">\n                            Submedição/Rateio</mat-option>\n                        <mat-option value=\"4\">Geração\n                        </mat-option>\n                    </mat-select><br>\n                </mat-form-field>\n            </td>\n            <td>&nbsp;</td>\n        </tr>\n\n    </table>\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Editar dados da medição'\n    \n    vm.diffAttrs = ['usage','grandeza']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n            vm.attributes.usage = vm.attributes.usage.toString() || null\n            vm.attributes.grandeza = vm.attributes.grandeza.toString() || null\n         })\n    }\n\n    debugger\n    for (var i=0; i<widgetContext.data.length; i++){\n        if (!vm.diffAttrs.includes(widgetContext.data[i].dataKey.name)) {\n            var x = widgetContext.data[i].data[0][1]\n            vm.attributes[widgetContext.data[i].dataKey.name] = x\n        }\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()\n    }\n\n}",
                "customResources" : [ ],
                "id" : "4ec49287-3b7d-82ac-fe3e-53a0f37b057e"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "8ffaf91a-0894-47c4-9fb3-197ad087d341",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "bf2c4327-357e-4ad1-8fe1-8d5e9ba6c7aa" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "4658668c-deb7-d1e4-3bb5-86ced47d6e05",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fatw_total_amount",
                "type" : "timeseries",
                "label" : "fatura",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.5829384353085656,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nif (value>100000) {\n    return \"R$ \"+formattedNumber(value, 0, 0);\n}\nreturn \"R$ \"+formattedNumber(value, 2, 2);"
              }, {
                "name" : "fatw_total_amount",
                "type" : "timeseries",
                "label" : "variacao",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.018548920416283643,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nif (prevValue < 999999999) {\n    if (prevValue > 0) {\n        return formattedNumber((value/prevValue - 1) * 100, 1, 1) + \"%\";\n    }\n}\nreturn \"\";"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value3\">${fatura}</div><br>\n        <footer>\n            <div class=\"additional-info\">${variacao}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Valor Fatura (R$)",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "4px",
              "padding-bottom" : "10px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "bf2c4327-357e-4ad1-8fe1-8d5e9ba6c7aa",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "96f705a4-bbf1-45a4-9b77-30fef9a507a7" : {
          "type" : "timeseries",
          "sizeX" : 35,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "4658668c-deb7-d1e4-3bb5-86ced47d6e05",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fatw_consumption_brl",
                "type" : "timeseries",
                "label" : "Consumo",
                "color" : "#35b89b",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.8442641841954346,
                "units" : "R$ {}",
                "decimals" : 2,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fatw_sewage_brl",
                "type" : "timeseries",
                "label" : "Esgoto",
                "color" : "#3a7bb6",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.9386510509558912,
                "units" : "R$ {}",
                "decimals" : 2,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fatw_multas_atraso_brl",
                "type" : "timeseries",
                "label" : "Multas",
                "color" : "#d94e56",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.22642208327041868,
                "units" : "R$ {}",
                "decimals" : 2,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_outros_reais",
                "type" : "timeseries",
                "label" : "Outros",
                "color" : "#67c0e0",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.5816650977533395,
                "units" : "R$ {}",
                "decimals" : 2
              }, {
                "name" : "fatw_taxes",
                "type" : "timeseries",
                "label" : "Impostos",
                "color" : "#ebab54",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.5166189065387687,
                "units" : "R$ {}",
                "decimals" : 2,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideLastInterval" : false,
              "hideQuickInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1646103599000,
                  "endTimeMs" : 1677639599000
                },
                "interval" : 63245000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 2000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "allowDrilldown" : false,
              "timeWindows" : [ "12M", "Ano" ],
              "timeWindowsUnits" : "month,month",
              "initialTimeWindow" : "12M",
              "showContractedDemandCurves" : false,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "showRightScale" : true,
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: false,\n    callback: callback\n}\n\nreturn ticks",
              "stacked" : true,
              "sortLegendByLabel" : false,
              "axisLabel" : "Enter axis label here",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n        var decimals = ctx.decimals[tooltipItem\n            .datasetIndex];\n        var label = data.datasets[tooltipItem.datasetIndex]\n            .label || '';\n        var value = tooltipItem.yLabel.toLocaleString(\n            'pt-BR', {\n                style: 'decimal',\n                minimumFractionDigits: decimals,\n                maximumFractionDigits: decimals\n            });\n\n        try {\n            value = ctx.units[tooltipItem.datasetIndex]\n                .replace(/{}/g, value)\n        } catch (err) {}\n\n        var message = `${label}: ${value}`\n\n        return message;\n    },\n\n    filter = function(tooltipItem, data) {\n        return tooltipItem.value != \"NaN\"\n    }\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n\n    }\n}\n\nreturn tooltip\n\n",
              "rightScaleTicks" : "ticks = {\n    beginAtZero: true\n}\n\nreturn ticks",
              "showRightScale2" : true,
              "rightScaleTicks2" : "ticks = {\n    beginAtZero: true\n}\n\nreturn ticks",
              "roundToUnit" : true,
              "showOverFlowInRed" : false,
              "roundingMethod" : "same"
            },
            "title" : "Histórico de Faturas",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Enviar fatura PDF",
                "icon" : "cloud_upload",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<form #editDeviceForm=\"ngForm\" [formGroup] = 'fileAdd'\n      (ngSubmit)=\"send()\" style=\"width: 650px;\" >\n  <mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>Importar contas em PDF</h2>\n    <span fxFlex></span>\n    <button mat-button mat-icon-button\n            (click)=\"cancel()\"\n            type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div class = 'loading' *ngIf=\"loadingFiles\">\n        <div fxLayout = 'column'>\n            <mat-progress-spinner class=\"test\" mode = 'determinate' value = '{{progress}}' diameter=\"100\"></mat-progress-spinner>\n            <div>Aguarde...</div>\n        </div>\n    </div>\n    <div class=\"tb-container\">\n      <label class=\"action-title\">Arquivos PDF originais da concessionária</label>\n        <div class=\"action-file-select-container \">\n              <div class=\"action-file-clear-container\">\n                <button mat-button mat-icon-button color=\"primary\"\n                        type=\"button\"\n                        (click)=\"clearFile()\"\n                        class=\"action-file-clear-btn\"\n                        matTooltip=\"{{ 'action.remove' | translate }}\"\n                        matTooltipPosition=\"above\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </div>\n            <div class=\"drop-area action-flow-drop\">\n                <label for=\"file-input\">Arraste o arquivo ou clique aqui para selecionar</label>\n                <input class=\"file-input\"  type=\"file\" id=\"file-input\" formControlName = 'controlInputField' multiple (change)=\"fileAdded($event.target.files)\">\n              </div>\n        </div>\n    </div>\n    <div class = 'file-info'>\n      <div *ngIf=\"!fileName\" class=\"cut-text\">Nenhum arquivo selecionado</div>\n      <div *ngIf=\"fileName\" class=\"cut-text\">{{ fileName }}</div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\">\n    <span fxFlex></span>\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button mat-raised-button color=\"primary\"\n            style=\"margin-right: 20px;\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || fileAdd.invalid\">\n      Import\n    </button>\n  </div>\n</form>",
                "customCss" : "\n.file-input{\n       display: none;\n}\n\n.action-flow-drop{\n     position: relative;\n    height: 100%;\n    overflow: hidden;\n    border: dashed 2px;\n    margin-left: 15px;\n}\n\n.action-flow-drop label{\n    display: flex;\n      flex-direction: column;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      font-size: 16px;\n      text-align: center;\n}\n\n.action-title{\n    display: block;\n    padding-bottom: 8px;\n    margin-left: 15px;\n    color: #8E8E8E;\n    font-size:12px;\n}\n\n.action-file-select-container{\n    position: relative;\n    width: 100%;\n    height: 100px;\n}\n\n.action-file-clear-container{\n    position: relative;\n    float: right;\n    width: 48px;\n    height: 100%;\n}\n\n.action-file-clear-btn{\n    top: 50%;\n    transform: translate(0%, -50%) !important;\n}\n\n.file-info{\n    margin-left: 15px;\n    margin-right: 15px;\n}\n\n.loading{\n    margin-top: 5px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    text-align: center;\n}\n\n.action-flow-drop label{\n    font-size: 25px;\n}",
                "customFunction" : "\nlet $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenEditDeviceDialog();\n\nfunction openEditDeviceDialog() {\n    customDialog.customDialog(htmlTemplate, EditDeviceDialogController).subscribe();\n}\n\nfunction EditDeviceDialogController(instance) {\n    let vm = instance;\n    vm.fileName = '';\n    vm.progress = 0;\n    vm.loadingFiles = false;\n    let url = 'https://solarhub.engecomp.io/invoices'\n    // let url = 'https://solarhub.engecomp.io/'\n    // let url = 'http://127.0.0.1:5000/'\n    let user = widgetContext.currentUser;\n    let userMail = user.sub\n    // let parent_id = widgetContext.stateController.getEntityId('Curr_customer')\n    let parent_id = {\n        entityType: 'ASSET',\n        id: '53ed32a0-4f08-11ed-af90-0382b482d98e'\n    }        \n    \n     $( document ).ready(function() {\n        let form = $('.drop-area');\n        form.on('drag dragstart dragend dragover dragenter dragleave drop', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n        }).on('drop', function(e) {\n            vm.fileAdded(e.originalEvent.dataTransfer.files);\n        });\n    });\n    \n    vm.fileAdd = vm.fb.group({\n        file:[[], [vm.validators.required]],\n        controlInputField:''\n    });\n\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n    vm.clearFile = () => {\n        $(\".file-input\").value = \"\";\n        vm.fileName = '';\n        vm.fileAdd.patchValue({file: []})\n    }\n\n    // vm.fileAdded = (files)=> {\n    //     for(let i = 0; i < files.length; i++){\n    //         let filetype=files[i].name.split('.').pop();\n    //         if (filetype === 'pdf') {\n    //             let newFiles = vm.fileAdd.get('file').value\n    //             if(vm.fileAdd.get('file').value.length !== 0){\n    //                 vm.fileName += ' // ';\n    //             }\n    //             newFiles.push(files.item(i))\n    //             vm.fileAdd.patchValue({file: newFiles})\n    //             vm.fileName += files.item(i).name;\n    //         } else {\n    //           alert(files[i].name + \" tem extensão inválida\");\n    //         }\n    //         vm.fileAdd.get('controlInputField').patchValue('', {emitEvent: false})\n    //     }\n    // }\n\n    vm.fileAdded = (files)=> {\n        for(let i = 0; i < files.length; i++){\n            let filetype=files[i].name.split('.').pop();\n            let filesize=files[i].size\n            if (filetype.toLowerCase() === 'pdf' && filesize < 1024*1024*4) {\n                let newFiles = vm.fileAdd.get('file').value\n                if(vm.fileAdd.get('file').value.length !== 0){\n                    vm.fileName += ' // ';\n                }\n                newFiles.push(files.item(i))\n                vm.fileAdd.patchValue({file: newFiles})\n                vm.fileName += files.item(i).name;\n            } else {\n                if (filetype.toLowerCase() !== 'pdf') {\n                    alert(files[i].name + \" tem extensão inválida\");\n                } else {\n                    alert(files[i].name + \" excede 4MB\");\n                }\n                \n            }\n        }\n        vm.fileAdd.get('controlInputField').patchValue('', {emitEvent: false});\n    }\n\n    vm.send = () =>\n    {\n        vm.loadingFiles = true;\n        for(let i=0; i < vm.fileAdd.get('file').value.length; i++) {\n            vm.progress = Math.round((i+1) / vm.fileAdd.get('file').value.length * 100)\n            let req = new XMLHttpRequest();\n            let formData = new FormData();\n            let instructions = {\n                url: \"http://localhost:5000/gd\",\n                parent_id: parent_id,\n                tenant: 'bt',\n                usage: 1,\n                user: userMail\n            };\n            formData.append(\"invoice\", vm.fileAdd.get('file').value[i]);\n            formData.append(\"instructions\", JSON.stringify( instructions ))\n            fetch(url, {method: \"POST\", body: formData}).then(function(r) {\n            });\n\n        }\n        vm.loadingFiles = false;\n        vm.cancel();\n    }\n}",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "ceefe86e-7893-f899-80d9-46ca52afaea1"
              } ]
            }
          },
          "id" : "96f705a4-bbf1-45a4-9b77-30fef9a507a7",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "da9e985a-f2a0-4b29-a66e-6f81c1f7fd3e" : {
          "type" : "timeseries",
          "sizeX" : 54,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "4658668c-deb7-d1e4-3bb5-86ced47d6e05",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "uc_url_conta",
                "type" : "timeseries",
                "label" : "Referência",
                "color" : "#3f51b5",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return moment(value).format('DD-MMM-YY')",
                  "cellStyleFunction" : "return {align: \"center\", width: \"13%\"};"
                },
                "_hash" : 0.3391836177326326,
                "postFuncBody" : "return time;"
              }, {
                "name" : "fatw_consumption_brl",
                "type" : "timeseries",
                "label" : "Consumo",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});",
                  "cellStyleFunction" : "return {align: \"right\", width: \"13%\"};"
                },
                "_hash" : 0.5349386412549832,
                "decimals" : 2,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fatw_sewage_brl",
                "type" : "timeseries",
                "label" : "Esgoto",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});",
                  "cellStyleFunction" : "return {align: \"center\", width: \"13%\"};"
                },
                "_hash" : 0.399049714281585,
                "decimals" : 2,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fatw_multas_atraso_brl",
                "type" : "timeseries",
                "label" : "Multas",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});",
                  "cellStyleFunction" : "return {align: \"center\", width: \"13%\"};"
                },
                "_hash" : 0.8483381531939747,
                "decimals" : 2,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fatw_others_brl",
                "type" : "timeseries",
                "label" : "Outros",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value || 0).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});",
                  "cellStyleFunction" : "return {align: \"center\", width: \"13%\"};"
                },
                "_hash" : 0.9990272823573612,
                "decimals" : 2,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fatw_taxes",
                "type" : "timeseries",
                "label" : "Impostos",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});",
                  "cellStyleFunction" : "return {align: \"center\", width: \"13%\"};"
                },
                "_hash" : 0.6948599326691787,
                "decimals" : 2,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fatw_total_amount",
                "type" : "timeseries",
                "label" : "Total",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return Number(value).toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});",
                  "cellStyleFunction" : "return {align: \"center\", width: \"13%\"};"
                },
                "_hash" : 0.38617481896365846,
                "decimals" : 2,
                "units" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "uc_url_conta",
                "type" : "timeseries",
                "label" : "PDF",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "html = ''+\n'<html>'+\n'<a href=\"'+value+'\" style=\"text-decoration: none;\" target=\"_blank\"><img src=\"https://solarhub.engecomp.io/res/pdf-icon.png\" width=\"auto\" height=\"22em\"></a>'+\n'</html>'\n\n\n\nreturn html;",
                  "cellStyleFunction" : "return {align: \"center\", width: \"9%\"};"
                },
                "_hash" : 0.7821151291852728,
                "postFuncBody" : "return value;"
              } ]
            } ],
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 172713600000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 20000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : false,
              "defaultPageSize" : 50,
              "enableSearch" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "true",
              "showMilliseconds" : false,
              "useEntityLabel" : false,
              "hideEmptyLines" : false,
              "useRowStyleFunction" : false
            },
            "title" : "Faturas de Água",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "4px",
              "padding-bottom" : "15px",
              "line-height" : "18px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : {
              "headerButton" : [ {
                "name" : "Download das faturas",
                "icon" : "file_download",
                "type" : "custom",
                "customFunction" : "var $injector = widgetContext.$scope.$injector;\n\nvar user = widgetContext.currentUser;\nvar userMail = user.sub\n\n//var url = 'https://solarhub.engecomp.io/be/pdf_export/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\nvar url = 'https://solarhub.engecomp.io/be/pdf_export_v2/cdf9d21d-f312-4ea9-8de7-e54819278999/form'\n\npayload = createJSON();\n\nsend();\n\nfunction createJSON(UC) {\n    var payload = {};\n    //payload.devices = [];\n    payload.files = [];\n    payload.email = userMail\n    payload.UC = entityName.substring(3,entityName.length)\n    payload.utility = entityName.substring(0,2)\n\n    for (var i = 0; i < widgetContext.data.length; i++) {\n        if (widgetContext.data[i].dataKey.label == 'PDF') {\n            for (j=0; j < widgetContext.data[i].data.length ; j++){\n                file = {}\n                file.link = widgetContext.data[i].data[j][1]\n                file.month = moment(widgetContext.data[i].data[j][0],'x').format('MM/YYYY')\n                //payload.devices.push(widgetContext.data[i].data[j][1])\n                payload.files.push(file)\n            }\n        }\n    }\n    return payload\n}\n\n\nfunction send() {\n\n    let formData = new FormData();    \n    formData.append(\"payload\", JSON.stringify( payload ))\n\n    var fetchParams = { method: \"POST\", body: formData }\n    \n    fetch(url, fetchParams).then(function(r) {\n        if (r.status == 200) {\n\n            return r.json().then(\n                function(data) {\n                    if (data.link && data.link.length > 0) {\n                        window.open(data.link,'_blank');\n                    }\n                    else {\n                        widgetContext.showSuccessToast('Sucesso. Um link será enviado para o seu e-mail', 3000)\n                    }\n                })\n        }\n        else {\n            widgetContext.showErrorToast('Erro. Por favor contacte a Engecomp.', 3000)\n        }\n        \n    }); \n\n    vm.cancel();  \n        \n}\n",
                "id" : "2d452e15-9540-ff3d-657b-bd0499f6c2e0"
              } ]
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : false,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "da9e985a-f2a0-4b29-a66e-6f81c1f7fd3e",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "3c8fa567-5f39-4093-86fe-445aa88c511c" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "4658668c-deb7-d1e4-3bb5-86ced47d6e05",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fatw_sewage_brl",
                "type" : "timeseries",
                "label" : "valor",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.5943100793552207,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nif (value>100000) {\n    return \"R$ \"+formattedNumber(value, 0, 0);\n}\nreturn \"R$ \"+formattedNumber(value, 2, 2);"
              }, {
                "name" : "fatw_sewage_brl",
                "type" : "timeseries",
                "label" : "variacao",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.48152921960766126,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nif (prevValue < 999999999) {\n    if (prevValue > 0) {\n        return formattedNumber((value/prevValue - 1) * 100, 1, 1) + \"%\";\n    }\n}\nreturn \"\";"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value3\">${valor}</div><br>\n        <footer>\n            <div class=\"additional-info\">${variacao}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Valor Esgoto (R$)",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "4px",
              "padding-bottom" : "10px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "3c8fa567-5f39-4093-86fe-445aa88c511c",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "5172b17e-9faf-42be-a0ad-30a87e0df058" : {
          "type" : "latest",
          "sizeX" : 13,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "c887f65b-386b-db62-7d93-8ff5fe5ecdcd",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fatw_consumption_m3",
                "type" : "timeseries",
                "label" : "consumo_mes",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.6695540314098862,
                "postFuncBody" : "var valor= Math.floor(value);\nif (valor > 0) {\n    return valor.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}) + ' m<sup>3</sup>';\n}\nreturn '-x-'; ",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "wfat_consumption_m3",
                "type" : "timeseries",
                "label" : "variacao",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.19470464004638166,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nif (prevValue < 999999999) {\n    if (prevValue > 0) {\n        return formattedNumber((value/prevValue - 1) * 100, 1, 1) + \"%\";\n    }\n}\nreturn \"\";"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value3\">${consumo_mes}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Consumo Total Mês (㎥)",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "mobileOrder" : 6,
            "mobileHeight" : 1,
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "5172b17e-9faf-42be-a0ad-30a87e0df058",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "a985cb1e-fe93-43eb-a4c1-02491717319a" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "c887f65b-386b-db62-7d93-8ff5fe5ecdcd",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fatw_total_amount",
                "type" : "timeseries",
                "label" : "fatura",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.5829384353085656,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nif (value>100000) {\n    return \"R$ \"+formattedNumber(value, 0, 0);\n}\nreturn \"R$ \"+formattedNumber(value, 2, 2);"
              }, {
                "name" : "fatw_total_amount",
                "type" : "timeseries",
                "label" : "variacao",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.018548920416283643,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nif (prevValue < 999999999) {\n    if (prevValue > 0) {\n        return formattedNumber((value/prevValue - 1) * 100, 1, 1) + \"%\";\n    }\n}\nreturn \"\";"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value3\">${fatura}</div><br>\n        <footer>\n            <div class=\"additional-info\">${variacao}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Gasto Total Mês (R$)",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "4px",
              "padding-bottom" : "10px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "a985cb1e-fe93-43eb-a4c1-02491717319a",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "ad3b4fbf-e9f8-c850-d46e-2d95f3448d01" : {
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "cor_fundo",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.7362090669942267,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "var dict = {\n    0: \"background-color:#009e38;\",\n    1: \"background-color:#11b329;\",\n    2: \"background-color:#a5d905;\",\n    3: \"background-color:#fefa00;\",\n    4: \"background-color:#fbb201;\",\n    5: \"background-color:#ff5408;\",\n    6: \"background-color:#fd1216;\"\n};\n\nreturn dict[Date.now() % 7];"
              }, {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "letra",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.7031474685924943,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "var dict = {\n    0: \"A\",\n    1: \"B\",\n    2: \"C\",\n    3: \"D\",\n    4: \"E\",\n    5: \"F\",\n    6: \"G\",\n    7: \"H\",\n    8: \"I\",\n    9: \"J\"\n};\n\nfunction letra_eficiencia(x) {\n\treturn dict[x]; \n}\n\nreturn letra_eficiencia(Date.now() % 7);"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 2px solid #fff;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 20px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   justify-content: space-around;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card h1 {\n    text-transform: uppercase;\n    color: #999;\n    font-size: 20px;\n    font-weight: bold;\n    margin: 0;\n    padding-bottom: 10px;\n    line-height: 32px;\n}\n\n.card .value {\n    font-size: 38px;\n    font-weight: 200;\n}\n\n.card .description {\n    font-size: 20px;\n    color: #999;\n}\n\n.card .letra {\n    color: white;\n    font-size: 60px;\n    font-weight: bold;\n}\n",
              "cardHtml" : "<div class='card' style=${cor_fundo}>\n    <div class='content'>\n        <div class='column'>\n            <div class='letra'>\n                ${letra}\n            </div>    \n        </div>\n    </div>\n</div>"
            },
            "title" : "Eficiência",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "margin" : "0",
            "widgetCss" : "",
            "noDataDisplayMessage" : "",
            "showTitleIcon" : false,
            "titleTooltip" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "ad3b4fbf-e9f8-c850-d46e-2d95f3448d01",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "15178a80-1560-24b3-e6b1-8e8e5e429bf0" : {
          "type" : "latest",
          "sizeX" : 7,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "fat_consumo_kwh",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.3438397585496431,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return (Date.now() % 7);"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "defaultColor" : "#e64a19",
              "colorBar" : "rgba(255, 255, 255, 0.4)",
              "colorBarEnd" : "rgba(221, 221, 221, 0.38)",
              "showUnitTitle" : false,
              "valueBox" : true,
              "valueInt" : 1,
              "colorPlate" : "#fff",
              "colorMajorTicks" : "#444",
              "colorMinorTicks" : "#666",
              "colorNeedleShadowUp" : "rgba(2,255,255,0.2)",
              "colorNeedleShadowDown" : "rgba(188,143,143,0.45)",
              "colorValueBoxRect" : "#888",
              "colorValueBoxRectEnd" : "#666",
              "colorValueBoxBackground" : "#babab2",
              "colorValueBoxShadow" : "rgba(0,0,0,1)",
              "highlightsWidth" : 10,
              "animation" : true,
              "animationDuration" : 300,
              "animationRule" : "quint",
              "showBorder" : false,
              "majorTicksCount" : 7,
              "numbersFont" : {
                "family" : "Arial",
                "size" : 18,
                "style" : "normal",
                "weight" : "normal",
                "color" : "#263238"
              },
              "titleFont" : {
                "family" : "Roboto",
                "size" : 24,
                "style" : "normal",
                "weight" : "normal",
                "color" : "#78909c"
              },
              "unitsFont" : {
                "family" : "Roboto",
                "size" : 26,
                "style" : "normal",
                "weight" : "500",
                "color" : "#37474f"
              },
              "valueFont" : {
                "family" : "Roboto",
                "size" : 40,
                "style" : "normal",
                "weight" : "500",
                "color" : "#444",
                "shadowColor" : "rgba(0,0,0,0.3)"
              },
              "minValue" : 0,
              "highlights" : [ {
                "from" : 0,
                "to" : 1,
                "color" : "#009e38"
              }, {
                "to" : 2,
                "color" : "#11b329",
                "from" : 1.01
              }, {
                "to" : 3,
                "color" : "#a5d905",
                "from" : 2.01
              }, {
                "to" : 4,
                "color" : "#fefa00",
                "from" : 3.01
              }, {
                "to" : 5,
                "color" : "#fbb201",
                "from" : 4.01
              }, {
                "to" : 6,
                "color" : "#ff5408",
                "from" : 5.01
              }, {
                "to" : 7,
                "color" : "#fd1216",
                "from" : 6.01
              } ],
              "unitTitle" : "Eficiência",
              "colorBarProgress" : "#90caf9",
              "colorBarProgressEnd" : "#f44336",
              "colorBarStroke" : "#b0bec5",
              "minorTicks" : 1,
              "barStrokeWidth" : 1,
              "maxValue" : 7
            },
            "title" : "Eficiência",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "enableDataExport" : false,
            "widgetStyle" : { },
            "widgetCss" : "",
            "noDataDisplayMessage" : "",
            "showLegend" : false,
            "showTitleIcon" : false,
            "titleTooltip" : "",
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px"
          },
          "row" : 0,
          "col" : 0,
          "id" : "15178a80-1560-24b3-e6b1-8e8e5e429bf0",
          "typeFullFqn" : "system.analogue_gauges.temperature_gauge_canvas_gauges"
        },
        "752efd6b-416d-abe3-01e4-d965ce60b937" : {
          "type" : "latest",
          "sizeX" : 4,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "fat_consumo_kwh",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.1932432970120499,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "return (Date.now() % 7);"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#ffffff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "minValue" : 0,
              "donutStartAngle" : 90,
              "showValue" : true,
              "showMinMax" : false,
              "gaugeWidthScale" : 0.75,
              "levelColors" : [ "#009e38", "#11b329", "#a5d905", "#fefa00", "#fbb201", "#ff5408", "#fd1216" ],
              "titleFont" : {
                "family" : "Roboto",
                "size" : 12,
                "style" : "normal",
                "weight" : "500",
                "color" : "#999999"
              },
              "labelFont" : {
                "family" : "Roboto",
                "size" : 8,
                "style" : "normal",
                "weight" : "500"
              },
              "valueFont" : {
                "family" : "Roboto",
                "style" : "normal",
                "weight" : "500",
                "size" : 36,
                "color" : "#666666"
              },
              "minMaxFont" : {
                "family" : "Roboto",
                "size" : 12,
                "style" : "normal",
                "weight" : "500",
                "color" : "#666666"
              },
              "neonGlowBrightness" : 0,
              "dashThickness" : 0,
              "gaugeColor" : "#eeeeee",
              "showTitle" : false,
              "gaugeType" : "arc",
              "roundedLineCap" : true,
              "showUnitTitle" : false,
              "showTimestamp" : false,
              "timestampFormat" : "yyyy-MM-dd HH:mm:ss",
              "useFixedLevelColor" : false,
              "showTicks" : true,
              "animation" : true,
              "animationDuration" : 250,
              "animationRule" : "linear",
              "maxValue" : 7,
              "tickWidth" : 4,
              "colorTicks" : "#666"
            },
            "title" : "Eficiência",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "enableDataExport" : false,
            "widgetStyle" : { },
            "widgetCss" : "",
            "noDataDisplayMessage" : "",
            "showLegend" : false
          },
          "row" : 0,
          "col" : 0,
          "id" : "752efd6b-416d-abe3-01e4-d965ce60b937",
          "typeFullFqn" : "system.digital_gauges.gauge_justgage"
        },
        "1ae96b8d-3800-73b1-2b46-430f4dc31466" : {
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "letra",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.7982132925537104,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "var dict = {\n    0: '<img src=\"https://solarhub.engecomp.io/res/ee_a.png\" width=\"auto\" height=\"auto\">',\n    1: '<img src=\"https://solarhub.engecomp.io/res/ee_b.png\" width=\"auto\" height=\"auto\">',\n    2: '<img src=\"https://solarhub.engecomp.io/res/ee_c.png\" width=\"auto\" height=\"auto\">',\n    3: '<img src=\"https://solarhub.engecomp.io/res/ee_d.png\" width=\"auto\" height=\"auto\">',\n    4: '<img src=\"https://solarhub.engecomp.io/res/ee_e.png\" width=\"auto\" height=\"auto\">',\n    5: '<img src=\"https://solarhub.engecomp.io/res/ee_f.png\" width=\"auto\" height=\"auto\">',\n    6: '<img src=\"https://solarhub.engecomp.io/res/ee_g.png\" width=\"auto\" height=\"auto\">'\n};\n\nfunction letra_eficiencia(x) {\n\treturn dict[x]; \n}\n\nreturn letra_eficiencia(Date.now() % 7);"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 2px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 20px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   justify-content: space-around;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card h1 {\n    text-transform: uppercase;\n    color: #999;\n    font-size: 20px;\n    font-weight: bold;\n    margin: 0;\n    padding-bottom: 10px;\n    line-height: 32px;\n}\n\n.card .value {\n    font-size: 38px;\n    font-weight: 200;\n}\n\n.card .description {\n    font-size: 20px;\n    color: #999;\n}\n",
              "cardHtml" : "<div class='card'>\n    <div class='content'>\n        <div class='column'>\n            <div class='letra'>\n                Eficiência: ${letra}\n            </div>    \n        </div>\n    </div>\n</div>\n"
            },
            "title" : "Eficiência",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "1ae96b8d-3800-73b1-2b46-430f4dc31466",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "4c6ef6fc-b0ae-73f0-38d9-b89b78f74b7e" : {
          "type" : "latest",
          "sizeX" : 2,
          "sizeY" : 3.5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_consumo_kwh",
                "type" : "timeseries",
                "label" : "fat_consumo_kwh",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5024543482219479,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "\nreturn (7- (Date.now() % 7));"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#ffffff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "maxValue" : 7,
              "minValue" : 0,
              "donutStartAngle" : 90,
              "showValue" : false,
              "showMinMax" : true,
              "gaugeWidthScale" : 1.5,
              "levelColors" : [ "#fd1216", "#ff5408", "#fbb201", "#fefa00", "#a5d905", "#11b329", "#009e38" ],
              "titleFont" : {
                "family" : "Roboto",
                "size" : 12,
                "style" : "normal",
                "weight" : "500",
                "color" : "#999999"
              },
              "labelFont" : {
                "family" : "Roboto",
                "size" : 8,
                "style" : "normal",
                "weight" : "500"
              },
              "valueFont" : {
                "family" : "Roboto",
                "style" : "normal",
                "weight" : "500",
                "size" : 12,
                "color" : "#666666"
              },
              "minMaxFont" : {
                "family" : "Roboto",
                "size" : 8,
                "style" : "normal",
                "weight" : "500",
                "color" : "#666666"
              },
              "neonGlowBrightness" : 0,
              "gaugeColor" : "#eeeeee",
              "showTitle" : false,
              "gaugeType" : "verticalBar",
              "roundedLineCap" : false,
              "showUnitTitle" : false,
              "showTimestamp" : false,
              "timestampFormat" : "yyyy-MM-dd HH:mm:ss",
              "useFixedLevelColor" : false,
              "showTicks" : true,
              "animation" : true,
              "animationDuration" : 500,
              "animationRule" : "linear",
              "tickWidth" : 4,
              "colorTicks" : "#666",
              "dashThickness" : 1.25
            },
            "title" : "Eficiência",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "enableDataExport" : false,
            "widgetStyle" : { },
            "widgetCss" : "",
            "noDataDisplayMessage" : "",
            "showLegend" : false,
            "showTitleIcon" : false,
            "titleTooltip" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "4c6ef6fc-b0ae-73f0-38d9-b89b78f74b7e",
          "typeFullFqn" : "system.digital_gauges.vertical_bar_justgage"
        },
        "a53aa795-76f4-601a-6b40-b993c49c6192" : {
          "type" : "static",
          "sizeX" : 34,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#eeeeee",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardHtml" : "<div class='card'>&nbsp;&nbsp;Loja Espelho</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 24px;\n    color: #434343;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "Label Pto Medicao",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "a53aa795-76f4-601a-6b40-b993c49c6192",
          "typeFullFqn" : "system.cards.html_card"
        },
        "3fd08795-2167-7003-a108-8f8d0a457f64" : {
          "type" : "latest",
          "sizeX" : 34,
          "sizeY" : 4,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "244faf8c-5b98-22f7-05e3-118bf50d0134",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.43888257526056607
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "5px",
            "settings" : {
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .text {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.7vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n\n.card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value_red {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #e34844;\n}\n\n.card .value_blue {\n    font-size: 2.6vh;\n    font-weight: bold;\n    color: #3c9ad8;\n}\n\n.card .description {\n    font-size: 1.8vh;\n    font-weight: 300;\n}",
              "cardHtml" : "<div class=\"widget status-widget\">\n        <table align=\"center\" width=\"98%\">\n            <tr height=\"75\">\n                <td width=\"100%\" align=\"left\">${description}</td>\n            </tr>\n        </table>\n</div>"
            },
            "title" : "Dados Medicao",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "edit",
                "useShowWidgetActionFunction" : false,
                "showWidgetActionFunction" : "return false;",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n        fxLayoutGap=\"20px\" style=\"min-width: 500px\">\n\n        <mat-form-field fxFlex class=\"mat-block\">\n            <mat-label>Loja espelho</mat-label>\n            <mat-select required\n                [(ngModel)]=\"attributes.loja_espelho\"\n                (ngModelChange)=\"change()\">\n                <mat-option *ngFor=\"let x of lojas\"\n                    [value]=\"x.entityId.id\">\n                    {{ x.latest.ATTRIBUTE.description.value }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n\n\n        <!--<mat-form-field fxFlex class=\"mat-block\">-->\n        <!--    <mat-label>Loja espelho</mat-label>-->\n        <!--    <input type=\"text\" placeholder=\"Selecione a loja\"-->\n        <!--        aria-label=\"Loja\" matInput-->\n        <!--        [matAutocomplete]=\"auto\">-->\n        <!--    <mat-autocomplete autoActiveFirstOption-->\n        <!--        #auto=\"matAutocomplete\">-->\n        <!--        <mat-option-->\n        <!--            *ngFor=\"let x of lojas\"-->\n        <!--            [value]=\"x.entityId.id\">-->\n        <!--            {{ x.latest.ATTRIBUTE.description.value }}-->\n        <!--        </mat-option>-->\n        <!--    </mat-autocomplete>-->\n        <!--</mat-form-field>-->\n\n    </div>\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\nstate = widgetContext.stateController.getStateParams()\n\nentityId = state.Curr_Site.entityId\n\nconst query = {\n    entityFilter: {\n        type: \"deviceSearchQuery\",\n        resolveMultiple: true,\n        rootStateEntity: true,\n        rootEntity: {id: state.Curr_customer.entityId.id, entityType: state.Curr_customer.entityId.entityType},\n        direction: \"FROM\",\n        maxLevel: 9,\n        fetchLastLevelOnly: false,\n        relationType: null,\n        deviceTypes: [\"UC\"]\n    },\n    \"pageLink\": {\n        \"page\": 0,\n        \"pageSize\": 1000,\n        \"textSearch\": null,\n        \"dynamic\": false,\n        \"sortOrder\":\n        {\n            \"key\":\n            {\n                \"key\": \"description\",\n                \"type\": \"ATTRIBUTE\"\n            },\n            \"direction\": \"ASC\"\n        }\n    },\n    // entityFields: [{key: \"label\", type: \"ENTITY_FIELD\"}],\n    latestValues: [{key: \"description\", type: \"ATTRIBUTE\"}]\n};\n\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Editar site espelho'\n    \n    vm.diffAttrs = ['loja_espelho']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n            attributes[\"loja_espelho\"] = attributes[\"loja_espelho\"] || \"\"\n         })\n    }\n\n    widgetContext.entityService.findEntityDataByQuery(query).subscribe((response) => {\n        vm.lojas = response.data\n        debugger\n    })\n\n    vm.change = function() {\n        debugger\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        debugger\n        state[\"Site_Espelho\"] = {entityId: {id: vm.attributes.loja_espelho, entityType: \"DEVICE\"}}\n        widgetContext.stateController.updateState(null, state, false);  \n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.cancel()\n    }\n\n}",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "4ec49287-3b7d-82ac-fe3e-53a0f37b057e"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "3fd08795-2167-7003-a108-8f8d0a457f64",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "8c1dbe7e-6e41-7ce2-ad66-d7fc889034e4" : {
          "type" : "latest",
          "sizeX" : 13,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "c887f65b-386b-db62-7d93-8ff5fe5ecdcd",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fatw_consumption_m3_projetado_12m",
                "type" : "attribute",
                "label" : "fatw_consumption_m3_projetado_12m",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.35291694394732664,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "var valor= Math.floor(value);\nif (valor > 0) {\n    return valor.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0}) + ' m<sup>3</sup>';\n}\nreturn '-x-'; "
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value3\">${fatw_consumption_m3_projetado_12m}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Consumo Anual Estimado (㎥)",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "mobileOrder" : 6,
            "mobileHeight" : 1,
            "showTitleIcon" : false,
            "titleIcon" : "",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "8c1dbe7e-6e41-7ce2-ad66-d7fc889034e4",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "9a9b1f59-23ca-0e0b-c83d-ed1d848c0b0f" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "c887f65b-386b-db62-7d93-8ff5fe5ecdcd",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fatw_total_amount_projetado_12m",
                "type" : "attribute",
                "label" : "fatura",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.17540139917431796,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nif (value>100000) {\n    return \"R$ \"+formattedNumber(Number(value), 0, 0);\n}\nreturn \"R$ \"+formattedNumber(Number(value), 2, 2);"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value3\">${fatura}</div><br>\n        <footer>\n            <div class=\"additional-info\">${variacao}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .value3 {\n    display: inline-block;\n    font-size: 2.8vh;\n    color: rgb(101, 186, 167);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Gasto Anual Estimado (R$)",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "4px",
              "padding-bottom" : "10px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "9a9b1f59-23ca-0e0b-c83d-ed1d848c0b0f",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "d54be86b-8e99-43c9-841b-0e37ed69fd32" : {
          "type" : "latest",
          "sizeX" : 16,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "UC",
                "type" : "attribute",
                "label" : "UC",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.35097507959215524,
                "decimals" : 0,
                "postFuncBody" : "return \"UC: \" + value;"
              }, {
                "name" : "endereco",
                "type" : "attribute",
                "label" : "endereco",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.027497244392471698
              }, {
                "name" : "cidade",
                "type" : "attribute",
                "label" : "cidade",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.0756246866808663
              }, {
                "name" : "estado",
                "type" : "attribute",
                "label" : "estado",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.311329170129642
              }, {
                "name" : "nome",
                "type" : "attribute",
                "label" : "nome",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.2161624189888035
              }, {
                "name" : "description",
                "type" : "attribute",
                "label" : "description",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.43909064258277897
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.8)",
            "padding" : "0px",
            "settings" : {
              "cardCss" : ".card {\n   width: 100%;\n   height: 100%;\n   border: 0px solid #ccc;\n   box-sizing: border-box;\n}\n\n.card .content {\n   padding: 8px;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   //justify-content: space-around;\n   height: 100%;\n   box-sizing: border-box;\n}\n\n.card .content .column {\n   display: flex;\n   flex-direction: column;    \n   justify-content: space-around;\n   height: 100%;\n}\n\n.card .value {\n    font-size: 1.7vh;\n    font-weight: 300;\n}\n",
              "cardHtml" : "<div class='card'>\n    <div class='content'>\n        <div class='column'>\n            <div class='value'>\n                ${UC}<br>\n                <b>${description}</b><br>\n                ${endereco}<br>\n                ${cidade}/${estado}\n            </div>    \n        </div>\n    </div>\n</div>"
            },
            "title" : "Unidade Consumidora",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Editar dados",
                "icon" : "settings",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>{{ importTitle }}</h2>\n</mat-toolbar>\n<div mat-dialog-content>\n\n    <mat-label>&nbsp;<br>Unidade Consumidora: {{attributes.UC}}<br>&nbsp;\n    </mat-label>\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around left\"\n        style=\"min-width: 800px; padding-top: 20px\">\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Nome</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.description\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Rateio (%)</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.perc_rateio\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Tipo de Ligação</mat-label>\n                <mat-select name=\"tipo_lig\"\n                    [(ngModel)]=\"attributes.tipo_ligacao\"\n                    ng-change=\"attributes.change()\">\n                    <mat-option [value]=\"0\">Não\n                        definida</mat-option>\n                    <mat-option [value]=\"1\">Monofásica\n                    </mat-option>\n                    <mat-option [value]=\"2\">Bifásica\n                    </mat-option>\n                    <mat-option [value]=\"3\">Trifásica\n                    </mat-option>\n                </mat-select><br>\n            </mat-form-field>\n\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex=\"66%\" fxLayoutFill>\n                <mat-label>Endereço</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.endereco\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Bairro</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.bairro\">\n            </mat-form-field>\n\n        </div>\n\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Cidade</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.cidade\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Estado</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.estado\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>CEP</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.cep\">\n            </mat-form-field>\n\n        </div>\n\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Latitude</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.latitude\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Longitude</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.longitude\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>Classe de Tensão</mat-label>\n                <mat-select name=\"cl_tensao\"\n                    [(ngModel)]=\"attributes.classe_tensao\"\n                    ng-change=\"attributes.change()\">\n                    <mat-option [value]=\"0\">Não\n                        definida</mat-option>\n                    <mat-option [value]=\"1\">A1\n                    </mat-option>\n                    <mat-option [value]=\"2\">A2\n                    </mat-option>\n                    <mat-option [value]=\"3\">A3\n                    </mat-option>\n                    <mat-option [value]=\"4\">A3a\n                    </mat-option>\n                    <mat-option [value]=\"5\">A4\n                    </mat-option>\n                    <mat-option [value]=\"6\">AS\n                    </mat-option>\n                    <mat-option [value]=\"7\">B1\n                    </mat-option>\n                    <mat-option [value]=\"8\">B2\n                    </mat-option>\n                    <mat-option [value]=\"9\">B3\n                    </mat-option>\n                </mat-select><br>\n            </mat-form-field>\n\n        </div>\n\n        <div fxLayout=\"row\"\n            fxLayoutAlign=\"space-around left\"\n            fxLayoutGap=\"10px\">\n\n            <mat-form-field fxFlex=\"33%\" fxLayoutFill>\n                <mat-label>CNPJ</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.cnpj\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex fxLayoutFill>\n                <mat-label>E-mail</mat-label>\n                <input matInput\n                    [(ngModel)]=\"attributes.email\">\n            </mat-form-field>\n\n        </div>\n\n    </div>\n\n</div>\n<div mat-dialog-actions fxLayout=\"row\"\n    fxLayoutAlign=\"end center\">\n    <button mat-button mat-raised-button color=\"primary\"\n        (click)=\"send()\" type=\"submit\"\n        [disabled]=\"(isLoading$ | async)\">\n        Salvar\n    </button>\n    <button mat-button color=\"primary\" type=\"button\"\n        [disabled]=\"(isLoading$ | async)\" (click)=\"cancel()\"\n        cdkFocusInitial>\n        Cancelar\n    </button>\n</div>",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\nlet deviceService = $injector.get(widgetContext.servicesMap.get('deviceService'));\n\nvar locale = window.navigator.userLanguage || window.navigator.language;\nmoment.locale(locale);\n\nshowInfoDialog()\n\nfunction showInfoDialog() {\n    customDialog.customDialog(htmlTemplate, InfoDialogController).subscribe();\n}\n\nfunction InfoDialogController(instance) {\n\n    let vm = instance;    \n    vm.attributes = {}\n    vm.OK = true\n    vm.importTitle = 'Configuração da Unidade Consumidora'\n    vm.namedev = entityName\n    \n    deviceService.getDevice(entityId.id).subscribe((device) => {\n        vm.device = device;\n    })\n    \n    vm.diffAttrs=['description','perc_rateio','tipo_ligacao','endereco','bairro','cidade','estado','cep', 'latitude', 'longitude', 'email', 'classe_tensao', 'UC', 'cnpj']\n    if (vm.diffAttrs.length > 0) {\n         var response = attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', vm.diffAttrs);\n         response.subscribe((r) => {\n            for (var i = 0; i < r.length; i++) {\n                var x = r[i].value\n                vm.attributes[r[i].key] = x\n            }\n         })\n    }\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    }\n\n    vm.send = function() {\n        var attributesToSave = []\n        for (var key in vm.attributes) {\n            attributesToSave.push({key: key, value: vm.attributes[key]})\n        }\n        debugger\n        attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE',attributesToSave).subscribe()\n        vm.device.label = vm.attributes.description;\n        deviceService.saveDevice(vm.device).subscribe(() =>{\n            widgetContext.dashboard.reload();\n        })\n        vm.cancel()\n    }\n\n}",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "be104132-01e5-803a-e570-bbd1abcc6fcf"
              } ]
            },
            "decimals" : 0,
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "d54be86b-8e99-43c9-841b-0e37ed69fd32",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "f5d4e641-599e-48f5-b349-64b372acc7d1" : {
          "type" : "latest",
          "sizeX" : 12,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "danfe_total_brl",
                "type" : "timeseries",
                "label" : "valor",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.12574625824006702,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function numberWithCommas(x, y, z) {\n    return x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z});\n}\n\nreturn \"R$ \" + numberWithCommas(value,2,2);\n"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${valor}</div><br>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}\n"
            },
            "title" : "Última DANFE",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "f5d4e641-599e-48f5-b349-64b372acc7d1",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "45e162de-88e5-4109-ad8e-fdde780f5111" : {
          "type" : "timeseries",
          "sizeX" : 38,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "danfe_url_conta",
                "type" : "timeseries",
                "label" : "Mês",
                "color" : "#9c27b0",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "function timeConverter(UNIX_timestamp){\n  var a = new Date(UNIX_timestamp);\n  var months = ['Jan','Fev','Mar','Abr','Mai','Jun','Jul','Ago','Set','Out','Nov','Dez'];\n  var year = a.getFullYear();\n  var month = months[a.getMonth()];\n  var time = month + '-' + year;\n  return time;\n}\n\nvar html = timeConverter(rowData['Timestamp'])\nif (value !== undefined) {\n  html = ''+\n    '<html>'+\n    '<a href=\"'+value+'\" target=\"_blank\">'+timeConverter(rowData['Timestamp'])+'</a>'+\n    '</html>'\n}\nreturn html;"
                },
                "_hash" : 0.5019676276311937,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "danfe_emitente",
                "type" : "timeseries",
                "label" : "Emitente",
                "color" : "#e91e63",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "cellStyleFunction" : "return {align: \"center\", width: \"25%\"};"
                },
                "_hash" : 0.6848767269466325,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "danfe_numero",
                "type" : "timeseries",
                "label" : "Número",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "cellStyleFunction" : "\n",
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.6627250355168759,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "danfe_total_brl",
                "type" : "timeseries",
                "label" : "Total (R$)",
                "color" : "#607d8b",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.9155472012116606,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "danfe_icms",
                "type" : "timeseries",
                "label" : "ICMS (R$)",
                "color" : "#ffc107",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.8938151577816245,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "danfe_pis",
                "type" : "timeseries",
                "label" : "PIS (R$)",
                "color" : "#9c27b0",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.27822176066150295,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "danfe_cofins",
                "type" : "timeseries",
                "label" : "Cofins (R$)",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.7268531430956751,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "danfe_outras_despesas",
                "type" : "timeseries",
                "label" : "Outros (R$)",
                "color" : "#e91e63",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.47906505205412153,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 0,
                "timewindowMs" : 630720000000,
                "interval" : 1000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1660446096505,
                  "endTimeMs" : 1660532496505
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 2000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "showTimestamp" : false,
              "displayPagination" : false,
              "defaultPageSize" : 12,
              "enableSearch" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "true",
              "showMilliseconds" : false,
              "useEntityLabel" : false,
              "hideEmptyLines" : false,
              "useRowStyleFunction" : false
            },
            "title" : "Notas Fiscais de Energia",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : {
              "headerButton" : [ ]
            },
            "legendConfig" : {
              "position" : "bottom",
              "showMin" : false,
              "showMax" : false,
              "showAvg" : true,
              "showTotal" : true
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : false,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "45e162de-88e5-4109-ad8e-fdde780f5111",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "e43eba7d-2e75-c815-eca2-680de70a5ebc" : {
          "type" : "timeseries",
          "sizeX" : 38,
          "sizeY" : 14,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "danfe_url_conta",
                "type" : "timeseries",
                "label" : "Mês",
                "color" : "#9c27b0",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "function timeConverter(UNIX_timestamp){\n  var a = new Date(UNIX_timestamp);\n  var months = ['Jan','Fev','Mar','Abr','Mai','Jun','Jul','Ago','Set','Out','Nov','Dez'];\n  var year = a.getFullYear() -2000;\n  var month = months[a.getMonth()];\n  var time = month + '-' + year;\n  return time;\n}\n\nvar html = timeConverter(rowData['Timestamp'])\nif (value !== undefined) {\n  html = ''+\n    '<html>'+\n    '<a href=\"'+value+'\" target=\"_blank\">'+timeConverter(rowData['Timestamp'])+'</a>'+\n    '</html>'\n}\nreturn html;"
                },
                "_hash" : 0.5019676276311937,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null,
                "aggregationType" : null
              }, {
                "name" : "danfe_emitente",
                "type" : "timeseries",
                "label" : "Emitente",
                "color" : "#e91e63",
                "settings" : {
                  "useCellStyleFunction" : true,
                  "useCellContentFunction" : false,
                  "cellContentFunction" : "",
                  "cellStyleFunction" : "return {align: \"center\", width: \"25%\"};"
                },
                "_hash" : 0.6848767269466325,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "danfe_numero",
                "type" : "timeseries",
                "label" : "Número",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "cellStyleFunction" : "\n",
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0});"
                },
                "_hash" : 0.6627250355168759,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "danfe_total_brl",
                "type" : "timeseries",
                "label" : "Total (R$)",
                "color" : "#607d8b",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.9155472012116606,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "danfe_icms",
                "type" : "timeseries",
                "label" : "ICMS (R$)",
                "color" : "#ffc107",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.8938151577816245,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "danfe_pis",
                "type" : "timeseries",
                "label" : "PIS (R$)",
                "color" : "#9c27b0",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.27822176066150295,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "danfe_cofins",
                "type" : "timeseries",
                "label" : "Cofins (R$)",
                "color" : "#8bc34a",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.7268531430956751,
                "postFuncBody" : null,
                "usePostProcessing" : false,
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "danfe_outras_despesas",
                "type" : "timeseries",
                "label" : "Outros (R$)",
                "color" : "#e91e63",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : true,
                  "cellContentFunction" : "return value.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2});"
                },
                "_hash" : 0.47906505205412153,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ],
              "latestDataKeys" : null
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideLastInterval" : false,
              "hideQuickInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 0,
                "timewindowMs" : 172713600000,
                "quickInterval" : "CURRENT_DAY",
                "interval" : 1000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 2000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "enableSearch" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "true",
              "showTimestamp" : false,
              "showMilliseconds" : false,
              "displayPagination" : false,
              "useEntityLabel" : false,
              "hideEmptyLines" : false,
              "disableStickyHeader" : false,
              "useRowStyleFunction" : false
            },
            "title" : "Notas Fiscais Mercado Livre",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "widgetStyle" : { },
            "actions" : {
              "headerButton" : [ ]
            },
            "legendConfig" : {
              "position" : "bottom",
              "showMin" : false,
              "showMax" : false,
              "showAvg" : true,
              "showTotal" : true
            },
            "enableDataExport" : true,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : false,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "e43eba7d-2e75-c815-eca2-680de70a5ebc",
          "typeFullFqn" : "system.cards.timeseries_table"
        },
        "e90004e5-7530-408f-a777-581b47c6aa0b" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_total_com_danfes",
                "type" : "timeseries",
                "label" : "total_brl",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.07512129735258344,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : true,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\nreturn \"R$ \"+formattedNumber(value, 2, 2);"
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <div class=\"value\">${total_brl}</div><br>\n        <footer>\n            <div class=\"additional-info\">${variacao}</div>\n        </footer>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Custo Total",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "4px",
              "padding-bottom" : "10px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "noDataDisplayMessage" : ""
          },
          "id" : "e90004e5-7530-408f-a777-581b47c6aa0b",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "c18b3fdd-983e-479d-9fbc-5b43242efe04" : {
          "type" : "latest",
          "sizeX" : 12,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_demanda_fp_registrado",
                "type" : "timeseries",
                "label" : "dem_fp",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.29256525020096946,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\n// formata o valor a ser apresentado\nif (value > 100) {\n    return formattedNumber(value, 0, 0)+' kW';\n}\nreturn formattedNumber(value, 1, 1)+' kW';",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "aggregationType" : "NONE"
              }, {
                "name" : "fat_demanda_p_registrado",
                "type" : "timeseries",
                "label" : "dem_p",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.3047623047233261,
                "postFuncBody" : "function formattedNumber(x, y, z) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: z}); \n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\n// formata o valor a ser apresentado\nif (value > 100) {\n    return formattedNumber(value, 0, 0)+' kW';\n}\nreturn formattedNumber(value, 1, 1)+' kW';\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "aggregationType" : "NONE"
              }, {
                "name" : "fat_demanda_fp_registrado",
                "type" : "timeseries",
                "label" : "tituloFP",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.21686059551088133,
                "postFuncBody" : "if (value > 10000) {\n    return 'FP:';\n}\nreturn 'F.Ponta:';\n",
                "usePostProcessing" : true,
                "aggregationType" : "NONE",
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_demanda_p_registrado",
                "type" : "timeseries",
                "label" : "tituloP",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.856108308715902,
                "postFuncBody" : "if (value > 10000) {\n    return 'P:';\n}\nreturn 'Ponta:';",
                "usePostProcessing" : true,
                "aggregationType" : "NONE",
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_demanda_fp_registrado",
                "type" : "timeseries",
                "label" : "largura",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.3815889285541303,
                "postFuncBody" : "if (value > 1000) {\n    return '15%';\n}\nreturn '32%';",
                "usePostProcessing" : true,
                "aggregationType" : "NONE",
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_demanda_p_registrado",
                "type" : "timeseries",
                "label" : "largura2",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.6563366598780407,
                "postFuncBody" : "if (value > 1000) {\n    return '70%';\n}\nreturn '53%';",
                "usePostProcessing" : true,
                "aggregationType" : "NONE",
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table align=\"center\" width=\"98%\">\n            <tr>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura}\" class=\"value_left\">${tituloFP}</td>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura2}\" class=\"value_right\">${dem_fp}</td>\n                <td width=\"5%\">&nbsp;</td>\n            </tr>\n            <tr>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura}\" class=\"value_left\">${tituloP}</td>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura2}\" class=\"value_right\">${dem_p}</td>\n                <td width=\"5%\">&nbsp;</td>\n            </tr>\n        </table>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Demandas",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true
          },
          "id" : "c18b3fdd-983e-479d-9fbc-5b43242efe04",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "c893c934-c724-4e2a-b885-82d4965acbe9" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_fer_fp_faturado",
                "type" : "timeseries",
                "label" : "ufer_fp",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.8480124974938985,
                "postFuncBody" : "function formattedNumber(x, y) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: y}); \n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\n// formata o valor a ser apresentado\nif (value > 100000) {\n    return formattedNumber(value/1000, 1)+\" MVArh\";\n}\n    \nreturn formattedNumber(Math.round(value), 0)+\" kVArh\";\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "aggregationType" : "NONE"
              }, {
                "name" : "fat_fer_p_faturado",
                "type" : "timeseries",
                "label" : "ufer_p",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.8095005871854049,
                "postFuncBody" : "function formattedNumber(x, y) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: y}); \n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\n// formata o valor a ser apresentado\nif (value > 100000) {\n    return formattedNumber(value/1000, 1)+\" MVArh\";\n}\n    \nreturn formattedNumber(Math.round(value), 0)+\" kVArh\";\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "aggregationType" : "NONE"
              }, {
                "name" : "fat_fer_fp_faturado",
                "type" : "timeseries",
                "label" : "tituloFP",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.3827209638490774,
                "postFuncBody" : "if (value > 1000000) {\n    return 'FP:';\n}\nreturn 'F.Ponta:';\n",
                "usePostProcessing" : true,
                "aggregationType" : "NONE",
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_fer_fp_faturado",
                "type" : "timeseries",
                "label" : "tituloP",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.6826918185291457,
                "postFuncBody" : "if (value > 1000000) {\n    return 'P:';\n}\nreturn 'Ponta:';",
                "usePostProcessing" : true,
                "aggregationType" : "NONE",
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_fer_fp_faturado",
                "type" : "timeseries",
                "label" : "largura",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.6802370270512839,
                "postFuncBody" : "if (value > 1000000) {\n    return '15%';\n}\nreturn '32%';",
                "usePostProcessing" : true,
                "aggregationType" : "NONE",
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "fat_fer_fp_faturado",
                "type" : "timeseries",
                "label" : "largura2",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.6402461095854941,
                "postFuncBody" : "if (value > 1000000) {\n    return '70%';\n}\nreturn '53%';\n",
                "usePostProcessing" : true,
                "aggregationType" : "NONE",
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0,0,0,0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table align=\"center\" width=\"100%\">\n            <tr>\n                <td widht=\"5%\">&nbsp;</td>\n                <td width=\"${largura}\" class=\"value_left\">${tituloFP}</td>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura2}\" class=\"value_right\">${ufer_fp}</td>\n                <td widht=\"5%\">&nbsp;</td>\n            </tr>\n            <tr>\n                <td widht=\"5%\">&nbsp;</td>\n                <td width=\"${largura}\" class=\"value_left\">${tituloP}</td>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura2}\" class=\"value_right\">${ufer_p}</td>\n                <td widht=\"5%\">&nbsp;</td>\n            </tr>\n        </table>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Reativos",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Detalhe dos Reativos",
                "icon" : "insert_chart",
                "useShowWidgetActionFunction" : false,
                "showWidgetActionFunction" : "var dashName = \"\";\nvar entityId;\nvar entityName;\nvar params = widgetContext.stateController.getStateParams();\nparams.Curr_customer = {\n    entityId: entityId,\n    entityName: entityName\n};\n\nvar stateId;\nif (stateId.length > 0) {\n    dashName = stateId;\n    console.log(\"stateId\",stateId);\n}\n\nif (dashName = \"ssu_reativos_uc\") {\n    return false\n};\ndebugger;\n\nreturn true;",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "ssu_reativos_uc",
                "setEntityId" : false,
                "stateEntityParamName" : "Curr_Site",
                "openRightLayout" : false,
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "d1b17d1e-77c2-3615-b883-607e07a8c185"
              } ]
            },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "id" : "c893c934-c724-4e2a-b885-82d4965acbe9",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "7aadd622-9112-4b91-93f9-49f680f1e352" : {
          "type" : "latest",
          "sizeX" : 14,
          "sizeY" : 6,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "m_consumo_mensal_fora_ponta",
                "type" : "timeseries",
                "label" : "cons_fp",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.026411987772145373,
                "decimals" : 0,
                "postFuncBody" : "function formattedNumber(x, y) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: y}); \n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\n// formata o valor a ser apresentado\nif (value > 99999) {\n    return formattedNumber(value/1000, 0)+' MWh';\n}\n    \nif (value > 9999) {\n    return formattedNumber(value/1000, 1)+' MWh';\n}\n    \nif (value > 999) {\n    return formattedNumber(value/1000, 2)+' MWh';\n}\n    \nreturn formattedNumber(value, 0)+' kWh';\n",
                "usePostProcessing" : true,
                "units" : null,
                "funcBody" : null,
                "aggregationType" : "NONE"
              }, {
                "name" : "m_consumo_mensal_ponta",
                "type" : "timeseries",
                "label" : "cons_p",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.26151188925277036,
                "postFuncBody" : "function formattedNumber(x, y) {\n\treturn x.toLocaleString('pt-BR', { style: 'decimal', minimumFractionDigits: y, maximumFractionDigits: y}); \n}\n\nvar d = new Date();\nvar n = d.getDate() + 1;\n\nif (value === null) {\n    return \"\";\n}\n\n// formata o valor a ser apresentado\nif (value > 99999) {\n    return formattedNumber(value/1000, 0)+' MWh';\n}\n    \nif (value > 9999) {\n    return formattedNumber(value/1000, 1)+' MWh';\n}\n    \nif (value > 999) {\n    return formattedNumber(value/1000, 2)+' MWh';\n}\n    \nreturn formattedNumber(value, 0)+' kWh';\n",
                "usePostProcessing" : true,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "aggregationType" : "NONE"
              }, {
                "name" : "m_consumo_mensal_fora_ponta",
                "type" : "timeseries",
                "label" : "tituloFP",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.964921414882711,
                "postFuncBody" : "if (value > 999999) {\n    return 'FP:';\n}\n\nreturn 'F.Ponta:';",
                "usePostProcessing" : true,
                "aggregationType" : "NONE",
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "m_consumo_mensal_ponta",
                "type" : "timeseries",
                "label" : "tituloP",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.01028743515610131,
                "postFuncBody" : "if (value > 999999) {\n    return 'P:';\n}\n\nreturn 'Ponta:';",
                "usePostProcessing" : true,
                "aggregationType" : "NONE",
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "m_consumo_mensal_fora_ponta",
                "type" : "timeseries",
                "label" : "largura",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.7048236437986888,
                "postFuncBody" : "if (value > 999) {\n    return '15%';\n}\n\nreturn '32%';",
                "usePostProcessing" : true,
                "aggregationType" : "NONE",
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              }, {
                "name" : "m_consumo_mensal_ponta",
                "type" : "timeseries",
                "label" : "largura2",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.38239477163305136,
                "postFuncBody" : "if (value > 999) {\n    return '70%';\n}\n\nreturn '53%';",
                "usePostProcessing" : true,
                "aggregationType" : "NONE",
                "units" : null,
                "decimals" : null,
                "funcBody" : null
              } ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideQuickInterval" : false
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1678791807303,
                  "endTimeMs" : 1678878207303
                },
                "quickInterval" : "CURRENT_DAY",
                "hideInterval" : false,
                "hideLastInterval" : false,
                "hideFixedInterval" : false,
                "hideQuickInterval" : false
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "2px",
            "settings" : {
              "cardHtml" : "<div class=\"widget status-widget\">\n    <section class=\"main\">\n        <table align=\"center\" width=\"98%\">\n            <tr>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura}\" class=\"value_left\">${tituloFP}</td>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura2}\" class=\"value_right\">${cons_fp}</td>\n                <td width=\"5%\">&nbsp;</td>\n            </tr>\n            <tr>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura}\" class=\"value_left\">${tituloP}</td>\n                <td width=\"5%\">&nbsp;</td>\n                <td width=\"${largura2}\" class=\"value_right\">${cons_p}</td>\n                <td width=\"5%\">&nbsp;</td>\n            </tr>\n        </table>\n    </section>\n</div>",
              "cardCss" : ".widget {\n    position: relative;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.status-widget .main {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    /*overflow: hidden;*/\n}\n\n.status-widget .value {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: center\n}\n\n.status-widget .value_right {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: right\n}\n\n.status-widget .value_left {\n    position: relative;\n    font-size: 2.6vh;\n    color: var(--panel-color);\n    font-weight: 700;\n    text-align: left\n}\n\n.status-widget footer {\n    font-size: 1.3vh;\n    margin-top: 3px;\n}\n\n.status-widget .percentage {\n    display: inline-block;\n    margin-left: 7px\n}\n\n.status-widget .additional-info {\n    display: inline-block;\n    font-size: 1.3vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .comment {\n    display: inline-block;\n    font-size: 1.5vh;\n    color: #797979;\n    margin-left: 5px\n}\n\n.status-widget .title {\n    display: inline-block;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.4vh;\n    color: rgba(0,0,0,0.54);\n}\n\n.status-widget .value2 {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : normal;\n    font-size : 1.8vh;\n    color: rgba(0,0,0,0.87);\n}\n\n.status-widget .button {\n    display: inline-block;\n    padding: 2px;\n    font-family : Arial;\n    font-weight : bold;\n    font-size : 16px;\n    color: #bdfbf8;\n}"
            },
            "title" : "Consumos",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "2px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "enableDataExport" : false,
            "showTitleIcon" : false,
            "titleIcon" : "more_horiz",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "displayTimewindow" : true,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "id" : "7aadd622-9112-4b91-93f9-49f680f1e352",
          "typeFullFqn" : "system.cards.html_value_card"
        },
        "682e41e7-3f9d-43f1-acb3-6bcdac0249b6" : {
          "type" : "timeseries",
          "sizeX" : 26,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_fer_p_faturado",
                "type" : "timeseries",
                "label" : "Ponta",
                "color" : "#ffab00",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ "month" ],
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "lineTension" : 0,
                  "steppedLine" : "false",
                  "spanGaps" : false,
                  "dashedLine" : false
                },
                "_hash" : 0.08277904512862033,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "fat_fer_fp_faturado",
                "type" : "timeseries",
                "label" : "Fora Ponta",
                "color" : "#3c9ad8",
                "settings" : {
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "stackId" : "Stack0",
                  "fillLines" : true,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsLineWidth" : 5,
                  "showPointsRadius" : 3,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left",
                  "aggUnit" : [ "month" ],
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "lineTension" : 0,
                  "steppedLine" : "false",
                  "spanGaps" : false,
                  "dashedLine" : false
                },
                "_hash" : 0.09957695826280699,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideLastInterval" : false,
              "hideQuickInterval" : false,
              "hideAggregation" : true,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1646103599000,
                  "endTimeMs" : 1677639599000
                },
                "interval" : 63245000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 25000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "axisLabel" : "Enter axis label here",
              "allowDrilldown" : false,
              "timeWindows" : [ "12M", "Ano" ],
              "timeWindowsUnits" : "month, month",
              "initialTimeWindow" : "12M",
              "showContractedDemandCurves" : false,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "showRightScale" : false,
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: false,\n    callback: callback\n}\n\nreturn ticks",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n            var label = data.datasets[tooltipItem\n                .datasetIndex].label || '';\n\n            if (label) {\n                label += ': ';\n            }\n            label += tooltipItem.yLabel.toLocaleString(\n                'pt-BR', {\n                    style: 'decimal',\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0\n                });\n            return label;\n        }\n        \nfilter = function (tooltipItem, data) {return tooltipItem.value != \"NaN\"}\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n\n    }\n}\n\nreturn tooltip",
              "stacked" : true,
              "showOverFlowInRed" : false,
              "sortLegendByLabel" : false,
              "roundToUnit" : true,
              "roundingMethod" : "same",
              "showRightScale2" : false,
              "rightScaleTicks" : "ticks = {\n    beginAtZero: true\n}\n\nreturn ticks"
            },
            "title" : "Energia Reativa Excedente (kVArh)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.6vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "5px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Comparações",
                "icon" : "compare",
                "useShowWidgetActionFunction" : true,
                "showWidgetActionFunction" : "var params = widgetContext.stateController.getStateParams()\nreturn params.admin\n",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : "ssu_comp_cons_uc",
                "setEntityId" : true,
                "stateEntityParamName" : null,
                "openRightLayout" : false,
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "e49df810-7566-427f-4696-6f8a8561171d"
              } ]
            },
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "id" : "682e41e7-3f9d-43f1-acb3-6bcdac0249b6",
          "typeFullFqn" : "tenant.teste.performance_dev"
        },
        "0ec4ed03-4c74-42dd-830e-0cc54649a9b3" : {
          "type" : "timeseries",
          "sizeX" : 35,
          "sizeY" : 15,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "fat_fer_p_valor",
                "type" : "timeseries",
                "label" : "Reativos P",
                "color" : "#fadc9b",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : false,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.4201039432975415,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null,
                "aggregationType" : null
              }, {
                "name" : "fat_fer_fp_valor",
                "type" : "timeseries",
                "label" : "Reativos FP",
                "color" : "#aa6510",
                "settings" : {
                  "datasetHidden" : false,
                  "dummyDataSet" : false,
                  "yAxisID" : "left",
                  "chartType" : "bar",
                  "steppedLine" : "none",
                  "spanGaps" : false,
                  "lineTension" : 0,
                  "dashedLine" : false,
                  "stackId" : "Stack0",
                  "aggUnit" : [ "month" ],
                  "fillLines" : true,
                  "showPoints" : false,
                  "showPointShape" : "circle",
                  "showPointsRadius" : 0,
                  "showPointsLineWidth" : 5,
                  "showSeparateAxis" : false,
                  "axisPosition" : "left"
                },
                "_hash" : 0.7894247666616827,
                "units" : "R$ {}",
                "decimals" : 2,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null,
                "aggregationType" : null
              } ]
            } ],
            "timewindow" : {
              "hideInterval" : false,
              "hideLastInterval" : false,
              "hideQuickInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "hideTimezone" : false,
              "selectedTab" : 1,
              "history" : {
                "historyType" : 1,
                "fixedTimewindow" : {
                  "startTimeMs" : 1646103599000,
                  "endTimeMs" : 1677639599000
                },
                "interval" : 63245000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 2000
              }
            },
            "showTitle" : true,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0.4%",
            "settings" : {
              "realtimeChart" : false,
              "displayLegend" : true,
              "displayAxisTitle" : false,
              "allowDrilldown" : false,
              "timeWindows" : [ "12M", "Ano" ],
              "timeWindowsUnits" : "month,month",
              "initialTimeWindow" : "12M",
              "showContractedDemandCurves" : false,
              "showLeftScale" : true,
              "tooltipLabelCallback" : "var label = data.datasets[tooltipItem.datasetIndex].label\n return label",
              "showRightScale" : true,
              "leftScaleTicks" : "callback = function(value, index, values) {\n        return value.toLocaleString('pt-BR', {\n            style: 'decimal',\n            maximumFractionDigits: 1,\n            minimumSignificantDigits: 2\n        });\n    }\n\nticks = {\n    beginAtZero: false,\n    callback: callback\n}\n\nreturn ticks",
              "stacked" : true,
              "sortLegendByLabel" : false,
              "axisLabel" : "Enter axis label here",
              "tooltipSettings" : "labelCallback = function(tooltipItem, data) {\n        var decimals = ctx.decimals[tooltipItem.datasetIndex];\n        var label = data.datasets[tooltipItem.datasetIndex].label || '';\n        var value = tooltipItem.yLabel.toLocaleString('pt-BR', {style: 'decimal', minimumFractionDigits: decimals, maximumFractionDigits: decimals});\n\n        try {\n            value = ctx.units[tooltipItem.datasetIndex].replace(/{}/g, value);\n        } catch (err) {}\n\n        var message = `${label}: ${value}`;\n        return message;\n    },\n\n    filter = function(tooltipItem, data) {\n        return tooltipItem.value != \"NaN\";\n    };\n\ntooltip = {\n    intersect: false,\n    mode: 'index',\n    filter: filter,\n    callbacks: {\n        label: labelCallback,\n\n    }\n};\n\nreturn tooltip;",
              "rightScaleTicks" : "ticks = {\n    beginAtZero: true\n}\n\nreturn ticks",
              "showRightScale2" : true,
              "rightScaleTicks2" : "ticks = {\n    beginAtZero: true\n}\n\nreturn ticks",
              "roundToUnit" : true,
              "showOverFlowInRed" : false,
              "roundingMethod" : "same"
            },
            "title" : "Custo dos Excedentes Reativos (R$)",
            "dropShadow" : false,
            "enableFullscreen" : true,
            "titleStyle" : {
              "font-family" : "Roboto Condensed",
              "font-size" : "1.7vh",
              "font-weight" : "600",
              "color" : "rgb(50, 88, 127)",
              "padding-top" : "5px",
              "padding-left" : "4px",
              "line-height" : "25px"
            },
            "mobileHeight" : null,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : true,
            "widgetStyle" : { },
            "useDashboardTimewindow" : false,
            "displayTimewindow" : false,
            "showLegend" : false,
            "actions" : {
              "headerButton" : [ {
                "name" : "Enviar fatura PDF",
                "icon" : "cloud_upload",
                "useShowWidgetActionFunction" : true,
                "showWidgetActionFunction" : "var params = widgetContext.stateController.getStateParams()\nreturn params.admin\n",
                "type" : "customPretty",
                "customHtml" : "<form #editDeviceForm=\"ngForm\" [formGroup] = 'fileAdd'\n      (ngSubmit)=\"send()\" style=\"width: 650px;\" >\n  <mat-toolbar fxLayout=\"row\" color=\"primary\">\n    <h2>Importar contas em PDF</h2>\n    <span fxFlex></span>\n    <button mat-button mat-icon-button\n            (click)=\"cancel()\"\n            type=\"button\">\n      <mat-icon class=\"material-icons\">close</mat-icon>\n    </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div class = 'loading' *ngIf=\"loadingFiles\">\n        <div fxLayout = 'column'>\n            <mat-progress-spinner class=\"test\" mode = 'determinate' value = '{{progress}}' diameter=\"100\"></mat-progress-spinner>\n            <div>Aguarde...</div>\n        </div>\n    </div>\n    <div class=\"tb-container\">\n      <label class=\"action-title\">Arquivos PDF originais da concessionária</label>\n        <div class=\"action-file-select-container \">\n              <div class=\"action-file-clear-container\">\n                <button mat-button mat-icon-button color=\"primary\"\n                        type=\"button\"\n                        (click)=\"clearFile()\"\n                        class=\"action-file-clear-btn\"\n                        matTooltip=\"{{ 'action.remove' | translate }}\"\n                        matTooltipPosition=\"above\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </div>\n            <div class=\"drop-area action-flow-drop\">\n                <label for=\"file-input\">Arraste o arquivo ou clique aqui para selecionar</label>\n                <input class=\"file-input\"  type=\"file\" id=\"file-input\" formControlName = 'controlInputField' multiple (change)=\"fileAdded($event.target.files)\">\n              </div>\n        </div>\n    </div>\n    <div class = 'file-info'>\n      <div *ngIf=\"!fileName\" class=\"cut-text\">Nenhum arquivo selecionado</div>\n      <div *ngIf=\"fileName\" class=\"cut-text\">{{ fileName }}</div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\">\n    <span fxFlex></span>\n    <button mat-button color=\"primary\"\n            type=\"button\"\n            [disabled]=\"(isLoading$ | async)\"\n            (click)=\"cancel()\" cdkFocusInitial>\n      Cancel\n    </button>\n    <button mat-button mat-raised-button color=\"primary\"\n            style=\"margin-right: 20px;\"\n            type=\"submit\"\n            [disabled]=\"(isLoading$ | async) || fileAdd.invalid\">\n      Import\n    </button>\n  </div>\n</form>",
                "customCss" : "\n.file-input{\n       display: none;\n}\n\n.action-flow-drop{\n     position: relative;\n    height: 100%;\n    overflow: hidden;\n    border: dashed 2px;\n    margin-left: 15px;\n}\n\n.action-flow-drop label{\n    display: flex;\n      flex-direction: column;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      font-size: 16px;\n      text-align: center;\n}\n\n.action-title{\n    display: block;\n    padding-bottom: 8px;\n    margin-left: 15px;\n    color: #8E8E8E;\n    font-size:12px;\n}\n\n.action-file-select-container{\n    position: relative;\n    width: 100%;\n    height: 100px;\n}\n\n.action-file-clear-container{\n    position: relative;\n    float: right;\n    width: 48px;\n    height: 100%;\n}\n\n.action-file-clear-btn{\n    top: 50%;\n    transform: translate(0%, -50%) !important;\n}\n\n.file-info{\n    margin-left: 15px;\n    margin-right: 15px;\n}\n\n.loading{\n    margin-top: 5px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    text-align: center;\n}\n\n.action-flow-drop label{\n    font-size: 25px;\n}",
                "customFunction" : "\nlet $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nopenEditDeviceDialog();\n\nfunction openEditDeviceDialog() {\n    customDialog.customDialog(htmlTemplate, EditDeviceDialogController).subscribe();\n}\n\nfunction EditDeviceDialogController(instance) {\n    let vm = instance;\n    vm.fileName = '';\n    vm.progress = 0;\n    vm.loadingFiles = false;\n    let url = 'https://solarhub.engecomp.io/invoices'\n    // let url = 'https://solarhub.engecomp.io/'\n    // let url = 'http://127.0.0.1:5000/'\n    let user = widgetContext.currentUser;\n    let userMail = user.sub\n    let parent_id = widgetContext.stateController.getEntityId('Curr_customer')\n    \n     $( document ).ready(function() {\n        let form = $('.drop-area');\n        form.on('drag dragstart dragend dragover dragenter dragleave drop', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n        }).on('drop', function(e) {\n            vm.fileAdded(e.originalEvent.dataTransfer.files);\n        });\n    });\n    \n    vm.fileAdd = vm.fb.group({\n        file:[[], [vm.validators.required]],\n        controlInputField:''\n    });\n\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n    vm.clearFile = () => {\n        $(\".file-input\").value = \"\";\n        vm.fileName = '';\n        vm.fileAdd.patchValue({file: []})\n    }\n\n    // vm.fileAdded = (files)=> {\n    //     for(let i = 0; i < files.length; i++){\n    //         let filetype=files[i].name.split('.').pop();\n    //         if (filetype === 'pdf') {\n    //             let newFiles = vm.fileAdd.get('file').value\n    //             if(vm.fileAdd.get('file').value.length !== 0){\n    //                 vm.fileName += ' // ';\n    //             }\n    //             newFiles.push(files.item(i))\n    //             vm.fileAdd.patchValue({file: newFiles})\n    //             vm.fileName += files.item(i).name;\n    //         } else {\n    //           alert(files[i].name + \" tem extensão inválida\");\n    //         }\n    //         vm.fileAdd.get('controlInputField').patchValue('', {emitEvent: false})\n    //     }\n    // }\n\n    vm.fileAdded = (files)=> {\n        for(let i = 0; i < files.length; i++){\n            let filetype=files[i].name.split('.').pop();\n            let filesize=files[i].size\n            if (filetype.toLowerCase() === 'pdf' && filesize < 1024*1024*4) {\n                let newFiles = vm.fileAdd.get('file').value\n                if(vm.fileAdd.get('file').value.length !== 0){\n                    vm.fileName += ' // ';\n                }\n                newFiles.push(files.item(i))\n                vm.fileAdd.patchValue({file: newFiles})\n                vm.fileName += files.item(i).name;\n            } else {\n                if (filetype.toLowerCase() !== 'pdf') {\n                    alert(files[i].name + \" tem extensão inválida\");\n                } else {\n                    alert(files[i].name + \" excede 4MB\");\n                }\n                \n            }\n        }\n        vm.fileAdd.get('controlInputField').patchValue('', {emitEvent: false});\n    }\n\n    vm.send = () =>\n    {\n        vm.loadingFiles = true;\n        for(let i=0; i < vm.fileAdd.get('file').value.length; i++) {\n            vm.progress = Math.round((i+1) / vm.fileAdd.get('file').value.length * 100)\n            let req = new XMLHttpRequest();\n            let formData = new FormData();\n            let instructions = {\n                url: \"http://localhost:5000/gd\",\n                parent_id: parent_id,\n                tenant: 'bt',\n                usage: 1,\n                user: userMail\n            };\n            formData.append(\"invoice\", vm.fileAdd.get('file').value[i]);\n            formData.append(\"instructions\", JSON.stringify( instructions ))\n            fetch(url, {method: \"POST\", body: formData}).then(function(r) {\n            });\n\n        }\n        vm.loadingFiles = false;\n        vm.cancel();\n    }\n}",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "ceefe86e-7893-f899-80d9-46ca52afaea1"
              } ]
            },
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "id" : "0ec4ed03-4c74-42dd-830e-0cc54649a9b3",
          "typeFullFqn" : "tenant.teste.performance_dev"
        }
      },
      "states" : {
        "ssu_site" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2
                },
                "d437b949-13f6-ad75-426d-716d173a1014" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 8,
                  "col" : 0,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2
                },
                "0d86078d-13f0-eb3e-6796-d3f6407d8f01" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 44,
                  "mobileOrder" : 7,
                  "mobileHeight" : 2
                },
                "daff6e32-aca8-dfc1-81ad-5d155693e353" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 53,
                  "mobileOrder" : 8,
                  "mobileHeight" : 2
                },
                "706d2f66-f0f0-4a47-97f5-25d6a137f300" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 10,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2
                },
                "08505b07-78af-56d3-79b7-c59a9facfd11" : {
                  "sizeX" : 12,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 32,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2
                },
                "418373ab-02b8-42fb-9c57-3cace62c3ea6" : {
                  "sizeX" : 29,
                  "sizeY" : 14,
                  "mobileOrder" : 21,
                  "mobileHeight" : 5,
                  "row" : 23,
                  "col" : 10
                },
                "4b7c53e7-b942-1674-39f9-c6f2ea6d575b" : {
                  "sizeX" : 25,
                  "sizeY" : 14,
                  "mobileHeight" : null,
                  "row" : 23,
                  "col" : 39
                },
                "afb6c33e-f4aa-4d36-970a-ae536a17186b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "bdb23800-e566-43ba-a5d3-dc68d4361f82" : {
                  "sizeX" : 12,
                  "sizeY" : 6,
                  "mobileOrder" : 5,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 20
                },
                "96f15c3e-5a9e-4673-9c05-43913e8216cd" : {
                  "sizeX" : 29,
                  "sizeY" : 15,
                  "mobileOrder" : 11,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 10
                },
                "ff095c78-ba27-4cbc-b908-8d511bd098cc" : {
                  "sizeX" : 25,
                  "sizeY" : 15,
                  "mobileOrder" : 12,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 39
                },
                "d141329e-d20e-249a-7097-fee8b22c91d1" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "backgroundImageUrl" : null,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_relatorios" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2
                },
                "d437b949-13f6-ad75-426d-716d173a1014" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 8,
                  "col" : 0,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2
                },
                "5f6a992a-0f81-78a3-4b0c-b6cb4753a0b3" : {
                  "sizeX" : 21,
                  "sizeY" : 19,
                  "mobileOrder" : 10,
                  "mobileHeight" : 5,
                  "row" : 2,
                  "col" : 10
                },
                "c50ace9e-6c03-0b43-2634-97526cf7fc29" : {
                  "sizeX" : 21,
                  "sizeY" : 16,
                  "mobileOrder" : 12,
                  "mobileHeight" : 5,
                  "row" : 21,
                  "col" : 10
                },
                "e664d486-3579-a2b9-3922-3e385b182ead" : {
                  "sizeX" : 33,
                  "sizeY" : 19,
                  "mobileOrder" : 14,
                  "mobileHeight" : 5,
                  "row" : 2,
                  "col" : 31
                },
                "5b006a6e-6235-5eb1-9a82-11170fb7620f" : {
                  "sizeX" : 33,
                  "sizeY" : 16,
                  "mobileOrder" : 16,
                  "mobileHeight" : 5,
                  "row" : 21,
                  "col" : 31
                },
                "afb6c33e-f4aa-4d36-970a-ae536a17186b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "d141329e-d20e-249a-7097-fee8b22c91d1" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_demandas" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2
                },
                "d141329e-d20e-249a-7097-fee8b22c91d1" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "row" : 14,
                  "col" : 0,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4
                },
                "d437b949-13f6-ad75-426d-716d173a1014" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 8,
                  "col" : 0,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2
                },
                "bdb23800-e566-43ba-a5d3-dc68d4361f82" : {
                  "sizeX" : 12,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 20,
                  "mobileOrder" : 5,
                  "mobileHeight" : 2
                },
                "08505b07-78af-56d3-79b7-c59a9facfd11" : {
                  "sizeX" : 12,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 32,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2
                },
                "5e3eb1f1-04cf-31f2-3f21-058e6c513aa9" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 54,
                  "mobileOrder" : 8,
                  "mobileHeight" : 2
                },
                "706d2f66-f0f0-4a47-97f5-25d6a137f300" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "0d86078d-13f0-eb3e-6796-d3f6407d8f01" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 44,
                  "mobileOrder" : 7,
                  "mobileHeight" : 2
                },
                "96f15c3e-5a9e-4673-9c05-43913e8216cd" : {
                  "sizeX" : 54,
                  "sizeY" : 29,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 10,
                  "mobileOrder" : 21
                },
                "afb6c33e-f4aa-4d36-970a-ae536a17186b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_consumos" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2
                },
                "d437b949-13f6-ad75-426d-716d173a1014" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 8,
                  "col" : 0,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2
                },
                "08505b07-78af-56d3-79b7-c59a9facfd11" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "7c4f4eef-6c80-4d8b-87b8-bec411dad45f" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 5,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 24
                },
                "bdb23800-e566-43ba-a5d3-dc68d4361f82" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 38,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2
                },
                "5e3eb1f1-04cf-31f2-3f21-058e6c513aa9" : {
                  "sizeX" : 12,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 52,
                  "mobileOrder" : 7,
                  "mobileHeight" : 2
                },
                "afb6c33e-f4aa-4d36-970a-ae536a17186b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "ff095c78-ba27-4cbc-b908-8d511bd098cc" : {
                  "sizeX" : 54,
                  "sizeY" : 29,
                  "mobileOrder" : 21,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 10
                },
                "d141329e-d20e-249a-7097-fee8b22c91d1" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_reativos" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2
                },
                "d437b949-13f6-ad75-426d-716d173a1014" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 8,
                  "col" : 0,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2
                },
                "5e3eb1f1-04cf-31f2-3f21-058e6c513aa9" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "f4ee3aff-dbf9-59bd-9ee9-a3936b870574" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 7,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 21
                },
                "a52cc1cc-72f4-6d4d-e603-0760ca317b82" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 8,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 35
                },
                "bd8d54b4-a15c-4136-b9d8-bbf7ab2b2312" : {
                  "sizeX" : 16,
                  "sizeY" : 35,
                  "row" : 2,
                  "col" : 48,
                  "mobileOrder" : 31,
                  "mobileHeight" : 5
                },
                "ad7ad91c-0457-40d9-ae48-ae0e627f32e5" : {
                  "sizeX" : 38,
                  "sizeY" : 15,
                  "mobileOrder" : 13,
                  "mobileHeight" : 5,
                  "row" : 22,
                  "col" : 10
                },
                "418373ab-02b8-42fb-9c57-3cace62c3ea6" : {
                  "sizeX" : 38,
                  "sizeY" : 14,
                  "mobileOrder" : 11,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 10
                },
                "afb6c33e-f4aa-4d36-970a-ae536a17186b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "d141329e-d20e-249a-7097-fee8b22c91d1" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_faturas" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "d437b949-13f6-ad75-426d-716d173a1014" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 8,
                  "col" : 0,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2
                },
                "288efc8d-c71a-8ec7-8b63-a81288763f15" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "0c3c4fc0-d08a-a32d-9217-b09b344ee641" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 5,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 24
                },
                "450e6423-bbdc-f36c-708f-32b35266f21a" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 38
                },
                "5c76d177-ad3d-a4e3-7fd7-a043c45a3673" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 7,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 51
                },
                "ec38963b-1618-7ef8-594f-c1e29261cc28" : {
                  "sizeX" : 19,
                  "sizeY" : 10,
                  "mobileOrder" : 12,
                  "mobileHeight" : 4,
                  "row" : 8,
                  "col" : 45
                },
                "ff733672-386d-8950-d8db-6991e51bfc19" : {
                  "sizeX" : 19,
                  "sizeY" : 5,
                  "mobileOrder" : 8,
                  "mobileHeight" : 2,
                  "row" : 18,
                  "col" : 45
                },
                "12ba9e87-51c8-2e76-94bb-c3115236ae24" : {
                  "sizeX" : 41,
                  "sizeY" : 14,
                  "row" : 23,
                  "col" : 10,
                  "mobileOrder" : 20,
                  "mobileHeight" : 4
                },
                "afb6c33e-f4aa-4d36-970a-ae536a17186b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "16c22fac-bdc6-4425-8e2f-de51059716f4" : {
                  "sizeX" : 35,
                  "sizeY" : 15,
                  "mobileOrder" : 11,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 10
                },
                "e752fd81-fb16-102a-cde3-5963f8c42f55" : {
                  "sizeX" : 13,
                  "sizeY" : 14,
                  "mobileOrder" : 30,
                  "mobileHeight" : 3,
                  "row" : 23,
                  "col" : 51
                },
                "d141329e-d20e-249a-7097-fee8b22c91d1" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_home" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "ed5ea746-e49e-c22c-16e8-fabb52293153" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "00cc6079-f149-3032-1bdf-e0ebbb932221" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 23
                },
                "ecd22b7f-784d-44b2-9fa9-b64673b8e13b" : {
                  "sizeX" : 27,
                  "sizeY" : 14,
                  "mobileOrder" : 99,
                  "mobileHeight" : 5,
                  "row" : 23,
                  "col" : 37
                },
                "126600ca-13f5-4eaf-99c7-d07accbcab1b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                },
                "6e8641db-adff-499f-a7ee-7610ffdfe76e" : {
                  "sizeX" : 27,
                  "sizeY" : 15,
                  "mobileOrder" : 12,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 37
                },
                "7adc8a21-c062-4db3-812f-3f4ae369ec2d" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 7,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 37
                },
                "a4120212-9a21-4fbf-6836-df5394530646" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 51
                },
                "48f64166-be95-c850-5d6d-3f9c1791bcbd" : {
                  "sizeX" : 10,
                  "sizeY" : 26,
                  "row" : 11,
                  "col" : 0
                },
                "acadc4bc-51d3-ce02-8ff9-d04aa4a9a5b2" : {
                  "sizeX" : 10,
                  "sizeY" : 3,
                  "row" : 8,
                  "col" : 0
                },
                "bcff0f11-d4b5-43af-8cd6-efbc0e538e6f" : {
                  "sizeX" : 27,
                  "sizeY" : 29,
                  "row" : 8,
                  "col" : 10
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "geracao_site" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : true,
          "layouts" : {
            "main" : {
              "widgets" : {
                "13478828-ffbe-11e9-8d71-362b9e155667" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "7ee00413-e562-796e-7f35-2d014ff8706a" : {
                  "sizeX" : 43,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 21,
                  "mobileOrder" : 99,
                  "mobileHeight" : 3
                },
                "e5be5b81-a710-f764-8199-e633f56a36eb" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "mobileOrder" : 5,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 10
                },
                "2cad580f-3833-502f-1541-706829c9e0b4" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 21
                },
                "4c0f4d1e-152c-4655-9443-c7f46a59223a" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "mobileOrder" : 7,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 32
                },
                "23c678a7-bdb9-70b3-56d1-b6adab0f2768" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "mobileOrder" : 8,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 43
                },
                "d09aee81-2deb-397c-0398-312279e0dfb4" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 9,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 54
                },
                "558b9c59-3692-cfa0-daf0-8e7856361031" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "3e53af92-8421-4c1b-bf09-87a42fc6955e" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "2c3c2cde-008f-48ce-900e-af613a264361" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "e05d0a3a-a29d-4d63-84ef-6ab2d771e046" : {
                  "sizeX" : 27,
                  "sizeY" : 23,
                  "mobileOrder" : 11,
                  "mobileHeight" : 5,
                  "row" : 14,
                  "col" : 10
                },
                "2b3fa733-b28e-43bb-81cb-66cb844de7fa" : {
                  "sizeX" : 27,
                  "sizeY" : 23,
                  "mobileOrder" : 21,
                  "mobileHeight" : 5,
                  "row" : 14,
                  "col" : 37
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "geracao_relatorios" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "3e53af92-8421-4c1b-bf09-87a42fc6955e" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "71c29f1d-41cc-1c9f-6a44-216a34da6c77" : {
                  "sizeX" : 18,
                  "sizeY" : 35,
                  "mobileOrder" : 11,
                  "mobileHeight" : 5,
                  "row" : 2,
                  "col" : 10
                },
                "79fd6aaa-0e7a-369a-db68-676907d21bb7" : {
                  "sizeX" : 18,
                  "sizeY" : 35,
                  "mobileOrder" : 12,
                  "mobileHeight" : 5,
                  "row" : 2,
                  "col" : 28
                },
                "1c69cc87-b98c-465c-e7fb-5358cca6b65f" : {
                  "sizeX" : 18,
                  "sizeY" : 35,
                  "mobileOrder" : 13,
                  "mobileHeight" : 5,
                  "row" : 2,
                  "col" : 46
                },
                "2c3c2cde-008f-48ce-900e-af613a264361" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "558b9c59-3692-cfa0-daf0-8e7856361031" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "geracao_config" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "3e53af92-8421-4c1b-bf09-87a42fc6955e" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "1b8377f4-57b0-9df0-5e22-862e697f043b" : {
                  "sizeX" : 54,
                  "sizeY" : 3,
                  "mobileOrder" : 4,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 10
                },
                "bd2eb728-d5ac-0738-d512-cfa92bc965ad" : {
                  "sizeX" : 20,
                  "sizeY" : 3,
                  "mobileOrder" : 88,
                  "mobileHeight" : 1,
                  "row" : 16,
                  "col" : 44
                },
                "27d19f5a-c3dc-af7e-ee47-7d21bd7e8ae1" : {
                  "sizeX" : 20,
                  "sizeY" : 13,
                  "mobileOrder" : 99,
                  "mobileHeight" : 4,
                  "row" : 24,
                  "col" : 44
                },
                "ff2f6231-e0e9-49a7-80a4-a5374d381a0e" : {
                  "sizeX" : 34,
                  "sizeY" : 3,
                  "mobileOrder" : 6,
                  "mobileHeight" : 1,
                  "row" : 16,
                  "col" : 10
                },
                "a554fbc8-9a19-ac55-71cc-f7fc59bb3724" : {
                  "sizeX" : 34,
                  "sizeY" : 3,
                  "row" : 28,
                  "col" : 10
                },
                "2c3c2cde-008f-48ce-900e-af613a264361" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2
                },
                "558b9c59-3692-cfa0-daf0-8e7856361031" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "c6a6526c-4e0d-4c97-ae6a-49a363bc9ad3" : {
                  "sizeX" : 54,
                  "sizeY" : 11,
                  "row" : 5,
                  "col" : 10
                },
                "ecf12cf1-793b-4d23-a3f9-ba8928c711a4" : {
                  "sizeX" : 20,
                  "sizeY" : 5,
                  "row" : 19,
                  "col" : 44
                },
                "93b22e6e-a3a2-4ef1-afb0-ad19ced6d66b" : {
                  "sizeX" : 34,
                  "sizeY" : 9,
                  "row" : 19,
                  "col" : 10
                },
                "bf0f1767-142d-4d05-a599-65481851d0aa" : {
                  "sizeX" : 34,
                  "sizeY" : 6,
                  "row" : 31,
                  "col" : 10
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_config" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "d437b949-13f6-ad75-426d-716d173a1014" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "1b8377f4-57b0-9df0-5e22-862e697f043b" : {
                  "sizeX" : 54,
                  "sizeY" : 2,
                  "mobileOrder" : 4,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 10
                },
                "7308aac3-6d67-44a2-98b9-3a489b9c243d" : {
                  "sizeX" : 54,
                  "sizeY" : 11,
                  "mobileOrder" : 5,
                  "mobileHeight" : 4,
                  "row" : 4,
                  "col" : 10
                },
                "bd2eb728-d5ac-0738-d512-cfa92bc965ad" : {
                  "sizeX" : 20,
                  "sizeY" : 2,
                  "mobileOrder" : 91,
                  "mobileHeight" : 1,
                  "row" : 15,
                  "col" : 44
                },
                "34d0bfdc-ef5e-4f25-9829-d28fa05ce5c7" : {
                  "sizeX" : 20,
                  "sizeY" : 12,
                  "mobileOrder" : 99,
                  "mobileHeight" : 5,
                  "row" : 22,
                  "col" : 44
                },
                "42bcd558-07ef-a6cb-663c-33d0f21a951a" : {
                  "sizeX" : 11,
                  "sizeY" : 3,
                  "mobileOrder" : 41,
                  "mobileHeight" : 1,
                  "row" : 34,
                  "col" : 21
                },
                "b1aed89f-4952-76e2-70d7-06acfba9977f" : {
                  "sizeX" : 10,
                  "sizeY" : 3,
                  "mobileOrder" : 43,
                  "mobileHeight" : 1,
                  "row" : 34,
                  "col" : 44
                },
                "7e8f4e62-8d3d-459f-828e-0498834a78f9" : {
                  "sizeX" : 34,
                  "sizeY" : 2,
                  "mobileOrder" : 11,
                  "mobileHeight" : 1,
                  "row" : 15,
                  "col" : 10
                },
                "a554fbc8-9a19-ac55-71cc-f7fc59bb3724" : {
                  "sizeX" : 34,
                  "sizeY" : 2,
                  "mobileOrder" : 21,
                  "mobileHeight" : 1,
                  "row" : 26,
                  "col" : 10
                },
                "afb6c33e-f4aa-4d36-970a-ae536a17186b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "502f94d8-3336-419b-af87-95b95b988fe8" : {
                  "sizeX" : 11,
                  "sizeY" : 3,
                  "row" : 34,
                  "col" : 10,
                  "mobileOrder" : 40,
                  "mobileHeight" : 1
                },
                "d141329e-d20e-249a-7097-fee8b22c91d1" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "553c7411-b0bb-44b6-9d94-39213211acc5" : {
                  "sizeX" : 34,
                  "sizeY" : 6,
                  "row" : 28,
                  "col" : 10,
                  "mobileOrder" : 22,
                  "mobileHeight" : 3
                },
                "c0b1cd16-b307-4238-8012-1549e1cd81f4" : {
                  "sizeX" : 12,
                  "sizeY" : 3,
                  "mobileOrder" : 42,
                  "mobileHeight" : 1,
                  "row" : 34,
                  "col" : 32
                },
                "a049777b-b6d6-4eca-9296-5c050af9014d" : {
                  "sizeX" : 23,
                  "sizeY" : 9,
                  "mobileOrder" : 12,
                  "mobileHeight" : 3,
                  "row" : 17,
                  "col" : 10
                },
                "8da81eb9-4e14-400b-9368-e96407b730f4" : {
                  "sizeX" : 11,
                  "sizeY" : 9,
                  "mobileOrder" : 13,
                  "mobileHeight" : 3,
                  "row" : 17,
                  "col" : 33
                },
                "5d6039f3-065e-40d8-abd2-d10b440de777" : {
                  "sizeX" : 20,
                  "sizeY" : 5,
                  "row" : 17,
                  "col" : 44
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_benchmarking" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2
                },
                "e29df4d3-939b-f864-3f16-7e53f61a0284" : {
                  "sizeX" : 54,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 10,
                  "mobileOrder" : 2,
                  "mobileHeight" : 1
                },
                "93a2eae3-be18-4d27-9023-750c3fafe7c9" : {
                  "sizeX" : 54,
                  "sizeY" : 29,
                  "row" : 8,
                  "col" : 10,
                  "mobileOrder" : 21,
                  "mobileHeight" : 5
                },
                "126600ca-13f5-4eaf-99c7-d07accbcab1b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "acadc4bc-51d3-ce02-8ff9-d04aa4a9a5b2" : {
                  "sizeX" : 10,
                  "sizeY" : 3,
                  "row" : 8,
                  "col" : 0
                },
                "48f64166-be95-c850-5d6d-3f9c1791bcbd" : {
                  "sizeX" : 10,
                  "sizeY" : 26,
                  "row" : 11,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_pe_consolidado" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "cce0e848-540c-48bb-84ca-e71aecfc9527" : {
                  "sizeX" : 41,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 10
                },
                "2535e978-4173-9196-c440-0fa112bfc110" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 3,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 51
                },
                "126600ca-13f5-4eaf-99c7-d07accbcab1b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "1f048c02-a2d8-2ebc-a53d-6af7068f1e7c" : {
                  "sizeX" : 54,
                  "sizeY" : 29,
                  "mobileOrder" : 21,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 10
                },
                "acadc4bc-51d3-ce02-8ff9-d04aa4a9a5b2" : {
                  "sizeX" : 10,
                  "sizeY" : 3,
                  "row" : 8,
                  "col" : 0
                },
                "48f64166-be95-c850-5d6d-3f9c1791bcbd" : {
                  "sizeX" : 10,
                  "sizeY" : 26,
                  "row" : 11,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_pot_economia" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "d437b949-13f6-ad75-426d-716d173a1014" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "db5d55e2-1866-f83a-7a96-9cb3ba37f6a4" : {
                  "sizeX" : 21,
                  "sizeY" : 6,
                  "mobileOrder" : 5,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "a072471f-8365-fa3e-061a-86d9fe549dbe" : {
                  "sizeX" : 15,
                  "sizeY" : 6,
                  "mobileOrder" : 11,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 31
                },
                "e6d12a92-c335-5ba2-e986-59c22c964b8e" : {
                  "sizeX" : 18,
                  "sizeY" : 6,
                  "mobileOrder" : 12,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 46
                },
                "9d57d15b-4a9c-e951-de33-5adc90d4f60f" : {
                  "sizeX" : 36,
                  "sizeY" : 22,
                  "row" : 8,
                  "col" : 10,
                  "mobileOrder" : 10,
                  "mobileHeight" : 5
                },
                "dd167096-8ee8-4d0c-66e5-03fce645fe73" : {
                  "sizeX" : 18,
                  "sizeY" : 7,
                  "mobileOrder" : 13,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 46
                },
                "412ec7bf-5ef6-f549-8a63-0f310e50dc6e" : {
                  "sizeX" : 18,
                  "sizeY" : 7,
                  "mobileOrder" : 14,
                  "mobileHeight" : 2,
                  "row" : 15,
                  "col" : 46
                },
                "a45c52f4-45fd-5f10-6eee-348720f538d3" : {
                  "sizeX" : 18,
                  "sizeY" : 8,
                  "mobileOrder" : 15,
                  "mobileHeight" : 2,
                  "row" : 22,
                  "col" : 46
                },
                "67ff928a-b2f4-c4c6-b3a5-f3048996f168" : {
                  "sizeX" : 18,
                  "sizeY" : 7,
                  "mobileOrder" : 21,
                  "mobileHeight" : 2,
                  "row" : 30,
                  "col" : 10
                },
                "a7db8ef3-f271-6b8e-e25c-8be3c63748e6" : {
                  "sizeX" : 18,
                  "sizeY" : 7,
                  "mobileOrder" : 22,
                  "mobileHeight" : 2,
                  "row" : 30,
                  "col" : 28
                },
                "19fdaeba-9fd1-f032-f5be-dfad560b46ca" : {
                  "sizeX" : 18,
                  "sizeY" : 7,
                  "mobileOrder" : 23,
                  "mobileHeight" : 2,
                  "row" : 30,
                  "col" : 46
                },
                "afb6c33e-f4aa-4d36-970a-ae536a17186b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "d141329e-d20e-249a-7097-fee8b22c91d1" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_home" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "3c811f98-ad2d-8053-5f1f-e16390576d4c" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "1ddc975c-0501-4d0c-b0e9-64a3491ebeba" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "mobileOrder" : 5,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 21
                },
                "947f3bab-45eb-4a11-8178-eabfc47d96ea" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 32
                },
                "5ef986d0-937a-4e4a-b777-c7898e59596e" : {
                  "sizeX" : 30,
                  "sizeY" : 14,
                  "mobileOrder" : 99,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 34
                },
                "5b1f3358-e8b7-498c-be90-a0d48dd00b43" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "mobileOrder" : 7,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 43
                },
                "354369f9-559b-415e-a152-8672b5501f3f" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 8,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 54
                },
                "126600ca-13f5-4eaf-99c7-d07accbcab1b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                },
                "ac37c1a9-bf27-930d-e065-191b43c163a8" : {
                  "sizeX" : 34,
                  "sizeY" : 29,
                  "mobileOrder" : 11,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "f938477d-3b7d-4f1a-819e-d1f18c35e049" : {
                  "sizeX" : 30,
                  "sizeY" : 15,
                  "mobileOrder" : 21,
                  "mobileHeight" : 6,
                  "row" : 22,
                  "col" : 34
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_usina" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "8fb600f2-c4f8-4bb3-b68f-cee29c110a63" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "41ca2940-cac9-4d21-b023-ffe5d6984002" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "6021a2ef-1d07-4af2-9e68-3b1bfe62fb34" : {
                  "sizeX" : 27,
                  "sizeY" : 23,
                  "mobileOrder" : 21,
                  "mobileHeight" : 6,
                  "row" : 14,
                  "col" : 10
                },
                "5bb9acca-813a-4128-9c66-974133e13016" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "1ced5a29-2ed2-4ebd-a569-2b0c3908bb5f" : {
                  "sizeX" : 54,
                  "sizeY" : 6,
                  "mobileOrder" : 99,
                  "mobileHeight" : 3,
                  "row" : 2,
                  "col" : 10
                },
                "8a2c4f11-e719-445b-a60a-7d318819ae1c" : {
                  "sizeX" : 27,
                  "sizeY" : 23,
                  "mobileHeight" : 5,
                  "row" : 14,
                  "col" : 37,
                  "mobileOrder" : 31
                },
                "48a8b270-b5d2-4856-9213-50c532c92cf0" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 10
                },
                "83d9569b-5371-43d3-9054-0a8e47f684ab" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "mobileOrder" : 5,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 19
                },
                "4d0d607f-2910-44b8-9f02-23af990e134e" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 28
                },
                "627a3ec7-8787-7806-9eb1-7aaa17e60d28" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "mobileOrder" : 7,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 37
                },
                "868a759e-ae39-4864-85cf-5d9d34858b1a" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "mobileOrder" : 8,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 46
                },
                "c1c851be-a22b-425f-a9e8-c99f2cb2008c" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "mobileOrder" : 9,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 55
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_config_ufv" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "41ca2940-cac9-4d21-b023-ffe5d6984002" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "8fb600f2-c4f8-4bb3-b68f-cee29c110a63" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "1b8377f4-57b0-9df0-5e22-862e697f043b" : {
                  "sizeX" : 54,
                  "sizeY" : 3,
                  "row" : 2,
                  "col" : 10,
                  "mobileOrder" : 4,
                  "mobileHeight" : 1
                },
                "3a606d5c-bf8d-4c1f-8db3-35ff236d741f" : {
                  "sizeX" : 54,
                  "sizeY" : 11,
                  "row" : 5,
                  "col" : 10,
                  "mobileOrder" : 5,
                  "mobileHeight" : 4
                },
                "bd2eb728-d5ac-0738-d512-cfa92bc965ad" : {
                  "sizeX" : 20,
                  "sizeY" : 3,
                  "row" : 16,
                  "col" : 44,
                  "mobileOrder" : 88,
                  "mobileHeight" : 1
                },
                "ff2f6231-e0e9-49a7-80a4-a5374d381a0e" : {
                  "sizeX" : 34,
                  "sizeY" : 3,
                  "row" : 16,
                  "col" : 10,
                  "mobileOrder" : 6,
                  "mobileHeight" : 1
                },
                "bf6d6af8-3a28-4ddd-b011-1ea6062f4f09" : {
                  "sizeX" : 34,
                  "sizeY" : 5,
                  "row" : 19,
                  "col" : 10,
                  "mobileOrder" : 7,
                  "mobileHeight" : 1
                },
                "f744684f-11e4-4e70-a0bb-69dd2798a8e3" : {
                  "sizeX" : 20,
                  "sizeY" : 5,
                  "row" : 19,
                  "col" : 44,
                  "mobileOrder" : 89,
                  "mobileHeight" : 2
                },
                "6b65f7d3-3eb3-483f-9415-fa60d592440e" : {
                  "sizeX" : 20,
                  "sizeY" : 13,
                  "row" : 24,
                  "col" : 44,
                  "mobileOrder" : 99,
                  "mobileHeight" : 4
                },
                "0df38364-b039-b8d6-e6d7-51b294d2c8f9" : {
                  "sizeX" : 34,
                  "sizeY" : 3,
                  "mobileOrder" : 8,
                  "mobileHeight" : 1,
                  "row" : 24,
                  "col" : 10
                },
                "b7bf19b2-8720-ef95-b76e-9d3b48cb4c8f" : {
                  "sizeX" : 34,
                  "sizeY" : 4,
                  "mobileOrder" : 8,
                  "mobileHeight" : 1,
                  "row" : 27,
                  "col" : 10
                },
                "5bb9acca-813a-4128-9c66-974133e13016" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "0f2995b0-07d7-43e0-97de-dc2762da543b" : {
                  "sizeX" : 17,
                  "sizeY" : 3,
                  "mobileOrder" : 11,
                  "mobileHeight" : 1,
                  "row" : 34,
                  "col" : 10
                },
                "f143adca-5958-45af-8d2f-e80cdaa0ea49" : {
                  "sizeX" : 34,
                  "sizeY" : 3,
                  "mobileOrder" : 10,
                  "mobileHeight" : 1,
                  "row" : 31,
                  "col" : 10
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_equiptos" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "8fb600f2-c4f8-4bb3-b68f-cee29c110a63" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "e78a7704-6bb0-47cc-9049-01cd61e26c59" : {
                  "sizeX" : 24,
                  "sizeY" : 29,
                  "mobileOrder" : 3,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 10
                },
                "84a5d463-542a-4590-9a8d-11cec0f05b40" : {
                  "sizeX" : 30,
                  "sizeY" : 15,
                  "mobileOrder" : 21,
                  "mobileHeight" : 6,
                  "row" : 8,
                  "col" : 34
                },
                "7c19b94c-5d67-4a61-b5c7-bc6aa23269c0" : {
                  "sizeX" : 30,
                  "sizeY" : 14,
                  "mobileOrder" : 22,
                  "mobileHeight" : 6,
                  "row" : 23,
                  "col" : 34
                },
                "5bb9acca-813a-4128-9c66-974133e13016" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "5e153973-603e-4cf5-b409-cf134afcee03" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "48a8b270-b5d2-4856-9213-50c532c92cf0" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "83d9569b-5371-43d3-9054-0a8e47f684ab" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "mobileOrder" : 5,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 19
                },
                "4d0d607f-2910-44b8-9f02-23af990e134e" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 28
                },
                "627a3ec7-8787-7806-9eb1-7aaa17e60d28" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "mobileOrder" : 7,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 37
                },
                "868a759e-ae39-4864-85cf-5d9d34858b1a" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "mobileOrder" : 8,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 46
                },
                "c1c851be-a22b-425f-a9e8-c99f2cb2008c" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "mobileOrder" : 9,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 55
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_contratos" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "41ca2940-cac9-4d21-b023-ffe5d6984002" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "8fb600f2-c4f8-4bb3-b68f-cee29c110a63" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "d3049db2-745c-5050-b59a-af1c4d91cde1" : {
                  "sizeX" : 54,
                  "sizeY" : 3,
                  "mobileOrder" : 4,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 10
                },
                "4d021773-e562-f4da-0260-1a9d18c45ad9" : {
                  "sizeX" : 54,
                  "sizeY" : 9,
                  "mobileOrder" : 5,
                  "mobileHeight" : 4,
                  "row" : 5,
                  "col" : 10
                },
                "5b3b16aa-a7e1-ad1f-30db-391f1e118e67" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 11,
                  "mobileHeight" : 1,
                  "row" : 14,
                  "col" : 10
                },
                "7b776bc5-fac2-5c8d-9f61-1e84379916f7" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 21,
                  "mobileHeight" : 1,
                  "row" : 14,
                  "col" : 28
                },
                "69eb6472-e616-1c1a-fc15-2131fc356dc1" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 31,
                  "mobileHeight" : 1,
                  "row" : 14,
                  "col" : 46
                },
                "2c8fcb5e-4db6-143b-7ec7-4da846588781" : {
                  "sizeX" : 18,
                  "sizeY" : 20,
                  "mobileOrder" : 12,
                  "mobileHeight" : 5,
                  "row" : 17,
                  "col" : 10
                },
                "399cf39a-dde5-c689-afe9-4eec8867916b" : {
                  "sizeX" : 18,
                  "sizeY" : 20,
                  "mobileOrder" : 22,
                  "mobileHeight" : 5,
                  "row" : 17,
                  "col" : 28
                },
                "14e7d97b-f607-4ce8-ce7d-59a33190e112" : {
                  "sizeX" : 18,
                  "sizeY" : 20,
                  "mobileOrder" : 32,
                  "mobileHeight" : 5,
                  "row" : 17,
                  "col" : 46
                },
                "5bb9acca-813a-4128-9c66-974133e13016" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_ucs" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "41ca2940-cac9-4d21-b023-ffe5d6984002" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "8fb600f2-c4f8-4bb3-b68f-cee29c110a63" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "1afb556f-776d-db0f-4d3c-6ba814d0fd15" : {
                  "sizeX" : 27,
                  "sizeY" : 13,
                  "mobileOrder" : 99,
                  "mobileHeight" : 5,
                  "row" : 24,
                  "col" : 37
                },
                "5bb9acca-813a-4128-9c66-974133e13016" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "958e2d9f-7a8c-4b36-8d1a-27c9a3540f0d" : {
                  "sizeX" : 27,
                  "sizeY" : 16,
                  "mobileOrder" : 22,
                  "mobileHeight" : 6,
                  "row" : 8,
                  "col" : 37
                },
                "be1d381d-2017-46d6-860d-aab50639080e" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 37,
                  "mobileOrder" : 10,
                  "mobileHeight" : 2
                },
                "46187849-a31c-4c73-9002-276686e8cb15" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 51,
                  "mobileOrder" : 11,
                  "mobileHeight" : 2
                },
                "48aa3368-dcfe-4705-8eb4-9d6b27ff9ada" : {
                  "sizeX" : 27,
                  "sizeY" : 29,
                  "row" : 8,
                  "col" : 10,
                  "mobileOrder" : 5,
                  "mobileHeight" : 5
                },
                "4d0d607f-2910-44b8-9f02-23af990e134e" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 8,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "8ba76e6b-4ccf-4ae7-81fa-4f83076c945e" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 9,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 24
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_config_contratos" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 0
                },
                "41ca2940-cac9-4d21-b023-ffe5d6984002" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "8fb600f2-c4f8-4bb3-b68f-cee29c110a63" : {
                  "sizeX" : 10,
                  "sizeY" : 24,
                  "mobileOrder" : 3,
                  "mobileHeight" : 3,
                  "row" : 14,
                  "col" : 0
                },
                "d3049db2-745c-5050-b59a-af1c4d91cde1" : {
                  "sizeX" : 54,
                  "sizeY" : 3,
                  "mobileOrder" : 4,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 10
                },
                "5b3b16aa-a7e1-ad1f-30db-391f1e118e67" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 40,
                  "mobileHeight" : 1,
                  "row" : 11,
                  "col" : 10
                },
                "7b776bc5-fac2-5c8d-9f61-1e84379916f7" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 60,
                  "mobileHeight" : 1,
                  "row" : 11,
                  "col" : 28
                },
                "69eb6472-e616-1c1a-fc15-2131fc356dc1" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 80,
                  "mobileHeight" : 1,
                  "row" : 11,
                  "col" : 46
                },
                "098a614c-b610-4d17-7bd6-81906f6dc5e0" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 6,
                  "mobileHeight" : 1,
                  "row" : 5,
                  "col" : 10
                },
                "8a51db1a-144d-305a-8ddc-e3c25de380d8" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 8,
                  "mobileHeight" : 1,
                  "row" : 8,
                  "col" : 10
                },
                "0fd1eefd-c233-6cef-c51c-f82af8d4d870" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 7,
                  "mobileHeight" : 1,
                  "row" : 5,
                  "col" : 28
                },
                "a2e931d7-97f6-e762-f2e8-cf3b509d6466" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 9,
                  "mobileHeight" : 1,
                  "row" : 8,
                  "col" : 28
                },
                "95effe9f-11e7-da77-8f8d-c99f1ec5a223" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 10,
                  "mobileHeight" : 1,
                  "row" : 5,
                  "col" : 46
                },
                "b39a629f-c686-401e-d887-d634205c9622" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 41,
                  "mobileHeight" : 1,
                  "row" : 14,
                  "col" : 10
                },
                "f9f03ffa-3a67-421f-2be0-930bb0c39327" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 42,
                  "mobileHeight" : 1,
                  "row" : 17,
                  "col" : 10
                },
                "f8fb0f1e-10b9-75bf-9a88-0126e1261284" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 43,
                  "mobileHeight" : 1,
                  "row" : 20,
                  "col" : 10
                },
                "9ebe42f7-6ff5-77b3-2d8e-9a9bbc88c6cf" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 44,
                  "mobileHeight" : 1,
                  "row" : 23,
                  "col" : 10
                },
                "6a1dc859-869d-6a3a-b033-4858f6e41122" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 45,
                  "mobileHeight" : 1,
                  "row" : 26,
                  "col" : 10
                },
                "8ba84b02-ccdb-753e-a895-4b6afbb9f6df" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 46,
                  "mobileHeight" : 1,
                  "row" : 29,
                  "col" : 10
                },
                "0dfa5d2c-9bd7-c667-a84a-d01b3370018a" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 47,
                  "mobileHeight" : 1,
                  "row" : 32,
                  "col" : 10
                },
                "e6389ea5-3e09-ffeb-1e38-608469c5c223" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 48,
                  "mobileHeight" : 1,
                  "row" : 35,
                  "col" : 10
                },
                "7b5fb390-c2b3-edd4-e77c-4569ff698671" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 61,
                  "mobileHeight" : 1,
                  "row" : 14,
                  "col" : 28
                },
                "1fba3116-86e1-9066-bb02-f6818e6c85d4" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 62,
                  "mobileHeight" : 1,
                  "row" : 17,
                  "col" : 28
                },
                "cf57b79f-310f-2004-210d-973d518ce3f0" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 63,
                  "mobileHeight" : 1,
                  "row" : 20,
                  "col" : 28
                },
                "5e3baa98-e1c2-2a6d-9f60-a2c64e58ed77" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 64,
                  "mobileHeight" : 1,
                  "row" : 23,
                  "col" : 28
                },
                "6decbe0e-757b-fac5-8b7f-942a883f63c6" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 65,
                  "mobileHeight" : 1,
                  "row" : 26,
                  "col" : 28
                },
                "a92e8a7d-01c1-7d9b-e22a-693f87eb7111" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 66,
                  "mobileHeight" : 1,
                  "row" : 29,
                  "col" : 28
                },
                "4434bdc1-6516-8e6b-6ab9-1e66a3ce482d" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 67,
                  "mobileHeight" : 1,
                  "row" : 32,
                  "col" : 28
                },
                "a3d8f13b-a331-6902-448a-99e8c31aa543" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 68,
                  "mobileHeight" : 1,
                  "row" : 35,
                  "col" : 28
                },
                "10a92fc1-eb59-bef4-7528-3cc61395a3e2" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 81,
                  "mobileHeight" : 1,
                  "row" : 14,
                  "col" : 46
                },
                "a6d99ae5-32e1-fa92-1c8c-18ef4fdc80d3" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 82,
                  "mobileHeight" : 1,
                  "row" : 17,
                  "col" : 46
                },
                "196c0276-f1ac-0a18-5519-12a08e4f0131" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 83,
                  "mobileHeight" : 1,
                  "row" : 20,
                  "col" : 46
                },
                "29e46b42-df3f-6612-d24c-b116538eaba7" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 84,
                  "mobileHeight" : 1,
                  "row" : 23,
                  "col" : 46
                },
                "2b6dace4-90c0-df29-1f66-c3704ee07a0c" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 85,
                  "mobileHeight" : 1,
                  "row" : 26,
                  "col" : 46
                },
                "7e279eb4-e9c2-6450-ae6e-a10c885b072c" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 86,
                  "mobileHeight" : 1,
                  "row" : 29,
                  "col" : 46
                },
                "12fc9668-cf42-9ae0-4895-ad6c04409890" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 87,
                  "mobileHeight" : 1,
                  "row" : 32,
                  "col" : 46
                },
                "37b677b8-1f60-71b8-2446-8908ba1208bd" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 88,
                  "mobileHeight" : 1,
                  "row" : 35,
                  "col" : 46
                },
                "5bb9acca-813a-4128-9c66-974133e13016" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_rel_mensal" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 0
                },
                "41ca2940-cac9-4d21-b023-ffe5d6984002" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "5bb9acca-813a-4128-9c66-974133e13016" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1
                },
                "a52153d3-1402-4d40-a680-e1a70b27a150" : {
                  "sizeX" : 54,
                  "sizeY" : 35,
                  "mobileOrder" : 31,
                  "mobileHeight" : 6,
                  "row" : 2,
                  "col" : 10
                },
                "8fb600f2-c4f8-4bb3-b68f-cee29c110a63" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_uc_detalhe" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "41ca2940-cac9-4d21-b023-ffe5d6984002" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "8fb600f2-c4f8-4bb3-b68f-cee29c110a63" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "5a3921ea-63bc-8cff-bd4a-c419bd715339" : {
                  "sizeX" : 16,
                  "sizeY" : 6,
                  "mobileOrder" : 5,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "e3f728be-9650-bef8-732b-b0923a16e4e0" : {
                  "sizeX" : 16,
                  "sizeY" : 29,
                  "mobileOrder" : 4,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 10
                },
                "9df12a44-4fd6-0c5b-7313-4711f5ee2fd3" : {
                  "sizeX" : 38,
                  "sizeY" : 14,
                  "mobileOrder" : 31,
                  "mobileHeight" : 5,
                  "row" : 23,
                  "col" : 26
                },
                "4adb6e4b-4e86-4ef1-9c26-d4a42fd39046" : {
                  "sizeX" : 12,
                  "sizeY" : 6,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 26
                },
                "d6c700eb-768b-44d9-acab-ad43f123ef7f" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 9,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 51
                },
                "2f9e3fe8-ac3b-4900-af6a-d18458baba84" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 8,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 38
                },
                "5bb9acca-813a-4128-9c66-974133e13016" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "836223d2-b63e-4ea6-a765-0b973ae08f0e" : {
                  "sizeX" : 38,
                  "sizeY" : 15,
                  "mobileOrder" : 21,
                  "mobileHeight" : 6,
                  "row" : 8,
                  "col" : 26
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "water_site" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "1837a3cb-b199-459c-e7b8-06fd1a36ab23" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "93dd47e3-064a-3c15-0001-3d10a312d55c" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "f372539c-7155-5e84-dcdc-908a2c610627" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "bd51aa4e-6552-3bc3-c5ad-2ad173ef4648" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 7,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 24
                },
                "126a7719-a5bc-49f8-9348-23e834762708" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                },
                "fbebe885-ce2d-4c9b-8c59-a82305c5cb9d" : {
                  "sizeX" : 27,
                  "sizeY" : 16,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 10,
                  "mobileOrder" : 21
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "bf2c4327-357e-4ad1-8fe1-8d5e9ba6c7aa" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 50,
                  "mobileOrder" : 9,
                  "mobileHeight" : 2
                },
                "96f705a4-bbf1-45a4-9b77-30fef9a507a7" : {
                  "sizeX" : 27,
                  "sizeY" : 16,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 37,
                  "mobileOrder" : 22
                },
                "da9e985a-f2a0-4b29-a66e-6f81c1f7fd3e" : {
                  "sizeX" : 54,
                  "sizeY" : 13,
                  "row" : 24,
                  "col" : 10,
                  "mobileOrder" : 51,
                  "mobileHeight" : 5
                },
                "3c8fa567-5f39-4093-86fe-445aa88c511c" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 37,
                  "mobileOrder" : 8,
                  "mobileHeight" : 2
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "water_config" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "1837a3cb-b199-459c-e7b8-06fd1a36ab23" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "93dd47e3-064a-3c15-0001-3d10a312d55c" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "1b8377f4-57b0-9df0-5e22-862e697f043b" : {
                  "sizeX" : 54,
                  "sizeY" : 3,
                  "mobileOrder" : 4,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 10
                },
                "a554fbc8-9a19-ac55-71cc-f7fc59bb3724" : {
                  "sizeX" : 34,
                  "sizeY" : 3,
                  "mobileOrder" : 10,
                  "mobileHeight" : 1,
                  "row" : 16,
                  "col" : 10
                },
                "bd2eb728-d5ac-0738-d512-cfa92bc965ad" : {
                  "sizeX" : 20,
                  "sizeY" : 3,
                  "mobileOrder" : 88,
                  "mobileHeight" : 1,
                  "row" : 16,
                  "col" : 44
                },
                "8c8840e6-6f88-4ffb-bc94-3a2862be7ffc" : {
                  "sizeX" : 20,
                  "sizeY" : 13,
                  "mobileOrder" : 99,
                  "mobileHeight" : 4,
                  "row" : 24,
                  "col" : 44
                },
                "126a7719-a5bc-49f8-9348-23e834762708" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "92bb9480-256d-48b2-950b-4d8186cb5562" : {
                  "sizeX" : 54,
                  "sizeY" : 11,
                  "row" : 5,
                  "col" : 10
                },
                "4f165794-85cb-46d1-861c-d8bc2d8de33c" : {
                  "sizeX" : 20,
                  "sizeY" : 5,
                  "row" : 19,
                  "col" : 44
                },
                "8ffaf91a-0894-47c4-9fb3-197ad087d341" : {
                  "sizeX" : 34,
                  "sizeY" : 5,
                  "row" : 19,
                  "col" : 10
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_comp_consumo" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "31e4b455-8711-73f7-2798-7c0fbbff1f24" : {
                  "sizeX" : 10,
                  "sizeY" : 29,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 8,
                  "col" : 0
                },
                "aab136d7-268a-684f-d47f-fd4d677e274d" : {
                  "sizeX" : 20,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "a24c1abe-5d0d-66b8-ff2a-07271703146c" : {
                  "sizeX" : 10,
                  "sizeY" : 35,
                  "mobileOrder" : 7,
                  "mobileHeight" : 4,
                  "row" : 2,
                  "col" : 54
                },
                "978e061b-fbdc-fb98-4f25-5e492a11c56b" : {
                  "sizeX" : 20,
                  "sizeY" : 6,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 34
                },
                "b2c37ea2-3a01-1c9a-7d06-4bfd57b7fae0" : {
                  "sizeX" : 4,
                  "sizeY" : 6,
                  "mobileOrder" : 5,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 30
                },
                "1312cedd-7031-f5b7-6238-8d5e8b2c44e2" : {
                  "sizeX" : 44,
                  "sizeY" : 23,
                  "mobileOrder" : 21,
                  "mobileHeight" : 6,
                  "row" : 8,
                  "col" : 10
                },
                "afb6c33e-f4aa-4d36-970a-ae536a17186b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "63382cf4-d273-40e9-bb40-f77625fe9158" : {
                  "sizeX" : 4,
                  "sizeY" : 6,
                  "mobileOrder" : 42,
                  "mobileHeight" : 1,
                  "row" : 31,
                  "col" : 30
                },
                "8613bc58-6d35-4571-9004-cd8375f54ea2" : {
                  "sizeX" : 20,
                  "sizeY" : 6,
                  "mobileOrder" : 41,
                  "mobileHeight" : 2,
                  "row" : 31,
                  "col" : 10
                },
                "77e6a898-bbea-4636-a4a8-3f6e40976ed5" : {
                  "sizeX" : 20,
                  "sizeY" : 6,
                  "mobileOrder" : 43,
                  "mobileHeight" : 2,
                  "row" : 31,
                  "col" : 34
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_comp_demanda" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "31e4b455-8711-73f7-2798-7c0fbbff1f24" : {
                  "sizeX" : 10,
                  "sizeY" : 29,
                  "mobileOrder" : 2,
                  "mobileHeight" : 4,
                  "row" : 8,
                  "col" : 0
                },
                "aab136d7-268a-684f-d47f-fd4d677e274d" : {
                  "sizeX" : 20,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "b2c37ea2-3a01-1c9a-7d06-4bfd57b7fae0" : {
                  "sizeX" : 4,
                  "sizeY" : 6,
                  "mobileOrder" : 5,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 30
                },
                "978e061b-fbdc-fb98-4f25-5e492a11c56b" : {
                  "sizeX" : 20,
                  "sizeY" : 6,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 34
                },
                "a24c1abe-5d0d-66b8-ff2a-07271703146c" : {
                  "sizeX" : 10,
                  "sizeY" : 35,
                  "mobileOrder" : 9,
                  "mobileHeight" : 4,
                  "row" : 2,
                  "col" : 54
                },
                "c93b8c14-f566-b490-f820-ce882165a6f3" : {
                  "sizeX" : 44,
                  "sizeY" : 23,
                  "mobileOrder" : 21,
                  "mobileHeight" : 6,
                  "row" : 8,
                  "col" : 10
                },
                "afb6c33e-f4aa-4d36-970a-ae536a17186b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "63382cf4-d273-40e9-bb40-f77625fe9158" : {
                  "sizeX" : 4,
                  "sizeY" : 6,
                  "mobileOrder" : 42,
                  "mobileHeight" : 1,
                  "row" : 31,
                  "col" : 30
                },
                "262d5206-35ac-4073-8341-93b5f9921914" : {
                  "sizeX" : 20,
                  "sizeY" : 6,
                  "mobileOrder" : 43,
                  "mobileHeight" : 2,
                  "row" : 31,
                  "col" : 34
                },
                "dc1bfc31-8e8b-43d9-a79c-65ca8061736b" : {
                  "sizeX" : 20,
                  "sizeY" : 6,
                  "mobileOrder" : 41,
                  "mobileHeight" : 2,
                  "row" : 31,
                  "col" : 10
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "faturas_home" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "48f64166-be95-c850-5d6d-3f9c1791bcbd" : {
                  "sizeX" : 10,
                  "sizeY" : 29,
                  "mobileOrder" : 13,
                  "mobileHeight" : 3,
                  "row" : 8,
                  "col" : 0
                },
                "b18dca36-79cb-69fa-6449-34a9c3629313" : {
                  "sizeX" : 30,
                  "sizeY" : 29,
                  "mobileOrder" : 15,
                  "mobileHeight" : 6,
                  "row" : 8,
                  "col" : 10
                },
                "e36e7c1a-ae47-f7ca-f102-e2bef2a2276a" : {
                  "sizeX" : 19,
                  "sizeY" : 14,
                  "mobileOrder" : 99,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 40
                },
                "cca317b2-d029-4adb-b9b5-230ce26197c2" : {
                  "sizeX" : 20,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 10,
                  "mobileOrder" : 2,
                  "mobileHeight" : 1
                },
                "126600ca-13f5-4eaf-99c7-d07accbcab1b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "6bdbd873-c0a8-46e5-a9d5-1219a11f7e1f" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 30
                },
                "6e8641db-adff-499f-a7ee-7610ffdfe76e" : {
                  "sizeX" : 24,
                  "sizeY" : 15,
                  "mobileHeight" : null,
                  "row" : 22,
                  "col" : 40
                },
                "ad3b4fbf-e9f8-c850-d46e-2d95f3448d01" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 40
                },
                "15178a80-1560-24b3-e6b1-8e8e5e429bf0" : {
                  "sizeX" : 15,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 49
                },
                "752efd6b-416d-abe3-01e4-d965ce60b937" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 37,
                  "col" : 10
                },
                "1ae96b8d-3800-73b1-2b46-430f4dc31466" : {
                  "sizeX" : 12,
                  "sizeY" : 3,
                  "row" : 37,
                  "col" : 20
                },
                "4c6ef6fc-b0ae-73f0-38d9-b89b78f74b7e" : {
                  "sizeX" : 5,
                  "sizeY" : 14,
                  "row" : 8,
                  "col" : 59
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "faturas_site" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2
                },
                "dd65334e-59af-4aaf-8093-5fdd386f94ea" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "073e2e59-8904-4d00-b37e-0a3639c458f6" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "48bc2adc-bdf9-4992-bd43-b883bcd280a5" : {
                  "sizeX" : 15,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "5de43f7c-8c41-4438-99ac-3817025cbb5a" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 5,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 25
                },
                "2ceb140e-5b41-49a7-94e0-7cb70a2331dc" : {
                  "sizeX" : 12,
                  "sizeY" : 6,
                  "mobileOrder" : 7,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 52
                },
                "8de9d21e-1f5f-4767-85de-a14fa4f88373" : {
                  "sizeX" : 25,
                  "sizeY" : 29,
                  "mobileOrder" : 21,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 39
                },
                "3b1453fb-fbbd-4903-be0b-f2851db0aa84" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "c6acd852-e005-4801-81ee-f4131b630cc7" : {
                  "sizeX" : 29,
                  "sizeY" : 15,
                  "mobileOrder" : 11,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 10
                },
                "ee6f888d-ed45-4488-a99d-c7e3809c2944" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 39
                },
                "492da479-3909-4ae9-9869-dc6cafe75588" : {
                  "sizeX" : 29,
                  "sizeY" : 14,
                  "mobileOrder" : 12,
                  "mobileHeight" : 5,
                  "row" : 23,
                  "col" : 10
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "faturas_rel_fats" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1
                },
                "dd65334e-59af-4aaf-8093-5fdd386f94ea" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 8,
                  "col" : 0,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2
                },
                "073e2e59-8904-4d00-b37e-0a3639c458f6" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "row" : 14,
                  "col" : 0,
                  "mobileOrder" : 3,
                  "mobileHeight" : 3
                },
                "48bc2adc-bdf9-4992-bd43-b883bcd280a5" : {
                  "sizeX" : 15,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 10,
                  "mobileOrder" : 11,
                  "mobileHeight" : 2
                },
                "5de43f7c-8c41-4438-99ac-3817025cbb5a" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 25,
                  "mobileOrder" : 12,
                  "mobileHeight" : 2
                },
                "b9f393b5-8633-4cf1-ae4a-d43aa2e67ecd" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 39,
                  "mobileOrder" : 13,
                  "mobileHeight" : 2
                },
                "2ceb140e-5b41-49a7-94e0-7cb70a2331dc" : {
                  "sizeX" : 12,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 52,
                  "mobileOrder" : 14,
                  "mobileHeight" : 2
                },
                "04b434ab-ad56-47ef-8c87-36b1c1917912" : {
                  "sizeX" : 54,
                  "sizeY" : 29,
                  "row" : 8,
                  "col" : 10,
                  "mobileOrder" : 31,
                  "mobileHeight" : 5
                },
                "3b1453fb-fbbd-4903-be0b-f2851db0aa84" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "faturas_benchmarking" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 0
                },
                "e29df4d3-939b-f864-3f16-7e53f61a0284" : {
                  "sizeX" : 54,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 10
                },
                "8ae5fbea-33de-f027-7ff7-f4ccc8761fc3" : {
                  "sizeX" : 64,
                  "sizeY" : 29,
                  "row" : 8,
                  "col" : 0
                },
                "126600ca-13f5-4eaf-99c7-d07accbcab1b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "faturas_m_v_consolidado" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "c4f11684-a72c-4b07-ad08-135627fbe051" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 0
                },
                "dfa1d42f-776c-7547-1136-6e380ba11517" : {
                  "sizeX" : 54,
                  "sizeY" : 6,
                  "mobileOrder" : 3,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 10
                },
                "eaf04b27-bef4-4c0e-b137-4a51a9b3cb8b" : {
                  "sizeX" : 64,
                  "sizeY" : 29,
                  "row" : 8,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "faturas_gd_consolidado" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "c4f11684-a72c-4b07-ad08-135627fbe051" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 0
                },
                "7a3652f2-f8d9-ae7e-e3ac-c48cec8d5d28" : {
                  "sizeX" : 54,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 10
                },
                "921ddc82-5460-40ff-b035-77ef1632a15e" : {
                  "sizeX" : 37,
                  "sizeY" : 29,
                  "mobileOrder" : 11,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 0
                },
                "33e61f48-716f-4f6e-9e04-e14144d1df0b" : {
                  "sizeX" : 14,
                  "sizeY" : 5,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 37
                },
                "eb4e3d68-d21c-4fa9-8fc3-cc1ee002807a" : {
                  "sizeX" : 13,
                  "sizeY" : 5,
                  "mobileOrder" : 5,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 51
                },
                "daf0f327-cda9-488e-a232-e114ae6223c8" : {
                  "sizeX" : 27,
                  "sizeY" : 24,
                  "mobileOrder" : 12,
                  "mobileHeight" : 5,
                  "row" : 13,
                  "col" : 37
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "faturas_consumos" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "dd65334e-59af-4aaf-8093-5fdd386f94ea" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "073e2e59-8904-4d00-b37e-0a3639c458f6" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "16130c76-02e9-46a7-8283-292b94605b8c" : {
                  "sizeX" : 18,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "3b1453fb-fbbd-4903-be0b-f2851db0aa84" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "492da479-3909-4ae9-9869-dc6cafe75588" : {
                  "sizeX" : 36,
                  "sizeY" : 29,
                  "mobileOrder" : 21,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 10
                },
                "ee6f888d-ed45-4488-a99d-c7e3809c2944" : {
                  "sizeX" : 18,
                  "sizeY" : 6,
                  "mobileOrder" : 5,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 28
                },
                "dff08c85-7f23-492f-97a2-9ab277d43ee5" : {
                  "sizeX" : 18,
                  "sizeY" : 29,
                  "mobileOrder" : 31,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 46
                },
                "3bfed2fd-4282-4dfb-b45b-36a98a6f7a11" : {
                  "sizeX" : 18,
                  "sizeY" : 6,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 46
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "faturas_site_gd" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "dd65334e-59af-4aaf-8093-5fdd386f94ea" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "073e2e59-8904-4d00-b37e-0a3639c458f6" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "0f50e323-4eb0-4d62-954a-4305b3e6b701" : {
                  "sizeX" : 54,
                  "sizeY" : 17,
                  "mobileOrder" : 11,
                  "mobileHeight" : 5,
                  "row" : 2,
                  "col" : 10
                },
                "8ac5238a-a449-480f-858c-08c3709abf24" : {
                  "sizeX" : 54,
                  "sizeY" : 18,
                  "mobileOrder" : 21,
                  "mobileHeight" : 6,
                  "row" : 19,
                  "col" : 10
                },
                "3b1453fb-fbbd-4903-be0b-f2851db0aa84" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "faturas_comp_consumo" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "968bd0b0-6ad7-4c9f-9c57-75fd79145c6e" : {
                  "sizeX" : 10,
                  "sizeY" : 29,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 8,
                  "col" : 0
                },
                "12812525-6276-4e1f-b0cc-f616ced04bf1" : {
                  "sizeX" : 20,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "763bc8b9-57f9-478f-9ffe-d2f802587f23" : {
                  "sizeX" : 4,
                  "sizeY" : 6,
                  "mobileOrder" : 5,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 30
                },
                "0d23d3ed-192c-4629-a930-e8dc992a27d9" : {
                  "sizeX" : 20,
                  "sizeY" : 6,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 34
                },
                "47e9cbb8-fbe3-4aaf-a092-8e018158892a" : {
                  "sizeX" : 10,
                  "sizeY" : 35,
                  "mobileOrder" : 7,
                  "mobileHeight" : 4,
                  "row" : 2,
                  "col" : 54
                },
                "2df04a9a-0a76-417c-9691-58c6cfd66a04" : {
                  "sizeX" : 44,
                  "sizeY" : 29,
                  "mobileHeight" : 6,
                  "row" : 8,
                  "col" : 10,
                  "mobileOrder" : 51
                },
                "3b1453fb-fbbd-4903-be0b-f2851db0aa84" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "faturas_tarifas" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "d1ec433b-ca68-f974-27f5-ac91455cbb5b" : {
                  "sizeX" : 46,
                  "sizeY" : 29,
                  "mobileOrder" : 51,
                  "mobileHeight" : 6,
                  "row" : 8,
                  "col" : 10
                },
                "3b1453fb-fbbd-4903-be0b-f2851db0aa84" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "968bd0b0-6ad7-4c9f-9c57-75fd79145c6e" : {
                  "sizeX" : 10,
                  "sizeY" : 29,
                  "mobileOrder" : 10,
                  "mobileHeight" : 4,
                  "row" : 8,
                  "col" : 0
                },
                "47e9cbb8-fbe3-4aaf-a092-8e018158892a" : {
                  "sizeX" : 10,
                  "sizeY" : 35,
                  "mobileOrder" : 25,
                  "mobileHeight" : 4,
                  "row" : 2,
                  "col" : 56
                },
                "763bc8b9-57f9-478f-9ffe-d2f802587f23" : {
                  "sizeX" : 4,
                  "sizeY" : 6,
                  "mobileOrder" : 22,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 31
                },
                "7c08c663-ecdf-4546-a289-dd15826f0f2c" : {
                  "sizeX" : 21,
                  "sizeY" : 6,
                  "mobileOrder" : 21,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "99221ffd-1832-4d79-87ed-9b384f4d1abe" : {
                  "sizeX" : 21,
                  "sizeY" : 6,
                  "mobileOrder" : 23,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 35
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "faturas_config" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "dd65334e-59af-4aaf-8093-5fdd386f94ea" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "073e2e59-8904-4d00-b37e-0a3639c458f6" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "f327e9a7-ad0c-4e67-9121-685e46ff34df" : {
                  "sizeX" : 54,
                  "sizeY" : 3,
                  "mobileOrder" : 4,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 10
                },
                "f6380acb-6138-4c8f-8b15-9a8e424ee3c4" : {
                  "sizeX" : 34,
                  "sizeY" : 3,
                  "mobileOrder" : 6,
                  "mobileHeight" : 1,
                  "row" : 15,
                  "col" : 10
                },
                "19626558-c918-4082-b6f6-7528f98bf99a" : {
                  "sizeX" : 34,
                  "sizeY" : 7,
                  "mobileOrder" : 9,
                  "mobileHeight" : 2,
                  "row" : 27,
                  "col" : 10
                },
                "e299b500-f973-456a-af80-b5a407d45d37" : {
                  "sizeX" : 34,
                  "sizeY" : 3,
                  "mobileOrder" : 8,
                  "mobileHeight" : 1,
                  "row" : 24,
                  "col" : 10
                },
                "5ed8c5d2-310f-4868-a5fd-fdcc16a0584e" : {
                  "sizeX" : 20,
                  "sizeY" : 3,
                  "mobileOrder" : 88,
                  "mobileHeight" : 1,
                  "row" : 15,
                  "col" : 44
                },
                "89ad4b2e-6615-48f0-be92-7f28692a2943" : {
                  "sizeX" : 20,
                  "sizeY" : 13,
                  "mobileOrder" : 99,
                  "mobileHeight" : 4,
                  "row" : 24,
                  "col" : 44
                },
                "90a537f6-da77-4780-bdc7-c6557dd12d8a" : {
                  "sizeX" : 34,
                  "sizeY" : 3,
                  "mobileOrder" : 31,
                  "mobileHeight" : 1,
                  "row" : 34,
                  "col" : 10
                },
                "3b1453fb-fbbd-4903-be0b-f2851db0aa84" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "7cf0e42c-fb64-437e-916d-8cc104a53069" : {
                  "sizeX" : 20,
                  "sizeY" : 6,
                  "row" : 18,
                  "col" : 44
                },
                "3c426279-79db-4259-a968-ce84186af4ad" : {
                  "sizeX" : 34,
                  "sizeY" : 6,
                  "row" : 18,
                  "col" : 10
                },
                "17351522-0953-442f-b8a7-3c26a9258d42" : {
                  "sizeX" : 54,
                  "sizeY" : 10,
                  "row" : 5,
                  "col" : 10
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_submedicao" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "518673b0-8bdf-4a8a-87dd-7005ecacc312" : {
                  "sizeX" : 37,
                  "sizeY" : 29,
                  "mobileOrder" : 3,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 0
                },
                "8a4b1127-da8c-4383-9511-4a5bca1e2512" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 22
                },
                "938452de-33da-4808-84f5-47160b171f46" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 5,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 32
                },
                "80d3404a-0d59-4d43-974b-b656670fa208" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 42
                },
                "28cb884f-b25d-e490-821e-ecd71acd1e9b" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "mobileOrder" : 7,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 53
                },
                "c0ddfad5-091a-4adc-8090-334d15b2a53c" : {
                  "sizeX" : 12,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 10
                },
                "7f2b5ac2-9547-489d-8a35-2dcb5919d377" : {
                  "sizeX" : 27,
                  "sizeY" : 15,
                  "mobileOrder" : 31,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 37
                },
                "81e36239-3c07-4531-b07e-3ada17d41ad1" : {
                  "sizeX" : 27,
                  "sizeY" : 14,
                  "mobileOrder" : 41,
                  "mobileHeight" : 5,
                  "row" : 23,
                  "col" : 37
                },
                "afb6c33e-f4aa-4d36-970a-ae536a17186b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "water_relatorios" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "cff3a151-a6ca-4ab8-a1ba-71a5c6c673d0" : {
                  "sizeX" : 18,
                  "sizeY" : 35,
                  "mobileOrder" : 21,
                  "mobileHeight" : 5,
                  "row" : 2,
                  "col" : 10
                },
                "2c318be1-feee-4d48-902c-1e43c2ae79f6" : {
                  "sizeX" : 18,
                  "sizeY" : 35,
                  "mobileOrder" : 23,
                  "mobileHeight" : 5,
                  "row" : 2,
                  "col" : 46
                },
                "704478cc-7fa6-4f19-b708-5e8f379c1962" : {
                  "sizeX" : 18,
                  "sizeY" : 35,
                  "mobileOrder" : 22,
                  "mobileHeight" : 5,
                  "row" : 2,
                  "col" : 28
                },
                "1837a3cb-b199-459c-e7b8-06fd1a36ab23" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 8,
                  "col" : 0,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2
                },
                "93dd47e3-064a-3c15-0001-3d10a312d55c" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "row" : 14,
                  "col" : 0,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4
                },
                "126a7719-a5bc-49f8-9348-23e834762708" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_inversor_detalhe" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "b3905faa-3ecd-49f3-91b1-8004e7bab956" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "a025b7c6-ea42-4c2c-8077-2af9ebe06c9e" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "861cd7b3-c164-42a9-ae6e-668738434630" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "0d9db73b-9b39-4e24-bb13-672535556a62" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "mobileOrder" : 5,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 10
                },
                "a4cd13ae-9366-402b-9743-b316d00e1a47" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2,
                  "row" : 14,
                  "col" : 10
                },
                "f0b02926-1c66-43c3-91fd-a769d9ccaf87" : {
                  "sizeX" : 24,
                  "sizeY" : 12,
                  "mobileOrder" : 11,
                  "mobileHeight" : 5,
                  "row" : 2,
                  "col" : 19
                },
                "df870c82-db48-4b3f-b3d8-af6077713afd" : {
                  "sizeX" : 21,
                  "sizeY" : 12,
                  "mobileOrder" : 12,
                  "mobileHeight" : 5,
                  "row" : 2,
                  "col" : 43
                },
                "4a90fedf-85fc-4ab2-95a9-611102137005" : {
                  "sizeX" : 24,
                  "sizeY" : 14,
                  "mobileOrder" : 21,
                  "mobileHeight" : 5,
                  "row" : 14,
                  "col" : 19
                },
                "bc748fbd-ea11-4791-a6fd-fcaa084a75f0" : {
                  "sizeX" : 21,
                  "sizeY" : 14,
                  "mobileOrder" : 22,
                  "mobileHeight" : 5,
                  "row" : 14,
                  "col" : 43
                },
                "37593fa3-2b78-c62b-6d00-f372016891a4" : {
                  "sizeX" : 9,
                  "sizeY" : 9,
                  "row" : 28,
                  "col" : 10,
                  "mobileOrder" : 8,
                  "mobileHeight" : 3
                },
                "4b9872b1-df56-63e4-1ee2-65a861035a2f" : {
                  "sizeX" : 9,
                  "sizeY" : 8,
                  "row" : 20,
                  "col" : 10,
                  "mobileOrder" : 9,
                  "mobileHeight" : 3
                },
                "5bb9acca-813a-4128-9c66-974133e13016" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2
                },
                "cca4a22b-b7eb-be15-acee-200d8b1f0382" : {
                  "sizeX" : 45,
                  "sizeY" : 9,
                  "mobileHeight" : 5,
                  "row" : 28,
                  "col" : 19,
                  "mobileOrder" : 31
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "adm_clientes" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "982fb10a-377a-1355-75df-ecb400276e6d" : {
                  "sizeX" : 64,
                  "sizeY" : 29,
                  "mobileOrder" : 10,
                  "mobileHeight" : 6,
                  "row" : 8,
                  "col" : 0
                },
                "afb7f81d-e500-62b1-dd8a-c29b779f1a71" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "fcc3cd85-9215-4903-8ae1-013faefbfeb2" : {
                  "sizeX" : 54,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 10
                },
                "a0829fb1-2bdf-eb1a-7545-a55918779ce3" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "adm_config_cliente" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "afb7f81d-e500-62b1-dd8a-c29b779f1a71" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 0
                },
                "73deecf8-ce5a-48c0-b273-55d8b0ebca8a" : {
                  "sizeX" : 54,
                  "sizeY" : 6,
                  "mobileOrder" : 3,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 10
                },
                "c07d9559-a015-87cf-06fc-c79df685399d" : {
                  "sizeX" : 14,
                  "sizeY" : 3,
                  "row" : 10,
                  "col" : 10
                },
                "609ddb72-d06e-abd4-3624-48f6fc9798ce" : {
                  "sizeX" : 30,
                  "sizeY" : 3,
                  "row" : 10,
                  "col" : 24
                },
                "cd8fbcd8-44b7-2665-d1ce-9f9de603de45" : {
                  "sizeX" : 35,
                  "sizeY" : 3,
                  "row" : 13,
                  "col" : 10
                },
                "eb0cdebe-20dd-c1d8-13f9-5ec40ae2dd5f" : {
                  "sizeX" : 19,
                  "sizeY" : 3,
                  "row" : 13,
                  "col" : 45
                },
                "f5a60560-54c7-b20e-9da4-e15748453a5a" : {
                  "sizeX" : 30,
                  "sizeY" : 3,
                  "row" : 16,
                  "col" : 10
                },
                "6d2dccd5-638d-8115-d3c4-a96d9e6d38c6" : {
                  "sizeX" : 10,
                  "sizeY" : 3,
                  "row" : 16,
                  "col" : 40
                },
                "93ddf1e4-b2a3-9b99-dd0f-3a96c79207d2" : {
                  "sizeX" : 14,
                  "sizeY" : 3,
                  "row" : 16,
                  "col" : 50
                },
                "53af338e-3b88-9a46-a05a-e5c9a7bb9e07" : {
                  "sizeX" : 23,
                  "sizeY" : 3,
                  "row" : 19,
                  "col" : 10
                },
                "3b65ff61-db86-190d-b72d-ca923daae837" : {
                  "sizeX" : 21,
                  "sizeY" : 3,
                  "row" : 19,
                  "col" : 33
                },
                "f1ae0ed1-7c63-4219-b575-fff8f7d3dc25" : {
                  "sizeX" : 35,
                  "sizeY" : 3,
                  "mobileOrder" : 80,
                  "mobileHeight" : 1,
                  "row" : 25,
                  "col" : 10
                },
                "a9340500-24f3-8d57-d514-e67720ed17dd" : {
                  "sizeX" : 19,
                  "sizeY" : 3,
                  "mobileOrder" : 82,
                  "mobileHeight" : 1,
                  "row" : 25,
                  "col" : 45
                },
                "273a1c08-bd61-87e6-aa35-3e0a80884796" : {
                  "sizeX" : 35,
                  "sizeY" : 3,
                  "row" : 28,
                  "col" : 10
                },
                "b88930e1-c09a-9989-904b-0c7f188863cf" : {
                  "sizeX" : 19,
                  "sizeY" : 3,
                  "row" : 28,
                  "col" : 45
                },
                "3b086daa-b373-71f4-8618-2da11d60baca" : {
                  "sizeX" : 23,
                  "sizeY" : 3,
                  "row" : 31,
                  "col" : 10
                },
                "905b7aaa-c4d5-4335-333f-db5ef8b6526a" : {
                  "sizeX" : 31,
                  "sizeY" : 3,
                  "row" : 31,
                  "col" : 33
                },
                "058e5006-fd85-8230-66e6-d1da40b86559" : {
                  "sizeX" : 10,
                  "sizeY" : 3,
                  "mobileOrder" : 88,
                  "mobileHeight" : 1,
                  "row" : 10,
                  "col" : 54
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 86,
                  "mobileHeight" : 2,
                  "row" : 19,
                  "col" : 54
                },
                "1eba224c-c84c-427b-8f69-8fdcd474821f" : {
                  "sizeX" : 10,
                  "sizeY" : 29,
                  "mobileOrder" : 2,
                  "mobileHeight" : 4,
                  "row" : 8,
                  "col" : 0
                },
                "9c0647f5-9be6-1618-c9cd-7858aa335568" : {
                  "sizeX" : 14,
                  "sizeY" : 2,
                  "mobileOrder" : 4,
                  "mobileHeight" : 1,
                  "row" : 8,
                  "col" : 10
                },
                "016a5c89-aab1-ca35-257a-dd93d3ceefc9" : {
                  "sizeX" : 23,
                  "sizeY" : 3,
                  "mobileOrder" : 78,
                  "mobileHeight" : 1,
                  "row" : 22,
                  "col" : 10
                },
                "a0829fb1-2bdf-eb1a-7545-a55918779ce3" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                },
                "7844f128-c034-aca3-7068-3dafaf6661e2" : {
                  "sizeX" : 21,
                  "sizeY" : 3,
                  "row" : 22,
                  "col" : 33
                },
                "01c1b5f7-e2cd-39a4-14d7-3f3523ce4372" : {
                  "sizeX" : 23,
                  "sizeY" : 3,
                  "row" : 34,
                  "col" : 10
                },
                "7e2de491-7b18-3172-4745-2e13162e6815" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 34,
                  "col" : 33
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "adm_servidores" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "afb7f81d-e500-62b1-dd8a-c29b779f1a71" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1
                },
                "a0829fb1-2bdf-eb1a-7545-a55918779ce3" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                },
                "6d6ae3c5-5b0a-064b-c671-d60a1acf01d5" : {
                  "sizeX" : 54,
                  "sizeY" : 20,
                  "mobileHeight" : null,
                  "row" : 2,
                  "col" : 10
                },
                "dd800e2a-1f3d-1f05-3252-7ccf57866d07" : {
                  "sizeX" : 54,
                  "sizeY" : 20,
                  "mobileHeight" : null,
                  "row" : 22,
                  "col" : 10
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "adm_faturamento" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "afb7f81d-e500-62b1-dd8a-c29b779f1a71" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1
                },
                "1eba224c-c84c-427b-8f69-8fdcd474821f" : {
                  "sizeX" : 10,
                  "sizeY" : 24,
                  "row" : 13,
                  "col" : 0,
                  "mobileOrder" : 3,
                  "mobileHeight" : 3
                },
                "6f94c93c-9ec2-47f3-8c6a-13d470c3f611" : {
                  "sizeX" : 54,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 10,
                  "mobileOrder" : 4,
                  "mobileHeight" : 1
                },
                "6a7c08f6-20da-43b6-8233-d1a443632a6b" : {
                  "sizeX" : 51,
                  "sizeY" : 29,
                  "row" : 8,
                  "col" : 10,
                  "mobileOrder" : 11,
                  "mobileHeight" : 5
                },
                "728a6ab1-a08d-447e-b125-c888885e3a95" : {
                  "sizeX" : 10,
                  "sizeY" : 5,
                  "row" : 8,
                  "col" : 0,
                  "mobileOrder" : 2,
                  "mobileHeight" : 1
                },
                "a0829fb1-2bdf-eb1a-7545-a55918779ce3" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_trackers" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 0
                },
                "b3905faa-3ecd-49f3-91b1-8004e7bab956" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "a025b7c6-ea42-4c2c-8077-2af9ebe06c9e" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 3,
                  "row" : 14,
                  "col" : 0
                },
                "5bb9acca-813a-4128-9c66-974133e13016" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                },
                "35d9be0b-6655-48d7-8384-0008702b71e9" : {
                  "sizeX" : 27,
                  "sizeY" : 35,
                  "mobileHeight" : null,
                  "row" : 2,
                  "col" : 10
                },
                "f59bb207-5b41-41f5-8b9d-b816af70e76b" : {
                  "sizeX" : 27,
                  "sizeY" : 35,
                  "mobileHeight" : null,
                  "row" : 2,
                  "col" : 37
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_ufer" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0
                },
                "d437b949-13f6-ad75-426d-716d173a1014" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 8,
                  "col" : 0
                },
                "d141329e-d20e-249a-7097-fee8b22c91d1" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "row" : 14,
                  "col" : 0
                },
                "5e3eb1f1-04cf-31f2-3f21-058e6c513aa9" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 10
                },
                "a52cc1cc-72f4-6d4d-e603-0760ca317b82" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 35
                },
                "27485df8-61d7-4865-aab9-a2e66df018f9" : {
                  "sizeX" : 16,
                  "sizeY" : 35,
                  "row" : 2,
                  "col" : 48
                },
                "4c37125e-bf25-4d12-9872-1465a8e8fef0" : {
                  "sizeX" : 38,
                  "sizeY" : 29,
                  "mobileHeight" : null,
                  "row" : 8,
                  "col" : 10
                },
                "1dd70e9d-140d-4d57-8dea-913a231c02a3" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 21
                },
                "afb6c33e-f4aa-4d36-970a-ae536a17186b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : -1,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_alarmes" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2
                },
                "4f9537b2-c551-4582-ba5d-fe32883f728d" : {
                  "sizeX" : 64,
                  "sizeY" : 29,
                  "row" : 8,
                  "col" : 0,
                  "mobileOrder" : 99,
                  "mobileHeight" : 6
                },
                "d57090bf-9d82-4d36-abee-c9c332ecffe0" : {
                  "sizeX" : 54,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 10,
                  "mobileOrder" : 4,
                  "mobileHeight" : 1
                },
                "126600ca-13f5-4eaf-99c7-d07accbcab1b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "cliente_home" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "56d51850-a875-4ef6-b0dd-961de3a7a0c1" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                },
                "90fcf9b7-3161-4747-9f5d-3d08143d0095" : {
                  "sizeX" : 34,
                  "sizeY" : 29,
                  "row" : 8,
                  "col" : 0
                },
                "ffae80e0-4a58-47f1-8f30-de659b8544e5" : {
                  "sizeX" : 30,
                  "sizeY" : 35,
                  "row" : 2,
                  "col" : 34
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_alarmes_usina" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 0
                },
                "41ca2940-cac9-4d21-b023-ffe5d6984002" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "8fb600f2-c4f8-4bb3-b68f-cee29c110a63" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 3,
                  "row" : 14,
                  "col" : 0
                },
                "e3e03576-a0bd-709e-5335-18a996edfc00" : {
                  "sizeX" : 54,
                  "sizeY" : 35,
                  "mobileOrder" : 31,
                  "mobileHeight" : 5,
                  "row" : 2,
                  "col" : 10
                },
                "5bb9acca-813a-4128-9c66-974133e13016" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_invest" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2
                },
                "41ca2940-cac9-4d21-b023-ffe5d6984002" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 8,
                  "col" : 0,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2
                },
                "8fb600f2-c4f8-4bb3-b68f-cee29c110a63" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "row" : 14,
                  "col" : 0,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4
                },
                "68f65761-78a6-4420-a24f-6bed457c66c3" : {
                  "sizeX" : 54,
                  "sizeY" : 23,
                  "mobileHeight" : 6,
                  "row" : 14,
                  "col" : 10,
                  "mobileOrder" : 31
                },
                "5bb9acca-813a-4128-9c66-974133e13016" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "1ced5a29-2ed2-4ebd-a569-2b0c3908bb5f" : {
                  "sizeX" : 54,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 10,
                  "mobileOrder" : 99,
                  "mobileHeight" : 3
                },
                "48a8b270-b5d2-4856-9213-50c532c92cf0" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 10
                },
                "83d9569b-5371-43d3-9054-0a8e47f684ab" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "mobileOrder" : 5,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 19
                },
                "4d0d607f-2910-44b8-9f02-23af990e134e" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 28
                },
                "627a3ec7-8787-7806-9eb1-7aaa17e60d28" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "mobileOrder" : 7,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 37
                },
                "868a759e-ae39-4864-85cf-5d9d34858b1a" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "mobileOrder" : 8,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 46
                },
                "c1c851be-a22b-425f-a9e8-c99f2cb2008c" : {
                  "sizeX" : 9,
                  "sizeY" : 6,
                  "mobileOrder" : 9,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 55
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "geracao_home" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "b5710b28-3f4d-43cd-98e1-03cfb35dd78b" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 51,
                  "mobileOrder" : 7,
                  "mobileHeight" : 2
                },
                "7c04691f-c4ee-44b7-8102-94e9530613ca" : {
                  "sizeX" : 15,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 36,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2
                },
                "83feba53-0d23-44cb-9bcb-e2ebd2aa2286" : {
                  "sizeX" : 28,
                  "sizeY" : 14,
                  "mobileOrder" : 99,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 36
                },
                "126600ca-13f5-4eaf-99c7-d07accbcab1b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                },
                "1e5aa9d9-43d6-421c-984f-318b1a03edb4" : {
                  "sizeX" : 28,
                  "sizeY" : 15,
                  "mobileOrder" : 21,
                  "mobileHeight" : 5,
                  "row" : 22,
                  "col" : 36
                },
                "7244a580-9da0-4da5-bf9c-ae020421fc30" : {
                  "sizeX" : 36,
                  "sizeY" : 29,
                  "mobileOrder" : 11,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 0
                },
                "177ce34e-f1f2-4ec5-9687-5eb9be730469" : {
                  "sizeX" : 12,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "3fac5803-6d9c-44ff-8226-3496adb3a4c7" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 5,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 22
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "adm_servers" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "afb7f81d-e500-62b1-dd8a-c29b779f1a71" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1
                },
                "22f58fdd-a8d3-73e9-df0b-be3db332785c" : {
                  "sizeX" : 10,
                  "sizeY" : 5,
                  "row" : 8,
                  "col" : 0,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2
                },
                "afab22b5-c717-23b1-8444-4b5f479c8914" : {
                  "sizeX" : 10,
                  "sizeY" : 24,
                  "row" : 13,
                  "col" : 0,
                  "mobileOrder" : 3,
                  "mobileHeight" : 3
                },
                "a2f280e9-312f-fb73-2706-e139832e78cb" : {
                  "sizeX" : 9,
                  "sizeY" : 7,
                  "row" : 2,
                  "col" : 10,
                  "mobileOrder" : 11,
                  "mobileHeight" : 3
                },
                "23f90fc9-152a-631f-b55e-b25e43ae1a30" : {
                  "sizeX" : 9,
                  "sizeY" : 7,
                  "row" : 2,
                  "col" : 19,
                  "mobileOrder" : 12,
                  "mobileHeight" : 3
                },
                "6d6f6cb5-406b-d232-f819-9c9653598043" : {
                  "sizeX" : 9,
                  "sizeY" : 7,
                  "row" : 2,
                  "col" : 28,
                  "mobileOrder" : 13,
                  "mobileHeight" : 3
                },
                "da5f4cc8-ef17-ea2e-7821-9be02a368bbe" : {
                  "sizeX" : 9,
                  "sizeY" : 7,
                  "row" : 2,
                  "col" : 37,
                  "mobileOrder" : 14,
                  "mobileHeight" : 3
                },
                "6da29f46-1767-b5ea-6375-8dfc1ce8f6f0" : {
                  "sizeX" : 9,
                  "sizeY" : 7,
                  "row" : 2,
                  "col" : 46,
                  "mobileOrder" : 15,
                  "mobileHeight" : 3
                },
                "f88c2871-0aba-b46f-c886-97335a3d88b1" : {
                  "sizeX" : 9,
                  "sizeY" : 7,
                  "row" : 2,
                  "col" : 55,
                  "mobileOrder" : 16,
                  "mobileHeight" : 3
                },
                "d3d1ea87-23b1-4e4b-b554-7560cf4eee69" : {
                  "sizeX" : 27,
                  "sizeY" : 14,
                  "mobileHeight" : 4,
                  "row" : 9,
                  "col" : 37,
                  "mobileOrder" : 22
                },
                "7dd60ccc-af16-05cd-7cc7-570dfaf0185b" : {
                  "sizeX" : 27,
                  "sizeY" : 14,
                  "mobileHeight" : 4,
                  "row" : 23,
                  "col" : 10,
                  "mobileOrder" : 23
                },
                "bc899af5-12cf-0e31-c577-db48deab1917" : {
                  "sizeX" : 27,
                  "sizeY" : 14,
                  "mobileHeight" : 4,
                  "row" : 23,
                  "col" : 37,
                  "mobileOrder" : 24
                },
                "613fb2a8-fcec-27b3-d409-42e5e3ba3e05" : {
                  "sizeX" : 27,
                  "sizeY" : 14,
                  "mobileHeight" : 4,
                  "row" : 9,
                  "col" : 10,
                  "mobileOrder" : 21
                },
                "a0829fb1-2bdf-eb1a-7545-a55918779ce3" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_est_solar" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "b3905faa-3ecd-49f3-91b1-8004e7bab956" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "a025b7c6-ea42-4c2c-8077-2af9ebe06c9e" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "5bb9acca-813a-4128-9c66-974133e13016" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "3e689293-1d16-4a93-aa09-4c5ef9846838" : {
                  "sizeX" : 27,
                  "sizeY" : 18,
                  "mobileHeight" : 5,
                  "row" : 2,
                  "col" : 10,
                  "mobileOrder" : 11
                },
                "e3f1412d-9688-4858-b00a-fa5dfd09270b" : {
                  "sizeX" : 27,
                  "sizeY" : 17,
                  "mobileHeight" : 5,
                  "row" : 20,
                  "col" : 10,
                  "mobileOrder" : 21
                },
                "0ddc1a1e-e861-4be4-86fd-7f7dafcf23c5" : {
                  "sizeX" : 27,
                  "sizeY" : 18,
                  "mobileHeight" : 5,
                  "row" : 2,
                  "col" : 37,
                  "mobileOrder" : 12
                },
                "83dce10a-e294-4d9a-b4d9-b01eda4765da" : {
                  "sizeX" : 27,
                  "sizeY" : 17,
                  "mobileHeight" : 5,
                  "row" : 20,
                  "col" : 37,
                  "mobileOrder" : 22
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "adm_remotas" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "afb7f81d-e500-62b1-dd8a-c29b779f1a71" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1
                },
                "728a6ab1-a08d-447e-b125-c888885e3a95" : {
                  "sizeX" : 10,
                  "sizeY" : 5,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "1eba224c-c84c-427b-8f69-8fdcd474821f" : {
                  "sizeX" : 10,
                  "sizeY" : 24,
                  "mobileOrder" : 3,
                  "mobileHeight" : 3,
                  "row" : 13,
                  "col" : 0
                },
                "a0829fb1-2bdf-eb1a-7545-a55918779ce3" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                },
                "49a1af83-86fc-4419-b33b-e6f44987055f" : {
                  "sizeX" : 54,
                  "sizeY" : 29,
                  "row" : 8,
                  "col" : 10
                },
                "42a248b5-d8c3-450d-8ff1-ab7b89d74a0c" : {
                  "sizeX" : 54,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 10
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "adm_remota_ssu" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "afb7f81d-e500-62b1-dd8a-c29b779f1a71" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 0
                },
                "728a6ab1-a08d-447e-b125-c888885e3a95" : {
                  "sizeX" : 10,
                  "sizeY" : 5,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "8fd5c747-57d7-45e4-4de0-d1dd2de2ee52" : {
                  "sizeX" : 54,
                  "sizeY" : 6,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "71548ed2-797d-9abb-650a-1b4e4fb5b50a" : {
                  "sizeX" : 24,
                  "sizeY" : 25,
                  "mobileOrder" : 11,
                  "mobileHeight" : 4,
                  "row" : 8,
                  "col" : 10
                },
                "22cc275e-f70c-94a5-8916-4458c66c3661" : {
                  "sizeX" : 30,
                  "sizeY" : 16,
                  "mobileOrder" : 10,
                  "mobileHeight" : 4,
                  "row" : 8,
                  "col" : 34
                },
                "af6f75c8-0250-d0e3-73da-c8171bda1094" : {
                  "sizeX" : 30,
                  "sizeY" : 13,
                  "mobileOrder" : 13,
                  "mobileHeight" : 4,
                  "row" : 24,
                  "col" : 34
                },
                "d288c06f-0b61-4155-8086-424c114be29c" : {
                  "sizeX" : 10,
                  "sizeY" : 24,
                  "row" : 13,
                  "col" : 0
                },
                "3458aa96-3bcb-ca64-cdf5-12dff528bda0" : {
                  "sizeX" : 24,
                  "sizeY" : 4,
                  "row" : 33,
                  "col" : 10
                },
                "a0829fb1-2bdf-eb1a-7545-a55918779ce3" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_performance_ratio" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "41ca2940-cac9-4d21-b023-ffe5d6984002" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "8fb600f2-c4f8-4bb3-b68f-cee29c110a63" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "5bb9acca-813a-4128-9c66-974133e13016" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "a4d723c6-06d5-492b-9111-36db39eb41a3" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 15,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 37
                },
                "9b2ea5b4-55c7-6ed2-3363-6a89254adcb4" : {
                  "sizeX" : 14,
                  "sizeY" : 15,
                  "mobileOrder" : 81,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 50
                },
                "4df55daa-a875-4cb9-b62a-45f4d70498f9" : {
                  "sizeX" : 40,
                  "sizeY" : 14,
                  "mobileOrder" : 31,
                  "mobileHeight" : 6,
                  "row" : 23,
                  "col" : 10
                },
                "1ce8fc80-466f-c35b-fe6c-078cb9009baf" : {
                  "sizeX" : 14,
                  "sizeY" : 14,
                  "mobileOrder" : 85,
                  "mobileHeight" : 5,
                  "row" : 23,
                  "col" : 50
                },
                "580c3402-4d95-45ed-9664-83362b333835" : {
                  "sizeX" : 40,
                  "sizeY" : 15,
                  "mobileOrder" : 21,
                  "mobileHeight" : 6,
                  "row" : 8,
                  "col" : 10
                },
                "83d9569b-5371-43d3-9054-0a8e47f684ab" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 12,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "4d0d607f-2910-44b8-9f02-23af990e134e" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 12,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 24
                },
                "627a3ec7-8787-7806-9eb1-7aaa17e60d28" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 16,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 50
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "root" : {
          "name" : "_root",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "1ea99a30-1eb3-22d9-0fd3-007b0a1d7e14" : {
                  "sizeX" : 7,
                  "sizeY" : 3,
                  "row" : 1,
                  "col" : 0
                },
                "f9847d57-7833-5356-8745-b8be172138ad" : {
                  "sizeX" : 11,
                  "sizeY" : 1,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "rgb(255, 255, 255)",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 24,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : false,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 10,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "geracao_ucs" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "33d501b5-d269-4b81-8174-9e91d34f3ca9" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 12,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 24
                },
                "d033f9fd-5a26-4c28-859b-8327d5c97931" : {
                  "sizeX" : 28,
                  "sizeY" : 13,
                  "mobileOrder" : 99,
                  "mobileHeight" : 5,
                  "row" : 24,
                  "col" : 37
                },
                "a273885e-5d68-440c-b2ba-5d284d6339a1" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "row" : 14,
                  "col" : 0,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4
                },
                "67e5bd4b-5e7f-4567-89bc-39ccdcd44f52" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 8,
                  "col" : 0,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "2c3c2cde-008f-48ce-900e-af613a264361" : {
                  "sizeX" : 65,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "be1d381d-2017-46d6-860d-aab50639080e" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 14,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 37
                },
                "46187849-a31c-4c73-9002-276686e8cb15" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 15,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 51
                },
                "bb7020ca-33cd-4695-bdbb-a6c89275dafe" : {
                  "sizeX" : 28,
                  "sizeY" : 16,
                  "mobileOrder" : 31,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 37
                },
                "0e308f04-f0a3-4421-a5b2-484bd184d0f3" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 12,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "4258c837-f71a-45a7-9cfe-0163625b6670" : {
                  "sizeX" : 27,
                  "sizeY" : 29,
                  "mobileOrder" : 21,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 10
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "geracao_uc_detalhe" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "5ce1e602-64a1-4850-8ad3-45c9e3c84f7f" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 0
                },
                "67e5bd4b-5e7f-4567-89bc-39ccdcd44f52" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "a273885e-5d68-440c-b2ba-5d284d6339a1" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 3,
                  "row" : 14,
                  "col" : 0
                },
                "5a3921ea-63bc-8cff-bd4a-c419bd715339" : {
                  "sizeX" : 16,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "4adb6e4b-4e86-4ef1-9c26-d4a42fd39046" : {
                  "sizeX" : 12,
                  "sizeY" : 6,
                  "mobileOrder" : 11,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 26
                },
                "2f9e3fe8-ac3b-4900-af6a-d18458baba84" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 12,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 38
                },
                "d6c700eb-768b-44d9-acab-ad43f123ef7f" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 13,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 51
                },
                "e3f728be-9650-bef8-732b-b0923a16e4e0" : {
                  "sizeX" : 16,
                  "sizeY" : 29,
                  "mobileOrder" : 5,
                  "mobileHeight" : 3,
                  "row" : 8,
                  "col" : 10
                },
                "c51d971e-1165-622d-4e3e-6f5c9e853f93" : {
                  "sizeX" : 38,
                  "sizeY" : 15,
                  "mobileOrder" : 21,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 26
                },
                "9df12a44-4fd6-0c5b-7313-4711f5ee2fd3" : {
                  "sizeX" : 38,
                  "sizeY" : 14,
                  "mobileOrder" : 31,
                  "mobileHeight" : 5,
                  "row" : 23,
                  "col" : 26
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "geracao_rel_mensal" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "5ce1e602-64a1-4850-8ad3-45c9e3c84f7f" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 0
                },
                "67e5bd4b-5e7f-4567-89bc-39ccdcd44f52" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "a273885e-5d68-440c-b2ba-5d284d6339a1" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 3,
                  "row" : 14,
                  "col" : 0
                },
                "5c9899e5-1e81-475c-8984-21bed0c5b90b" : {
                  "sizeX" : 54,
                  "sizeY" : 35,
                  "mobileOrder" : 11,
                  "mobileHeight" : 5,
                  "row" : 2,
                  "col" : 10
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_config_admin" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "5bb9acca-813a-4128-9c66-974133e13016" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 0
                },
                "41ca2940-cac9-4d21-b023-ffe5d6984002" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "544ffc5e-eeb4-6190-119d-b49a265f26bf" : {
                  "sizeX" : 20,
                  "sizeY" : 4,
                  "row" : 8,
                  "col" : 30
                },
                "37e27508-65ba-3a41-cb8e-34a5c15586df" : {
                  "sizeX" : 20,
                  "sizeY" : 6,
                  "row" : 12,
                  "col" : 10
                },
                "7b6b27be-f79a-b286-5e9a-24c999737624" : {
                  "sizeX" : 20,
                  "sizeY" : 6,
                  "row" : 12,
                  "col" : 30
                },
                "03471c83-5ab1-f1a9-5244-1926fd66e61a" : {
                  "sizeX" : 20,
                  "sizeY" : 6,
                  "row" : 18,
                  "col" : 10
                },
                "779f12bb-5ab8-e64e-d0f2-8074a66cc944" : {
                  "sizeX" : 20,
                  "sizeY" : 3,
                  "row" : 21,
                  "col" : 30
                },
                "948b763f-3117-e8d2-a951-a8707fc86943" : {
                  "sizeX" : 20,
                  "sizeY" : 3,
                  "row" : 18,
                  "col" : 30
                },
                "8fb600f2-c4f8-4bb3-b68f-cee29c110a63" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "row" : 14,
                  "col" : 0
                },
                "35b88277-9345-46b1-bdf6-882f0ca2478f" : {
                  "sizeX" : 20,
                  "sizeY" : 4,
                  "row" : 8,
                  "col" : 10
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_medidor_detalhe" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "5bb9acca-813a-4128-9c66-974133e13016" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "b3905faa-3ecd-49f3-91b1-8004e7bab956" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "a025b7c6-ea42-4c2c-8077-2af9ebe06c9e" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "1b3f13d6-9d5b-43c7-8487-c8b71ea7dc19" : {
                  "sizeX" : 54,
                  "sizeY" : 29,
                  "mobileOrder" : 21,
                  "mobileHeight" : 6,
                  "row" : 8,
                  "col" : 10
                },
                "5dca850a-8745-4dab-8820-70bc7c81289f" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 11,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "a192bb14-8d3b-4714-88e4-28739e74f0aa" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 12,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 23
                },
                "dec0aa99-31ab-4870-8289-d5e814b15642" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 13,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 37
                },
                "4d15f0aa-dba5-4a14-b6df-74f11dfc0b11" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 14,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 51
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_config_admin" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1
                },
                "afb6c33e-f4aa-4d36-970a-ae536a17186b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1
                },
                "d437b949-13f6-ad75-426d-716d173a1014" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 8,
                  "col" : 0,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2
                },
                "d141329e-d20e-249a-7097-fee8b22c91d1" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "row" : 14,
                  "col" : 0,
                  "mobileOrder" : 3,
                  "mobileHeight" : 3
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_geral_uc" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "a683e9bb-14a8-4370-a5b4-d313494ea8d1" : {
                  "sizeX" : 27,
                  "sizeY" : 15,
                  "mobileOrder" : 11,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 10
                },
                "5ff312e9-a2b9-4641-b46c-ae889493dfab" : {
                  "sizeX" : 27,
                  "sizeY" : 15,
                  "mobileOrder" : 12,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 37
                },
                "fbe45f95-a702-46df-9ee8-451ab462a9c6" : {
                  "sizeX" : 54,
                  "sizeY" : 14,
                  "mobileOrder" : 41,
                  "mobileHeight" : 4,
                  "row" : 23,
                  "col" : 10
                },
                "07d35f75-4c95-41cd-b380-d2676ea8cb74" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                },
                "99f8f173-7fde-43a8-9b09-b96738399525" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 51
                },
                "2dc837c5-e6da-42af-8885-d1421c623d83" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "9565d000-aaf7-407d-8367-32334fedd5d7" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 2,
                  "mobileHeight" : 3,
                  "row" : 14,
                  "col" : 0
                },
                "c18b3fdd-983e-479d-9fbc-5b43242efe04" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 5,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "c893c934-c724-4e2a-b885-82d4965acbe9" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 37
                },
                "7aadd622-9112-4b91-93f9-49f680f1e352" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 23
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_faturas_uc" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "07d35f75-4c95-41cd-b380-d2676ea8cb74" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1
                },
                "0b085e8f-4b96-4086-bd4e-e00dc1606d23" : {
                  "sizeX" : 17,
                  "sizeY" : 6,
                  "mobileOrder" : 5,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 27
                },
                "90050a0f-ed64-4a36-8544-c8c278ed0c35" : {
                  "sizeX" : 20,
                  "sizeY" : 6,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 44
                },
                "3dfbe9ca-abfd-4419-9435-32a20e94e7de" : {
                  "sizeX" : 20,
                  "sizeY" : 15,
                  "row" : 8,
                  "col" : 44
                },
                "8434f40c-3ce3-4041-981b-a29263cb40c6" : {
                  "sizeX" : 34,
                  "sizeY" : 14,
                  "mobileOrder" : 21,
                  "mobileHeight" : 4,
                  "row" : 23,
                  "col" : 10
                },
                "cc02c8e9-9253-4009-a3fe-9b95d524fcd7" : {
                  "sizeX" : 34,
                  "sizeY" : 15,
                  "mobileHeight" : null,
                  "row" : 8,
                  "col" : 10
                },
                "2dc837c5-e6da-42af-8885-d1421c623d83" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "9565d000-aaf7-407d-8367-32334fedd5d7" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 3,
                  "row" : 14,
                  "col" : 0
                },
                "e43eba7d-2e75-c815-eca2-680de70a5ebc" : {
                  "sizeX" : 20,
                  "sizeY" : 14,
                  "row" : 23,
                  "col" : 44
                },
                "e90004e5-7530-408f-a777-581b47c6aa0b" : {
                  "sizeX" : 17,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_pot_economia_uc" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "07d35f75-4c95-41cd-b380-d2676ea8cb74" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 0
                },
                "db5d55e2-1866-f83a-7a96-9cb3ba37f6a4" : {
                  "sizeX" : 21,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 10
                },
                "a072471f-8365-fa3e-061a-86d9fe549dbe" : {
                  "sizeX" : 15,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 31
                },
                "e6d12a92-c335-5ba2-e986-59c22c964b8e" : {
                  "sizeX" : 18,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 46
                },
                "9d57d15b-4a9c-e951-de33-5adc90d4f60f" : {
                  "sizeX" : 36,
                  "sizeY" : 22,
                  "row" : 8,
                  "col" : 10
                },
                "dd167096-8ee8-4d0c-66e5-03fce645fe73" : {
                  "sizeX" : 18,
                  "sizeY" : 7,
                  "row" : 8,
                  "col" : 46
                },
                "412ec7bf-5ef6-f549-8a63-0f310e50dc6e" : {
                  "sizeX" : 18,
                  "sizeY" : 7,
                  "row" : 15,
                  "col" : 46
                },
                "a45c52f4-45fd-5f10-6eee-348720f538d3" : {
                  "sizeX" : 18,
                  "sizeY" : 8,
                  "row" : 22,
                  "col" : 46
                },
                "67ff928a-b2f4-c4c6-b3a5-f3048996f168" : {
                  "sizeX" : 18,
                  "sizeY" : 7,
                  "row" : 30,
                  "col" : 10
                },
                "a7db8ef3-f271-6b8e-e25c-8be3c63748e6" : {
                  "sizeX" : 18,
                  "sizeY" : 7,
                  "row" : 30,
                  "col" : 28
                },
                "19fdaeba-9fd1-f032-f5be-dfad560b46ca" : {
                  "sizeX" : 18,
                  "sizeY" : 7,
                  "row" : 30,
                  "col" : 46
                },
                "2dc837c5-e6da-42af-8885-d1421c623d83" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "9565d000-aaf7-407d-8367-32334fedd5d7" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 3,
                  "row" : 14,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_config_uc" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "07d35f75-4c95-41cd-b380-d2676ea8cb74" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "1b8377f4-57b0-9df0-5e22-862e697f043b" : {
                  "sizeX" : 54,
                  "sizeY" : 2,
                  "row" : 2,
                  "col" : 10,
                  "mobileOrder" : 4,
                  "mobileHeight" : 1
                },
                "7308aac3-6d67-44a2-98b9-3a489b9c243d" : {
                  "sizeX" : 54,
                  "sizeY" : 13,
                  "row" : 4,
                  "col" : 10,
                  "mobileOrder" : 5,
                  "mobileHeight" : 5
                },
                "7e8f4e62-8d3d-459f-828e-0498834a78f9" : {
                  "sizeX" : 34,
                  "sizeY" : 2,
                  "row" : 17,
                  "col" : 10,
                  "mobileOrder" : 11,
                  "mobileHeight" : 1
                },
                "bd2eb728-d5ac-0738-d512-cfa92bc965ad" : {
                  "sizeX" : 20,
                  "sizeY" : 2,
                  "row" : 17,
                  "col" : 44,
                  "mobileOrder" : 91,
                  "mobileHeight" : 1
                },
                "34d0bfdc-ef5e-4f25-9829-d28fa05ce5c7" : {
                  "sizeX" : 20,
                  "sizeY" : 13,
                  "row" : 24,
                  "col" : 44,
                  "mobileOrder" : 99,
                  "mobileHeight" : 4
                },
                "a554fbc8-9a19-ac55-71cc-f7fc59bb3724" : {
                  "sizeX" : 17,
                  "sizeY" : 2,
                  "row" : 28,
                  "col" : 10,
                  "mobileOrder" : 21,
                  "mobileHeight" : 1
                },
                "42bcd558-07ef-a6cb-663c-33d0f21a951a" : {
                  "sizeX" : 17,
                  "sizeY" : 3,
                  "row" : 34,
                  "col" : 10,
                  "mobileOrder" : 31,
                  "mobileHeight" : 1
                },
                "b1aed89f-4952-76e2-70d7-06acfba9977f" : {
                  "sizeX" : 17,
                  "sizeY" : 3,
                  "row" : 34,
                  "col" : 27,
                  "mobileOrder" : 32,
                  "mobileHeight" : 1
                },
                "2dc837c5-e6da-42af-8885-d1421c623d83" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "23e24453-f6c4-4cbc-bea5-2c31d4607a53" : {
                  "sizeX" : 20,
                  "sizeY" : 5,
                  "row" : 19,
                  "col" : 44,
                  "mobileOrder" : 92,
                  "mobileHeight" : 2
                },
                "5d81fc22-d446-4293-82b9-4d6e007c9fd8" : {
                  "sizeX" : 17,
                  "sizeY" : 4,
                  "row" : 30,
                  "col" : 10,
                  "mobileOrder" : 22,
                  "mobileHeight" : 2
                },
                "a049777b-b6d6-4eca-9296-5c050af9014d" : {
                  "sizeX" : 23,
                  "sizeY" : 9,
                  "mobileOrder" : 12,
                  "mobileHeight" : 3,
                  "row" : 19,
                  "col" : 10
                },
                "8da81eb9-4e14-400b-9368-e96407b730f4" : {
                  "sizeX" : 11,
                  "sizeY" : 9,
                  "mobileOrder" : 13,
                  "mobileHeight" : 3,
                  "row" : 19,
                  "col" : 33
                },
                "9565d000-aaf7-407d-8367-32334fedd5d7" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 3,
                  "row" : 14,
                  "col" : 0
                },
                "a53aa795-76f4-601a-6b40-b993c49c6192" : {
                  "sizeX" : 17,
                  "sizeY" : 2,
                  "row" : 28,
                  "col" : 27
                },
                "3fd08795-2167-7003-a108-8f8d0a457f64" : {
                  "sizeX" : 17,
                  "sizeY" : 4,
                  "row" : 30,
                  "col" : 27
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_remotas" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "afb6c33e-f4aa-4d36-970a-ae536a17186b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2
                },
                "4dc187c7-98a7-4c15-88ae-bf2e87ce041a" : {
                  "sizeX" : 64,
                  "sizeY" : 29,
                  "mobileOrder" : 10,
                  "mobileHeight" : 6,
                  "row" : 8,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_remota_detalhes" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "afb6c33e-f4aa-4d36-970a-ae536a17186b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1
                },
                "d288c06f-0b61-4155-8086-424c114be29c" : {
                  "sizeX" : 10,
                  "sizeY" : 29,
                  "row" : 8,
                  "col" : 0,
                  "mobileOrder" : 3,
                  "mobileHeight" : 3
                },
                "8fd5c747-57d7-45e4-4de0-d1dd2de2ee52" : {
                  "sizeX" : 54,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 10,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2
                },
                "71548ed2-797d-9abb-650a-1b4e4fb5b50a" : {
                  "sizeX" : 24,
                  "sizeY" : 29,
                  "row" : 8,
                  "col" : 10,
                  "mobileOrder" : 10,
                  "mobileHeight" : 4
                },
                "22cc275e-f70c-94a5-8916-4458c66c3661" : {
                  "sizeX" : 30,
                  "sizeY" : 16,
                  "row" : 8,
                  "col" : 34
                },
                "af6f75c8-0250-d0e3-73da-c8171bda1094" : {
                  "sizeX" : 30,
                  "sizeY" : 13,
                  "mobileHeight" : 4,
                  "row" : 24,
                  "col" : 34,
                  "mobileOrder" : 31
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#eeeeee",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_alarmes" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "126600ca-13f5-4eaf-99c7-d07accbcab1b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1
                },
                "ea5ae2cc-f871-4c8f-9244-dcf252dae5d1" : {
                  "sizeX" : 64,
                  "sizeY" : 29,
                  "row" : 8,
                  "col" : 0,
                  "mobileOrder" : 99,
                  "mobileHeight" : 5
                },
                "3c811f98-ad2d-8053-5f1f-e16390576d4c" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 10,
                  "mobileOrder" : 11,
                  "mobileHeight" : 2
                },
                "1ddc975c-0501-4d0c-b0e9-64a3491ebeba" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 21,
                  "mobileOrder" : 12,
                  "mobileHeight" : 2
                },
                "947f3bab-45eb-4a11-8178-eabfc47d96ea" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 32,
                  "mobileOrder" : 13,
                  "mobileHeight" : 2
                },
                "5b1f3358-e8b7-498c-be90-a0d48dd00b43" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 43,
                  "mobileOrder" : 14,
                  "mobileHeight" : 2
                },
                "354369f9-559b-415e-a152-8672b5501f3f" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 54,
                  "mobileOrder" : 15,
                  "mobileHeight" : 2
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "geracao_contratos" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "2c3c2cde-008f-48ce-900e-af613a264361" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2
                },
                "67e5bd4b-5e7f-4567-89bc-39ccdcd44f52" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 8,
                  "col" : 0,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2
                },
                "d3049db2-745c-5050-b59a-af1c4d91cde1" : {
                  "sizeX" : 54,
                  "sizeY" : 3,
                  "row" : 2,
                  "col" : 10,
                  "mobileOrder" : 10,
                  "mobileHeight" : 1
                },
                "5b3b16aa-a7e1-ad1f-30db-391f1e118e67" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 14,
                  "col" : 10,
                  "mobileOrder" : 21,
                  "mobileHeight" : 1
                },
                "7b776bc5-fac2-5c8d-9f61-1e84379916f7" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 14,
                  "col" : 28,
                  "mobileOrder" : 31,
                  "mobileHeight" : 1
                },
                "69eb6472-e616-1c1a-fc15-2131fc356dc1" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 14,
                  "col" : 46,
                  "mobileOrder" : 41,
                  "mobileHeight" : 1
                },
                "63ecd8cf-034f-4a04-b5b1-6658361e8ee0" : {
                  "sizeX" : 54,
                  "sizeY" : 9,
                  "row" : 5,
                  "col" : 10,
                  "mobileOrder" : 11,
                  "mobileHeight" : 4
                },
                "db4f2e0a-e34e-4aa8-aa95-4b35fd14a177" : {
                  "sizeX" : 18,
                  "sizeY" : 20,
                  "row" : 17,
                  "col" : 10,
                  "mobileOrder" : 22,
                  "mobileHeight" : 4
                },
                "69312b94-8c53-4035-9d65-606cdc74e2b1" : {
                  "sizeX" : 18,
                  "sizeY" : 20,
                  "row" : 17,
                  "col" : 28,
                  "mobileOrder" : 32,
                  "mobileHeight" : 4
                },
                "35a35d4f-bf79-46df-ae78-c2a05ddee5aa" : {
                  "sizeX" : 18,
                  "sizeY" : 20,
                  "row" : 17,
                  "col" : 46,
                  "mobileOrder" : 42,
                  "mobileHeight" : 4
                },
                "a273885e-5d68-440c-b2ba-5d284d6339a1" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "geracao_config_contratos" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "2c3c2cde-008f-48ce-900e-af613a264361" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0
                },
                "67e5bd4b-5e7f-4567-89bc-39ccdcd44f52" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 8,
                  "col" : 0
                },
                "a273885e-5d68-440c-b2ba-5d284d6339a1" : {
                  "sizeX" : 10,
                  "sizeY" : 24,
                  "row" : 14,
                  "col" : 0
                },
                "d3049db2-745c-5050-b59a-af1c4d91cde1" : {
                  "sizeX" : 54,
                  "sizeY" : 3,
                  "row" : 2,
                  "col" : 10
                },
                "5b3b16aa-a7e1-ad1f-30db-391f1e118e67" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 11,
                  "col" : 10
                },
                "7b776bc5-fac2-5c8d-9f61-1e84379916f7" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 11,
                  "col" : 28
                },
                "69eb6472-e616-1c1a-fc15-2131fc356dc1" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 11,
                  "col" : 46
                },
                "098a614c-b610-4d17-7bd6-81906f6dc5e0" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 6,
                  "mobileHeight" : 1,
                  "row" : 5,
                  "col" : 10
                },
                "8a51db1a-144d-305a-8ddc-e3c25de380d8" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 8,
                  "mobileHeight" : 1,
                  "row" : 8,
                  "col" : 10
                },
                "0fd1eefd-c233-6cef-c51c-f82af8d4d870" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 6,
                  "mobileHeight" : 1,
                  "row" : 5,
                  "col" : 28
                },
                "a2e931d7-97f6-e762-f2e8-cf3b509d6466" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 9,
                  "mobileHeight" : 1,
                  "row" : 8,
                  "col" : 28
                },
                "95effe9f-11e7-da77-8f8d-c99f1ec5a223" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 7,
                  "mobileHeight" : 1,
                  "row" : 5,
                  "col" : 46
                },
                "b39a629f-c686-401e-d887-d634205c9622" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 14,
                  "col" : 10
                },
                "f9f03ffa-3a67-421f-2be0-930bb0c39327" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 17,
                  "col" : 10
                },
                "f8fb0f1e-10b9-75bf-9a88-0126e1261284" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 20,
                  "col" : 10
                },
                "9ebe42f7-6ff5-77b3-2d8e-9a9bbc88c6cf" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 23,
                  "col" : 10
                },
                "6a1dc859-869d-6a3a-b033-4858f6e41122" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 26,
                  "col" : 10
                },
                "8ba84b02-ccdb-753e-a895-4b6afbb9f6df" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 29,
                  "col" : 10
                },
                "0dfa5d2c-9bd7-c667-a84a-d01b3370018a" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 32,
                  "col" : 10
                },
                "e6389ea5-3e09-ffeb-1e38-608469c5c223" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 18,
                  "mobileHeight" : 1,
                  "row" : 35,
                  "col" : 10
                },
                "7b5fb390-c2b3-edd4-e77c-4569ff698671" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 14,
                  "col" : 28
                },
                "1fba3116-86e1-9066-bb02-f6818e6c85d4" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 17,
                  "col" : 28
                },
                "cf57b79f-310f-2004-210d-973d518ce3f0" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 20,
                  "col" : 28
                },
                "5e3baa98-e1c2-2a6d-9f60-a2c64e58ed77" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 23,
                  "col" : 28
                },
                "6decbe0e-757b-fac5-8b7f-942a883f63c6" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 26,
                  "col" : 28
                },
                "a92e8a7d-01c1-7d9b-e22a-693f87eb7111" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 29,
                  "col" : 28
                },
                "4434bdc1-6516-8e6b-6ab9-1e66a3ce482d" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 27,
                  "mobileHeight" : 1,
                  "row" : 32,
                  "col" : 28
                },
                "a3d8f13b-a331-6902-448a-99e8c31aa543" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 28,
                  "mobileHeight" : 1,
                  "row" : 35,
                  "col" : 28
                },
                "10a92fc1-eb59-bef4-7528-3cc61395a3e2" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 14,
                  "col" : 46
                },
                "a6d99ae5-32e1-fa92-1c8c-18ef4fdc80d3" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 17,
                  "col" : 46
                },
                "196c0276-f1ac-0a18-5519-12a08e4f0131" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 20,
                  "col" : 46
                },
                "29e46b42-df3f-6612-d24c-b116538eaba7" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 23,
                  "col" : 46
                },
                "2b6dace4-90c0-df29-1f66-c3704ee07a0c" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 26,
                  "col" : 46
                },
                "7e279eb4-e9c2-6450-ae6e-a10c885b072c" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "row" : 29,
                  "col" : 46
                },
                "12fc9668-cf42-9ae0-4895-ad6c04409890" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 37,
                  "mobileHeight" : 1,
                  "row" : 32,
                  "col" : 46
                },
                "37b677b8-1f60-71b8-2446-8908ba1208bd" : {
                  "sizeX" : 18,
                  "sizeY" : 3,
                  "mobileOrder" : 38,
                  "mobileHeight" : 1,
                  "row" : 35,
                  "col" : 46
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_kpis_inst" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "126600ca-13f5-4eaf-99c7-d07accbcab1b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 1,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 0
                },
                "3c811f98-ad2d-8053-5f1f-e16390576d4c" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "mobileOrder" : 4,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 10
                },
                "1ddc975c-0501-4d0c-b0e9-64a3491ebeba" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "mobileOrder" : 5,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 21
                },
                "947f3bab-45eb-4a11-8178-eabfc47d96ea" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "mobileOrder" : 6,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 32
                },
                "5b1f3358-e8b7-498c-be90-a0d48dd00b43" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "mobileOrder" : 7,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 43
                },
                "354369f9-559b-415e-a152-8672b5501f3f" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 8,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 54
                },
                "693431a4-616b-ee3b-befc-4ef48fc100d8" : {
                  "sizeX" : 64,
                  "sizeY" : 29,
                  "mobileOrder" : 51,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_kpis" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "5bb9acca-813a-4128-9c66-974133e13016" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "41ca2940-cac9-4d21-b023-ffe5d6984002" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "8fb600f2-c4f8-4bb3-b68f-cee29c110a63" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "646a33ae-44a9-4d48-7ec3-d88f228fd7f4" : {
                  "sizeX" : 54,
                  "sizeY" : 6,
                  "mobileOrder" : 11,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "b68ebacd-52c5-4900-ad0e-bc382a47882b" : {
                  "sizeX" : 54,
                  "sizeY" : 29,
                  "mobileOrder" : 31,
                  "mobileHeight" : 6,
                  "row" : 8,
                  "col" : 10
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "margin" : 6,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "teste" : {
          "name" : "teste",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : { },
              "gridSettings" : {
                "backgroundColor" : "#eeeeee",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 24,
                "margin" : 10,
                "backgroundSizeMode" : "100%",
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_rele_temp" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "5bb9acca-813a-4128-9c66-974133e13016" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "b3905faa-3ecd-49f3-91b1-8004e7bab956" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "a025b7c6-ea42-4c2c-8077-2af9ebe06c9e" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "e43be8a9-fbf3-43e9-8dff-389c726b39cd" : {
                  "sizeX" : 54,
                  "sizeY" : 35,
                  "mobileOrder" : 11,
                  "mobileHeight" : 6,
                  "row" : 2,
                  "col" : 10
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_gd" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "afb6c33e-f4aa-4d36-970a-ae536a17186b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "d437b949-13f6-ad75-426d-716d173a1014" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "d141329e-d20e-249a-7097-fee8b22c91d1" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "71bfcfab-3e90-4252-9606-1cb627234944" : {
                  "sizeX" : 18,
                  "sizeY" : 6,
                  "mobileOrder" : 12,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "fbd14d19-c2c1-42d6-ac9a-efab190d064d" : {
                  "sizeX" : 18,
                  "sizeY" : 6,
                  "mobileOrder" : 14,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 28
                },
                "f9a6a10f-5850-4ec1-ad09-471e77e50b01" : {
                  "sizeX" : 54,
                  "sizeY" : 29,
                  "mobileOrder" : 21,
                  "mobileHeight" : 6,
                  "row" : 8,
                  "col" : 10
                },
                "ef8f2a1a-3e0f-0bfb-f32d-01e6b6562761" : {
                  "sizeX" : 18,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 46
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_subcliente" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "126600ca-13f5-4eaf-99c7-d07accbcab1b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0
                },
                "8e6648d9-38d6-482d-8f88-52e3bfeeacce" : {
                  "sizeX" : 35,
                  "sizeY" : 29,
                  "mobileOrder" : 3,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 0
                },
                "951160da-a2a8-4feb-b646-d59dce803ac7" : {
                  "sizeX" : 54,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 10
                },
                "ecd22b7f-784d-44b2-9fa9-b64673b8e13b" : {
                  "sizeX" : 29,
                  "sizeY" : 14,
                  "mobileOrder" : 99,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 35
                },
                "af59e6e6-05bc-49d2-9474-117ff24720ce" : {
                  "sizeX" : 29,
                  "sizeY" : 15,
                  "mobileOrder" : 31,
                  "mobileHeight" : 6,
                  "row" : 22,
                  "col" : 35
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_dem_comp_anterior" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "d437b949-13f6-ad75-426d-716d173a1014" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "afb6c33e-f4aa-4d36-970a-ae536a17186b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "86428676-8803-ede1-bd6c-36c0698fc46f" : {
                  "sizeX" : 54,
                  "sizeY" : 14,
                  "mobileHeight" : null,
                  "row" : 8,
                  "col" : 10
                },
                "706d2f66-f0f0-4a47-97f5-25d6a137f300" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 10
                },
                "bdb23800-e566-43ba-a5d3-dc68d4361f82" : {
                  "sizeX" : 12,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 20
                },
                "08505b07-78af-56d3-79b7-c59a9facfd11" : {
                  "sizeX" : 12,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 32
                },
                "0d86078d-13f0-eb3e-6796-d3f6407d8f01" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 44
                },
                "5e3eb1f1-04cf-31f2-3f21-058e6c513aa9" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 54
                },
                "d141329e-d20e-249a-7097-fee8b22c91d1" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "row" : 14,
                  "col" : 0
                },
                "fbd24681-e944-c308-6073-1b5fd615e93b" : {
                  "sizeX" : 54,
                  "sizeY" : 15,
                  "row" : 22,
                  "col" : 10
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_cons_comp_anterior" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "afb6c33e-f4aa-4d36-970a-ae536a17186b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "d437b949-13f6-ad75-426d-716d173a1014" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "d141329e-d20e-249a-7097-fee8b22c91d1" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "08505b07-78af-56d3-79b7-c59a9facfd11" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 11,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "7c4f4eef-6c80-4d8b-87b8-bec411dad45f" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 12,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 24
                },
                "bdb23800-e566-43ba-a5d3-dc68d4361f82" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 13,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 38
                },
                "5e3eb1f1-04cf-31f2-3f21-058e6c513aa9" : {
                  "sizeX" : 12,
                  "sizeY" : 6,
                  "mobileOrder" : 14,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 52
                },
                "28caf0e0-2243-403a-9f22-9db3806da110" : {
                  "sizeX" : 54,
                  "sizeY" : 29,
                  "mobileOrder" : 31,
                  "mobileHeight" : 6,
                  "row" : 8,
                  "col" : 10
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "geracao_kpis" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "2c3c2cde-008f-48ce-900e-af613a264361" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "67e5bd4b-5e7f-4567-89bc-39ccdcd44f52" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "a273885e-5d68-440c-b2ba-5d284d6339a1" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "646a33ae-44a9-4d48-7ec3-d88f228fd7f4" : {
                  "sizeX" : 54,
                  "sizeY" : 6,
                  "mobileOrder" : 11,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "b68ebacd-52c5-4900-ad0e-bc382a47882b" : {
                  "sizeX" : 54,
                  "sizeY" : 29,
                  "mobileOrder" : 31,
                  "mobileHeight" : 6,
                  "row" : 8,
                  "col" : 10
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "adm_ucs" : {
          "name" : "adm_ucs",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "d9572fd4-6003-f8ba-7b93-26c1ea115a73" : {
                  "sizeX" : 54,
                  "sizeY" : 22,
                  "row" : 7,
                  "col" : 10
                },
                "193e9112-c414-4277-afbc-cf44dc22c961" : {
                  "sizeX" : 54,
                  "sizeY" : 5,
                  "row" : 2,
                  "col" : 10
                },
                "a0829fb1-2bdf-eb1a-7545-a55918779ce3" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "afb7f81d-e500-62b1-dd8a-c29b779f1a71" : {
                  "sizeX" : 10,
                  "sizeY" : 5,
                  "row" : 2,
                  "col" : 0
                },
                "1eba224c-c84c-427b-8f69-8fdcd474821f" : {
                  "sizeX" : 10,
                  "sizeY" : 19,
                  "row" : 10,
                  "col" : 0
                },
                "728a6ab1-a08d-447e-b125-c888885e3a95" : {
                  "sizeX" : 10,
                  "sizeY" : 3,
                  "row" : 7,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : false,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "adm_users" : {
          "name" : "adm_users",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "a0829fb1-2bdf-eb1a-7545-a55918779ce3" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "953969fe-5773-248b-5aee-7653eea5d440" : {
                  "sizeX" : 64,
                  "sizeY" : 35,
                  "row" : 2,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : false,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_uc_popup" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "5a3921ea-63bc-8cff-bd4a-c419bd715339" : {
                  "sizeX" : 20,
                  "sizeY" : 6,
                  "row" : 0,
                  "col" : 0
                },
                "4adb6e4b-4e86-4ef1-9c26-d4a42fd39046" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "row" : 0,
                  "col" : 20
                },
                "2f9e3fe8-ac3b-4900-af6a-d18458baba84" : {
                  "sizeX" : 15,
                  "sizeY" : 6,
                  "row" : 0,
                  "col" : 34
                },
                "d6c700eb-768b-44d9-acab-ad43f123ef7f" : {
                  "sizeX" : 15,
                  "sizeY" : 6,
                  "row" : 0,
                  "col" : 49
                },
                "836223d2-b63e-4ea6-a765-0b973ae08f0e" : {
                  "sizeX" : 64,
                  "sizeY" : 15,
                  "mobileHeight" : null,
                  "row" : 6,
                  "col" : 0
                },
                "9df12a44-4fd6-0c5b-7313-4711f5ee2fd3" : {
                  "sizeX" : 64,
                  "sizeY" : 14,
                  "row" : 21,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "faturas_m_v" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2
                },
                "dd65334e-59af-4aaf-8093-5fdd386f94ea" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 8,
                  "col" : 0,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2
                },
                "073e2e59-8904-4d00-b37e-0a3639c458f6" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "row" : 14,
                  "col" : 0,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4
                },
                "3b1453fb-fbbd-4903-be0b-f2851db0aa84" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2
                },
                "16130c76-02e9-46a7-8283-292b94605b8c" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 10,
                  "mobileOrder" : 4,
                  "mobileHeight" : 2
                },
                "d2e553da-add5-4eee-8399-9dd2854d1ad4" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 38,
                  "mobileOrder" : 6,
                  "mobileHeight" : 2
                },
                "3933f778-0b3b-4539-951f-2d4dc5757533" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 7,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 51
                },
                "c3ad00a0-8fa0-43e2-9749-593966767654" : {
                  "sizeX" : 54,
                  "sizeY" : 17,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 10,
                  "mobileOrder" : 11
                },
                "ed8a5501-2913-4b24-9efe-3230517a72d6" : {
                  "sizeX" : 54,
                  "sizeY" : 12,
                  "mobileHeight" : 5,
                  "row" : 25,
                  "col" : 10,
                  "mobileOrder" : 21
                },
                "b9c27276-e775-4d51-9729-bbc228044c6c" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 24,
                  "mobileOrder" : 5,
                  "mobileHeight" : 2
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_mlivre_uc" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "07d35f75-4c95-41cd-b380-d2676ea8cb74" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "2dc837c5-e6da-42af-8885-d1421c623d83" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "3d119519-2c1a-4d6f-a82d-16100ab95d67" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 11,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "ed7fd79d-111f-4e3b-b817-78fd05fdbfa7" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 12,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 24
                },
                "aa4ac253-9070-4aaa-9f4c-af137dd7ce8b" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 13,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 38
                },
                "525d57e1-7da8-45c9-b485-8dcde9d47d90" : {
                  "sizeX" : 12,
                  "sizeY" : 6,
                  "mobileOrder" : 14,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 52
                },
                "46d47bc4-e082-4d0c-9b44-40c2700576b9" : {
                  "sizeX" : 54,
                  "sizeY" : 29,
                  "mobileOrder" : 31,
                  "mobileHeight" : 6,
                  "row" : 8,
                  "col" : 10
                },
                "9565d000-aaf7-407d-8367-32334fedd5d7" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 3,
                  "row" : 14,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_mlivre" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "afb6c33e-f4aa-4d36-970a-ae536a17186b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "d437b949-13f6-ad75-426d-716d173a1014" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "d141329e-d20e-249a-7097-fee8b22c91d1" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "3d119519-2c1a-4d6f-a82d-16100ab95d67" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 11,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "ed7fd79d-111f-4e3b-b817-78fd05fdbfa7" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 12,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 24
                },
                "aa4ac253-9070-4aaa-9f4c-af137dd7ce8b" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 13,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 38
                },
                "525d57e1-7da8-45c9-b485-8dcde9d47d90" : {
                  "sizeX" : 12,
                  "sizeY" : 6,
                  "mobileOrder" : 14,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 52
                },
                "46d47bc4-e082-4d0c-9b44-40c2700576b9" : {
                  "sizeX" : 54,
                  "sizeY" : 29,
                  "mobileOrder" : 31,
                  "mobileHeight" : 6,
                  "row" : 8,
                  "col" : 10
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_mlivre_cons" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "461b2b06-09ff-43c4-8388-3bf217886d7c" : {
                  "sizeX" : 40,
                  "sizeY" : 6,
                  "mobileOrder" : 11,
                  "mobileHeight" : 1,
                  "row" : 2,
                  "col" : 10
                },
                "126600ca-13f5-4eaf-99c7-d07accbcab1b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "ab669139-8df1-4cdb-84c2-92c098baf829" : {
                  "sizeX" : 54,
                  "sizeY" : 29,
                  "mobileOrder" : 31,
                  "mobileHeight" : 6,
                  "row" : 8,
                  "col" : 10
                },
                "acadc4bc-51d3-ce02-8ff9-d04aa4a9a5b2" : {
                  "sizeX" : 10,
                  "sizeY" : 3,
                  "row" : 8,
                  "col" : 0
                },
                "48f64166-be95-c850-5d6d-3f9c1791bcbd" : {
                  "sizeX" : 10,
                  "sizeY" : 26,
                  "row" : 11,
                  "col" : 0
                },
                "db0a5df9-47eb-4710-85a2-d7b03f28f7ba" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 50
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_alarmes_dialog" : {
          "name" : "ssu_alarmes_dialog",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f61dddf4-1b10-439c-867c-c500882985d1" : {
                  "sizeX" : 64,
                  "sizeY" : 27,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "geracao_rel_mensal_gd" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "2c3c2cde-008f-48ce-900e-af613a264361" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "41ca2940-cac9-4d21-b023-ffe5d6984002" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "a52153d3-1402-4d40-a680-e1a70b27a150" : {
                  "sizeX" : 54,
                  "sizeY" : 35,
                  "mobileOrder" : 51,
                  "mobileHeight" : 6,
                  "row" : 2,
                  "col" : 10
                },
                "a273885e-5d68-440c-b2ba-5d284d6339a1" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "margin" : 4,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_relay" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "5bb9acca-813a-4128-9c66-974133e13016" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2
                },
                "b3905faa-3ecd-49f3-91b1-8004e7bab956" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 8,
                  "col" : 0,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2
                },
                "a025b7c6-ea42-4c2c-8077-2af9ebe06c9e" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "row" : 14,
                  "col" : 0,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4
                },
                "7d906702-b002-4a7d-9cce-6aa8034aeeb1" : {
                  "sizeX" : 38,
                  "sizeY" : 18,
                  "mobileHeight" : 5,
                  "row" : 2,
                  "col" : 10,
                  "mobileOrder" : 31
                },
                "a91eef11-c60a-40c6-a943-227300a086b4" : {
                  "sizeX" : 38,
                  "sizeY" : 17,
                  "mobileHeight" : 5,
                  "row" : 20,
                  "col" : 10,
                  "mobileOrder" : 32
                },
                "6c8b5bcb-3572-4343-8250-2068ee468d8e" : {
                  "sizeX" : 16,
                  "sizeY" : 6,
                  "mobileOrder" : 51,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 48
                },
                "695e3bce-de16-b8ca-3888-550430ebd573" : {
                  "sizeX" : 16,
                  "sizeY" : 29,
                  "mobileOrder" : 71,
                  "mobileHeight" : 6,
                  "row" : 8,
                  "col" : 48
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_submedicao_subcliente" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "3bfeaa0f-fa34-6398-749c-8b1d1dd0c6bd" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0
                },
                "c5e3e02c-f6ba-d94b-90f7-9dde188d2de7" : {
                  "sizeX" : 12,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 10
                },
                "8f0c1d4e-a79a-8eff-a22e-48155156c440" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 22
                },
                "0ff41f7b-7496-7d05-69fb-0619d1802766" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 32
                },
                "a887a8ff-d5fd-65a3-a17b-3a830fd16664" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 42
                },
                "9304646d-70e1-bbdd-9a92-596fe765fe5d" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 53
                },
                "bed87251-20f4-1737-66d8-1f4cb7f6defe" : {
                  "sizeX" : 27,
                  "sizeY" : 15,
                  "mobileHeight" : null,
                  "row" : 8,
                  "col" : 37
                },
                "6280c170-6100-d9f7-d224-4939c31d86e0" : {
                  "sizeX" : 27,
                  "sizeY" : 14,
                  "mobileHeight" : null,
                  "row" : 23,
                  "col" : 37
                },
                "0023cf96-56f9-4b7f-8c33-f42ca2ba6a2a" : {
                  "sizeX" : 37,
                  "sizeY" : 29,
                  "row" : 8,
                  "col" : 0
                },
                "0cc25e2f-1752-4725-bc6c-99e355a1c323" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : false,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_miniplacas" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "a221a726-fd75-0171-24d9-2e65d8f6583a" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2
                },
                "b3905faa-3ecd-49f3-91b1-8004e7bab956" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 8,
                  "col" : 0,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2
                },
                "a025b7c6-ea42-4c2c-8077-2af9ebe06c9e" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "row" : 14,
                  "col" : 0,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4
                },
                "61078680-83b5-ba0e-02a0-e2e864b19697" : {
                  "sizeX" : 54,
                  "sizeY" : 35,
                  "row" : 2,
                  "col" : 10,
                  "mobileOrder" : 10,
                  "mobileHeight" : 6
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "faturas_upload" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "126600ca-13f5-4eaf-99c7-d07accbcab1b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0
                },
                "fe6d6acc-f268-42a3-a328-d0bcc9643042" : {
                  "sizeX" : 54,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 10
                },
                "b27849bb-4e6b-b4c4-0ae6-f97dc8816d18" : {
                  "sizeX" : 64,
                  "sizeY" : 29,
                  "row" : 8,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "faturas_telemetria" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "3b1453fb-fbbd-4903-be0b-f2851db0aa84" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 0
                },
                "96f15c3e-5a9e-4673-9c05-43913e8216cd" : {
                  "sizeX" : 28,
                  "sizeY" : 15,
                  "mobileOrder" : 21,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 10
                },
                "ff095c78-ba27-4cbc-b908-8d511bd098cc" : {
                  "sizeX" : 26,
                  "sizeY" : 15,
                  "mobileOrder" : 22,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 38
                },
                "4b7c53e7-b942-1674-39f9-c6f2ea6d575b" : {
                  "sizeX" : 26,
                  "sizeY" : 14,
                  "mobileOrder" : 41,
                  "mobileHeight" : 5,
                  "row" : 23,
                  "col" : 38
                },
                "418373ab-02b8-42fb-9c57-3cace62c3ea6" : {
                  "sizeX" : 28,
                  "sizeY" : 14,
                  "mobileOrder" : 31,
                  "mobileHeight" : 5,
                  "row" : 23,
                  "col" : 10
                },
                "e7db3254-ce5d-42c3-ad53-5a4a7618bb15" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4,
                  "row" : 14,
                  "col" : 0
                },
                "d437b949-13f6-ad75-426d-716d173a1014" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "mobileOrder" : 2,
                  "mobileHeight" : 2,
                  "row" : 8,
                  "col" : 0
                },
                "706d2f66-f0f0-4a47-97f5-25d6a137f300" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 11,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "bdb23800-e566-43ba-a5d3-dc68d4361f82" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 12,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 24
                },
                "08505b07-78af-56d3-79b7-c59a9facfd11" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 13,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 38
                },
                "0d86078d-13f0-eb3e-6796-d3f6407d8f01" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 14,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 51
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "solar_home2" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "126600ca-13f5-4eaf-99c7-d07accbcab1b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0
                },
                "3c811f98-ad2d-8053-5f1f-e16390576d4c" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 10
                },
                "1ddc975c-0501-4d0c-b0e9-64a3491ebeba" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 21
                },
                "947f3bab-45eb-4a11-8178-eabfc47d96ea" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 32
                },
                "5b1f3358-e8b7-498c-be90-a0d48dd00b43" : {
                  "sizeX" : 11,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 43
                },
                "354369f9-559b-415e-a152-8672b5501f3f" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 54
                },
                "2abae2ac-6088-42a0-a968-248e4dc7c283" : {
                  "sizeX" : 34,
                  "sizeY" : 29,
                  "row" : 8,
                  "col" : 0
                },
                "5ef986d0-937a-4e4a-b777-c7898e59596e" : {
                  "sizeX" : 30,
                  "sizeY" : 14,
                  "row" : 8,
                  "col" : 34
                },
                "19b38d8d-751d-4322-a3da-4207538e4c40" : {
                  "sizeX" : 30,
                  "sizeY" : 15,
                  "mobileHeight" : null,
                  "row" : 22,
                  "col" : 34
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "adm_users_popup" : {
          "name" : "Acessos por Usuário",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "24ad6c7a-5aa7-09f8-3050-f734020d0998" : {
                  "sizeX" : 64,
                  "sizeY" : 5,
                  "row" : 0,
                  "col" : 0
                },
                "73ff987b-68ab-868e-c9b2-40d532c9f1ac" : {
                  "sizeX" : 64,
                  "sizeY" : 27,
                  "row" : 5,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_filter_popup" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "b3026bfe-a898-47f7-9dd8-9eeebe6e7dfc" : {
                  "sizeX" : 64,
                  "sizeY" : 26,
                  "row" : 10,
                  "col" : 0
                },
                "acadc4bc-51d3-ce02-8ff9-d04aa4a9a5b2" : {
                  "sizeX" : 64,
                  "sizeY" : 5,
                  "row" : 5,
                  "col" : 0
                },
                "714f244c-c766-4e75-9442-e9ae186f0e86" : {
                  "sizeX" : 64,
                  "sizeY" : 5,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_comp_cons_uc" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0,
                  "mobileOrder" : 1,
                  "mobileHeight" : 2
                },
                "aab136d7-268a-684f-d47f-fd4d677e274d" : {
                  "sizeX" : 20,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 10,
                  "mobileOrder" : 10,
                  "mobileHeight" : 2
                },
                "b2c37ea2-3a01-1c9a-7d06-4bfd57b7fae0" : {
                  "sizeX" : 4,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 30,
                  "mobileOrder" : 11,
                  "mobileHeight" : 2
                },
                "e5bc4254-246d-41f1-abf9-aa62318f00b8" : {
                  "sizeX" : 20,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 34,
                  "mobileOrder" : 12,
                  "mobileHeight" : 2
                },
                "32a2b43a-0a86-4d65-bbbf-e0235d9c87a9" : {
                  "sizeX" : 10,
                  "sizeY" : 29,
                  "row" : 8,
                  "col" : 0,
                  "mobileOrder" : 2,
                  "mobileHeight" : 4
                },
                "d6f1f197-6d6c-4a94-bf63-36d449a4b065" : {
                  "sizeX" : 10,
                  "sizeY" : 35,
                  "row" : 2,
                  "col" : 54,
                  "mobileOrder" : 99,
                  "mobileHeight" : 4
                },
                "07d35f75-4c95-41cd-b380-d2676ea8cb74" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0,
                  "mobileOrder" : 0,
                  "mobileHeight" : 2
                },
                "5196d2b0-9447-4ed8-8d13-210bb87714c1" : {
                  "sizeX" : 44,
                  "sizeY" : 15,
                  "mobileOrder" : 21,
                  "mobileHeight" : 5,
                  "row" : 8,
                  "col" : 10
                },
                "56c43529-363a-486a-a989-0c7eff768dd5" : {
                  "sizeX" : 44,
                  "sizeY" : 14,
                  "mobileOrder" : 31,
                  "mobileHeight" : 5,
                  "row" : 23,
                  "col" : 10
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_comp_dem_uc" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0
                },
                "07d35f75-4c95-41cd-b380-d2676ea8cb74" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "aab136d7-268a-684f-d47f-fd4d677e274d" : {
                  "sizeX" : 20,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 10
                },
                "b2c37ea2-3a01-1c9a-7d06-4bfd57b7fae0" : {
                  "sizeX" : 4,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 30
                },
                "e5bc4254-246d-41f1-abf9-aa62318f00b8" : {
                  "sizeX" : 20,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 34
                },
                "32a2b43a-0a86-4d65-bbbf-e0235d9c87a9" : {
                  "sizeX" : 10,
                  "sizeY" : 29,
                  "row" : 8,
                  "col" : 0
                },
                "d6f1f197-6d6c-4a94-bf63-36d449a4b065" : {
                  "sizeX" : 10,
                  "sizeY" : 35,
                  "row" : 2,
                  "col" : 54
                },
                "4582ac9d-1749-4251-98d9-ab0ca393ca2d" : {
                  "sizeX" : 44,
                  "sizeY" : 29,
                  "mobileHeight" : null,
                  "row" : 8,
                  "col" : 10
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "water_home" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "126600ca-13f5-4eaf-99c7-d07accbcab1b" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0
                },
                "acadc4bc-51d3-ce02-8ff9-d04aa4a9a5b2" : {
                  "sizeX" : 10,
                  "sizeY" : 3,
                  "row" : 8,
                  "col" : 0,
                  "mobileOrder" : 2,
                  "mobileHeight" : 1
                },
                "48f64166-be95-c850-5d6d-3f9c1791bcbd" : {
                  "sizeX" : 10,
                  "sizeY" : 26,
                  "row" : 11,
                  "col" : 0,
                  "mobileOrder" : 3,
                  "mobileHeight" : 4
                },
                "0af512ac-337a-4d4e-84e9-75eebbe79d7a" : {
                  "sizeX" : 27,
                  "sizeY" : 29,
                  "row" : 8,
                  "col" : 10,
                  "mobileOrder" : 4,
                  "mobileHeight" : 5
                },
                "d99d1634-53c0-4968-9322-ec5ef7a6acc3" : {
                  "sizeX" : 27,
                  "sizeY" : 29,
                  "row" : 8,
                  "col" : 37,
                  "mobileOrder" : 99,
                  "mobileHeight" : 5
                },
                "5172b17e-9faf-42be-a0ad-30a87e0df058" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "mobileOrder" : 11,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 10
                },
                "a985cb1e-fe93-43eb-a4c1-02491717319a" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 37,
                  "mobileOrder" : 13,
                  "mobileHeight" : 2
                },
                "8c1dbe7e-6e41-7ce2-ad66-d7fc889034e4" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "mobileOrder" : 12,
                  "mobileHeight" : 2,
                  "row" : 2,
                  "col" : 23,
                  "mobileHide" : false
                },
                "9a9b1f59-23ca-0e0b-c83d-ed1d848c0b0f" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 50,
                  "mobileOrder" : 14,
                  "mobileHeight" : 2
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_faturas_uc_danfes" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "d54be86b-8e99-43c9-841b-0e37ed69fd32" : {
                  "sizeX" : 46,
                  "sizeY" : 6,
                  "row" : 0,
                  "col" : 0
                },
                "f5d4e641-599e-48f5-b349-64b372acc7d1" : {
                  "sizeX" : 18,
                  "sizeY" : 6,
                  "row" : 0,
                  "col" : 46
                },
                "45e162de-88e5-4109-ad8e-fdde780f5111" : {
                  "sizeX" : 64,
                  "sizeY" : 31,
                  "row" : 6,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        },
        "ssu_reativos_uc" : {
          "name" : "EnergyHub - Gestão de Energia",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "07d35f75-4c95-41cd-b380-d2676ea8cb74" : {
                  "sizeX" : 64,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 0
                },
                "f5722de9-502e-3e20-e07b-e319b0a07159" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 0
                },
                "2dc837c5-e6da-42af-8885-d1421c623d83" : {
                  "sizeX" : 10,
                  "sizeY" : 6,
                  "row" : 8,
                  "col" : 0
                },
                "9565d000-aaf7-407d-8367-32334fedd5d7" : {
                  "sizeX" : 10,
                  "sizeY" : 23,
                  "row" : 14,
                  "col" : 0
                },
                "c18b3fdd-983e-479d-9fbc-5b43242efe04" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 10
                },
                "7aadd622-9112-4b91-93f9-49f680f1e352" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 23
                },
                "c893c934-c724-4e2a-b885-82d4965acbe9" : {
                  "sizeX" : 14,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 37
                },
                "99f8f173-7fde-43a8-9b09-b96738399525" : {
                  "sizeX" : 13,
                  "sizeY" : 6,
                  "row" : 2,
                  "col" : 51
                },
                "682e41e7-3f9d-43f1-acb3-6bcdac0249b6" : {
                  "sizeX" : 54,
                  "sizeY" : 15,
                  "mobileHeight" : null,
                  "row" : 8,
                  "col" : 10
                },
                "0ec4ed03-4c74-42dd-830e-0cc54649a9b3" : {
                  "sizeX" : 54,
                  "sizeY" : 14,
                  "mobileHeight" : null,
                  "row" : 23,
                  "col" : 10
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#e1e1e1",
                "columns" : 64,
                "margin" : 6,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70,
                "outerMargin" : true,
                "layoutType" : "default"
              }
            }
          }
        }
      },
      "entityAliases" : {
        "f8b1665b-fbab-0db8-6926-dc5d95c7ad24" : {
          "id" : "f8b1665b-fbab-0db8-6926-dc5d95c7ad24",
          "alias" : "State",
          "filter" : {
            "type" : "stateEntity",
            "resolveMultiple" : false,
            "stateEntityParamName" : "",
            "defaultStateEntity" : {
              "entityType" : "DEVICE",
              "id" : "4b58e350-3369-11e9-9156-c7af42d3cdec"
            }
          }
        },
        "537cefd0-9672-24ca-46cd-d952c3f0a036" : {
          "id" : "537cefd0-9672-24ca-46cd-d952c3f0a036",
          "alias" : "All-RTUs",
          "filter" : {
            "type" : "deviceSearchQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : "Curr_customer",
            "defaultStateEntity" : {
              "entityType" : "CUSTOMER",
              "id" : "6d9ca960-2b12-11e9-8de2-e7b6112a6ea2"
            },
            "rootEntity" : null,
            "direction" : "FROM",
            "maxLevel" : 1,
            "relationType" : "Contains",
            "deviceTypes" : [ "RTU" ]
          }
        },
        "9372d9cb-e9ba-c2a0-1b4c-4316d7a28718" : {
          "id" : "9372d9cb-e9ba-c2a0-1b4c-4316d7a28718",
          "alias" : "UC",
          "filter" : {
            "type" : "deviceSearchQuery",
            "resolveMultiple" : false,
            "rootStateEntity" : true,
            "stateEntityParamName" : "Curr_Site",
            "defaultStateEntity" : null,
            "rootEntity" : null,
            "direction" : "FROM",
            "maxLevel" : 1,
            "relationType" : "Contains",
            "deviceTypes" : [ "UC" ]
          }
        },
        "efbb5578-5d70-c50e-34f5-c55774a215a4" : {
          "id" : "efbb5578-5d70-c50e-34f5-c55774a215a4",
          "alias" : "Curr_Site",
          "filter" : {
            "type" : "stateEntity",
            "resolveMultiple" : false,
            "stateEntityParamName" : "Curr_Site",
            "defaultStateEntity" : null
          }
        },
        "b26711a2-3f61-8367-e92b-46ef38b514d3" : {
          "id" : "b26711a2-3f61-8367-e92b-46ef38b514d3",
          "alias" : "Curr_RTU",
          "filter" : {
            "type" : "stateEntity",
            "resolveMultiple" : false,
            "stateEntityParamName" : "Curr_RTU",
            "defaultStateEntity" : null
          }
        },
        "e9f9e6f4-9862-a921-8b4b-500992b3fc9d" : {
          "id" : "e9f9e6f4-9862-a921-8b4b-500992b3fc9d",
          "alias" : "Curr_Usina",
          "filter" : {
            "type" : "stateEntity",
            "resolveMultiple" : false,
            "stateEntityParamName" : "Curr_Usina",
            "defaultStateEntity" : null
          }
        },
        "2c70827c-80e8-29fe-93ad-4c1321059057" : {
          "id" : "2c70827c-80e8-29fe-93ad-4c1321059057",
          "alias" : "All-GERs",
          "filter" : {
            "type" : "deviceSearchQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : "Curr_customer",
            "defaultStateEntity" : {
              "entityType" : "CUSTOMER",
              "id" : "6d9ca960-2b12-11e9-8de2-e7b6112a6ea2"
            },
            "rootEntity" : null,
            "direction" : "FROM",
            "maxLevel" : 9,
            "relationType" : "Contains",
            "deviceTypes" : [ "GER" ]
          }
        },
        "48230aec-e803-e27d-3129-e2e9f331d1b2" : {
          "id" : "48230aec-e803-e27d-3129-e2e9f331d1b2",
          "alias" : "Usinas",
          "filter" : {
            "type" : "assetSearchQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : "Curr_customer",
            "defaultStateEntity" : null,
            "rootEntity" : null,
            "direction" : "FROM",
            "maxLevel" : 3,
            "fetchLastLevelOnly" : null,
            "relationType" : null,
            "assetTypes" : [ "usina", "node" ]
          }
        },
        "535d38b6-bac2-47c1-29d3-0326839d41f9" : {
          "id" : "535d38b6-bac2-47c1-29d3-0326839d41f9",
          "alias" : "Usina-Inversores",
          "filter" : {
            "type" : "deviceSearchQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : "Curr_Usina",
            "defaultStateEntity" : null,
            "rootEntity" : null,
            "direction" : "FROM",
            "maxLevel" : 3,
            "relationType" : "Contains",
            "deviceTypes" : [ "inverter" ]
          }
        },
        "1d32a226-7c16-0821-fb64-bb51a53b0a75" : {
          "id" : "1d32a226-7c16-0821-fb64-bb51a53b0a75",
          "alias" : "Usina-medidor",
          "filter" : {
            "type" : "deviceSearchQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : "Curr_Usina",
            "defaultStateEntity" : null,
            "rootEntity" : null,
            "direction" : "FROM",
            "maxLevel" : 1,
            "relationType" : null,
            "deviceTypes" : [ "meter" ]
          }
        },
        "c859c0ee-357c-41a3-6a6f-044ed377e485" : {
          "id" : "c859c0ee-357c-41a3-6a6f-044ed377e485",
          "alias" : "Usina-equipamentos",
          "filter" : {
            "type" : "deviceSearchQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : "Curr_Usina",
            "defaultStateEntity" : null,
            "rootEntity" : null,
            "direction" : "FROM",
            "maxLevel" : 3,
            "fetchLastLevelOnly" : null,
            "relationType" : "Contains",
            "deviceTypes" : [ "inverter", "tracker", "meter", "es", "RTU", "OTHER", "relay", "GER" ]
          }
        },
        "9394fcb0-5690-2125-55f9-6406f27c509d" : {
          "id" : "9394fcb0-5690-2125-55f9-6406f27c509d",
          "alias" : "UCs-GD",
          "filter" : {
            "type" : "deviceSearchQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : "Curr_Usina",
            "defaultStateEntity" : null,
            "rootEntity" : null,
            "direction" : "FROM",
            "maxLevel" : 1,
            "relationType" : null,
            "deviceTypes" : [ "UC" ]
          }
        },
        "84ebed45-55d1-5dae-aa6d-a9286128fbaa" : {
          "id" : "84ebed45-55d1-5dae-aa6d-a9286128fbaa",
          "alias" : "Curr_UC",
          "filter" : {
            "type" : "stateEntity",
            "resolveMultiple" : false,
            "stateEntityParamName" : "Curr_UC",
            "defaultStateEntity" : null
          }
        },
        "6d82de94-904d-9c2b-a951-e4f4db6227c8" : {
          "id" : "6d82de94-904d-9c2b-a951-e4f4db6227c8",
          "alias" : "All-Water",
          "filter" : {
            "type" : "deviceSearchQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : "Curr_SubClient",
            "defaultStateEntity" : {
              "entityType" : "ASSET",
              "id" : "6fdcc850-4633-11ed-af90-0382b482d98e"
            },
            "rootEntity" : {
              "entityType" : "CURRENT_CUSTOMER",
              "id" : "8f6c55f0-e9f2-11e9-af8a-e7bbd99ee2b8"
            },
            "direction" : "FROM",
            "maxLevel" : 9,
            "fetchLastLevelOnly" : null,
            "relationType" : null,
            "deviceTypes" : [ "WATER", "WUC" ]
          }
        },
        "4658668c-deb7-d1e4-3bb5-86ced47d6e05" : {
          "id" : "4658668c-deb7-d1e4-3bb5-86ced47d6e05",
          "alias" : "Curr_Water",
          "filter" : {
            "type" : "stateEntity",
            "resolveMultiple" : false,
            "stateEntityParamName" : "Curr_Water",
            "defaultStateEntity" : null
          }
        },
        "4256bdb6-ffef-7ddd-3ee5-da27415aa55e" : {
          "id" : "4256bdb6-ffef-7ddd-3ee5-da27415aa55e",
          "alias" : "Site_Comparison",
          "filter" : {
            "type" : "stateEntity",
            "resolveMultiple" : false,
            "stateEntityParamName" : "Site_Comparison",
            "defaultStateEntity" : null
          }
        },
        "4689d64f-96da-0141-f27c-9cdea4f29f5c" : {
          "id" : "4689d64f-96da-0141-f27c-9cdea4f29f5c",
          "alias" : "All-SubClients",
          "filter" : {
            "type" : "assetSearchQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : "Curr_customer",
            "defaultStateEntity" : {
              "entityType" : "CURRENT_CUSTOMER",
              "id" : null
            },
            "rootEntity" : {
              "entityType" : "CUSTOMER",
              "id" : "83461bc0-7396-11ea-8439-456109e50962"
            },
            "direction" : "FROM",
            "maxLevel" : 2,
            "fetchLastLevelOnly" : null,
            "relationType" : "Contains",
            "assetTypes" : [ "Cliente" ]
          }
        },
        "ea337dd3-3e20-573c-3268-117e79aee26d" : {
          "id" : "ea337dd3-3e20-573c-3268-117e79aee26d",
          "alias" : "All-UCs-BT",
          "filter" : {
            "type" : "deviceSearchQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : "Curr_SubClient",
            "defaultStateEntity" : {
              "entityType" : "ASSET",
              "id" : "6fdcc850-4633-11ed-af90-0382b482d98e"
            },
            "rootEntity" : {
              "entityType" : "CURRENT_CUSTOMER",
              "id" : "83461bc0-7396-11ea-8439-456109e50962"
            },
            "direction" : "FROM",
            "maxLevel" : 9,
            "fetchLastLevelOnly" : null,
            "relationType" : null,
            "deviceTypes" : [ "UC" ]
          }
        },
        "728823e0-e36b-2e9b-1756-7261ef29e278" : {
          "id" : "728823e0-e36b-2e9b-1756-7261ef29e278",
          "alias" : "Curr_Fat_BT",
          "filter" : {
            "type" : "stateEntity",
            "resolveMultiple" : false,
            "stateEntityParamName" : "Curr_Fat_BT",
            "defaultStateEntity" : null
          }
        },
        "2ffa1716-0cf5-5edb-d0e5-e76972d43f0d" : {
          "id" : "2ffa1716-0cf5-5edb-d0e5-e76972d43f0d",
          "alias" : "Site_Comparison_BT",
          "filter" : {
            "type" : "stateEntity",
            "resolveMultiple" : false,
            "stateEntityParamName" : "Site_Comparison_BT",
            "defaultStateEntity" : null
          }
        },
        "ec56fa06-0a91-729e-9215-d365c1f8d57d" : {
          "id" : "ec56fa06-0a91-729e-9215-d365c1f8d57d",
          "alias" : "Subs",
          "filter" : {
            "type" : "deviceSearchQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : "Curr_Site",
            "defaultStateEntity" : {
              "entityType" : "DEVICE",
              "id" : "ce83cee0-f3f2-11e8-a974-e1b1e9dc38e4"
            },
            "rootEntity" : null,
            "direction" : "FROM",
            "maxLevel" : 5,
            "fetchLastLevelOnly" : null,
            "relationType" : null,
            "deviceTypes" : [ "SUB", "sub" ]
          }
        },
        "11be4446-48c0-cac9-6400-94a717e876ba" : {
          "id" : "11be4446-48c0-cac9-6400-94a717e876ba",
          "alias" : "Curr_Ponto_Sub",
          "filter" : {
            "type" : "stateEntity",
            "resolveMultiple" : false,
            "stateEntityParamName" : "Curr_Ponto_Sub",
            "defaultStateEntity" : null
          }
        },
        "15bb8e7a-abd3-de38-9c4e-a07f19190715" : {
          "id" : "15bb8e7a-abd3-de38-9c4e-a07f19190715",
          "alias" : "Curr_Equip",
          "filter" : {
            "type" : "stateEntity",
            "resolveMultiple" : false,
            "stateEntityParamName" : "Curr_Equip",
            "defaultStateEntity" : null
          }
        },
        "b4f3f50d-1185-657f-9f66-c31658f285c0" : {
          "id" : "b4f3f50d-1185-657f-9f66-c31658f285c0",
          "alias" : "AllCustomers",
          "filter" : {
            "type" : "entityGroup",
            "resolveMultiple" : true,
            "groupStateEntity" : false,
            "stateEntityParamName" : "Curr_Customer",
            "defaultStateGroupType" : "CUSTOMER",
            "defaultStateEntityGroup" : "ccbc1de0-3161-11e9-8c70-e5f9b30107e6",
            "groupType" : "CUSTOMER",
            "entityGroup" : "ccbc1de0-3161-11e9-8c70-e5f9b30107e6"
          }
        },
        "aa66c396-3b76-f7a9-4dc0-b30decc31a48" : {
          "id" : "aa66c396-3b76-f7a9-4dc0-b30decc31a48",
          "alias" : "CustomerEngecomp",
          "filter" : {
            "type" : "entityName",
            "resolveMultiple" : false,
            "entityType" : "CUSTOMER",
            "entityNameFilter" : "Engecomp"
          }
        },
        "5fee0380-fec1-773a-3c41-a190aba9610a" : {
          "id" : "5fee0380-fec1-773a-3c41-a190aba9610a",
          "alias" : "Curr_customer",
          "filter" : {
            "type" : "stateEntity",
            "resolveMultiple" : false,
            "stateEntityParamName" : "Curr_customer",
            "defaultStateEntity" : null
          }
        },
        "45b30d3f-47a2-c3e3-9a8d-283631e64451" : {
          "id" : "45b30d3f-47a2-c3e3-9a8d-283631e64451",
          "alias" : "SYSTEM",
          "filter" : {
            "type" : "deviceType",
            "resolveMultiple" : true,
            "deviceNameFilter" : "",
            "deviceTypes" : [ "SYSTEM" ]
          }
        },
        "a5c469d4-a69f-beb7-4d5d-189846986221" : {
          "id" : "a5c469d4-a69f-beb7-4d5d-189846986221",
          "alias" : "ALL-Linux",
          "filter" : {
            "type" : "deviceType",
            "resolveMultiple" : true,
            "deviceNameFilter" : "",
            "deviceTypes" : [ "LINUX" ]
          }
        },
        "ab7bed59-2d35-6f4b-bb65-96acf6fab9bc" : {
          "id" : "ab7bed59-2d35-6f4b-bb65-96acf6fab9bc",
          "alias" : "Ptos-Pagantes-Cliente",
          "filter" : {
            "type" : "deviceSearchQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : "Curr_customer",
            "defaultStateEntity" : null,
            "rootEntity" : null,
            "direction" : "FROM",
            "maxLevel" : 1,
            "relationType" : null,
            "deviceTypes" : [ "RTU", "GER", "WATER" ]
          }
        },
        "e9fddcf6-bc82-dc6b-9934-4dc8c288ccc2" : {
          "id" : "e9fddcf6-bc82-dc6b-9934-4dc8c288ccc2",
          "alias" : "All-Devices",
          "filter" : {
            "type" : "deviceSearchQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : "Curr_customer",
            "defaultStateEntity" : {
              "entityType" : "CUSTOMER",
              "id" : "6d9ca960-2b12-11e9-8de2-e7b6112a6ea2"
            },
            "rootEntity" : null,
            "direction" : "FROM",
            "maxLevel" : 1,
            "relationType" : null,
            "deviceTypes" : [ "RTU", "GER", "WATER", "UC", "SERVER" ]
          }
        },
        "c887f65b-386b-db62-7d93-8ff5fe5ecdcd" : {
          "id" : "c887f65b-386b-db62-7d93-8ff5fe5ecdcd",
          "alias" : "Curr_SubClient",
          "filter" : {
            "type" : "stateEntity",
            "resolveMultiple" : false,
            "stateEntityParamName" : "Curr_SubClient",
            "defaultStateEntity" : {
              "entityType" : "ASSET",
              "id" : "6fdcc850-4633-11ed-af90-0382b482d98e"
            }
          }
        },
        "8f683444-e30b-ce20-12dd-8a0cd659196c" : {
          "id" : "8f683444-e30b-ce20-12dd-8a0cd659196c",
          "alias" : "Curr_Server",
          "filter" : {
            "type" : "stateEntity",
            "resolveMultiple" : false,
            "stateEntityParamName" : "Curr_Server",
            "defaultStateEntity" : {
              "entityType" : "DEVICE",
              "id" : "1c9e9240-57b6-11ea-8b58-e396bc9c5fdd"
            }
          }
        },
        "13a3d106-d96a-c88d-0ba4-36ceaaa1cb66" : {
          "id" : "13a3d106-d96a-c88d-0ba4-36ceaaa1cb66",
          "alias" : "Curr_Usina_Medidor",
          "filter" : {
            "type" : "deviceSearchQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : "Curr_Usina",
            "defaultStateEntity" : null,
            "rootEntity" : null,
            "direction" : "FROM",
            "maxLevel" : 1,
            "relationType" : null,
            "deviceTypes" : [ "RTU", "GER" ]
          }
        },
        "ffaddc2f-20f2-387e-9b2a-e84653802171" : {
          "id" : "ffaddc2f-20f2-387e-9b2a-e84653802171",
          "alias" : "All RTUs-GERs",
          "filter" : {
            "type" : "deviceSearchQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : "Curr_customer",
            "defaultStateEntity" : {
              "entityType" : "CUSTOMER",
              "id" : "6d9ca960-2b12-11e9-8de2-e7b6112a6ea2"
            },
            "rootEntity" : {
              "entityType" : "TENANT",
              "id" : "2bffd780-ebe7-11e8-a974-e1b1e9dc38e4"
            },
            "direction" : "FROM",
            "maxLevel" : 9,
            "relationType" : null,
            "deviceTypes" : [ "RTU", "GER" ]
          }
        },
        "0b4da799-9c06-9418-2fa4-bf9afe91cc2e" : {
          "id" : "0b4da799-9c06-9418-2fa4-bf9afe91cc2e",
          "alias" : "Curr_Ger",
          "filter" : {
            "type" : "stateEntity",
            "resolveMultiple" : false,
            "stateEntityParamName" : "Curr_Ger",
            "defaultStateEntity" : null
          }
        },
        "c1f26e7e-6480-8f19-d435-5090a9329c3a" : {
          "id" : "c1f26e7e-6480-8f19-d435-5090a9329c3a",
          "alias" : "All-UCs-Fat",
          "filter" : {
            "type" : "deviceSearchQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : "Curr_customer",
            "defaultStateEntity" : null,
            "rootEntity" : null,
            "direction" : "FROM",
            "maxLevel" : 1,
            "relationType" : "Contains",
            "deviceTypes" : [ "UC" ]
          }
        },
        "235f5d6f-8756-0b73-eb1a-db05c643abcf" : {
          "id" : "235f5d6f-8756-0b73-eb1a-db05c643abcf",
          "alias" : "All-RTUs-UCs",
          "filter" : {
            "type" : "deviceSearchQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : "Curr_customer",
            "defaultStateEntity" : null,
            "rootEntity" : null,
            "direction" : "FROM",
            "maxLevel" : 1,
            "relationType" : "Contains",
            "deviceTypes" : [ "RTU", "UC" ]
          }
        },
        "3a9135f6-6d19-27bd-a7b6-786b066a141b" : {
          "id" : "3a9135f6-6d19-27bd-a7b6-786b066a141b",
          "alias" : "Usinas-bubble",
          "filter" : {
            "type" : "assetSearchQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : "Curr_customer",
            "defaultStateEntity" : null,
            "rootEntity" : null,
            "direction" : "FROM",
            "maxLevel" : 3,
            "fetchLastLevelOnly" : false,
            "relationType" : null,
            "assetTypes" : [ "usina" ]
          }
        },
        "a9649059-df27-4178-3840-0d2615e553fa" : {
          "id" : "a9649059-df27-4178-3840-0d2615e553fa",
          "alias" : "UCs by Customer",
          "filter" : {
            "type" : "deviceSearchQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : "Curr_customer",
            "defaultStateEntity" : null,
            "rootEntity" : null,
            "direction" : "FROM",
            "maxLevel" : 9,
            "fetchLastLevelOnly" : false,
            "relationType" : null,
            "deviceTypes" : [ "UC" ]
          }
        },
        "84592a75-3de0-a3f8-fc24-45d153194f4e" : {
          "id" : "84592a75-3de0-a3f8-fc24-45d153194f4e",
          "alias" : "Users",
          "filter" : {
            "type" : "entityType",
            "resolveMultiple" : true,
            "entityType" : "USER"
          }
        },
        "cb6f0aa3-f9e4-8565-483c-4b4326ff40ad" : {
          "id" : "cb6f0aa3-f9e4-8565-483c-4b4326ff40ad",
          "alias" : "AllSubs",
          "filter" : {
            "type" : "deviceType",
            "resolveMultiple" : true,
            "deviceNameFilter" : "",
            "deviceTypes" : [ "SUB" ]
          }
        },
        "ee76901d-e4df-00fe-aac8-c6a6cd4e1331" : {
          "id" : "ee76901d-e4df-00fe-aac8-c6a6cd4e1331",
          "alias" : "All-RTU-Fat",
          "filter" : {
            "type" : "deviceSearchQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : "Curr_customer",
            "defaultStateEntity" : {
              "entityType" : "CUSTOMER",
              "id" : "6d9ca960-2b12-11e9-8de2-e7b6112a6ea2"
            },
            "rootEntity" : null,
            "direction" : "FROM",
            "maxLevel" : 3,
            "fetchLastLevelOnly" : false,
            "relationType" : "Contains",
            "deviceTypes" : [ "RTU" ]
          }
        },
        "89fa94b0-707e-c9cb-cb61-bade8a9658e2" : {
          "id" : "89fa94b0-707e-c9cb-cb61-bade8a9658e2",
          "alias" : "Curr_user",
          "filter" : {
            "type" : "singleEntity",
            "resolveMultiple" : false,
            "singleEntity" : {
              "entityType" : "CURRENT_USER",
              "id" : "13814000-1dd2-11b2-8080-808080808080"
            }
          }
        },
        "244faf8c-5b98-22f7-05e3-118bf50d0134" : {
          "id" : "244faf8c-5b98-22f7-05e3-118bf50d0134",
          "alias" : "Site_Espelho",
          "filter" : {
            "type" : "stateEntity",
            "resolveMultiple" : false,
            "stateEntityParamName" : "Site_Espelho",
            "defaultStateEntity" : null
          }
        },
        "61e5f272-1359-514c-138e-298bc6b8439e" : {
          "id" : "61e5f272-1359-514c-138e-298bc6b8439e",
          "alias" : "all devices",
          "filter" : {
            "type" : "entityType",
            "resolveMultiple" : true,
            "entityType" : "DEVICE"
          }
        }
      },
      "timewindow" : {
        "realtime" : {
          "interval" : 1500000,
          "timewindowMs" : 604800000
        },
        "aggregation" : {
          "type" : "MAX",
          "limit" : 1000
        },
        "hideAggregation" : false,
        "hideAggInterval" : false
      },
      "settings" : {
        "stateControllerId" : "entity",
        "showTitle" : false,
        "showDashboardsSelect" : false,
        "showEntitiesSelect" : false,
        "showDashboardTimewindow" : false,
        "showDashboardExport" : false,
        "toolbarAlwaysOpen" : false,
        "titleColor" : "rgba(0,0,0,0.870588)",
        "showFilters" : false,
        "showDashboardLogo" : false,
        "dashboardLogoUrl" : null,
        "hideToolbar" : false,
        "showUpdateDashboardImage" : true,
        "dashboardCss" : ""
      },
      "description" : "Multi-aplicação",
      "filters" : {
        "4d96164e-bbfe-77ed-2b35-2cd2dadfb139" : {
          "id" : "4d96164e-bbfe-77ed-2b35-2cd2dadfb139",
          "filter" : "PE maior que zero",
          "keyFilters" : [ {
            "key" : {
              "type" : "ATTRIBUTE",
              "key" : "pe_total"
            },
            "valueType" : "NUMERIC",
            "predicates" : [ {
              "keyFilterPredicate" : {
                "operation" : "GREATER",
                "value" : {
                  "defaultValue" : 0
                },
                "type" : "NUMERIC"
              },
              "userInfo" : {
                "editable" : true,
                "label" : "",
                "autogeneratedLabel" : true,
                "order" : 0
              }
            } ]
          } ],
          "editable" : true
        },
        "84fb0585-9357-f837-3785-1a51b9aaa828" : {
          "id" : "84fb0585-9357-f837-3785-1a51b9aaa828",
          "filter" : "Status Livre",
          "keyFilters" : [ {
            "key" : {
              "type" : "ATTRIBUTE",
              "key" : "status_cliente"
            },
            "valueType" : "NUMERIC",
            "predicates" : [ {
              "keyFilterPredicate" : {
                "operation" : "EQUAL",
                "value" : {
                  "defaultValue" : 2,
                  "dynamicValue" : null
                },
                "type" : "NUMERIC"
              },
              "userInfo" : {
                "editable" : true,
                "label" : "",
                "autogeneratedLabel" : true,
                "order" : 0
              }
            } ]
          } ],
          "editable" : true
        },
        "80f7da41-e413-35b9-d5d1-5d08a5011243" : {
          "id" : "80f7da41-e413-35b9-d5d1-5d08a5011243",
          "filter" : "Usina com medição de inversores",
          "keyFilters" : [ {
            "key" : {
              "type" : "ATTRIBUTE",
              "key" : "medicao_inversores"
            },
            "valueType" : "BOOLEAN",
            "predicates" : [ {
              "keyFilterPredicate" : {
                "operation" : "EQUAL",
                "value" : {
                  "defaultValue" : true,
                  "dynamicValue" : null
                },
                "type" : "BOOLEAN"
              },
              "userInfo" : {
                "editable" : true,
                "label" : "",
                "autogeneratedLabel" : true,
                "order" : 0
              }
            } ]
          } ],
          "editable" : true
        }
      }
    },
    "name" : "ASSAI TESTE | 03/23",
    "resources" : null,
    "assignedCustomers" : null,
    "customerId" : null,
    "externalId" : null,
    "id" : {
      "entityType" : "DASHBOARD",
      "id" : "f396ea00-d4ce-11ef-83c2-a7ea66a1a53c"
    },
    "ownerId" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}